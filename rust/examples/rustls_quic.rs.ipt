crate
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        client
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         ClientConfig
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ClientSession
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ClientSessionImpl
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        error
      ::
      simplePathSegment
       identifier
        TLSError
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        key_schedule
      ::
      simplePathSegment
       identifier
        hkdf_expand
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        msgs
      ::
      simplePathSegment
       identifier
        enums
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         AlertDescription
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ContentType
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ProtocolVersion
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        msgs
      ::
      simplePathSegment
       identifier
        handshake
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         ClientExtension
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ServerExtension
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        msgs
      ::
      simplePathSegment
       identifier
        message
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         Message
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         MessagePayload
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        server
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         ServerConfig
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ServerSession
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         ServerSessionImpl
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        session
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         Protocol
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         SessionCommon
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       crate
      ::
      simplePathSegment
       identifier
        suites
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         BulkAlgorithm
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         SupportedCipherSuite
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         TLS13_AES_128_GCM_SHA256
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       identifier
        std
      ::
      simplePathSegment
       identifier
        sync
      ::
      simplePathSegment
       identifier
        Arc
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       identifier
        ring
     ::
     {
     useTree
      simplePath
       simplePathSegment
        identifier
         aead
     ,
     useTree
      simplePath
       simplePathSegment
        identifier
         hkdf
     }
    ;
 item
  visItem
   useDeclaration
    use
    useTree
     simplePath
      simplePathSegment
       identifier
        webpki
    ;
 item
  outerAttribute
   #
   [
   attr
    simplePath
     simplePathSegment
      identifier
       derive
    attrInput
     delimTokenTree
      (
      tokenTree
       tokenTreeToken
        macroIdentifierLikeToken
         identifier
          Clone
       tokenTreeToken
        macroPunctuationToken
         ,
       tokenTreeToken
        macroIdentifierLikeToken
         identifier
          Debug
      )
   ]
  visItem
   visibility
    pub
    (
    crate
    )
   struct_
    structStruct
     struct
     identifier
      Secrets
     {
     structFields
      structField
       visibility
        pub
       identifier
        client
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               hkdf
            ::
            typePathSegment
             pathIdentSegment
              identifier
               Prk
      ,
      structField
       visibility
        pub
       identifier
        server
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               hkdf
            ::
            typePathSegment
             pathIdentSegment
              identifier
               Prk
      ,
     }
 item
  visItem
   implementation
    inherentImpl
     impl
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Secrets
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        local_remote
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               is_client
          :
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  bool
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          tupleType
           (
           type_
            typeNoBounds
             referenceType
              &
              typeNoBounds
               traitObjectTypeOneBound
                traitBound
                 typePath
                  typePathSegment
                   pathIdentSegment
                    identifier
                     hkdf
                  ::
                  typePathSegment
                   pathIdentSegment
                    identifier
                     Prk
           ,
           type_
            typeNoBounds
             referenceType
              &
              typeNoBounds
               traitObjectTypeOneBound
                traitBound
                 typePath
                  typePathSegment
                   pathIdentSegment
                    identifier
                     hkdf
                  ::
                  typePathSegment
                   pathIdentSegment
                    identifier
                     Prk
           )
       blockExpression
        {
        statements
         statement
          expressionStatement
           expressionWithBlock
            ifExpression
             if
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   is_client
             blockExpression
              {
              statements
               expression
                (
                tupleElements
                 expression
                  &
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    client
                 ,
                 expression
                  &
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    server
                )
              }
             else
             blockExpression
              {
              statements
               expression
                (
                tupleElements
                 expression
                  &
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    server
                 ,
                 expression
                  &
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    client
                )
              }
        }
     }
 item
  visItem
   visibility
    pub
   trait_
    trait
    identifier
     QuicExt
    {
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       get_quic_transport_parameters
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         self
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Option
             genericArgs
              <
              genericArgsTypes
               type_
                typeNoBounds
                 referenceType
                  &
                  typeNoBounds
                   sliceType
                    [
                    type_
                     typeNoBounds
                      traitObjectTypeOneBound
                       traitBound
                        typePath
                         typePathSegment
                          pathIdentSegment
                           identifier
                            u8
                    ]
              >
      ;
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       get_0rtt_keys
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         self
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Option
             genericArgs
              <
              genericArgsTypes
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       DirectionalKeys
              >
      ;
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       read_hs
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         mut
         self
       ,
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              plaintext
         :
         type_
          typeNoBounds
           referenceType
            &
            typeNoBounds
             sliceType
              [
              type_
               typeNoBounds
                traitObjectTypeOneBound
                 traitBound
                  typePath
                   typePathSegment
                    pathIdentSegment
                     identifier
                      u8
              ]
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Result
             genericArgs
              <
              genericArgsTypes
               type_
                typeNoBounds
                 tupleType
                  (
                  )
               ,
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       TLSError
              >
      ;
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       write_hs
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         mut
         self
       ,
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              buf
         :
         type_
          typeNoBounds
           referenceType
            &
            mut
            typeNoBounds
             traitObjectTypeOneBound
              traitBound
               typePath
                typePathSegment
                 pathIdentSegment
                  identifier
                   Vec
                 genericArgs
                  <
                  genericArgsTypes
                   type_
                    typeNoBounds
                     traitObjectTypeOneBound
                      traitBound
                       typePath
                        typePathSegment
                         pathIdentSegment
                          identifier
                           u8
                  >
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Option
             genericArgs
              <
              genericArgsTypes
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       Keys
              >
      ;
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       get_alert
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         self
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Option
             genericArgs
              <
              genericArgsTypes
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       AlertDescription
              >
      ;
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       next_1rtt_keys
      (
      functionParameters
       selfParam
        shorthandSelf
         &
         mut
         self
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               PacketKeySet
      ;
    }
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         QuicExt
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             ClientSession
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_quic_transport_parameters
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  referenceType
                   &
                   typeNoBounds
                    sliceType
                     [
                     type_
                      typeNoBounds
                       traitObjectTypeOneBound
                        traitBound
                         typePath
                          typePathSegment
                           pathIdentSegment
                            identifier
                             u8
                     ]
               >
       blockExpression
        {
        statements
         expression
          expression
           expression
            expression
             expression
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    self
               .
               identifier
                imp
              .
              identifier
               common
             .
             identifier
              quic
            .
            identifier
             params
           .
           pathExprSegment
            pathIdentSegment
             identifier
              as_ref
           (
           )
          .
          pathExprSegment
           pathIdentSegment
            identifier
             map
          (
          callParams
           expression
            closureExpression
             |
             closureParameters
              closureParam
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    v
             |
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    v
              .
              pathExprSegment
               pathIdentSegment
                identifier
                 as_ref
              (
              )
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_0rtt_keys
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        DirectionalKeys
               >
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                Some
          (
          callParams
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  DirectionalKeys
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  new
            (
            callParams
             expression
              expression
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     self
                .
                identifier
                 imp
               .
               identifier
                resumption_ciphersuite
              ?
             ,
             expression
              expression
               expression
                expression
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    imp
                  .
                  identifier
                   common
                 .
                 identifier
                  quic
                .
                identifier
                 early_secret
               .
               pathExprSegment
                pathIdentSegment
                 identifier
                  as_ref
               (
               )
              ?
             ,
            )
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        read_hs
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               plaintext
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              sliceType
               [
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       u8
               ]
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Result
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  tupleType
                   (
                   )
                ,
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        TLSError
               >
       blockExpression
        {
        statements
         statement
          expressionStatement
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   read_hs
             (
             callParams
              expression
               &
               mut
               expression
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      self
                 .
                 identifier
                  imp
                .
                identifier
                 common
              ,
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    plaintext
             )
            ?
           ;
         expression
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                self
           .
           identifier
            imp
          .
          pathExprSegment
           pathIdentSegment
            identifier
             process_new_handshake_messages
          (
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        write_hs
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               buf
          :
          type_
           typeNoBounds
            referenceType
             &
             mut
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Vec
                  genericArgs
                   <
                   genericArgsTypes
                    type_
                     typeNoBounds
                      traitObjectTypeOneBound
                       traitBound
                        typePath
                         typePathSegment
                          pathIdentSegment
                           identifier
                            u8
                   >
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        Keys
               >
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                write_hs
          (
          callParams
           expression
            &
            mut
            expression
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   self
              .
              identifier
               imp
             .
             identifier
              common
           ,
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 buf
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_alert
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        AlertDescription
               >
       blockExpression
        {
        statements
         expression
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  self
             .
             identifier
              imp
            .
            identifier
             common
           .
           identifier
            quic
          .
          identifier
           alert
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        next_1rtt_keys
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                PacketKeySet
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                next_1rtt_keys
          (
          callParams
           expression
            &
            mut
            expression
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   self
              .
              identifier
               imp
             .
             identifier
              common
          )
        }
     }
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         QuicExt
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             ServerSession
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_quic_transport_parameters
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  referenceType
                   &
                   typeNoBounds
                    sliceType
                     [
                     type_
                      typeNoBounds
                       traitObjectTypeOneBound
                        traitBound
                         typePath
                          typePathSegment
                           pathIdentSegment
                            identifier
                             u8
                     ]
               >
       blockExpression
        {
        statements
         expression
          expression
           expression
            expression
             expression
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    self
               .
               identifier
                imp
              .
              identifier
               common
             .
             identifier
              quic
            .
            identifier
             params
           .
           pathExprSegment
            pathIdentSegment
             identifier
              as_ref
           (
           )
          .
          pathExprSegment
           pathIdentSegment
            identifier
             map
          (
          callParams
           expression
            closureExpression
             |
             closureParameters
              closureParam
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    v
             |
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    v
              .
              pathExprSegment
               pathIdentSegment
                identifier
                 as_ref
              (
              )
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_0rtt_keys
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        DirectionalKeys
               >
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                Some
          (
          callParams
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  DirectionalKeys
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  new
            (
            callParams
             expression
              expression
               expression
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      self
                 .
                 identifier
                  imp
                .
                identifier
                 common
               .
               pathExprSegment
                pathIdentSegment
                 identifier
                  get_suite
               (
               )
              ?
             ,
             expression
              expression
               expression
                expression
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        self
                   .
                   identifier
                    imp
                  .
                  identifier
                   common
                 .
                 identifier
                  quic
                .
                identifier
                 early_secret
               .
               pathExprSegment
                pathIdentSegment
                 identifier
                  as_ref
               (
               )
              ?
             ,
            )
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        read_hs
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               plaintext
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              sliceType
               [
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       u8
               ]
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Result
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  tupleType
                   (
                   )
                ,
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        TLSError
               >
       blockExpression
        {
        statements
         statement
          expressionStatement
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   read_hs
             (
             callParams
              expression
               &
               mut
               expression
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      self
                 .
                 identifier
                  imp
                .
                identifier
                 common
              ,
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    plaintext
             )
            ?
           ;
         expression
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                self
           .
           identifier
            imp
          .
          pathExprSegment
           pathIdentSegment
            identifier
             process_new_handshake_messages
          (
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        write_hs
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               buf
          :
          type_
           typeNoBounds
            referenceType
             &
             mut
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Vec
                  genericArgs
                   <
                   genericArgsTypes
                    type_
                     typeNoBounds
                      traitObjectTypeOneBound
                       traitBound
                        typePath
                         typePathSegment
                          pathIdentSegment
                           identifier
                            u8
                   >
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        Keys
               >
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                write_hs
          (
          callParams
           expression
            &
            mut
            expression
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   self
              .
              identifier
               imp
             .
             identifier
              common
           ,
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 buf
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        get_alert
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                Option
              genericArgs
               <
               genericArgsTypes
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        AlertDescription
               >
       blockExpression
        {
        statements
         expression
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  self
             .
             identifier
              imp
            .
            identifier
             common
           .
           identifier
            quic
          .
          identifier
           alert
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        next_1rtt_keys
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          mut
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                PacketKeySet
       blockExpression
        {
        statements
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                next_1rtt_keys
          (
          callParams
           expression
            &
            mut
            expression
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   self
              .
              identifier
               imp
             .
             identifier
              common
          )
        }
     }
 item
  visItem
   visibility
    pub
   struct_
    structStruct
     struct
     identifier
      DirectionalKeys
     {
     structFields
      structField
       visibility
        pub
       identifier
        header
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               aead
            ::
            typePathSegment
             pathIdentSegment
              identifier
               quic
            ::
            typePathSegment
             pathIdentSegment
              identifier
               HeaderProtectionKey
      ,
      structField
       visibility
        pub
       identifier
        packet
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               PacketKey
      ,
     }
 item
  visItem
   implementation
    inherentImpl
     impl
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             DirectionalKeys
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        new
       (
       functionParameters
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               suite
          :
          type_
           typeNoBounds
            referenceType
             &
             lifetime
              'static
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    SupportedCipherSuite
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               secret
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    hkdf
                 ::
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Prk
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               Self
       blockExpression
        {
        statements
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               hp_alg
           =
           expression
            expressionWithBlock
             matchExpression
              match
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     suite
               .
               identifier
                bulk
              {
              matchArms
               matchArm
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   pathPattern
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        BulkAlgorithm
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        AES_128_GCM
               =>
               matchArmExpression
                expression
                 &
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       aead
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       quic
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       AES_128
                ,
               matchArm
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   pathPattern
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        BulkAlgorithm
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        AES_256_GCM
               =>
               matchArmExpression
                expression
                 &
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       aead
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       quic
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       AES_256
                ,
               matchArm
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   pathPattern
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        BulkAlgorithm
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        CHACHA20_POLY1305
               =>
               expression
                &
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      aead
                   ::
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      quic
                   ::
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      CHACHA20
               ,
              }
           ;
         expression
          structExpression
           structExprStruct
            pathInExpression
             pathExprSegment
              pathIdentSegment
               Self
            {
            structExprFields
             structExprField
              identifier
               header
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     hkdf_expand
               (
               callParams
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      secret
                ,
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      hp_alg
                ,
                expression
                 literalExpression
                  b"quic hp"
                ,
                expression
                 &
                 expression
                  [
                  ]
               )
             ,
             structExprField
              identifier
               packet
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     PacketKey
                  ::
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     new
               (
               callParams
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      suite
                ,
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      secret
               )
             ,
            }
        }
     }
 item
  visItem
   visibility
    pub
   struct_
    structStruct
     struct
     identifier
      PacketKey
     {
     structFields
      structField
       visibility
        pub
       identifier
        key
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               aead
            ::
            typePathSegment
             pathIdentSegment
              identifier
               LessSafeKey
      ,
      structField
       visibility
        pub
       identifier
        iv
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               Iv
      ,
     }
 item
  visItem
   implementation
    inherentImpl
     impl
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             PacketKey
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        new
       (
       functionParameters
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               suite
          :
          type_
           typeNoBounds
            referenceType
             &
             lifetime
              'static
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    SupportedCipherSuite
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               secret
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    hkdf
                 ::
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Prk
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               Self
       blockExpression
        {
        statements
         expression
          structExpression
           structExprStruct
            pathInExpression
             pathExprSegment
              pathIdentSegment
               Self
            {
            structExprFields
             structExprField
              identifier
               key
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     aead
                  ::
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     LessSafeKey
                  ::
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     new
               (
               callParams
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       hkdf_expand
                 (
                 callParams
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        secret
                  ,
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         suite
                   .
                   identifier
                    aead_algorithm
                  ,
                  expression
                   literalExpression
                    b"quic key"
                  ,
                  expression
                   &
                   expression
                    [
                    ]
                  ,
                 )
               )
             ,
             structExprField
              identifier
               iv
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     hkdf_expand
               (
               callParams
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      secret
                ,
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      IvLen
                ,
                expression
                 literalExpression
                  b"quic iv"
                ,
                expression
                 &
                 expression
                  [
                  ]
               )
             ,
            }
        }
     }
 item
  visItem
   visibility
    pub
   struct_
    structStruct
     struct
     identifier
      PacketKeySet
     {
     structFields
      structField
       visibility
        pub
       identifier
        local
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               PacketKey
      ,
      structField
       visibility
        pub
       identifier
        remote
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               PacketKey
      ,
     }
 item
  visItem
   visibility
    pub
   struct_
    tupleStruct
     struct
     identifier
      Iv
     (
     tupleFields
      tupleField
       type_
        typeNoBounds
         arrayType
          [
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  u8
          ;
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                aead
             ::
             pathExprSegment
              pathIdentSegment
               identifier
                NONCE_LEN
          ]
     )
     ;
 item
  visItem
   implementation
    inherentImpl
     impl
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Iv
     {
     associatedItem
      visibility
       pub
      function_
       functionQualifiers
       fn
       identifier
        nonce_for
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               packet_number
          :
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  u64
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                ring
             ::
             typePathSegment
              pathIdentSegment
               identifier
                aead
             ::
             typePathSegment
              pathIdentSegment
               identifier
                Nonce
       blockExpression
        {
        statements
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              mut
              identifier
               out
           =
           expression
            [
            arrayElements
             expression
              literalExpression
               0
             ;
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   aead
                ::
                pathExprSegment
                 pathIdentSegment
                  identifier
                   NONCE_LEN
            ]
           ;
         statement
          expressionStatement
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   out
             [
             expression
              expression
               literalExpression
                4
              ..
             ]
            .
            pathExprSegment
             pathIdentSegment
              identifier
               copy_from_slice
            (
            callParams
             expression
              &
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     packet_number
               .
               pathExprSegment
                pathIdentSegment
                 identifier
                  to_be_bytes
               (
               )
            )
           ;
         statement
          expressionStatement
           expressionWithBlock
            loopExpression
             iteratorLoopExpression
              for
              pattern
               patternNoTopAlt
                patternWithoutRange
                 tuplePattern
                  (
                  tuplePatternItems
                   pattern
                    patternNoTopAlt
                     patternWithoutRange
                      identifierPattern
                       identifier
                        out
                   ,
                   pattern
                    patternNoTopAlt
                     patternWithoutRange
                      identifierPattern
                       identifier
                        inp
                  )
              in
              expression
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      out
                .
                pathExprSegment
                 pathIdentSegment
                  identifier
                   iter_mut
                (
                )
               .
               pathExprSegment
                pathIdentSegment
                 identifier
                  zip
               (
               callParams
                expression
                 expression
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       self
                  .
                  tupleIndex
                   0
                 .
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    iter
                 (
                 )
               )
              blockExpression
               {
               statements
                statement
                 expressionStatement
                  expression
                   expression
                    *
                    expression
                     pathExpression
                      pathInExpression
                       pathExprSegment
                        pathIdentSegment
                         identifier
                          out
                   compoundAssignOperator
                    ^=
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         inp
                  ;
               }
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                aead
             ::
             pathExprSegment
              pathIdentSegment
               identifier
                Nonce
             ::
             pathExprSegment
              pathIdentSegment
               identifier
                assume_unique_for_key
          (
          callParams
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 out
          )
        }
     }
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         From
       genericArgs
        <
        genericArgsTypes
         type_
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 hkdf
              ::
              typePathSegment
               pathIdentSegment
                identifier
                 Okm
               genericArgs
                <
                genericArgsLifetimes
                 lifetime
                  '_
                ,
                genericArgsTypes
                 type_
                  typeNoBounds
                   traitObjectTypeOneBound
                    traitBound
                     typePath
                      typePathSegment
                       pathIdentSegment
                        identifier
                         IvLen
                >
        >
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Iv
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        from
       (
       functionParameters
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               okm
          :
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  hkdf
               ::
               typePathSegment
                pathIdentSegment
                 identifier
                  Okm
                genericArgs
                 <
                 genericArgsTypes
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          IvLen
                 >
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               Self
       blockExpression
        {
        statements
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              mut
              identifier
               iv
           =
           expression
            [
            arrayElements
             expression
              literalExpression
               0
             ;
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   aead
                ::
                pathExprSegment
                 pathIdentSegment
                  identifier
                   NONCE_LEN
            ]
           ;
         statement
          expressionStatement
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   okm
             .
             pathExprSegment
              pathIdentSegment
               identifier
                fill
             (
             callParams
              expression
               &
               mut
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      iv
                [
                expression
                 ..
                ]
             )
            .
            pathExprSegment
             pathIdentSegment
              identifier
               unwrap
            (
            )
           ;
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                Iv
          (
          callParams
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 iv
          )
        }
     }
 item
  visItem
   struct_
    structStruct
     struct
     identifier
      IvLen
     ;
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         hkdf
      ::
      typePathSegment
       pathIdentSegment
        identifier
         KeyType
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             IvLen
     {
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        len
       (
       functionParameters
        selfParam
         shorthandSelf
          &
          self
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               identifier
                usize
       blockExpression
        {
        statements
         expression
          pathExpression
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               aead
            ::
            pathExprSegment
             pathIdentSegment
              identifier
               NONCE_LEN
        }
     }
 item
  visItem
   visibility
    pub
   struct_
    structStruct
     struct
     identifier
      Keys
     {
     structFields
      structField
       visibility
        pub
       identifier
        local
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               DirectionalKeys
      ,
      structField
       visibility
        pub
       identifier
        remote
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               DirectionalKeys
      ,
     }
 item
  visItem
   implementation
    inherentImpl
     impl
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Keys
     {
     associatedItem
      visibility
       pub
      function_
       functionQualifiers
       fn
       identifier
        initial
       (
       functionParameters
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               initial_salt
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    hkdf
                 ::
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Salt
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               client_dst_connection_id
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              sliceType
               [
               type_
                typeNoBounds
                 traitObjectTypeOneBound
                  traitBound
                   typePath
                    typePathSegment
                     pathIdentSegment
                      identifier
                       u8
               ]
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               is_client
          :
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  bool
        ,
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               Self
       blockExpression
        {
        statements
         statement
          item
           visItem
            constantItem
             const
             identifier
              CLIENT_LABEL
             :
             type_
              typeNoBounds
               referenceType
                &
                typeNoBounds
                 sliceType
                  [
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          u8
                  ]
             =
             expression
              literalExpression
               b"client in"
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              SERVER_LABEL
             :
             type_
              typeNoBounds
               referenceType
                &
                typeNoBounds
                 sliceType
                  [
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          u8
                  ]
             =
             expression
              literalExpression
               b"server in"
             ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               hs_secret
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  initial_salt
            .
            pathExprSegment
             pathIdentSegment
              identifier
               extract
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   client_dst_connection_id
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               secrets
           =
           expression
            structExpression
             structExprStruct
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Secrets
              {
              structExprFields
               structExprField
                identifier
                 client
                :
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       hkdf_expand
                 (
                 callParams
                  expression
                   &
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         hs_secret
                  ,
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        hkdf
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        HKDF_SHA256
                  ,
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        CLIENT_LABEL
                  ,
                  expression
                   &
                   expression
                    [
                    ]
                 )
               ,
               structExprField
                identifier
                 server
                :
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       hkdf_expand
                 (
                 callParams
                  expression
                   &
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         hs_secret
                  ,
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        hkdf
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        HKDF_SHA256
                  ,
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        SERVER_LABEL
                  ,
                  expression
                   &
                   expression
                    [
                    ]
                 )
               ,
              }
           ;
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               Self
             ::
             pathExprSegment
              pathIdentSegment
               identifier
                new
          (
          callParams
           expression
            &
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  TLS13_AES_128_GCM_SHA256
           ,
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 is_client
           ,
           expression
            &
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  secrets
          )
        }
     associatedItem
      function_
       functionQualifiers
       fn
       identifier
        new
       (
       functionParameters
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               suite
          :
          type_
           typeNoBounds
            referenceType
             &
             lifetime
              'static
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    SupportedCipherSuite
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               is_client
          :
          type_
           typeNoBounds
            traitObjectTypeOneBound
             traitBound
              typePath
               typePathSegment
                pathIdentSegment
                 identifier
                  bool
        ,
        functionParam
         functionParamPattern
          pattern
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               secrets
          :
          type_
           typeNoBounds
            referenceType
             &
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    Secrets
       )
       functionReturnType
        ->
        type_
         typeNoBounds
          traitObjectTypeOneBound
           traitBound
            typePath
             typePathSegment
              pathIdentSegment
               Self
       blockExpression
        {
        statements
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             tuplePattern
              (
              tuplePatternItems
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    local
               ,
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    remote
              )
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  secrets
            .
            pathExprSegment
             pathIdentSegment
              identifier
               local_remote
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   is_client
            )
           ;
         expression
          structExpression
           structExprStruct
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                Keys
            {
            structExprFields
             structExprField
              identifier
               local
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     DirectionalKeys
                  ::
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     new
               (
               callParams
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      suite
                ,
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      local
               )
             ,
             structExprField
              identifier
               remote
              :
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     DirectionalKeys
                  ::
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     new
               (
               callParams
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      suite
                ,
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      remote
               )
             ,
            }
        }
     }
 item
  visItem
   function_
    functionQualifiers
    fn
    identifier
     read_hs
    (
    functionParameters
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            this
       :
       type_
        typeNoBounds
         referenceType
          &
          mut
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 SessionCommon
     ,
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            plaintext
       :
       type_
        typeNoBounds
         referenceType
          &
          typeNoBounds
           sliceType
            [
            type_
             typeNoBounds
              traitObjectTypeOneBound
               traitBound
                typePath
                 typePathSegment
                  pathIdentSegment
                   identifier
                    u8
            ]
    )
    functionReturnType
     ->
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Result
           genericArgs
            <
            genericArgsTypes
             type_
              typeNoBounds
               tupleType
                (
                )
             ,
             type_
              typeNoBounds
               traitObjectTypeOneBound
                traitBound
                 typePath
                  typePathSegment
                   pathIdentSegment
                    identifier
                     TLSError
            >
    blockExpression
     {
     statements
      statement
       expressionStatement
        expressionWithBlock
         ifExpression
          if
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   this
             .
             identifier
              handshake_joiner
            .
            pathExprSegment
             pathIdentSegment
              identifier
               take_message
            (
            callParams
             expression
              structExpression
               structExprStruct
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    Message
                {
                structExprFields
                 structExprField
                  identifier
                   typ
                  :
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        ContentType
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        Handshake
                 ,
                 structExprField
                  identifier
                   version
                  :
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        ProtocolVersion
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        TLSv1_3
                 ,
                 structExprField
                  identifier
                   payload
                  :
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         MessagePayload
                      ::
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         new_opaque
                   (
                   callParams
                    expression
                     expression
                      pathExpression
                       pathInExpression
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           plaintext
                     .
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        into
                     (
                     )
                   )
                 ,
                }
            )
           .
           pathExprSegment
            pathIdentSegment
             identifier
              is_none
           (
           )
          blockExpression
           {
           statements
            statement
             expressionStatement
              expression
               expression
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       this
                 .
                 identifier
                  quic
                .
                identifier
                 alert
               =
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      Some
                (
                callParams
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       AlertDescription
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       DecodeError
                )
              ;
            statement
             expressionStatement
              expression
               return
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      Err
                (
                callParams
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       TLSError
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       CorruptMessage
                )
              ;
           }
      expression
       expression
        pathExpression
         pathInExpression
          pathExprSegment
           pathIdentSegment
            identifier
             Ok
       (
       callParams
        expression
         (
         )
       )
     }
 item
  visItem
   function_
    functionQualifiers
    fn
    identifier
     write_hs
    (
    functionParameters
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            this
       :
       type_
        typeNoBounds
         referenceType
          &
          mut
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 SessionCommon
     ,
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            buf
       :
       type_
        typeNoBounds
         referenceType
          &
          mut
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 Vec
               genericArgs
                <
                genericArgsTypes
                 type_
                  typeNoBounds
                   traitObjectTypeOneBound
                    traitBound
                     typePath
                      typePathSegment
                       pathIdentSegment
                        identifier
                         u8
                >
    )
    functionReturnType
     ->
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Option
           genericArgs
            <
            genericArgsTypes
             type_
              typeNoBounds
               traitObjectTypeOneBound
                traitBound
                 typePath
                  typePathSegment
                   pathIdentSegment
                    identifier
                     Keys
            >
    blockExpression
     {
     statements
      statement
       expressionStatement
        expressionWithBlock
         loopExpression
          predicatePatternLoopExpression
           while
           let
           pattern
            patternNoTopAlt
             patternWithoutRange
              tupleStructPattern
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   Some
               (
               tupleStructItems
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   tuplePattern
                    (
                    tuplePatternItems
                     pattern
                      patternNoTopAlt
                       patternWithoutRange
                        wildcardPattern
                         _
                     ,
                     pattern
                      patternNoTopAlt
                       patternWithoutRange
                        identifierPattern
                         identifier
                          msg
                    )
               )
           =
           expression
            expression
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    this
              .
              identifier
               quic
             .
             identifier
              hs_queue
            .
            pathExprSegment
             pathIdentSegment
              identifier
               pop_front
            (
            )
           blockExpression
            {
            statements
             statement
              expressionStatement
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      buf
                .
                pathExprSegment
                 pathIdentSegment
                  identifier
                   extend_from_slice
                (
                callParams
                 expression
                  &
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        msg
                )
               ;
             statement
              expressionStatement
               expressionWithBlock
                ifLetExpression
                 if
                 let
                 pattern
                  patternNoTopAlt
                   patternWithoutRange
                    tupleStructPattern
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         Some
                     (
                     tupleStructItems
                      pattern
                       patternNoTopAlt
                        patternWithoutRange
                         referencePattern
                          &
                          patternWithoutRange
                           tuplePattern
                            (
                            tuplePatternItems
                             pattern
                              patternNoTopAlt
                               patternWithoutRange
                                literalPattern
                                 true
                             ,
                             pattern
                              patternNoTopAlt
                               patternWithoutRange
                                wildcardPattern
                                 _
                            )
                     )
                 =
                 expression
                  expression
                   expression
                    expression
                     pathExpression
                      pathInExpression
                       pathExprSegment
                        pathIdentSegment
                         identifier
                          this
                    .
                    identifier
                     quic
                   .
                   identifier
                    hs_queue
                  .
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     front
                  (
                  )
                 blockExpression
                  {
                  statements
                   statement
                    expressionStatement
                     expressionWithBlock
                      ifExpression
                       if
                       expression
                        expression
                         expression
                          expression
                           pathExpression
                            pathInExpression
                             pathExprSegment
                              pathIdentSegment
                               identifier
                                this
                          .
                          identifier
                           quic
                         .
                         identifier
                          hs_secrets
                        .
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           is_some
                        (
                        )
                       blockExpression
                        {
                        statements
                         statement
                          expressionStatement
                           expression
                            break
                           ;
                        }
                  }
            }
      statement
       expressionStatement
        expressionWithBlock
         ifLetExpression
          if
          let
          pattern
           patternNoTopAlt
            patternWithoutRange
             tupleStructPattern
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Some
              (
              tupleStructItems
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    secrets
              )
          =
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   this
             .
             identifier
              quic
            .
            identifier
             hs_secrets
           .
           pathExprSegment
            pathIdentSegment
             identifier
              take
           (
           )
          blockExpression
           {
           statements
            statement
             expressionStatement
              expression
               return
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      Some
                (
                callParams
                 expression
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        Keys
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        new
                  (
                  callParams
                   expression
                    expression
                     pathExpression
                      pathInExpression
                       pathExprSegment
                        pathIdentSegment
                         identifier
                          this
                    .
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       get_suite_assert
                    (
                    )
                   ,
                   expression
                    expression
                     pathExpression
                      pathInExpression
                       pathExprSegment
                        pathIdentSegment
                         identifier
                          this
                    .
                    identifier
                     is_client
                   ,
                   expression
                    &
                    expression
                     pathExpression
                      pathInExpression
                       pathExprSegment
                        pathIdentSegment
                         identifier
                          secrets
                  )
                )
              ;
           }
      statement
       expressionStatement
        expressionWithBlock
         ifLetExpression
          if
          let
          pattern
           patternNoTopAlt
            patternWithoutRange
             tupleStructPattern
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Some
              (
              tupleStructItems
               pattern
                patternNoTopAlt
                 patternWithoutRange
                  identifierPattern
                   identifier
                    secrets
              )
          =
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   this
             .
             identifier
              quic
            .
            identifier
             traffic_secrets
           .
           pathExprSegment
            pathIdentSegment
             identifier
              as_ref
           (
           )
          blockExpression
           {
           statements
            statement
             expressionStatement
              expressionWithBlock
               ifExpression
                if
                expression
                 !
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         this
                   .
                   identifier
                    quic
                  .
                  identifier
                   returned_traffic_keys
                blockExpression
                 {
                 statements
                  statement
                   expressionStatement
                    expression
                     expression
                      expression
                       expression
                        pathExpression
                         pathInExpression
                          pathExprSegment
                           pathIdentSegment
                            identifier
                             this
                       .
                       identifier
                        quic
                      .
                      identifier
                       returned_traffic_keys
                     =
                     expression
                      literalExpression
                       true
                    ;
                  statement
                   expressionStatement
                    expression
                     return
                     expression
                      expression
                       pathExpression
                        pathInExpression
                         pathExprSegment
                          pathIdentSegment
                           identifier
                            Some
                      (
                      callParams
                       expression
                        expression
                         pathExpression
                          pathInExpression
                           pathExprSegment
                            pathIdentSegment
                             identifier
                              Keys
                           ::
                           pathExprSegment
                            pathIdentSegment
                             identifier
                              new
                        (
                        callParams
                         expression
                          expression
                           pathExpression
                            pathInExpression
                             pathExprSegment
                              pathIdentSegment
                               identifier
                                this
                          .
                          pathExprSegment
                           pathIdentSegment
                            identifier
                             get_suite_assert
                          (
                          )
                         ,
                         expression
                          expression
                           pathExpression
                            pathInExpression
                             pathExprSegment
                              pathIdentSegment
                               identifier
                                this
                          .
                          identifier
                           is_client
                         ,
                         expression
                          &
                          expression
                           pathExpression
                            pathInExpression
                             pathExprSegment
                              pathIdentSegment
                               identifier
                                secrets
                        )
                      )
                    ;
                 }
           }
      expression
       pathExpression
        pathInExpression
         pathExprSegment
          pathIdentSegment
           identifier
            None
     }
 item
  visItem
   function_
    functionQualifiers
    fn
    identifier
     next_1rtt_keys
    (
    functionParameters
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            this
       :
       type_
        typeNoBounds
         referenceType
          &
          mut
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 SessionCommon
    )
    functionReturnType
     ->
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             PacketKeySet
    blockExpression
     {
     statements
      statement
       letStatement
        let
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            hkdf_alg
        =
        expression
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                this
          .
          pathExprSegment
           pathIdentSegment
            identifier
             get_suite_assert
          (
          )
         .
         identifier
          hkdf_algorithm
        ;
      statement
       letStatement
        let
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            secrets
        =
        expression
         expression
          expression
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  this
            .
            identifier
             quic
           .
           identifier
            traffic_secrets
          .
          pathExprSegment
           pathIdentSegment
            identifier
             as_ref
          (
          )
         .
         pathExprSegment
          pathIdentSegment
           identifier
            expect
         (
         callParams
          expression
           literalExpression
            "traffic keys not yet available"
         )
        ;
      statement
       letStatement
        let
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            next
        =
        expression
         expression
          pathExpression
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               next_1rtt_secrets
         (
         callParams
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                hkdf_alg
          ,
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                secrets
         )
        ;
      statement
       letStatement
        let
        patternNoTopAlt
         patternWithoutRange
          tuplePattern
           (
           tuplePatternItems
            pattern
             patternNoTopAlt
              patternWithoutRange
               identifierPattern
                identifier
                 local
            ,
            pattern
             patternNoTopAlt
              patternWithoutRange
               identifierPattern
                identifier
                 remote
           )
        =
        expression
         expression
          pathExpression
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               next
         .
         pathExprSegment
          pathIdentSegment
           identifier
            local_remote
         (
         callParams
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 this
           .
           identifier
            is_client
         )
        ;
      statement
       letStatement
        let
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            keys
        =
        expression
         structExpression
          structExprStruct
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               PacketKeySet
           {
           structExprFields
            structExprField
             identifier
              local
             :
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    PacketKey
                 ::
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    new
              (
              callParams
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      this
                .
                pathExprSegment
                 pathIdentSegment
                  identifier
                   get_suite_assert
                (
                )
               ,
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     local
              )
            ,
            structExprField
             identifier
              remote
             :
             expression
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    PacketKey
                 ::
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    new
              (
              callParams
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      this
                .
                pathExprSegment
                 pathIdentSegment
                  identifier
                   get_suite_assert
                (
                )
               ,
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     remote
              )
            ,
           }
        ;
      statement
       expressionStatement
        expression
         expression
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 this
           .
           identifier
            quic
          .
          identifier
           traffic_secrets
         =
         expression
          expression
           pathExpression
            pathInExpression
             pathExprSegment
              pathIdentSegment
               identifier
                Some
          (
          callParams
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 next
          )
        ;
      expression
       pathExpression
        pathInExpression
         pathExprSegment
          pathIdentSegment
           identifier
            keys
     }
 item
  visItem
   function_
    functionQualifiers
    fn
    identifier
     next_1rtt_secrets
    (
    functionParameters
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            hkdf_alg
       :
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               hkdf
            ::
            typePathSegment
             pathIdentSegment
              identifier
               Algorithm
     ,
     functionParam
      functionParamPattern
       pattern
        patternNoTopAlt
         patternWithoutRange
          identifierPattern
           identifier
            prev
       :
       type_
        typeNoBounds
         referenceType
          &
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 Secrets
    )
    functionReturnType
     ->
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             Secrets
    blockExpression
     {
     statements
      expression
       structExpression
        structExprStruct
         pathInExpression
          pathExprSegment
           pathIdentSegment
            identifier
             Secrets
         {
         structExprFields
          structExprField
           identifier
            client
           :
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  hkdf_expand
            (
            callParams
             expression
              &
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     prev
               .
               identifier
                client
             ,
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   hkdf_alg
             ,
             expression
              literalExpression
               b"quic ku"
             ,
             expression
              &
              expression
               [
               ]
            )
          ,
          structExprField
           identifier
            server
           :
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  hkdf_expand
            (
            callParams
             expression
              &
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     prev
               .
               identifier
                server
             ,
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   hkdf_alg
             ,
             expression
              literalExpression
               b"quic ku"
             ,
             expression
              &
              expression
               [
               ]
            )
          ,
         }
     }
 item
  visItem
   visibility
    pub
   trait_
    trait
    identifier
     ClientQuicExt
    {
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       new_quic
      (
      functionParameters
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              config
         :
         type_
          typeNoBounds
           referenceType
            &
            typeNoBounds
             traitObjectTypeOneBound
              traitBound
               typePath
                typePathSegment
                 pathIdentSegment
                  identifier
                   Arc
                 genericArgs
                  <
                  genericArgsTypes
                   type_
                    typeNoBounds
                     traitObjectTypeOneBound
                      traitBound
                       typePath
                        typePathSegment
                         pathIdentSegment
                          identifier
                           ClientConfig
                  >
       ,
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              hostname
         :
         type_
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 webpki
              ::
              typePathSegment
               pathIdentSegment
                identifier
                 DNSNameRef
       ,
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              params
         :
         type_
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 Vec
               genericArgs
                <
                genericArgsTypes
                 type_
                  typeNoBounds
                   traitObjectTypeOneBound
                    traitBound
                     typePath
                      typePathSegment
                       pathIdentSegment
                        identifier
                         u8
                >
       ,
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               ClientSession
      blockExpression
       {
       statements
        statement
         item
          macroItem
           macroInvocationSemi
            simplePath
             simplePathSegment
              identifier
               assert
            !
            (
            tokenTree
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                config
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                versions
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                iter
            tokenTree
             delimTokenTree
              (
              )
            tokenTree
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                all
            tokenTree
             delimTokenTree
              (
              tokenTree
               tokenTreeToken
                macroPunctuationToken
                 |
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  x
               tokenTreeToken
                macroPunctuationToken
                 |
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  x
               tokenTreeToken
                macroPunctuationToken
                 .
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  get_u16
              tokenTree
               delimTokenTree
                (
                )
              tokenTree
               tokenTreeToken
                macroPunctuationToken
                 >=
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  ProtocolVersion
               tokenTreeToken
                macroPunctuationToken
                 ::
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  TLSv1_3
               tokenTreeToken
                macroPunctuationToken
                 .
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  get_u16
              tokenTree
               delimTokenTree
                (
                )
              )
            tokenTree
             tokenTreeToken
              macroPunctuationToken
               ,
             tokenTreeToken
              macroLiteralToken
               literalExpression
                "QUIC requires TLS version >= 1.3"
            )
            ;
        statement
         letStatement
          let
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             mut
             identifier
              imp
          =
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 ClientSessionImpl
              ::
              pathExprSegment
               pathIdentSegment
                identifier
                 new
           (
           callParams
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  config
           )
          ;
        statement
         expressionStatement
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   imp
             .
             identifier
              common
            .
            identifier
             protocol
           =
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 Protocol
              ::
              pathExprSegment
               pathIdentSegment
                identifier
                 Quic
          ;
        statement
         expressionStatement
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 imp
           .
           pathExprSegment
            pathIdentSegment
             identifier
              start_handshake
           (
           callParams
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   hostname
             .
             pathExprSegment
              pathIdentSegment
               identifier
                into
             (
             )
            ,
            expression
             macroInvocation
              simplePath
               simplePathSegment
                identifier
                 vec
              !
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   ClientExtension
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   TransportParameters
               tokenTree
                delimTokenTree
                 (
                 tokenTree
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     params
                 )
               ]
            ,
           )
          ;
        expression
         structExpression
          structExprStruct
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               ClientSession
           {
           structExprFields
            structExprField
             identifier
              imp
           }
       }
    }
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         ClientQuicExt
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             ClientSession
     {
     }
 item
  visItem
   visibility
    pub
   trait_
    trait
    identifier
     ServerQuicExt
    {
    associatedItem
     function_
      functionQualifiers
      fn
      identifier
       new_quic
      (
      functionParameters
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              config
         :
         type_
          typeNoBounds
           referenceType
            &
            typeNoBounds
             traitObjectTypeOneBound
              traitBound
               typePath
                typePathSegment
                 pathIdentSegment
                  identifier
                   Arc
                 genericArgs
                  <
                  genericArgsTypes
                   type_
                    typeNoBounds
                     traitObjectTypeOneBound
                      traitBound
                       typePath
                        typePathSegment
                         pathIdentSegment
                          identifier
                           ServerConfig
                  >
       ,
       functionParam
        functionParamPattern
         pattern
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             identifier
              params
         :
         type_
          typeNoBounds
           traitObjectTypeOneBound
            traitBound
             typePath
              typePathSegment
               pathIdentSegment
                identifier
                 Vec
               genericArgs
                <
                genericArgsTypes
                 type_
                  typeNoBounds
                   traitObjectTypeOneBound
                    traitBound
                     typePath
                      typePathSegment
                       pathIdentSegment
                        identifier
                         u8
                >
      )
      functionReturnType
       ->
       type_
        typeNoBounds
         traitObjectTypeOneBound
          traitBound
           typePath
            typePathSegment
             pathIdentSegment
              identifier
               ServerSession
      blockExpression
       {
       statements
        statement
         item
          macroItem
           macroInvocationSemi
            simplePath
             simplePathSegment
              identifier
               assert
            !
            (
            tokenTree
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                config
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                versions
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                iter
            tokenTree
             delimTokenTree
              (
              )
            tokenTree
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                all
            tokenTree
             delimTokenTree
              (
              tokenTree
               tokenTreeToken
                macroPunctuationToken
                 |
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  x
               tokenTreeToken
                macroPunctuationToken
                 |
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  x
               tokenTreeToken
                macroPunctuationToken
                 .
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  get_u16
              tokenTree
               delimTokenTree
                (
                )
              tokenTree
               tokenTreeToken
                macroPunctuationToken
                 >=
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  ProtocolVersion
               tokenTreeToken
                macroPunctuationToken
                 ::
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  TLSv1_3
               tokenTreeToken
                macroPunctuationToken
                 .
               tokenTreeToken
                macroIdentifierLikeToken
                 identifier
                  get_u16
              tokenTree
               delimTokenTree
                (
                )
              )
            tokenTree
             tokenTreeToken
              macroPunctuationToken
               ,
             tokenTreeToken
              macroLiteralToken
               literalExpression
                "QUIC requires TLS version >= 1.3"
            )
            ;
        statement
         item
          macroItem
           macroInvocationSemi
            simplePath
             simplePathSegment
              identifier
               assert
            !
            (
            tokenTree
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                config
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                max_early_data_size
             tokenTreeToken
              macroPunctuationToken
               ==
             tokenTreeToken
              macroLiteralToken
               literalExpression
                0
             tokenTreeToken
              macroPunctuationToken
               ||
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                config
             tokenTreeToken
              macroPunctuationToken
               .
             tokenTreeToken
              macroIdentifierLikeToken
               identifier
                max_early_data_size
             tokenTreeToken
              macroPunctuationToken
               ==
             tokenTreeToken
              macroLiteralToken
               literalExpression
                0xffff_ffff
             tokenTreeToken
              macroPunctuationToken
               ,
             tokenTreeToken
              macroLiteralToken
               literalExpression
                "QUIC sessions must set a max early data of 0 or 2^32-1"
            )
            ;
        statement
         letStatement
          let
          patternNoTopAlt
           patternWithoutRange
            identifierPattern
             mut
             identifier
              imp
          =
          expression
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 ServerSessionImpl
              ::
              pathExprSegment
               pathIdentSegment
                identifier
                 new
           (
           callParams
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  config
            ,
            expression
             macroInvocation
              simplePath
               simplePathSegment
                identifier
                 vec
              !
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   ServerExtension
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   TransportParameters
               tokenTree
                delimTokenTree
                 (
                 tokenTree
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     params
                 )
               ]
           )
          ;
        statement
         expressionStatement
          expression
           expression
            expression
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   imp
             .
             identifier
              common
            .
            identifier
             protocol
           =
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 Protocol
              ::
              pathExprSegment
               pathIdentSegment
                identifier
                 Quic
          ;
        expression
         structExpression
          structExprStruct
           pathInExpression
            pathExprSegment
             pathIdentSegment
              identifier
               ServerSession
           {
           structExprFields
            structExprField
             identifier
              imp
           }
       }
    }
 item
  visItem
   implementation
    traitImpl
     impl
     typePath
      typePathSegment
       pathIdentSegment
        identifier
         ServerQuicExt
     for
     type_
      typeNoBounds
       traitObjectTypeOneBound
        traitBound
         typePath
          typePathSegment
           pathIdentSegment
            identifier
             ServerSession
     {
     }
 item
  outerAttribute
   #
   [
   attr
    simplePath
     simplePathSegment
      identifier
       cfg
    attrInput
     delimTokenTree
      (
      tokenTree
       tokenTreeToken
        macroIdentifierLikeToken
         identifier
          test
      )
   ]
  visItem
   module
    mod
    identifier
     test
    {
    item
     visItem
      useDeclaration
       use
       useTree
        simplePath
         simplePathSegment
          super
        ::
        *
       ;
    item
     outerAttribute
      #
      [
      attr
       simplePath
        simplePathSegment
         identifier
          test
      ]
     visItem
      function_
       functionQualifiers
       fn
       identifier
        initial_keys_test_vectors
       (
       )
       blockExpression
        {
        statements
         statement
          item
           visItem
            constantItem
             const
             identifier
              INITIAL_SALT
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  20
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0xc3
               ,
               expression
                literalExpression
                 0xee
               ,
               expression
                literalExpression
                 0xf7
               ,
               expression
                literalExpression
                 0x12
               ,
               expression
                literalExpression
                 0xc7
               ,
               expression
                literalExpression
                 0x2e
               ,
               expression
                literalExpression
                 0xbb
               ,
               expression
                literalExpression
                 0x5a
               ,
               expression
                literalExpression
                 0x11
               ,
               expression
                literalExpression
                 0xa7
               ,
               expression
                literalExpression
                 0xd2
               ,
               expression
                literalExpression
                 0x43
               ,
               expression
                literalExpression
                 0x2b
               ,
               expression
                literalExpression
                 0xb4
               ,
               expression
                literalExpression
                 0x63
               ,
               expression
                literalExpression
                 0x65
               ,
               expression
                literalExpression
                 0xbe
               ,
               expression
                literalExpression
                 0xf9
               ,
               expression
                literalExpression
                 0xf5
               ,
               expression
                literalExpression
                 0x02
               ,
              ]
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              CONNECTION_ID
             :
             type_
              typeNoBounds
               referenceType
                &
                typeNoBounds
                 sliceType
                  [
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          u8
                  ]
             =
             expression
              &
              expression
               [
               arrayElements
                expression
                 literalExpression
                  0x83
                ,
                expression
                 literalExpression
                  0x94
                ,
                expression
                 literalExpression
                  0xc8
                ,
                expression
                 literalExpression
                  0xf0
                ,
                expression
                 literalExpression
                  0x3e
                ,
                expression
                 literalExpression
                  0x51
                ,
                expression
                 literalExpression
                  0x57
                ,
                expression
                 literalExpression
                  0x08
               ]
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              PACKET_NUMBER
             :
             type_
              typeNoBounds
               traitObjectTypeOneBound
                traitBound
                 typePath
                  typePathSegment
                   pathIdentSegment
                    identifier
                     u64
             =
             expression
              literalExpression
               42
             ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               initial_salt
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  hkdf
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  Salt
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  new
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   hkdf
                ::
                pathExprSegment
                 pathIdentSegment
                  identifier
                   HKDF_SHA256
             ,
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    INITIAL_SALT
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               server_keys
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Keys
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  initial
            (
            callParams
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    initial_salt
             ,
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    CONNECTION_ID
             ,
             expression
              literalExpression
               false
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               client_keys
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Keys
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  initial
            (
            callParams
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    initial_salt
             ,
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    CONNECTION_ID
             ,
             expression
              literalExpression
               true
            )
           ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              SERVER_NONCE
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  12
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0x5e
               ,
               expression
                literalExpression
                 0x5a
               ,
               expression
                literalExpression
                 0xe6
               ,
               expression
                literalExpression
                 0x51
               ,
               expression
                literalExpression
                 0xfd
               ,
               expression
                literalExpression
                 0x1e
               ,
               expression
                literalExpression
                 0x84
               ,
               expression
                literalExpression
                 0x95
               ,
               expression
                literalExpression
                 0xaf
               ,
               expression
                literalExpression
                 0x13
               ,
               expression
                literalExpression
                 0x50
               ,
               expression
                literalExpression
                 0xa1
               ,
              ]
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 server_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 local
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 packet
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 iv
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 nonce_for
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   PACKET_NUMBER
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 SERVER_NONCE
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 client_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 remote
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 packet
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 iv
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 nonce_for
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   PACKET_NUMBER
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 SERVER_NONCE
             )
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              CLIENT_NONCE
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  12
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0x86
               ,
               expression
                literalExpression
                 0x81
               ,
               expression
                literalExpression
                 0x35
               ,
               expression
                literalExpression
                 0x94
               ,
               expression
                literalExpression
                 0x10
               ,
               expression
                literalExpression
                 0xa7
               ,
               expression
                literalExpression
                 0x0b
               ,
               expression
                literalExpression
                 0xb9
               ,
               expression
                literalExpression
                 0xc9
               ,
               expression
                literalExpression
                 0x2f
               ,
               expression
                literalExpression
                 0x04
               ,
               expression
                literalExpression
                 0x0a
               ,
              ]
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 server_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 remote
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 packet
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 iv
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 nonce_for
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   PACKET_NUMBER
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 CLIENT_NONCE
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 client_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 local
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 packet
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 iv
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 nonce_for
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   PACKET_NUMBER
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 CLIENT_NONCE
             )
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              SAMPLE
             :
             type_
              typeNoBounds
               referenceType
                &
                typeNoBounds
                 sliceType
                  [
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          u8
                  ]
             =
             expression
              &
              expression
               [
               arrayElements
                expression
                 literalExpression
                  0x70
                ,
                expression
                 literalExpression
                  0x02
                ,
                expression
                 literalExpression
                  0x59
                ,
                expression
                 literalExpression
                  0x6f
                ,
                expression
                 literalExpression
                  0x99
                ,
                expression
                 literalExpression
                  0xae
                ,
                expression
                 literalExpression
                  0x67
                ,
                expression
                 literalExpression
                  0xab
                ,
                expression
                 literalExpression
                  0xf6
                ,
                expression
                 literalExpression
                  0x5a
                ,
                expression
                 literalExpression
                  0x58
                ,
                expression
                 literalExpression
                  0x52
                ,
                expression
                 literalExpression
                  0xf5
                ,
                expression
                 literalExpression
                  0x4f
                ,
                expression
                 literalExpression
                  0x58
                ,
                expression
                 literalExpression
                  0xc3
                ,
               ]
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              SERVER_MASK
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  5
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0x38
               ,
               expression
                literalExpression
                 0x16
               ,
               expression
                literalExpression
                 0x8a
               ,
               expression
                literalExpression
                 0x0c
               ,
               expression
                literalExpression
                 0x25
              ]
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 server_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 local
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 header
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 new_mask
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   SAMPLE
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 unwrap
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 SERVER_MASK
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 client_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 remote
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 header
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 new_mask
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   SAMPLE
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 unwrap
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 SERVER_MASK
             )
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              CLIENT_MASK
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  5
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0xae
               ,
               expression
                literalExpression
                 0x96
               ,
               expression
                literalExpression
                 0x2e
               ,
               expression
                literalExpression
                 0x67
               ,
               expression
                literalExpression
                 0xec
              ]
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 server_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 remote
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 header
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 new_mask
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   SAMPLE
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 unwrap
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 CLIENT_MASK
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 client_keys
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 local
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 header
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 new_mask
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   SAMPLE
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 unwrap
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 CLIENT_MASK
             )
             ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              AAD
             :
             type_
              typeNoBounds
               referenceType
                &
                typeNoBounds
                 sliceType
                  [
                  type_
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          u8
                  ]
             =
             expression
              &
              expression
               [
               arrayElements
                expression
                 literalExpression
                  0xc9
                ,
                expression
                 literalExpression
                  0xff
                ,
                expression
                 literalExpression
                  0x00
                ,
                expression
                 literalExpression
                  0x00
                ,
                expression
                 literalExpression
                  0x1b
                ,
                expression
                 literalExpression
                  0x00
                ,
                expression
                 literalExpression
                  0x08
                ,
                expression
                 literalExpression
                  0xf0
                ,
                expression
                 literalExpression
                  0x67
                ,
                expression
                 literalExpression
                  0xa5
                ,
                expression
                 literalExpression
                  0x50
                ,
                expression
                 literalExpression
                  0x2a
                ,
                expression
                 literalExpression
                  0x42
                ,
                expression
                 literalExpression
                  0x62
                ,
                expression
                 literalExpression
                  0xb5
                ,
                expression
                 literalExpression
                  0x00
                ,
                expression
                 literalExpression
                  0x40
                ,
                expression
                 literalExpression
                  0x74
                ,
                expression
                 literalExpression
                  0x16
                ,
                expression
                 literalExpression
                  0x8b
                ,
               ]
             ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               aad
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  aead
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  Aad
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  from
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   AAD
            )
           ;
         statement
          item
           visItem
            constantItem
             const
             identifier
              PLAINTEXT
             :
             type_
              typeNoBounds
               arrayType
                [
                type_
                 typeNoBounds
                  traitObjectTypeOneBound
                   traitBound
                    typePath
                     typePathSegment
                      pathIdentSegment
                       identifier
                        u8
                ;
                expression
                 literalExpression
                  12
                ]
             =
             expression
              [
              arrayElements
               expression
                literalExpression
                 0x0d
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x18
               ,
               expression
                literalExpression
                 0x41
               ,
               expression
                literalExpression
                 0x0a
               ,
               expression
                literalExpression
                 0x02
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x00
               ,
               expression
                literalExpression
                 0x56
               ,
              ]
             ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              mut
              identifier
               payload
           =
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 PLAINTEXT
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               server_nonce
           =
           expression
            expression
             expression
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     server_keys
               .
               identifier
                local
              .
              identifier
               packet
             .
             identifier
              iv
            .
            pathExprSegment
             pathIdentSegment
              identifier
               nonce_for
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   PACKET_NUMBER
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               tag
           =
           expression
            expression
             expression
              expression
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      server_keys
                .
                identifier
                 local
               .
               identifier
                packet
              .
              identifier
               key
             .
             pathExprSegment
              pathIdentSegment
               identifier
                seal_in_place_separate_tag
             (
             callParams
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    server_nonce
              ,
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    aad
              ,
              expression
               &
               mut
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     payload
             )
            .
            pathExprSegment
             pathIdentSegment
              identifier
               unwrap
            (
            )
           ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 payload
              tokenTreeToken
               macroPunctuationToken
                ,
             tokenTree
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x0d
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x91
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x96
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x31
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xc0
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xeb
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x84
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xf2
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x88
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x59
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xfe
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xc0
               ]
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 tag
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
             tokenTree
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xdf
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xee
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x06
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x81
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x9e
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x7a
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x08
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x34
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xe4
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x94
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x19
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x79
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x5f
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xe0
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xd7
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x3f
               ]
             )
             ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               aad
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  aead
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  Aad
               ::
               pathExprSegment
                pathIdentSegment
                 identifier
                  from
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   AAD
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              mut
              identifier
               payload
           =
           expression
            pathExpression
             pathInExpression
              pathExprSegment
               pathIdentSegment
                identifier
                 PLAINTEXT
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               client_nonce
           =
           expression
            expression
             expression
              expression
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     client_keys
               .
               identifier
                local
              .
              identifier
               packet
             .
             identifier
              iv
            .
            pathExprSegment
             pathIdentSegment
              identifier
               nonce_for
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   PACKET_NUMBER
            )
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               tag
           =
           expression
            expression
             expression
              expression
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      client_keys
                .
                identifier
                 local
               .
               identifier
                packet
              .
              identifier
               key
             .
             pathExprSegment
              pathIdentSegment
               identifier
                seal_in_place_separate_tag
             (
             callParams
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    client_nonce
              ,
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    aad
              ,
              expression
               &
               mut
               expression
                pathExpression
                 pathInExpression
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     payload
             )
            .
            pathExprSegment
             pathIdentSegment
              identifier
               unwrap
            (
            )
           ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 payload
              tokenTreeToken
               macroPunctuationToken
                ,
             tokenTree
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x89
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x6c
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x66
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x91
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xe0
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x9f
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x47
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x7a
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x91
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x42
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xa4
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x46
               ]
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert_eq
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 tag
              tokenTreeToken
               macroPunctuationToken
                .
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 as_ref
             tokenTree
              delimTokenTree
               (
               )
             tokenTree
              tokenTreeToken
               macroPunctuationToken
                ,
              tokenTreeToken
               macroPunctuationToken
                &
             tokenTree
              delimTokenTree
               [
               tokenTree
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xb6
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xff
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xef
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x89
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xd5
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xcb
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x53
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xd0
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x98
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xf7
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x40
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0xa
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x8d
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x97
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x72
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroLiteralToken
                  literalExpression
                   0x6e
               ]
             )
             ;
        }
    item
     outerAttribute
      #
      [
      attr
       simplePath
        simplePathSegment
         identifier
          test
      ]
     visItem
      function_
       functionQualifiers
       fn
       identifier
        key_update_test_vector
       (
       )
       blockExpression
        {
        statements
         statement
          item
           visItem
            function_
             functionQualifiers
             fn
             identifier
              equal_prk
             (
             functionParameters
              functionParam
               functionParamPattern
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    identifier
                     x
                :
                type_
                 typeNoBounds
                  referenceType
                   &
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          hkdf
                       ::
                       typePathSegment
                        pathIdentSegment
                         identifier
                          Prk
              ,
              functionParam
               functionParamPattern
                pattern
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    identifier
                     y
                :
                type_
                 typeNoBounds
                  referenceType
                   &
                   typeNoBounds
                    traitObjectTypeOneBound
                     traitBound
                      typePath
                       typePathSegment
                        pathIdentSegment
                         identifier
                          hkdf
                       ::
                       typePathSegment
                        pathIdentSegment
                         identifier
                          Prk
             )
             functionReturnType
              ->
              type_
               typeNoBounds
                traitObjectTypeOneBound
                 traitBound
                  typePath
                   typePathSegment
                    pathIdentSegment
                     identifier
                      bool
             blockExpression
              {
              statements
               statement
                letStatement
                 let
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    mut
                    identifier
                     x_data
                 =
                 expression
                  [
                  arrayElements
                   expression
                    literalExpression
                     0
                   ;
                   expression
                    literalExpression
                     16
                  ]
                 ;
               statement
                letStatement
                 let
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    mut
                    identifier
                     y_data
                 =
                 expression
                  [
                  arrayElements
                   expression
                    literalExpression
                     0
                   ;
                   expression
                    literalExpression
                     16
                  ]
                 ;
               statement
                letStatement
                 let
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    identifier
                     x_okm
                 =
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         x
                   .
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      expand
                   (
                   callParams
                    expression
                     &
                     expression
                      [
                      arrayElements
                       expression
                        literalExpression
                         b"info"
                      ]
                    ,
                    expression
                     &
                     expression
                      pathExpression
                       pathInExpression
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           aead
                        ::
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           quic
                        ::
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           AES_128
                   )
                  .
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     unwrap
                  (
                  )
                 ;
               statement
                expressionStatement
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         x_okm
                   .
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      fill
                   (
                   callParams
                    expression
                     &
                     mut
                     expression
                      expression
                       pathExpression
                        pathInExpression
                         pathExprSegment
                          pathIdentSegment
                           identifier
                            x_data
                      [
                      expression
                       ..
                      ]
                   )
                  .
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     unwrap
                  (
                  )
                 ;
               statement
                letStatement
                 let
                 patternNoTopAlt
                  patternWithoutRange
                   identifierPattern
                    identifier
                     y_okm
                 =
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         y
                   .
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      expand
                   (
                   callParams
                    expression
                     &
                     expression
                      [
                      arrayElements
                       expression
                        literalExpression
                         b"info"
                      ]
                    ,
                    expression
                     &
                     expression
                      pathExpression
                       pathInExpression
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           aead
                        ::
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           quic
                        ::
                        pathExprSegment
                         pathIdentSegment
                          identifier
                           AES_128
                   )
                  .
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     unwrap
                  (
                  )
                 ;
               statement
                expressionStatement
                 expression
                  expression
                   expression
                    pathExpression
                     pathInExpression
                      pathExprSegment
                       pathIdentSegment
                        identifier
                         y_okm
                   .
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      fill
                   (
                   callParams
                    expression
                     &
                     mut
                     expression
                      expression
                       pathExpression
                        pathInExpression
                         pathExprSegment
                          pathIdentSegment
                           identifier
                            y_data
                      [
                      expression
                       ..
                      ]
                   )
                  .
                  pathExprSegment
                   pathIdentSegment
                    identifier
                     unwrap
                  (
                  )
                 ;
               expression
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      x_data
                comparisonOperator
                 ==
                expression
                 pathExpression
                  pathInExpression
                   pathExprSegment
                    pathIdentSegment
                     identifier
                      y_data
              }
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               initial
           =
           expression
            structExpression
             structExprStruct
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  Secrets
              {
              structExprFields
               structExprField
                identifier
                 client
                :
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       hkdf
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       Prk
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       new_less_safe
                 (
                 callParams
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        hkdf
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        HKDF_SHA256
                  ,
                  expression
                   &
                   expression
                    [
                    arrayElements
                     expression
                      literalExpression
                       0xb8
                     ,
                     expression
                      literalExpression
                       0x76
                     ,
                     expression
                      literalExpression
                       0x77
                     ,
                     expression
                      literalExpression
                       0x08
                     ,
                     expression
                      literalExpression
                       0xf8
                     ,
                     expression
                      literalExpression
                       0x77
                     ,
                     expression
                      literalExpression
                       0x23
                     ,
                     expression
                      literalExpression
                       0x58
                     ,
                     expression
                      literalExpression
                       0xa6
                     ,
                     expression
                      literalExpression
                       0xea
                     ,
                     expression
                      literalExpression
                       0x9f
                     ,
                     expression
                      literalExpression
                       0xc4
                     ,
                     expression
                      literalExpression
                       0x3e
                     ,
                     expression
                      literalExpression
                       0x4a
                     ,
                     expression
                      literalExpression
                       0xdd
                     ,
                     expression
                      literalExpression
                       0x2c
                     ,
                     expression
                      literalExpression
                       0x96
                     ,
                     expression
                      literalExpression
                       0x1b
                     ,
                     expression
                      literalExpression
                       0x3f
                     ,
                     expression
                      literalExpression
                       0x52
                     ,
                     expression
                      literalExpression
                       0x87
                     ,
                     expression
                      literalExpression
                       0xa6
                     ,
                     expression
                      literalExpression
                       0xd1
                     ,
                     expression
                      literalExpression
                       0x46
                     ,
                     expression
                      literalExpression
                       0x7e
                     ,
                     expression
                      literalExpression
                       0xe0
                     ,
                     expression
                      literalExpression
                       0xae
                     ,
                     expression
                      literalExpression
                       0xab
                     ,
                     expression
                      literalExpression
                       0x33
                     ,
                     expression
                      literalExpression
                       0x72
                     ,
                     expression
                      literalExpression
                       0x4d
                     ,
                     expression
                      literalExpression
                       0xbf
                     ,
                    ]
                  ,
                 )
               ,
               structExprField
                identifier
                 server
                :
                expression
                 expression
                  pathExpression
                   pathInExpression
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       hkdf
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       Prk
                    ::
                    pathExprSegment
                     pathIdentSegment
                      identifier
                       new_less_safe
                 (
                 callParams
                  expression
                   pathExpression
                    pathInExpression
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        hkdf
                     ::
                     pathExprSegment
                      pathIdentSegment
                       identifier
                        HKDF_SHA256
                  ,
                  expression
                   &
                   expression
                    [
                    arrayElements
                     expression
                      literalExpression
                       0x42
                     ,
                     expression
                      literalExpression
                       0xdc
                     ,
                     expression
                      literalExpression
                       0x97
                     ,
                     expression
                      literalExpression
                       0x21
                     ,
                     expression
                      literalExpression
                       0x40
                     ,
                     expression
                      literalExpression
                       0xe0
                     ,
                     expression
                      literalExpression
                       0xf2
                     ,
                     expression
                      literalExpression
                       0xe3
                     ,
                     expression
                      literalExpression
                       0x98
                     ,
                     expression
                      literalExpression
                       0x45
                     ,
                     expression
                      literalExpression
                       0xb7
                     ,
                     expression
                      literalExpression
                       0x67
                     ,
                     expression
                      literalExpression
                       0x61
                     ,
                     expression
                      literalExpression
                       0x34
                     ,
                     expression
                      literalExpression
                       0x39
                     ,
                     expression
                      literalExpression
                       0xdc
                     ,
                     expression
                      literalExpression
                       0x67
                     ,
                     expression
                      literalExpression
                       0x58
                     ,
                     expression
                      literalExpression
                       0xca
                     ,
                     expression
                      literalExpression
                       0x43
                     ,
                     expression
                      literalExpression
                       0x25
                     ,
                     expression
                      literalExpression
                       0x9b
                     ,
                     expression
                      literalExpression
                       0x87
                     ,
                     expression
                      literalExpression
                       0x85
                     ,
                     expression
                      literalExpression
                       0x06
                     ,
                     expression
                      literalExpression
                       0x82
                     ,
                     expression
                      literalExpression
                       0x4e
                     ,
                     expression
                      literalExpression
                       0xb1
                     ,
                     expression
                      literalExpression
                       0xe4
                     ,
                     expression
                      literalExpression
                       0x38
                     ,
                     expression
                      literalExpression
                       0xd8
                     ,
                     expression
                      literalExpression
                       0x55
                     ,
                    ]
                  ,
                 )
               ,
              }
           ;
         statement
          letStatement
           let
           patternNoTopAlt
            patternWithoutRange
             identifierPattern
              identifier
               updated
           =
           expression
            expression
             pathExpression
              pathInExpression
               pathExprSegment
                pathIdentSegment
                 identifier
                  next_1rtt_secrets
            (
            callParams
             expression
              pathExpression
               pathInExpression
                pathExprSegment
                 pathIdentSegment
                  identifier
                   hkdf
                ::
                pathExprSegment
                 pathIdentSegment
                  identifier
                   HKDF_SHA256
             ,
             expression
              &
              expression
               pathExpression
                pathInExpression
                 pathExprSegment
                  pathIdentSegment
                   identifier
                    initial
            )
           ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 equal_prk
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroPunctuationToken
                  &
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   updated
                tokenTreeToken
                 macroPunctuationToken
                  .
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   client
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroPunctuationToken
                  &
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   hkdf
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   Prk
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   new_less_safe
               tokenTree
                delimTokenTree
                 (
                 tokenTree
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     hkdf
                  tokenTreeToken
                   macroPunctuationToken
                    ::
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     HKDF_SHA256
                  tokenTreeToken
                   macroPunctuationToken
                    ,
                  tokenTreeToken
                   macroPunctuationToken
                    &
                 tokenTree
                  delimTokenTree
                   [
                   tokenTree
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x42
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xca
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xc8
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xc9
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x1c
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xd5
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xeb
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x40
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x68
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x2e
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x43
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x2e
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xdf
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x2d
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x2b
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe9
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xf4
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x1a
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x52
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xca
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x6b
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x22
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xd8
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe6
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xcd
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xb1
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe8
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xac
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xa9
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x6
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x1f
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xce
                   ]
                 )
               )
             )
             ;
         statement
          item
           macroItem
            macroInvocationSemi
             simplePath
              simplePathSegment
               identifier
                assert
             !
             (
             tokenTree
              tokenTreeToken
               macroIdentifierLikeToken
                identifier
                 equal_prk
             tokenTree
              delimTokenTree
               (
               tokenTree
                tokenTreeToken
                 macroPunctuationToken
                  &
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   updated
                tokenTreeToken
                 macroPunctuationToken
                  .
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   server
                tokenTreeToken
                 macroPunctuationToken
                  ,
                tokenTreeToken
                 macroPunctuationToken
                  &
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   hkdf
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   Prk
                tokenTreeToken
                 macroPunctuationToken
                  ::
                tokenTreeToken
                 macroIdentifierLikeToken
                  identifier
                   new_less_safe
               tokenTree
                delimTokenTree
                 (
                 tokenTree
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     hkdf
                  tokenTreeToken
                   macroPunctuationToken
                    ::
                  tokenTreeToken
                   macroIdentifierLikeToken
                    identifier
                     HKDF_SHA256
                  tokenTreeToken
                   macroPunctuationToken
                    ,
                  tokenTreeToken
                   macroPunctuationToken
                    &
                 tokenTree
                  delimTokenTree
                   [
                   tokenTree
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xeb
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x7f
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x5e
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x2a
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x12
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x3f
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x40
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x7d
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xb4
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x99
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe3
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x61
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xca
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe5
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x90
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xd4
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xd9
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x92
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe1
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x4b
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x7a
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xce
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x3
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xc2
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x44
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xe0
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x42
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x21
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x15
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xb6
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0xd3
                    tokenTreeToken
                     macroPunctuationToken
                      ,
                    tokenTreeToken
                     macroLiteralToken
                      literalExpression
                       0x8a
                   ]
                 )
               )
             )
             ;
        }
    }
 <EOF>
