grammar_
 header_
  header
  "pre_include_hpp"
  actionBlock
   {
   \n
   #
   i
   n
   c
   l
   u
   d
   e
    
   <
   a
   n
   t
   l
   r
   /
   S
   e
   m
   a
   n
   t
   i
   c
   E
   x
   c
   e
   p
   t
   i
   o
   n
   .
   h
   p
   p
   >
    
    
   // antlr wants this
   \n
   #
   i
   n
   c
   l
   u
   d
   e
    
   "AdaAST.hpp"
   \n
   #
   i
   n
   c
   l
   u
   d
   e
    
   "preambles.h"
   \n
   }
 fileOptionsSpec
  options
  {
  option
   id_
    language
   =
   optionValue
    "Cpp"
   ;
  }
 classDef
  parserSpec
   class
   id_
    AdaParser
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      k
     =
     optionValue
      2
     ;
    option
     id_
      exportVocab
     =
     optionValue
      qualifiedID
       id_
        Ada
     ;
    option
     id_
      defaultErrorHandler
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    option
     id_
      buildAST
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    option
     id_
      ASTLabelType
     =
     optionValue
      "RefAdaAST"
     ;
    }
   actionBlock
    {
    \n
     
     
    A
    N
    T
    L
    R
    _
    P
    A
    R
    S
    E
    R
    _
    P
    R
    E
    A
    M
    B
    L
    E
    \n
    \n
    p
    u
    b
    l
    i
    c
    :
    \n
     
     
    // Ada support stuff
    \n
     
     
    v
    o
    i
    d
     
    p
    u
    s
    h
    _
    d
    e
    f
    _
    i
    d
     
    (
    c
    o
    n
    s
    t
     
    R
    e
    f
    A
    d
    a
    A
    S
    T
    &
     
    d
    e
    f
    i
    d
    )
    ;
    \n
     
     
    c
    o
    n
    s
    t
     
    R
    e
    f
    A
    d
    a
    A
    S
    T
    &
     
    p
    o
    p
    _
    d
    e
    f
    _
    i
    d
     
    (
    )
    ;
    \n
     
     
    b
    o
    o
    l
     
    e
    n
    d
    _
    i
    d
    _
    m
    a
    t
    c
    h
    e
    s
    _
    d
    e
    f
    _
    i
    d
     
    (
    c
    o
    n
    s
    t
     
    R
    e
    f
    A
    d
    a
    A
    S
    T
    &
     
    e
    n
    d
    i
    d
    )
    ;
    \n
     
     
    b
    o
    o
    l
     
    d
    e
    f
    i
    n
    a
    b
    l
    e
    _
    o
    p
    e
    r
    a
    t
    o
    r
     
    (
    c
    o
    n
    s
    t
     
    c
    h
    a
    r
     
    *
    s
    t
    r
    i
    n
    g
    )
    ;
     
     
    // operator_symbol sans "/="
    \n
     
     
    b
    o
    o
    l
     
    i
    s
    _
    o
    p
    e
    r
    a
    t
    o
    r
    _
    s
    y
    m
    b
    o
    l
     
    (
    c
    o
    n
    s
    t
     
    c
    h
    a
    r
     
    *
    s
    t
    r
    i
    n
    g
    )
    ;
    \n
    }
  rules
   rule_
    id_
     compilation_unit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         context_items_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              library_item
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subunit
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         *
    ;
   rule_
    id_
     pragma
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PRAGMA
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         pragma_args_opt
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     pragma_args_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma_arg
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pragma_arg
              )
              *
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
    ;
   rule_
    id_
     pragma_arg
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              RIGHT_SHAFT
              ast_type_spec
               ^
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     context_items_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              with_clause
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   use_clause
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pragma
              )
              *
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         o
         n
         t
         e
         x
         t
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         C
         O
         N
         T
         E
         X
         T
         _
         C
         L
         A
         U
         S
         E
         ,
          
         "CONTEXT_CLAUSE"
         ]
         ,
          
         #
         c
         o
         n
         t
         e
         x
         t
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     with_clause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         w
        :
        terminal_
         WITH
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         c_name_list
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         w
         ,
          
         W
         I
         T
         H
         _
         C
         L
         A
         U
         S
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     c_name_list
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              compound_name
         )
         *
    ;
   rule_
    id_
     compound_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     use_clause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         u
        :
        terminal_
         USE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              TYPE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_mark
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   subtype_mark
              )
              *
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              u
              ,
               
              U
              S
              E
              _
              T
              Y
              P
              E
              _
              C
              L
              A
              U
              S
              E
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              c_name_list
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              u
              ,
               
              U
              S
              E
              _
              C
              L
              A
              U
              S
              E
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     subtype_mark
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              TIC
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attribute_id
         )
         ?
    ;
   rule_
    id_
     attribute_id
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RANGE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DIGITS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DELTA
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ACCESS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
    ;
   rule_
    id_
     library_item
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         private_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              lib_pkg_spec_or_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subprog_decl_or_rename_or_inst_or_body
             argActionBlock
              [
              t
              r
              u
              e
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_decl
             argActionBlock
              [
              t
              r
              u
              e
              ]
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         l
         i
         b
         r
         a
         r
         y
         _
         i
         t
         e
         m
          
         =
          
         #
         (
         #
         [
         L
         I
         B
         R
         A
         R
         Y
         _
         I
         T
         E
         M
         ,
          
         "LIBRARY_ITEM"
         ]
         ,
          
         #
         l
         i
         b
         r
         a
         r
         y
         _
         i
         t
         e
         m
         )
         ;
          
         }
    ;
   rule_
    id_
     private_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         i
         v
         a
         t
         e
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         p
         r
         i
         v
         a
         t
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     lib_pkg_spec_or_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         pkg
        :
        terminal_
         PACKAGE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BODY
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              t
              r
              u
              e
              ]
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pkg_body_part
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              end_id_opt
             !
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              k
              g
              ,
               
              P
              A
              C
              K
              A
              G
              E
              _
              B
              O
              D
              Y
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              t
              r
              u
              e
              ]
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              spec_decl_part
             argActionBlock
              [
              #
              p
              k
              g
              ]
         )
    ;
   rule_
    id_
     subprog_decl
    argActionBlock
     [
     b
     o
     o
     l
      
     l
     i
     b
     _
     l
     e
     v
     e
     l
     ]
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      t
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROCEDURE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         l
         i
         b
         _
         l
         e
         v
         e
         l
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_subp_inst
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              G
              E
              N
              E
              R
              I
              C
              _
              P
              R
              O
              C
              E
              D
              U
              R
              E
              _
              I
              N
              S
              T
              A
              N
              T
              I
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              formal_part_opt
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   p
                   ,
                    
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   is_separate_or_abstract_or_decl
                  argActionBlock
                   [
                   #
                   p
                   ]
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
     |
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FUNCTION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_designator
        argActionBlock
         [
         l
         i
         b
         _
         l
         e
         v
         e
         l
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_subp_inst
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              f
              ,
               
              G
              E
              N
              E
              R
              I
              C
              _
              F
              U
              N
              C
              T
              I
              O
              N
              _
              I
              N
              S
              T
              A
              N
              T
              I
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              function_tail
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   f
                   ,
                    
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   is_separate_or_abstract_or_decl
                  argActionBlock
                   [
                   #
                   f
                   ]
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     def_id
    argActionBlock
     [
     b
     o
     o
     l
      
     l
     i
     b
     _
     l
     e
     v
     e
     l
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         l
         i
         b
         _
         l
         e
         v
         e
         l
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         cn
        :
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         u
         s
         h
         _
         d
         e
         f
         _
         i
         d
         (
         #
         c
         n
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         !
         l
         i
         b
         _
         l
         e
         v
         e
         l
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         u
         s
         h
         _
         d
         e
         f
         _
         i
         d
         (
         #
         n
         )
         ;
          
         }
    ;
   rule_
    id_
     generic_subp_inst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         generic_inst
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     generic_inst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value_s
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     parenth_values
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         value
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
    ;
   rule_
    id_
     value
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OTHERS
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              RIGHT_SHAFT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              ranged_expr_s
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   RIGHT_SHAFT
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   expression
              )
              ?
         )
    ;
   rule_
    id_
     ranged_expr_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ranged_expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PIPE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              ranged_expr
         )
         *
    ;
   rule_
    id_
     ranged_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT_DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              RANGE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
         )
         ?
    ;
   rule_
    id_
     range_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RANGE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range
    ;
   rule_
    id_
     range
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   range_dots
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_dots
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_attrib_ref
         )
    ;
   rule_
    id_
     range_dots
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_expression
      element
       elementNoOptionSpec
        terminal_
         DOT_DOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_expression
    ;
   rule_
    id_
     range_attrib_ref
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         prefix
      element
       elementNoOptionSpec
        terminal_
         TIC
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         RANGE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         r
         ,
          
         R
         A
         N
         G
         E
         _
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         R
         E
         F
         E
         R
         E
         N
         C
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     prefix
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ALL
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IDENTIFIER
                   ast_type_spec
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              p
             :
             terminal_
              LPAREN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value_s
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              I
              N
              D
              E
              X
              E
              D
              _
              C
              O
              M
              P
              O
              N
              E
              N
              T
              )
              ;
               
              }
         )
         *
    ;
   rule_
    id_
     formal_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parameter_specification
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   parameter_specification
              )
              *
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
          
         =
          
         #
         (
         [
         F
         O
         R
         M
         A
         L
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
          
         "FORMAL_PART_OPT"
         ]
         ,
         \n
         \t
         \t
         \t
          
          
          
          
          
          
          
         #
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     parameter_specification
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_ids_colon
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         mode_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         init_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         S
         P
         E
         C
         I
         F
         I
         C
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "PARAMETER_SPECIFICATION"
         ]
         ,
          
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
         )
         ;
          
         }
    ;
   rule_
    id_
     def_ids_colon
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         defining_identifier_list
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
    ;
   rule_
    id_
     defining_identifier_list
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         e
         f
         i
         n
         i
         n
         g
         _
         i
         d
         e
         n
         t
         i
         f
         i
         e
         r
         _
         l
         i
         s
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         E
         F
         I
         N
         I
         N
         G
         _
         I
         D
         E
         N
         T
         I
         F
         I
         E
         R
         _
         L
         I
         S
         T
         ,
         \n
         \t
         \t
          
          
          
         "DEFINING_IDENTIFIER_LIST"
         ]
         ,
          
         #
         d
         e
         f
         i
         n
         i
         n
         g
         _
         i
         d
         e
         n
         t
         i
         f
         i
         e
         r
         _
         l
         i
         s
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     mode_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   OUT
                   ast_type_spec
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              OUT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ACCESS
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         m
         o
         d
         e
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         m
         o
         d
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     renames
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      d
      u
      m
      m
      y
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RENAMES
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              name
          |
          alternative
           element
            elementNoOptionSpec
             id_
              dummy
             =
             rule_ref_or_keyword_as
              definable_operator_symbol
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     name
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      d
      u
      m
      m
      y
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ALL
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IDENTIFIER
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   CHARACTER_LITERAL
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   dummy
                  =
                  rule_ref_or_keyword_as
                   is_operator
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              p
             :
             terminal_
              LPAREN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value_s
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              I
              N
              D
              E
              X
              E
              D
              _
              C
              O
              M
              P
              O
              N
              E
              N
              T
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              TIC
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attribute_id
         )
         *
    ;
   rule_
    id_
     is_operator
    returns
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     d
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         i
         s
         _
         o
         p
         e
         r
         a
         t
         o
         r
         _
         s
         y
         m
         b
         o
         l
         (
         L
         T
         (
         1
         )
         -
         >
         g
         e
         t
         T
         e
         x
         t
         (
         )
         .
         c
         _
         s
         t
         r
         (
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         op
        :
        terminal_
         CHAR_STRING
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         p
         -
         >
         s
         e
         t
         T
         y
         p
         e
         (
         O
         P
         E
         R
         A
         T
         O
         R
         _
         S
         Y
         M
         B
         O
         L
         )
         ;
          
         d
         =
         #
         o
         p
         ;
          
         }
    ;
   rule_
    id_
     definable_operator_symbol
    returns
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     d
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         d
         e
         f
         i
         n
         a
         b
         l
         e
         _
         o
         p
         e
         r
         a
         t
         o
         r
         (
         L
         T
         (
         1
         )
         -
         >
         g
         e
         t
         T
         e
         x
         t
         (
         )
         .
         c
         _
         s
         t
         r
         (
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         op
        :
        terminal_
         CHAR_STRING
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         p
         -
         >
         s
         e
         t
         T
         y
         p
         e
         (
         O
         P
         E
         R
         A
         T
         O
         R
         _
         S
         Y
         M
         B
         O
         L
         )
         ;
          
         d
         =
         #
         o
         p
         ;
          
         }
    ;
   rule_
    id_
     parenthesized_primary
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         pp
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NuLL
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              RECORD
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value_s
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              extension_opt
         )
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         p
         ,
          
         P
         A
         R
         E
         N
         T
         H
         E
         S
         I
         Z
         E
         D
         _
         P
         R
         I
         M
         A
         R
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     extension_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WITH
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   NuLL
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   RECORD
                   ast_type_spec
                    !
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   value_s
              )
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         x
         t
         e
         n
         s
         i
         o
         n
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         X
         T
         E
         N
         S
         I
         O
         N
         _
         O
         P
         T
         ,
          
         "EXTENSION_OPT"
         ]
         ,
          
         #
         e
         x
         t
         e
         n
         s
         i
         o
         n
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     is_separate_or_abstract_or_decl
    !
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         separate_or_abstract
        argActionBlock
         [
         t
         ]
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
         \n
         \t
          
          
          
          
         i
         f
          
         (
         t
         -
         >
         g
         e
         t
         T
         y
         p
         e
         (
         )
          
         =
         =
          
         A
         d
         a
         T
         o
         k
         e
         n
         T
         y
         p
         e
         s
         :
         :
         P
         R
         O
         C
         E
         D
         U
         R
         E
         )
         \n
         \t
          
          
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         P
         R
         O
         C
         E
         D
         U
         R
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
         \n
         \t
          
          
          
          
         e
         l
         s
         e
         \n
         \t
          
          
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         F
         U
         N
         C
         T
         I
         O
         N
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
         \n
         \t
          
          
         }
    ;
   rule_
    id_
     separate_or_abstract
    !
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEPARATE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
         \n
         \t
         \t
          
          
         i
         f
          
         (
         t
         -
         >
         g
         e
         t
         T
         y
         p
         e
         (
         )
          
         =
         =
          
         A
         d
         a
         T
         o
         k
         e
         n
         T
         y
         p
         e
         s
         :
         :
         P
         R
         O
         C
         E
         D
         U
         R
         E
         )
         \n
         \t
         \t
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         P
         R
         O
         C
         E
         D
         U
         R
         E
         _
         B
         O
         D
         Y
         _
         S
         T
         U
         B
         )
         ;
         \n
         \t
         \t
          
          
         e
         l
         s
         e
         \n
         \t
         \t
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         F
         U
         N
         C
         T
         I
         O
         N
         _
         B
         O
         D
         Y
         _
         S
         T
         U
         B
         )
         ;
         \n
         \t
         \t
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ABSTRACT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
         \n
         \t
         \t
          
          
         i
         f
          
         (
         t
         -
         >
         g
         e
         t
         T
         y
         p
         e
         (
         )
          
         =
         =
          
         A
         d
         a
         T
         o
         k
         e
         n
         T
         y
         p
         e
         s
         :
         :
         P
         R
         O
         C
         E
         D
         U
         R
         E
         )
         \n
         \t
         \t
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         A
         B
         S
         T
         R
         A
         C
         T
         _
         P
         R
         O
         C
         E
         D
         U
         R
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
         \n
         \t
         \t
          
          
         e
         l
         s
         e
         \n
         \t
         \t
          
          
          
          
         S
         e
         t
         (
         t
         ,
          
         A
         B
         S
         T
         R
         A
         C
         T
         _
         F
         U
         N
         C
         T
         I
         O
         N
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     def_designator
    argActionBlock
     [
     b
     o
     o
     l
      
     l
     i
     b
     _
     l
     e
     v
     e
     l
     ]
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      d
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         l
         i
         b
         _
         l
         e
         v
         e
         l
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         n
        :
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         u
         s
         h
         _
         d
         e
         f
         _
         i
         d
         (
         #
         n
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         !
         l
         i
         b
         _
         l
         e
         v
         e
         l
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         d
        =
        rule_ref_or_keyword_as
         designator
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         u
         s
         h
         _
         d
         e
         f
         _
         i
         d
         (
         d
         )
         ;
          
         }
    ;
   rule_
    id_
     designator
    returns
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     d
     ]
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      o
      p
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         op
        =
        rule_ref_or_keyword_as
         definable_operator_symbol
      element
       elementNoOptionSpec
        actionBlock
         {
          
         d
          
         =
          
         o
         p
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         d
          
         =
          
         #
         n
         ;
          
         }
    ;
   rule_
    id_
     function_tail
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         func_formal_part_opt
      element
       elementNoOptionSpec
        terminal_
         RETURN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
    ;
   rule_
    id_
     func_formal_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              func_param
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   func_param
              )
              *
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         u
         n
         c
         _
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         [
         F
         O
         R
         M
         A
         L
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
         "FORMAL_PART_OPT"
         ]
         ,
          
         #
         f
         u
         n
         c
         _
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     func_param
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_ids_colon
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         in_access_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         init_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         u
         n
         c
         _
         p
         a
         r
         a
         m
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         S
         P
         E
         C
         I
         F
         I
         C
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "PARAMETER_SPECIFICATION"
         ]
         ,
          
         #
         f
         u
         n
         c
         _
         p
         a
         r
         a
         m
         )
         ;
          
         }
    ;
   rule_
    id_
     in_access_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ACCESS
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         i
         n
         _
         a
         c
         c
         e
         s
         s
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         i
         n
         _
         a
         c
         c
         e
         s
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     spec_decl_part
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     p
     k
     g
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   generic_inst
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   p
                   k
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   P
                   A
                   C
                   K
                   A
                   G
                   E
                   _
                   I
                   N
                   S
                   T
                   A
                   N
                   T
                   I
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pkg_spec_part
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   p
                   k
                   g
                   ,
                    
                   P
                   A
                   C
                   K
                   A
                   G
                   E
                   _
                   S
                   P
                   E
                   C
                   I
                   F
                   I
                   C
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              renames
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              p
              k
              g
              ,
               
              P
              A
              C
              K
              A
              G
              E
              _
              R
              E
              N
              A
              M
              I
              N
              G
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     pkg_spec_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         basic_declarative_items_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              basic_declarative_items_opt
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
    ;
   rule_
    id_
     basic_declarative_items_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              basic_decl_item
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         b
         a
         s
         i
         c
         _
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         B
         A
         S
         I
         C
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         V
         E
         _
         I
         T
         E
         M
         S
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "BASIC_DECLARATIVE_ITEMS_OPT"
         ]
         ,
         \n
         \t
         \t
          
          
         #
         b
         a
         s
         i
         c
         _
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     basic_declarative_items
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              basic_decl_item
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         b
         a
         s
         i
         c
         _
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         i
         t
         e
         m
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         B
         A
         S
         I
         C
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         V
         E
         _
         I
         T
         E
         M
         S
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "BASIC_DECLARATIVE_ITEMS_OPT"
         ]
         ,
         \n
         \t
         \t
          
          
         #
         b
         a
         s
         i
         c
         _
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         i
         t
         e
         m
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     basic_decl_item
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         pkg
        :
        terminal_
         PACKAGE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         spec_decl_part
        argActionBlock
         [
         #
         p
         k
         g
         ]
     |
     alternative
      element
       elementNoOptionSpec
        id_
         tsk
        :
        terminal_
         TASK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         task_type_or_single_decl
        argActionBlock
         [
         #
         t
         s
         k
         ]
     |
     alternative
      element
       elementNoOptionSpec
        id_
         pro
        :
        terminal_
         PROTECTED
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         prot_type_or_single_decl
        argActionBlock
         [
         #
         p
         r
         o
         ]
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subprog_decl
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         decl_common
    ;
   rule_
    id_
     task_type_or_single_decl
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     s
     k
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         TYPE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrim_part_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         task_definition_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         s
         k
         ,
          
         T
         A
         S
         K
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         task_definition_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         s
         k
         ,
          
         S
         I
         N
         G
         L
         E
         _
         T
         A
         S
         K
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
    ;
   rule_
    id_
     task_definition_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         task_items_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         private_task_items_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     discrim_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrim_part_text
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIM_PART_OPT"
         ]
         ,
          
         #
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     discrim_part_text
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BOX
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discriminant_specifications
         )
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
    ;
   rule_
    id_
     known_discrim_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discriminant_specifications
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         k
         n
         o
         w
         n
         _
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIM_PART_OPT"
         ]
         ,
          
         #
         k
         n
         o
         w
         n
         _
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     empty_discrim_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         m
         p
         t
         y
         _
         d
         i
         s
         c
         r
         i
         m
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIM_PART_OPT"
         ]
         ,
          
         #
         e
         m
         p
         t
         y
         _
         d
         i
         s
         c
         r
         i
         m
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     discrim_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrim_part_text
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIM_PART_OPT"
         ]
         ,
          
         #
         d
         i
         s
         c
         r
         i
         m
         _
         p
         a
         r
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     discriminant_specifications
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discriminant_specification
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discriminant_specification
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         I
         N
         A
         N
         T
         _
         S
         P
         E
         C
         I
         F
         I
         C
         A
         T
         I
         O
         N
         S
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIMINANT_SPECIFICATIONS"
         ]
         ,
         \n
         \t
         \t
          
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     discriminant_specification
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_ids_colon
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         access_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         init_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         I
         N
         A
         N
         T
         _
         S
         P
         E
         C
         I
         F
         I
         C
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIMINANT_SPECIFICATION"
         ]
         ,
         \n
         \t
         \t
          
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         s
         p
         e
         c
         i
         f
         i
         c
         a
         t
         i
         o
         n
         )
         ;
          
         }
    ;
   rule_
    id_
     access_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ACCESS
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         c
         c
         e
         s
         s
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         a
         c
         c
         e
         s
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     init_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         i
         n
         i
         t
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         I
         N
         I
         T
         _
         O
         P
         T
         ,
          
         "INIT_OPT"
         ]
         ,
          
         #
         i
         n
         i
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     task_items_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         *
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entrydecls_repspecs_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         t
         a
         s
         k
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         T
         A
         S
         K
         _
         I
         T
         E
         M
         S
         _
         O
         P
         T
         ,
          
         "TASK_ITEMS_OPT"
         ]
         ,
          
         #
         t
         a
         s
         k
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     entrydecls_repspecs_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              entry_declaration
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pragma
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   rep_spec
              )
              *
         )
         *
    ;
   rule_
    id_
     entry_declaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         e
        :
        terminal_
         ENTRY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrete_subtype_def_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         e
         ,
          
         E
         N
         T
         R
         Y
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
    ;
   rule_
    id_
     discrete_subtype_def_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   discrete_subtype_definition
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrete_subtype_definition
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
          |
          alternative
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         e
         t
         e
         _
         s
         u
         b
         t
         y
         p
         e
         _
         d
         e
         f
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         E
         T
         E
         _
         S
         U
         B
         T
         Y
         P
         E
         _
         D
         E
         F
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "DISCRETE_SUBTYPE_DEF_OPT"
         ]
         ,
          
         #
         d
         i
         s
         c
         r
         e
         t
         e
         _
         s
         u
         b
         t
         y
         p
         e
         _
         d
         e
         f
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     discrete_subtype_definition
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   range
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_ind
         )
    ;
   rule_
    id_
     rep_spec
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         FOR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        terminal_
         USE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         rep_spec_part
        argActionBlock
         [
         #
         r
         ]
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     rep_spec_part
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RECORD
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         align_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         comp_loc_s
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         RECORD
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         R
         E
         C
         O
         R
         D
         _
         R
         E
         P
         R
         E
         S
         E
         N
         T
         A
         T
         I
         O
         N
         _
         C
         L
         A
         U
         S
         E
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         AT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         A
         T
         _
         C
         L
         A
         U
         S
         E
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         D
         E
         F
         I
         N
         I
         T
         I
         O
         N
         _
         C
         L
         A
         U
         S
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     align_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              AT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              MOD
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         l
         i
         g
         n
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         _
         C
         L
         A
         U
         S
         E
         _
         O
         P
         T
         ,
          
         "MOD_CLAUSE_OPT"
         ]
         ,
          
         #
         a
         l
         i
         g
         n
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     comp_loc_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_mark
           element
            elementNoOptionSpec
             terminal_
              AT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              RANGE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         o
         m
         p
         _
         l
         o
         c
         _
         s
          
         =
          
         #
         (
         #
         [
         C
         O
         M
         P
         O
         N
         E
         N
         T
         _
         C
         L
         A
         U
         S
         E
         S
         _
         O
         P
         T
         ,
          
         "COMPONENT_CLAUSES_OPT"
         ]
         ,
         \n
         \t
         \t
         \t
          
          
         #
         c
         o
         m
         p
         _
         l
         o
         c
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     private_task_items_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pragma
              )
              *
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              entrydecls_repspecs_opt
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         i
         v
         a
         t
         e
         _
         t
         a
         s
         k
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         P
         R
         I
         V
         A
         T
         E
         _
         T
         A
         S
         K
         _
         I
         T
         E
         M
         S
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "PRIVATE_TASK_ITEMS_OPT"
         ]
         ,
          
         #
         p
         r
         i
         v
         a
         t
         e
         _
         t
         a
         s
         k
         _
         i
         t
         e
         m
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     prot_type_or_single_decl
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     p
     r
     o
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         TYPE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrim_part_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         protected_definition
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         p
         r
         o
         ,
          
         P
         R
         O
         T
         E
         C
         T
         E
         D
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         protected_definition
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         p
         r
         o
         ,
          
         S
         I
         N
         G
         L
         E
         _
         P
         R
         O
         T
         E
         C
         T
         E
         D
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
    ;
   rule_
    id_
     protected_definition
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         prot_op_decl_s
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              prot_member_decl_s
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
    ;
   rule_
    id_
     prot_op_decl_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              prot_op_decl
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         o
         t
         _
         o
         p
         _
         d
         e
         c
         l
         _
         s
          
         =
          
         #
         (
         #
         [
         P
         R
         O
         T
         _
         O
         P
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         S
         ,
         \n
         \t
         \t
         \t
          
          
          
          
          
          
         "PROT_OP_DECLARATIONS"
         ]
         ,
          
         #
         p
         r
         o
         t
         _
         o
         p
         _
         d
         e
         c
         l
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     prot_op_decl
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_declaration
     |
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROCEDURE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         S
         e
         t
         (
         #
         p
         ,
          
         P
         R
         O
         C
         E
         D
         U
         R
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FUNCTION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_designator
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         function_tail
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         S
         e
         t
         (
         #
         f
         ,
          
         F
         U
         N
         C
         T
         I
         O
         N
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         rep_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         pragma
    ;
   rule_
    id_
     prot_member_decl_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              prot_op_decl
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              comp_decl
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         o
         t
         _
         m
         e
         m
         b
         e
         r
         _
         d
         e
         c
         l
         _
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         P
         R
         O
         T
         _
         M
         E
         M
         B
         E
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         S
         ,
         \n
         \t
         \t
          
          
          
         "PROT_MEMBER_DECLARATIONS"
         ]
         ,
          
         #
         p
         r
         o
         t
         _
         m
         e
         m
         b
         e
         r
         _
         d
         e
         c
         l
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     comp_decl
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_ids_colon
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         component_subtype_def
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         init_opt
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         o
         m
         p
         _
         d
         e
         c
         l
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         C
         O
         M
         P
         O
         N
         E
         N
         T
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "COMPONENT_DECLARATION"
         ]
         ,
          
         #
         c
         o
         m
         p
         _
         d
         e
         c
         l
         )
         ;
          
         }
    ;
   rule_
    id_
     decl_common
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         t
        :
        terminal_
         TYPE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type_def
             argActionBlock
              [
              #
              t
              ]
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   discrim_part
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        IS
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        derived_or_private_or_record
                       argActionBlock
                        [
                        #
                        t
                        ,
                         
                        t
                        r
                        u
                        e
                        ]
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        t
                        ,
                         
                        I
                        N
                        C
                        O
                        M
                        P
                        L
                        E
                        T
                        E
                        _
                        T
                        Y
                        P
                        E
                        _
                        D
                        E
                        C
                        L
                        A
                        R
                        A
                        T
                        I
                        O
                        N
                        )
                        ;
                         
                        }
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   empty_discrim_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   t
                   ,
                    
                   I
                   N
                   C
                   O
                   M
                   P
                   L
                   E
                   T
                   E
                   _
                   T
                   Y
                   P
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SUBTYPE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         S
         U
         B
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         generic_decl
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         use_clause
     |
     alternative
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         FOR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   local_enum_name
                element
                 elementNoOptionSpec
                  terminal_
                   USE
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              local_enum_name
           element
            elementNoOptionSpec
             terminal_
              USE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumeration_aggregate
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              r
              ,
               
              E
              N
              U
              M
              E
              R
              A
              T
              I
              O
              N
              _
              R
              E
              P
              E
              S
              E
              N
              T
              A
              T
              I
              O
              N
              _
              C
              L
              A
              U
              S
              E
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_mark
           element
            elementNoOptionSpec
             terminal_
              USE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              rep_spec_part
             argActionBlock
              [
              #
              r
              ]
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              EXCEPTION
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              RENAMES
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         erd
        :
        terminal_
         COLON
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         EXCEPTION
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         RENAMES
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         e
         r
         d
         ,
          
         E
         X
         C
         E
         P
         T
         I
         O
         N
         _
         R
         E
         N
         A
         M
         I
         N
         G
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_mark
           element
            elementNoOptionSpec
             terminal_
              RENAMES
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         ord
        :
        terminal_
         COLON
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        terminal_
         RENAMES
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         o
         r
         d
         ,
          
         O
         B
         J
         E
         C
         T
         _
         R
         E
         N
         A
         M
         I
         N
         G
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         defining_identifier_list
      element
       elementNoOptionSpec
        id_
         od
        :
        terminal_
         COLON
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              EXCEPTION
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              o
              d
              ,
               
              E
              X
              C
              E
              P
              T
              I
              O
              N
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   CONSTANT
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   ASSIGN
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              CONSTANT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              o
              d
              ,
               
              N
              U
              M
              B
              E
              R
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              aliased_constant_opt
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   array_type_definition
                  argActionBlock
                   [
                   #
                   o
                   d
                   ]
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   init_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   o
                   d
                   ,
                    
                   A
                   R
                   R
                   A
                   Y
                   _
                   O
                   B
                   J
                   E
                   C
                   T
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   subtype_ind
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   init_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   o
                   d
                   ,
                    
                   O
                   B
                   J
                   E
                   C
                   T
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     type_def
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         enum_id_s
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         E
         N
         U
         M
         E
         R
         A
         T
         I
         O
         N
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         RANGE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         S
         I
         G
         N
         E
         D
         _
         I
         N
         T
         E
         G
         E
         R
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MOD
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         M
         O
         D
         U
         L
         A
         R
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DIGITS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range_constraint_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         F
         L
         O
         A
         T
         I
         N
         G
         _
         P
         O
         I
         N
         T
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DELTA
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              RANGE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              O
              R
              D
              I
              N
              A
              R
              Y
              _
              F
              I
              X
              E
              D
              _
              P
              O
              I
              N
              T
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DIGITS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_constraint_opt
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              D
              E
              C
              I
              M
              A
              L
              _
              F
              I
              X
              E
              D
              _
              P
              O
              I
              N
              T
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         array_type_definition
        argActionBlock
         [
         t
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         access_type_definition
        argActionBlock
         [
         t
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         empty_discrim_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         derived_or_private_or_record
        argActionBlock
         [
         t
         ,
          
         f
         a
         l
         s
         e
         ]
    ;
   rule_
    id_
     enum_id_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         enumeration_literal_specification
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumeration_literal_specification
         )
         *
    ;
   rule_
    id_
     enumeration_literal_specification
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHARACTER_LITERAL
         ast_type_spec
    ;
   rule_
    id_
     range_constraint_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_constraint
         )
         ?
    ;
   rule_
    id_
     array_type_definition
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ARRAY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         index_or_discrete_range_s
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         OF
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         component_subtype_def
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         A
         R
         R
         A
         Y
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
    ;
   rule_
    id_
     index_or_discrete_range_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         index_or_discrete_range
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              index_or_discrete_range
         )
         *
    ;
   rule_
    id_
     index_or_discrete_range
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT_DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              RANGE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BOX
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   range
              )
         )
         ?
    ;
   rule_
    id_
     component_subtype_def
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         aliased_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
    ;
   rule_
    id_
     aliased_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ALIASED
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         l
         i
         a
         s
         e
         d
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         a
         l
         i
         a
         s
         e
         d
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     subtype_ind
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constraint_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         u
         b
         t
         y
         p
         e
         _
         i
         n
         d
          
         =
          
         #
         (
         #
         [
         S
         U
         B
         T
         Y
         P
         E
         _
         I
         N
         D
         I
         C
         A
         T
         I
         O
         N
         ,
          
         "SUBTYPE_INDICATION"
         ]
         ,
         \n
         \t
         \t
         \t
          
          
          
         #
         s
         u
         b
         t
         y
         p
         e
         _
         i
         n
         d
         )
         ;
          
         }
    ;
   rule_
    id_
     constraint_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_constraint
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              digits_constraint
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              delta_constraint
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   index_constraint
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              index_constraint
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discriminant_constraint
         )
         ?
    ;
   rule_
    id_
     digits_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         d
        :
        terminal_
         DIGITS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range_constraint_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         d
         ,
          
         D
         I
         G
         I
         T
         S
         _
         C
         O
         N
         S
         T
         R
         A
         I
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     delta_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         d
        :
        terminal_
         DELTA
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range_constraint_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         d
         ,
          
         D
         E
         L
         T
         A
         _
         C
         O
         N
         S
         T
         R
         A
         I
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     index_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrete_range
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrete_range
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         I
         N
         D
         E
         X
         _
         C
         O
         N
         S
         T
         R
         A
         I
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     discrete_range
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
    ;
   rule_
    id_
     discriminant_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discriminant_association
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discriminant_association
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         D
         I
         S
         C
         R
         I
         M
         I
         N
         A
         N
         T
         _
         C
         O
         N
         S
         T
         R
         A
         I
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     discriminant_association
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         selector_names_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         a
         s
         s
         o
         c
         i
         a
         t
         i
         o
         n
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         I
         S
         C
         R
         I
         M
         I
         N
         A
         N
         T
         _
         A
         S
         S
         O
         C
         I
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "DISCRIMINANT_ASSOCIATION"
         ]
         ,
          
         #
         d
         i
         s
         c
         r
         i
         m
         i
         n
         a
         n
         t
         _
         a
         s
         s
         o
         c
         i
         a
         t
         i
         o
         n
         )
         ;
          
         }
    ;
   rule_
    id_
     selector_names_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   association_head
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              association_head
          |
          alternative
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         e
         l
         e
         c
         t
         o
         r
         _
         n
         a
         m
         e
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         S
         E
         L
         E
         C
         T
         O
         R
         _
         N
         A
         M
         E
         S
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "SELECTOR_NAMES_OPT"
         ]
         ,
          
         #
         s
         e
         l
         e
         c
         t
         o
         r
         _
         n
         a
         m
         e
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     association_head
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         selector_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PIPE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              selector_name
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RIGHT_SHAFT
         ast_type_spec
          !
    ;
   rule_
    id_
     selector_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
    ;
   rule_
    id_
     access_type_definition
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ACCESS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              protected_opt
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PROCEDURE
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   formal_part_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   t
                   ,
                    
                   A
                   C
                   C
                   E
                   S
                   S
                   _
                   T
                   O
                   _
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   FUNCTION
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   func_formal_part_opt
                element
                 elementNoOptionSpec
                  terminal_
                   RETURN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   subtype_mark
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   t
                   ,
                    
                   A
                   C
                   C
                   E
                   S
                   S
                   _
                   T
                   O
                   _
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              constant_all_opt
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_ind
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              A
              C
              C
              E
              S
              S
              _
              T
              O
              _
              O
              B
              J
              E
              C
              T
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
    ;
   rule_
    id_
     protected_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PROTECTED
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         o
         t
         e
         c
         t
         e
         d
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         p
         r
         o
         t
         e
         c
         t
         e
         d
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     constant_all_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CONSTANT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ALL
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         o
         n
         s
         t
         a
         n
         t
         _
         a
         l
         l
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         c
         o
         n
         s
         t
         a
         n
         t
         _
         a
         l
         l
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     derived_or_private_or_record
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ,
      
     b
     o
     o
     l
      
     h
     a
     s
     _
     d
     i
     s
     c
     r
     i
     m
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ABSTRACT
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              NEW
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_ind
           element
            elementNoOptionSpec
             terminal_
              WITH
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         abstract_opt
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
      element
       elementNoOptionSpec
        terminal_
         WITH
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              P
              R
              I
              V
              A
              T
              E
              _
              E
              X
              T
              E
              N
              S
              I
              O
              N
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              record_definition
             argActionBlock
              [
              h
              a
              s
              _
              d
              i
              s
              c
              r
              i
              m
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              D
              E
              R
              I
              V
              E
              D
              _
              R
              E
              C
              O
              R
              D
              _
              E
              X
              T
              E
              N
              S
              I
              O
              N
              )
              ;
               
              }
         )
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         t
         ,
          
         O
         R
         D
         I
         N
         A
         R
         Y
         _
         D
         E
         R
         I
         V
         E
         D
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         abstract_tagged_limited_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              P
              R
              I
              V
              A
              T
              E
              _
              T
              Y
              P
              E
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              record_definition
             argActionBlock
              [
              h
              a
              s
              _
              d
              i
              s
              c
              r
              i
              m
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              t
              ,
               
              R
              E
              C
              O
              R
              D
              _
              T
              Y
              P
              E
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
    ;
   rule_
    id_
     abstract_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ABSTRACT
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         b
         s
         t
         r
         a
         c
         t
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         a
         b
         s
         t
         r
         a
         c
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     record_definition
    argActionBlock
     [
     b
     o
     o
     l
      
     h
     a
     s
     _
     d
     i
     s
     c
     r
     i
     m
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RECORD
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         component_list
        argActionBlock
         [
         h
         a
         s
         _
         d
         i
         s
         c
         r
         i
         m
         ]
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         RECORD
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NuLL
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         RECORD
         ast_type_spec
          !
    ;
   rule_
    id_
     component_list
    argActionBlock
     [
     b
     o
     o
     l
      
     h
     a
     s
     _
     d
     i
     s
     c
     r
     i
     m
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NuLL
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         component_items
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variant_part
           element
            elementNoOptionSpec
             actionBlock
              {
               
              h
              a
              s
              _
              d
              i
              s
              c
              r
              i
              m
               
              }
             ?
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         empty_component_items
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         variant_part
      element
       elementNoOptionSpec
        actionBlock
         {
          
         h
         a
         s
         _
         d
         i
         s
         c
         r
         i
         m
          
         }
        ?
    ;
   rule_
    id_
     component_items
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              comp_decl
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         o
         m
         p
         o
         n
         e
         n
         t
         _
         i
         t
         e
         m
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         C
         O
         M
         P
         O
         N
         E
         N
         T
         _
         I
         T
         E
         M
         S
         ,
         \n
         \t
         \t
          
          
          
         "COMPONENT_ITEMS"
         ]
         ,
          
         #
         c
         o
         m
         p
         o
         n
         e
         n
         t
         _
         i
         t
         e
         m
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     empty_component_items
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         m
         p
         t
         y
         _
         c
         o
         m
         p
         o
         n
         e
         n
         t
         _
         i
         t
         e
         m
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         C
         O
         M
         P
         O
         N
         E
         N
         T
         _
         I
         T
         E
         M
         S
         ,
         \n
         \t
         \t
          
          
          
         "COMPONENT_ITEMS"
         ]
         ,
          
         #
         e
         m
         p
         t
         y
         _
         c
         o
         m
         p
         o
         n
         e
         n
         t
         _
         i
         t
         e
         m
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     variant_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         CASE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discriminant_direct_name
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         variant_s
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         CASE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         c
         ,
          
         V
         A
         R
         I
         A
         N
         T
         _
         P
         A
         R
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     discriminant_direct_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
    ;
   rule_
    id_
     variant_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variant
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         v
         a
         r
         i
         a
         n
         t
         _
         s
          
         =
          
         #
         (
         #
         [
         V
         A
         R
         I
         A
         N
         T
         S
         ,
          
         "VARIANTS"
         ]
         ,
          
         #
         v
         a
         r
         i
         a
         n
         t
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     variant
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         w
        :
        terminal_
         WHEN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         choice_s
      element
       elementNoOptionSpec
        terminal_
         RIGHT_SHAFT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         component_list
        argActionBlock
         [
         t
         r
         u
         e
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         w
         ,
          
         V
         A
         R
         I
         A
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     choice_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         choice
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PIPE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              choice
         )
         *
    ;
   rule_
    id_
     choice
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OTHERS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrete_with_range
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         discrete_with_range
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     discrete_with_range
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              mark_with_constraint
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         mark_with_constraint
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range
    ;
   rule_
    id_
     mark_with_constraint
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range_constraint
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         m
         a
         r
         k
         _
         w
         i
         t
         h
         _
         c
         o
         n
         s
         t
         r
         a
         i
         n
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         M
         A
         R
         K
         _
         W
         I
         T
         H
         _
         C
         O
         N
         S
         T
         R
         A
         I
         N
         T
         ,
         \n
         \t
         \t
          
          
          
         "MARK_WITH_CONSTRAINT"
         ]
         ,
          
         #
         m
         a
         r
         k
         _
         w
         i
         t
         h
         _
         c
         o
         n
         s
         t
         r
         a
         i
         n
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     abstract_tagged_limited_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ABSTRACT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              TAGGED
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              TAGGED
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LIMITED
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         b
         s
         t
         r
         a
         c
         t
         _
         t
         a
         g
         g
         e
         d
         _
         l
         i
         m
         i
         t
         e
         d
         _
         o
         p
         t
          
         =
         \n
         \t
          
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         a
         b
         s
         t
         r
         a
         c
         t
         _
         t
         a
         g
         g
         e
         d
         _
         l
         i
         m
         i
         t
         e
         d
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     local_enum_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
    ;
   rule_
    id_
     enumeration_aggregate
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         parenth_values
    ;
   rule_
    id_
     aliased_constant_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ALIASED
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CONSTANT
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         l
         i
         a
         s
         e
         d
         _
         c
         o
         n
         s
         t
         a
         n
         t
         _
         o
         p
         t
          
         =
         \n
         \t
          
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         a
         l
         i
         a
         s
         e
         d
         _
         c
         o
         n
         s
         t
         a
         n
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     generic_decl
    argActionBlock
     [
     b
     o
     o
     l
      
     l
     i
     b
     _
     l
     e
     v
     e
     l
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         g
        :
        terminal_
         GENERIC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         generic_formal_part_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PACKAGE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              l
              i
              b
              _
              l
              e
              v
              e
              l
              ]
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   P
                   A
                   C
                   K
                   A
                   G
                   E
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pkg_spec_part
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   P
                   A
                   C
                   K
                   A
                   G
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PROCEDURE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              l
              i
              b
              _
              l
              e
              v
              e
              l
              ]
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              formal_part_opt
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   p
                   o
                   p
                   _
                   d
                   e
                   f
                   _
                   i
                   d
                   (
                   )
                   ;
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              FUNCTION
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_designator
             argActionBlock
              [
              l
              i
              b
              _
              l
              e
              v
              e
              l
              ]
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              function_tail
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   g
                   ,
                    
                   G
                   E
                   N
                   E
                   R
                   I
                   C
                   _
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   p
                   o
                   p
                   _
                   d
                   e
                   f
                   _
                   i
                   d
                   (
                   )
                   ;
                    
                   }
              )
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     generic_formal_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              use_clause
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_formal_parameter
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         g
         e
         n
         e
         r
         i
         c
         _
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         \t
         #
         (
         #
         [
         G
         E
         N
         E
         R
         I
         C
         _
         F
         O
         R
         M
         A
         L
         _
         P
         A
         R
         T
         ,
         \n
         \t
         \t
         \t
          
          
          
         "GENERIC_FORMAL_PART"
         ]
         ,
         \n
         \t
         \t
         \t
          
          
         #
         g
         e
         n
         e
         r
         i
         c
         _
         f
         o
         r
         m
         a
         l
         _
         p
         a
         r
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     generic_formal_parameter
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              t
             :
             terminal_
              TYPE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LPAREN
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        BOX
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        RPAREN
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                         
                        (
                        #
                        t
                        ,
                         
                        F
                        O
                        R
                        M
                        A
                        L
                        _
                        D
                        I
                        S
                        C
                        R
                        E
                        T
                        E
                        _
                        T
                        Y
                        P
                        E
                        _
                        D
                        E
                        C
                        L
                        A
                        R
                        A
                        T
                        I
                        O
                        N
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        RANGE
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        BOX
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                         
                        (
                        #
                        t
                        ,
                         
                        F
                        O
                        R
                        M
                        A
                        L
                        _
                        S
                        I
                        G
                        N
                        E
                        D
                        _
                        I
                        N
                        T
                        E
                        G
                        E
                        R
                        _
                        T
                        Y
                        P
                        E
                        _
                        D
                        E
                        C
                        L
                        A
                        R
                        A
                        T
                        I
                        O
                        N
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        MOD
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        BOX
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                         
                        (
                        #
                        t
                        ,
                         
                        F
                        O
                        R
                        M
                        A
                        L
                        _
                        M
                        O
                        D
                        U
                        L
                        A
                        R
                        _
                        T
                        Y
                        P
                        E
                        _
                        D
                        E
                        C
                        L
                        A
                        R
                        A
                        T
                        I
                        O
                        N
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        DELTA
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        BOX
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             DIGITS
                             ast_type_spec
                              !
                          element
                           elementNoOptionSpec
                            terminal_
                             BOX
                             ast_type_spec
                              !
                          element
                           elementNoOptionSpec
                            actionBlock
                             {
                              
                             S
                             e
                             t
                              
                             (
                             #
                             t
                             ,
                              
                             F
                             O
                             R
                             M
                             A
                             L
                             _
                             D
                             E
                             C
                             I
                             M
                             A
                             L
                             _
                             F
                             I
                             X
                             E
                             D
                             _
                             P
                             O
                             I
                             N
                             T
                             _
                             D
                             E
                             C
                             L
                             A
                             R
                             A
                             T
                             I
                             O
                             N
                             )
                             ;
                              
                             }
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            actionBlock
                             {
                              
                             S
                             e
                             t
                              
                             (
                             #
                             t
                             ,
                              
                             F
                             O
                             R
                             M
                             A
                             L
                             _
                             O
                             R
                             D
                             I
                             N
                             A
                             R
                             Y
                             _
                             F
                             I
                             X
                             E
                             D
                             _
                             P
                             O
                             I
                             N
                             T
                             _
                             D
                             E
                             C
                             L
                             A
                             R
                             A
                             T
                             I
                             O
                             N
                             )
                             ;
                              
                             }
                        )
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        DIGITS
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       terminal_
                        BOX
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                         
                        (
                        #
                        t
                        ,
                         
                        F
                        O
                        R
                        M
                        A
                        L
                        _
                        F
                        L
                        O
                        A
                        T
                        I
                        N
                        G
                        _
                        P
                        O
                        I
                        N
                        T
                        _
                        D
                        E
                        C
                        L
                        A
                        R
                        A
                        T
                        I
                        O
                        N
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        array_type_definition
                       argActionBlock
                        [
                        #
                        t
                        ]
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        access_type_definition
                       argActionBlock
                        [
                        #
                        t
                        ]
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        empty_discrim_opt
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        discriminable_type_definition
                       argActionBlock
                        [
                        #
                        t
                        ]
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   discrim_part
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   discriminable_type_definition
                  argActionBlock
                   [
                   #
                   t
                   ]
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              _
              d
              e
              f
              _
              i
              d
              (
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              w
             :
             terminal_
              WITH
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PROCEDURE
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   def_id
                  argActionBlock
                   [
                   f
                   a
                   l
                   s
                   e
                   ]
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   formal_part_opt
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   subprogram_default_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   w
                   ,
                    
                   F
                   O
                   R
                   M
                   A
                   L
                   _
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   FUNCTION
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   def_designator
                  argActionBlock
                   [
                   f
                   a
                   l
                   s
                   e
                   ]
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   function_tail
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   subprogram_default_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   w
                   ,
                    
                   F
                   O
                   R
                   M
                   A
                   L
                   _
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PACKAGE
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   def_id
                  argActionBlock
                   [
                   f
                   a
                   l
                   s
                   e
                   ]
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  terminal_
                   NEW
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   compound_name
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   formal_package_actual_part_opt
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   w
                   ,
                    
                   F
                   O
                   R
                   M
                   A
                   L
                   _
                   P
                   A
                   C
                   K
                   A
                   G
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              _
              d
              e
              f
              _
              i
              d
              (
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parameter_specification
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     discriminable_type_definition
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ABSTRACT
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              NEW
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subtype_ind
           element
            elementNoOptionSpec
             terminal_
              WITH
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         abstract_opt
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
      element
       elementNoOptionSpec
        terminal_
         WITH
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         PRIVATE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         t
         ,
          
         F
         O
         R
         M
         A
         L
         _
         P
         R
         I
         V
         A
         T
         E
         _
         E
         X
         T
         E
         N
         S
         I
         O
         N
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_ind
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         t
         ,
          
         F
         O
         R
         M
         A
         L
         _
         O
         R
         D
         I
         N
         A
         R
         Y
         _
         D
         E
         R
         I
         V
         E
         D
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         abstract_tagged_limited_opt
      element
       elementNoOptionSpec
        terminal_
         PRIVATE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         t
         ,
          
         F
         O
         R
         M
         A
         L
         _
         P
         R
         I
         V
         A
         T
         E
         _
         T
         Y
         P
         E
         _
         D
         E
         C
         L
         A
         R
         A
         T
         I
         O
         N
         )
         ;
          
         }
    ;
   rule_
    id_
     subprogram_default_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BOX
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   name
              )
         )
         ?
    ;
   rule_
    id_
     formal_package_actual_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BOX
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   defining_identifier_list
              )
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
         )
         ?
    ;
   rule_
    id_
     subprog_decl_or_rename_or_inst_or_body
    argActionBlock
     [
     b
     o
     o
     l
      
     l
     i
     b
     _
     l
     e
     v
     e
     l
     ]
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      t
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROCEDURE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         l
         i
         b
         _
         l
         e
         v
         e
         l
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_subp_inst
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              G
              E
              N
              E
              R
              I
              C
              _
              P
              R
              O
              C
              E
              D
              U
              R
              E
              _
              I
              N
              S
              T
              A
              N
              T
              I
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              formal_part_opt
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   p
                   ,
                    
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        separate_or_abstract
                       argActionBlock
                        [
                        #
                        p
                        ]
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        body_part
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        p
                        ,
                         
                        P
                        R
                        O
                        C
                        E
                        D
                        U
                        R
                        E
                        _
                        B
                        O
                        D
                        Y
                        )
                        ;
                         
                        }
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   p
                   o
                   p
                   _
                   d
                   e
                   f
                   _
                   i
                   d
                   (
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                    
                    
                    
                    
                   S
                   e
                   t
                   (
                   #
                   p
                   ,
                    
                   P
                   R
                   O
                   C
                   E
                   D
                   U
                   R
                   E
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
     |
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FUNCTION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_designator
        argActionBlock
         [
         l
         i
         b
         _
         l
         e
         v
         e
         l
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generic_subp_inst
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              f
              ,
               
              G
              E
              N
              E
              R
              I
              C
              _
              F
              U
              N
              C
              T
              I
              O
              N
              _
              I
              N
              S
              T
              A
              N
              T
              I
              A
              T
              I
              O
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              function_tail
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   renames
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                   (
                   #
                   f
                   ,
                    
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   R
                   E
                   N
                   A
                   M
                   I
                   N
                   G
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        separate_or_abstract
                       argActionBlock
                        [
                        #
                        f
                        ]
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        body_part
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        f
                        ,
                         
                        F
                        U
                        N
                        C
                        T
                        I
                        O
                        N
                        _
                        B
                        O
                        D
                        Y
                        )
                        ;
                         
                        }
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   p
                   o
                   p
                   _
                   d
                   e
                   f
                   _
                   i
                   d
                   (
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                    
                    
                    
                    
                   S
                   e
                   t
                   (
                   #
                   f
                   ,
                    
                   F
                   U
                   N
                   C
                   T
                   I
                   O
                   N
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   I
                   O
                   N
                   )
                   ;
                    
                   }
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     body_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declarative_part
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block_body
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
    ;
   rule_
    id_
     declarative_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declarative_item
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         p
         a
         r
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         E
         C
         L
         A
         R
         A
         T
         I
         V
         E
         _
         P
         A
         R
         T
         ,
          
         "DECLARATIVE_PART"
         ]
         ,
         \n
         \t
         \t
          
          
         #
         d
         e
         c
         l
         a
         r
         a
         t
         i
         v
         e
         _
         p
         a
         r
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     declarative_item
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              pkg
             :
             terminal_
              PACKAGE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   body_is
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        separate
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        p
                        k
                        g
                        ,
                         
                        P
                        A
                        C
                        K
                        A
                        G
                        E
                        _
                        B
                        O
                        D
                        Y
                        _
                        S
                        T
                        U
                        B
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        pkg_body_part
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        end_id_opt
                       !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        p
                        k
                        g
                        ,
                         
                        P
                        A
                        C
                        K
                        A
                        G
                        E
                        _
                        B
                        O
                        D
                        Y
                        )
                        ;
                         
                        }
                   )
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   def_id
                  argActionBlock
                   [
                   f
                   a
                   l
                   s
                   e
                   ]
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   spec_decl_part
                  argActionBlock
                   [
                   #
                   p
                   k
                   g
                   ]
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              tsk
             :
             terminal_
              TASK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   body_is
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        separate
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        t
                        s
                        k
                        ,
                         
                        T
                        A
                        S
                        K
                        _
                        B
                        O
                        D
                        Y
                        _
                        S
                        T
                        U
                        B
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        body_part
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        t
                        s
                        k
                        ,
                         
                        T
                        A
                        S
                        K
                        _
                        B
                        O
                        D
                        Y
                        )
                        ;
                         
                        }
                   )
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   task_type_or_single_decl
                  argActionBlock
                   [
                   #
                   t
                   s
                   k
                   ]
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              pro
             :
             terminal_
              PROTECTED
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   body_is
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        separate
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        p
                        r
                        o
                        ,
                         
                        P
                        R
                        O
                        T
                        E
                        C
                        T
                        E
                        D
                        _
                        B
                        O
                        D
                        Y
                        _
                        S
                        T
                        U
                        B
                        )
                        ;
                         
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        prot_op_bodies_opt
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        end_id_opt
                       !
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        S
                        e
                        t
                        (
                        #
                        p
                        r
                        o
                        ,
                         
                        P
                        R
                        O
                        T
                        E
                        C
                        T
                        E
                        D
                        _
                        B
                        O
                        D
                        Y
                        )
                        ;
                         
                        }
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   prot_type_or_single_decl
                  argActionBlock
                   [
                   #
                   p
                   r
                   o
                   ]
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subprog_decl_or_rename_or_inst_or_body
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              decl_common
         )
    ;
   rule_
    id_
     body_is
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         BODY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
    ;
   rule_
    id_
     separate
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEPARATE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     pkg_body_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declarative_part
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block_body_opt
    ;
   rule_
    id_
     block_body_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BEGIN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              handled_stmt_s
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         b
         l
         o
         c
         k
         _
         b
         o
         d
         y
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         B
         L
         O
         C
         K
         _
         B
         O
         D
         Y
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "BLOCK_BODY_OPT"
         ]
         ,
          
         #
         b
         l
         o
         c
         k
         _
         b
         o
         d
         y
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     prot_op_bodies_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              entry_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subprog_decl_or_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         o
         t
         _
         o
         p
         _
         b
         o
         d
         i
         e
         s
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         P
         R
         O
         T
         _
         O
         P
         _
         B
         O
         D
         I
         E
         S
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "PROT_OP_BODIES_OPT"
         ]
         ,
          
         #
         p
         r
         o
         t
         _
         o
         p
         _
         b
         o
         d
         i
         e
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     subprog_decl_or_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROCEDURE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              body_part
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              P
              R
              O
              C
              E
              D
              U
              R
              E
              _
              B
              O
              D
              Y
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              _
              d
              e
              f
              _
              i
              d
              (
              )
              ;
               
              S
              e
              t
              (
              #
              p
              ,
               
              P
              R
              O
              C
              E
              D
              U
              R
              E
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FUNCTION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_designator
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         function_tail
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IS
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              body_part
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              f
              ,
               
              F
              U
              N
              C
              T
              I
              O
              N
              _
              B
              O
              D
              Y
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              _
              d
              e
              f
              _
              i
              d
              (
              )
              ;
               
              S
              e
              t
              (
              #
              f
              ,
               
              F
              U
              N
              C
              T
              I
              O
              N
              _
              D
              E
              C
              L
              A
              R
              A
              T
              I
              O
              N
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     block_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        terminal_
         BEGIN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         handled_stmt_s
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         b
         ,
          
         B
         L
         O
         C
         K
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     handled_stmt_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statements
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         except_handler_part_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         h
         a
         n
         d
         l
         e
         d
         _
         s
         t
         m
         t
         _
         s
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         H
         A
         N
         D
         L
         E
         D
         _
         S
         E
         Q
         U
         E
         N
         C
         E
         _
         O
         F
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         S
         ,
         \n
         \t
         \t
          
          
          
         "HANDLED_SEQUENCE_OF_STATEMENTS"
         ]
         ,
          
         #
         h
         a
         n
         d
         l
         e
         d
         _
         s
         t
         m
         t
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     statements
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
         s
          
         =
          
         #
         (
         #
         [
         S
         E
         Q
         U
         E
         N
         C
         E
         _
         O
         F
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         S
         ,
         \n
         \t
         \t
         \t
          
          
          
          
         "SEQUENCE_OF_STATEMENTS"
         ]
         ,
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     statement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_label_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              null_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exit_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              return_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              goto_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              delay_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              abort_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              raise_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              requeue_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              accept_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              select_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              if_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              case_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              loop_stmt
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              block
           element
            elementNoOptionSpec
             terminal_
              END
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement_identifier
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   loop_stmt
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   id_opt
                  !
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   block
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   end_id_opt
                  !
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                    !
              )
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              call_or_assignment
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
          
         =
          
         #
         (
         #
         [
         S
         T
         A
         T
         E
         M
         E
         N
         T
         ,
          
         "STATEMENT"
         ]
         ,
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     def_label_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LT_LT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              GT_GT
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         e
         f
         _
         l
         a
         b
         e
         l
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         L
         A
         B
         E
         L
         _
         O
         P
         T
         ,
          
         "LABEL_OPT"
         ]
         ,
          
         #
         d
         e
         f
         _
         l
         a
         b
         e
         l
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     null_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         NuLL
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         N
         U
         L
         L
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     if_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         IF
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         cond_clause
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         elsifs_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         else_opt
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         IF
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         I
         F
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     cond_clause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         condition
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         THEN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statements
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         c
         ,
          
         C
         O
         N
         D
         _
         C
         L
         A
         U
         S
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     condition
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     elsifs_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ELSIF
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              cond_clause
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         l
         s
         i
         f
         s
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         E
         L
         S
         I
         F
         S
         _
         O
         P
         T
         ,
          
         "ELSIFS_OPT"
         ]
         ,
          
         #
         e
         l
         s
         i
         f
         s
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     else_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ELSE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statements
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         l
         s
         e
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         E
         L
         S
         E
         _
         O
         P
         T
         ,
          
         "ELSE_OPT"
         ]
         ,
          
         #
         e
         l
         s
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     case_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         CASE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         alternative_s
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         CASE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         C
         A
         S
         E
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     alternative_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              case_statement_alternative
         )
         +
    ;
   rule_
    id_
     case_statement_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         WHEN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         choice_s
      element
       elementNoOptionSpec
        terminal_
         RIGHT_SHAFT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statements
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         C
         A
         S
         E
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     loop_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         iteration_scheme_opt
      element
       elementNoOptionSpec
        terminal_
         LOOP
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statements
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         LOOP
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         l
         o
         o
         p
         _
         s
         t
         m
         t
          
         =
          
         #
         (
         #
         [
         L
         O
         O
         P
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         ,
          
         "LOOP_STATEMENT"
         ]
         ,
          
         #
         l
         o
         o
         p
         _
         s
         t
         m
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     iteration_scheme_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WHILE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              condition
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              FOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              reverse_opt
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrete_subtype_definition
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         i
         t
         e
         r
         a
         t
         i
         o
         n
         _
         s
         c
         h
         e
         m
         e
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         I
         T
         E
         R
         A
         T
         I
         O
         N
         _
         S
         C
         H
         E
         M
         E
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "ITERATION_SCHEME_OPT"
         ]
         ,
          
         #
         i
         t
         e
         r
         a
         t
         i
         o
         n
         _
         s
         c
         h
         e
         m
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     reverse_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              REVERSE
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         r
         e
         v
         e
         r
         s
         e
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         r
         e
         v
         e
         r
         s
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     id_opt
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      e
      n
      d
      i
      d
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         endid
        =
        rule_ref_or_keyword_as
         definable_operator_symbol
      element
       elementNoOptionSpec
        actionBlock
         {
          
         e
         n
         d
         _
         i
         d
         _
         m
         a
         t
         c
         h
         e
         s
         _
         d
         e
         f
         _
         i
         d
          
         (
         e
         n
         d
         i
         d
         )
          
         }
        ?
     |
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        actionBlock
         {
          
         e
         n
         d
         _
         i
         d
         _
         m
         a
         t
         c
         h
         e
         s
         _
         d
         e
         f
         _
         i
         d
          
         (
         #
         n
         )
          
         }
        ?
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         _
         d
         e
         f
         _
         i
         d
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     end_id_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         id_opt
    ;
   rule_
    id_
     statement_identifier
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         u
         s
         h
         _
         d
         e
         f
         _
         i
         d
         (
         #
         n
         )
         ;
          
         }
    ;
   rule_
    id_
     block
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declare_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block_body
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         b
         l
         o
         c
         k
          
         =
          
         #
         (
         #
         [
         B
         L
         O
         C
         K
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         ,
          
         "BLOCK_STATEMENT"
         ]
         ,
          
         #
         b
         l
         o
         c
         k
         )
         ;
          
         }
    ;
   rule_
    id_
     declare_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DECLARE
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declarative_part
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         e
         c
         l
         a
         r
         e
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         D
         E
         C
         L
         A
         R
         E
         _
         O
         P
         T
         ,
          
         "DECLARE_OPT"
         ]
         ,
          
         #
         d
         e
         c
         l
         a
         r
         e
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     exit_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         EXIT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              label_name
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WHEN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              condition
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         E
         X
         I
         T
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     label_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
    ;
   rule_
    id_
     return_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         RETURN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         R
         E
         T
         U
         R
         N
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     goto_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         GOTO
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         label_name
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         ,
          
         G
         O
         T
         O
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     call_or_assignment
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              c
              a
              l
              l
              _
              o
              r
              _
              a
              s
              s
              i
              g
              n
              m
              e
              n
              t
               
              =
              \n
              \t
              \t
              \t
              #
              (
              #
              [
              A
              S
              S
              I
              G
              N
              M
              E
              N
              T
              _
              S
              T
              A
              T
              E
              M
              E
              N
              T
              ,
              \n
              \t
              \t
              \t
               
               
               
              "ASSIGNMENT_STATEMENT"
              ]
              ,
               
              #
              c
              a
              l
              l
              _
              o
              r
              _
              a
              s
              s
              i
              g
              n
              m
              e
              n
              t
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              c
              a
              l
              l
              _
              o
              r
              _
              a
              s
              s
              i
              g
              n
              m
              e
              n
              t
               
              =
              \n
              \t
              \t
              \t
              #
              (
              #
              [
              C
              A
              L
              L
              _
              S
              T
              A
              T
              E
              M
              E
              N
              T
              ,
              \n
              \t
              \t
              \t
               
               
               
              "CALL_STATEMENT"
              ]
              ,
               
              #
              c
              a
              l
              l
              _
              o
              r
              _
              a
              s
              s
              i
              g
              n
              m
              e
              n
              t
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     entry_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         e
        :
        terminal_
         ENTRY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_body_formal_part
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_barrier
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_part
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         e
         ,
          
         E
         N
         T
         R
         Y
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     entry_body_formal_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_index_spec_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
    ;
   rule_
    id_
     entry_index_spec_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   FOR
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              FOR
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              def_id
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              discrete_subtype_definition
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
          |
          alternative
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         n
         t
         r
         y
         _
         i
         n
         d
         e
         x
         _
         s
         p
         e
         c
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         N
         T
         R
         Y
         _
         I
         N
         D
         E
         X
         _
         S
         P
         E
         C
         I
         F
         I
         C
         A
         T
         I
         O
         N
         ,
         \n
         \t
         \t
          
          
          
         "ENTRY_INDEX_SPECIFICATION"
         ]
         ,
          
         #
         e
         n
         t
         r
         y
         _
         i
         n
         d
         e
         x
         _
         s
         p
         e
         c
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     entry_barrier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         WHEN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         condition
    ;
   rule_
    id_
     entry_call_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         n
         t
         r
         y
         _
         c
         a
         l
         l
         _
         s
         t
         m
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         N
         T
         R
         Y
         _
         C
         A
         L
         L
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         ,
         \n
         \t
         \t
          
          
          
         "ENTRY_CALL_STATEMENT"
         ]
         ,
          
         #
         e
         n
         t
         r
         y
         _
         c
         a
         l
         l
         _
         s
         t
         m
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     accept_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         ACCEPT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_index_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DO
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              handled_stmt_s
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              end_id_opt
             !
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              _
              d
              e
              f
              _
              i
              d
              (
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         a
         ,
          
         A
         C
         C
         E
         P
         T
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     entry_index_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   expression
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
          |
          alternative
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         n
         t
         r
         y
         _
         i
         n
         d
         e
         x
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         N
         T
         R
         Y
         _
         I
         N
         D
         E
         X
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "ENTRY_INDEX_OPT"
         ]
         ,
          
         #
         e
         n
         t
         r
         y
         _
         i
         n
         d
         e
         x
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     delay_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         d
        :
        terminal_
         DELAY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         until_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         d
         ,
          
         D
         E
         L
         A
         Y
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     until_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              UNTIL
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         u
         n
         t
         i
         l
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         u
         n
         t
         i
         l
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     select_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SELECT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   triggering_alternative
                element
                 elementNoOptionSpec
                  terminal_
                   THEN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   ABORT
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              triggering_alternative
           element
            elementNoOptionSpec
             terminal_
              THEN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              ABORT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              abortable_part
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
               
              (
              #
              s
              ,
               
              A
              S
              Y
              N
              C
              H
              R
              O
              N
              O
              U
              S
              _
              S
              E
              L
              E
              C
              T
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              selective_accept
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
               
              (
              #
              s
              ,
               
              S
              E
              L
              E
              C
              T
              I
              V
              E
              _
              A
              C
              C
              E
              P
              T
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              entry_call_alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   OR
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   delay_alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                    
                   (
                   #
                   s
                   ,
                    
                   T
                   I
                   M
                   E
                   D
                   _
                   E
                   N
                   T
                   R
                   Y
                   _
                   C
                   A
                   L
                   L
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ELSE
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   statements
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                    
                   (
                   #
                   s
                   ,
                    
                   C
                   O
                   N
                   D
                   I
                   T
                   I
                   O
                   N
                   A
                   L
                   _
                   E
                   N
                   T
                   R
                   Y
                   _
                   C
                   A
                   L
                   L
                   )
                   ;
                    
                   }
              )
         )
      element
       elementNoOptionSpec
        terminal_
         END
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SELECT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     triggering_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              delay_stmt
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              entry_call_stmt
         )
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stmts_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         t
         r
         i
         g
         g
         e
         r
         i
         n
         g
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         T
         R
         I
         G
         G
         E
         R
         I
         N
         G
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         ,
         \n
         \t
         \t
          
          
          
         "TRIGGERING_ALTERNATIVE"
         ]
         ,
          
         #
         t
         r
         i
         g
         g
         e
         r
         i
         n
         g
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
         )
         ;
          
         }
    ;
   rule_
    id_
     abortable_part
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stmts_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         b
         o
         r
         t
         a
         b
         l
         e
         _
         p
         a
         r
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         A
         B
         O
         R
         T
         A
         B
         L
         E
         _
         P
         A
         R
         T
         ,
         \n
         \t
         \t
          
          
          
         "ABORTABLE_PART"
         ]
         ,
          
         #
         a
         b
         o
         r
         t
         a
         b
         l
         e
         _
         p
         a
         r
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     entry_call_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         entry_call_stmt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stmts_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         n
         t
         r
         y
         _
         c
         a
         l
         l
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         N
         T
         R
         Y
         _
         C
         A
         L
         L
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         ,
         \n
         \t
         \t
          
          
          
         "ENTRY_CALL_ALTERNATIVE"
         ]
         ,
          
         #
         e
         n
         t
         r
         y
         _
         c
         a
         l
         l
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
         )
         ;
          
         }
    ;
   rule_
    id_
     selective_accept
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         guard_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         select_alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         or_select_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         else_opt
    ;
   rule_
    id_
     guard_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WHEN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              condition
           element
            elementNoOptionSpec
             terminal_
              RIGHT_SHAFT
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   pragma
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         g
         u
         a
         r
         d
         _
         o
         p
         t
          
         =
          
         #
         (
         #
         [
         G
         U
         A
         R
         D
         _
         O
         P
         T
         ,
          
         "GUARD_OPT"
         ]
         ,
          
         #
         g
         u
         a
         r
         d
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     select_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         accept_alternative
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         delay_alternative
     |
     alternative
      element
       elementNoOptionSpec
        id_
         t
        :
        terminal_
         TERMINATE
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         t
         ,
          
         T
         E
         R
         M
         I
         N
         A
         T
         E
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         )
         ;
          
         }
    ;
   rule_
    id_
     accept_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         accept_stmt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stmts_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         c
         c
         e
         p
         t
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         A
         C
         C
         E
         P
         T
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         ,
         \n
         \t
         \t
          
          
          
         "ACCEPT_ALTERNATIVE"
         ]
         ,
          
         #
         a
         c
         c
         e
         p
         t
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
         )
         ;
          
         }
    ;
   rule_
    id_
     delay_alternative
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         delay_stmt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stmts_opt
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         d
         e
         l
         a
         y
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         D
         E
         L
         A
         Y
         _
         A
         L
         T
         E
         R
         N
         A
         T
         I
         V
         E
         ,
         \n
         \t
         \t
          
          
          
         "DELAY_ALTERNATIVE"
         ]
         ,
          
         #
         d
         e
         l
         a
         y
         _
         a
         l
         t
         e
         r
         n
         a
         t
         i
         v
         e
         )
         ;
          
         }
    ;
   rule_
    id_
     stmts_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pragma
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
    ;
   rule_
    id_
     or_select_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OR
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              guard_opt
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              select_alternative
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         r
         _
         s
         e
         l
         e
         c
         t
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         O
         R
         _
         S
         E
         L
         E
         C
         T
         _
         O
         P
         T
         ,
          
         "OR_SELECT_OPT"
         ]
         ,
          
         #
         o
         r
         _
         s
         e
         l
         e
         c
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     abort_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         ABORT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              name
         )
         *
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         a
         ,
          
         A
         B
         O
         R
         T
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     except_handler_part_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              EXCEPTION
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   exception_handler
              )
              +
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         x
         c
         e
         p
         t
         _
         h
         a
         n
         d
         l
         e
         r
         _
         p
         a
         r
         t
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         E
         X
         C
         E
         P
         T
         _
         H
         A
         N
         D
         L
         E
         R
         _
         P
         A
         R
         T
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "EXCEPT_HANDLER_PART_OPT"
         ]
         ,
          
         #
         e
         x
         c
         e
         p
         t
         _
         h
         a
         n
         d
         l
         e
         r
         _
         p
         a
         r
         t
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     exception_handler
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         w
        :
        terminal_
         WHEN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier_colon_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         except_choice_s
      element
       elementNoOptionSpec
        terminal_
         RIGHT_SHAFT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statements
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         w
         ,
          
         E
         X
         C
         E
         P
         T
         I
         O
         N
         _
         H
         A
         N
         D
         L
         E
         R
         )
         ;
          
         }
    ;
   rule_
    id_
     identifier_colon_opt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENTIFIER
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         i
         d
         e
         n
         t
         i
         f
         i
         e
         r
         _
         c
         o
         l
         o
         n
         _
         o
         p
         t
          
         =
         \n
         \t
         \t
         #
         (
         #
         [
         I
         D
         E
         N
         T
         I
         F
         I
         E
         R
         _
         C
         O
         L
         O
         N
         _
         O
         P
         T
         ,
         \n
         \t
         \t
          
          
          
         "IDENTIFIER_COLON_OPT"
         ]
         ,
          
         #
         i
         d
         e
         n
         t
         i
         f
         i
         e
         r
         _
         c
         o
         l
         o
         n
         _
         o
         p
         t
         )
         ;
          
         }
    ;
   rule_
    id_
     except_choice_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exception_choice
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PIPE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exception_choice
         )
         *
    ;
   rule_
    id_
     exception_choice
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OTHERS
         ast_type_spec
    ;
   rule_
    id_
     raise_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         RAISE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              compound_name
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         r
         ,
          
         R
         A
         I
         S
         E
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     requeue_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         REQUEUE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WITH
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              ABORT
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
          
         (
         #
         r
         ,
          
         R
         E
         Q
         U
         E
         U
         E
         _
         S
         T
         A
         T
         E
         M
         E
         N
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     operator_call
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         cs
        :
        terminal_
         CHAR_STRING
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         operator_call_tail
        argActionBlock
         [
         #
         c
         s
         ]
    ;
   rule_
    id_
     operator_call_tail
    argActionBlock
     [
     R
     e
     f
     A
     d
     a
     A
     S
     T
      
     o
     p
     s
     t
     r
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         i
         s
         _
         o
         p
         e
         r
         a
         t
         o
         r
         _
         s
         y
         m
         b
         o
         l
         (
         o
         p
         s
         t
         r
         -
         >
         g
         e
         t
         T
         e
         x
         t
         (
         )
         .
         c
         _
         s
         t
         r
         (
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         value_s
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         o
         p
         s
         t
         r
         -
         >
         s
         e
         t
         T
         y
         p
         e
         (
         O
         P
         E
         R
         A
         T
         O
         R
         _
         S
         Y
         M
         B
         O
         L
         )
         ;
          
         }
    ;
   rule_
    id_
     value_s
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         value
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         v
         a
         l
         u
         e
         _
         s
          
         =
          
         #
         (
         #
         [
         V
         A
         L
         U
         E
         S
         ,
          
         "VALUES"
         ]
         ,
          
         #
         v
         a
         l
         u
         e
         _
         s
         )
         ;
          
         }
    ;
   rule_
    id_
     expression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         relation
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              AND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   THEN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                    
                   (
                   #
                   a
                   ,
                    
                   A
                   N
                   D
                   _
                   T
                   H
                   E
                   N
                   )
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relation
          |
          alternative
           element
            elementNoOptionSpec
             id_
              o
             :
             terminal_
              OR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ELSE
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   S
                   e
                   t
                    
                   (
                   #
                   o
                   ,
                    
                   O
                   R
                   _
                   E
                   L
                   S
                   E
                   )
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relation
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              XOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relation
         )
         *
    ;
   rule_
    id_
     relation
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_or_mark
          |
          alternative
           element
            elementNoOptionSpec
             id_
              n
             :
             terminal_
              NOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range_or_mark
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
               
              (
              #
              n
              ,
               
              N
              O
              T
              _
              I
              N
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              EQ
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LT_
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              GT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              GE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              simple_expression
         )
         ?
    ;
   rule_
    id_
     range_or_mark
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         range
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subtype_mark
    ;
   rule_
    id_
     simple_expression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         signed_term
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PLUS
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              signed_term
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              MINUS
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              signed_term
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CONCAT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              signed_term
         )
         *
    ;
   rule_
    id_
     signed_term
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PLUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         term
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         U
         N
         A
         R
         Y
         _
         P
         L
         U
         S
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         m
        :
        terminal_
         MINUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         term
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         m
         ,
          
         U
         N
         A
         R
         Y
         _
         M
         I
         N
         U
         S
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         term
    ;
   rule_
    id_
     term
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         factor
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              STAR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DIV
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              MOD
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              REM
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
         )
         *
    ;
   rule_
    id_
     factor
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              primary
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ABS
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              primary
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              primary
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EXPON
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   primary
              )
              ?
         )
    ;
   rule_
    id_
     primary
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              name_or_qualified
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parenthesized_primary
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              allocator
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NuLL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NUMERIC_LIT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHARACTER_LITERAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             id_
              cs
             :
             terminal_
              CHAR_STRING
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   operator_call_tail
                  argActionBlock
                   [
                   #
                   c
                   s
                   ]
              )
              ?
         )
    ;
   rule_
    id_
     name_or_qualified
    ruleAction
     actionBlock
      {
       
      R
      e
      f
      A
      d
      a
      A
      S
      T
       
      d
      u
      m
      m
      y
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ALL
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IDENTIFIER
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   CHARACTER_LITERAL
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   dummy
                  =
                  rule_ref_or_keyword_as
                   is_operator
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              p
             :
             terminal_
              LPAREN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              value_s
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              e
              t
              (
              #
              p
              ,
               
              I
              N
              D
              E
              X
              E
              D
              _
              C
              O
              M
              P
              O
              N
              E
              N
              T
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              TIC
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   parenthesized_primary
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   attribute_id
              )
         )
         *
    ;
   rule_
    id_
     allocator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         NEW
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         name_or_qualified
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         n
         ,
          
         A
         L
         L
         O
         C
         A
         T
         O
         R
         )
         ;
          
         }
    ;
   rule_
    id_
     subunit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         sep
        :
        terminal_
         SEPARATE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_name
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         s
         e
         p
         ,
          
         S
         U
         B
         U
         N
         I
         T
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subprogram_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              package_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              task_body
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              protected_body
         )
    ;
   rule_
    id_
     subprogram_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROCEDURE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         def_id
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         formal_part_opt
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_part
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         P
         R
         O
         C
         E
         D
         U
         R
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FUNCTION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         function_tail
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_part
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         f
         ,
          
         F
         U
         N
         C
         T
         I
         O
         N
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     package_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PACKAGE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_is
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         pkg_body_part
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         P
         A
         C
         K
         A
         G
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     task_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         t
        :
        terminal_
         TASK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_is
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_part
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         t
         ,
          
         T
         A
         S
         K
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
   rule_
    id_
     protected_body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PROTECTED
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body_is
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         prot_op_bodies_opt
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         end_id_opt
        !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         S
         e
         t
         (
         #
         p
         ,
          
         P
         R
         O
         T
         E
         C
         T
         E
         D
         _
         B
         O
         D
         Y
         )
         ;
          
         }
    ;
 classDef
  actionBlock
   {
   \n
   #
   i
   n
   c
   l
   u
   d
   e
    
   "preambles.h"
   \n
   }
  lexerSpec
   class
   id_
    AdaLexer
   extends
   Lexer
   ;
   lexerOptionsSpec
    options
    {
    lexerOption
     id_
      charVocabulary
     =
     lexerOptionValue
      charSet
       setBlockElement
        '\3'
        ..
        '\377'
     ;
    lexerOption
     id_
      exportVocab
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         Ada
     ;
    lexerOption
     id_
      testLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      k
     =
     lexerOptionValue
      optionValue
       4
     ;
    lexerOption
     id_
      caseSensitive
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      caseSensitiveLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      defaultErrorHandler
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         true
     ;
    }
   tokensSpec
    tokens
    {
    tokenEntry
     ABORT
     =
     "abort"
     ;
    tokenEntry
     ABS
     =
     "abs"
     ;
    tokenEntry
     ABSTRACT
     =
     "abstract"
     ;
    tokenEntry
     ACCEPT
     =
     "accept"
     ;
    tokenEntry
     ACCESS
     =
     "access"
     ;
    tokenEntry
     ALIASED
     =
     "aliased"
     ;
    tokenEntry
     ALL
     =
     "all"
     ;
    tokenEntry
     AND
     =
     "and"
     ;
    tokenEntry
     ARRAY
     =
     "array"
     ;
    tokenEntry
     AT
     =
     "at"
     ;
    tokenEntry
     BEGIN
     =
     "begin"
     ;
    tokenEntry
     BODY
     =
     "body"
     ;
    tokenEntry
     CASE
     =
     "case"
     ;
    tokenEntry
     CONSTANT
     =
     "constant"
     ;
    tokenEntry
     DECLARE
     =
     "declare"
     ;
    tokenEntry
     DELAY
     =
     "delay"
     ;
    tokenEntry
     DELTA
     =
     "delta"
     ;
    tokenEntry
     DIGITS
     =
     "digits"
     ;
    tokenEntry
     DO
     =
     "do"
     ;
    tokenEntry
     ELSE
     =
     "else"
     ;
    tokenEntry
     ELSIF
     =
     "elsif"
     ;
    tokenEntry
     END
     =
     "end"
     ;
    tokenEntry
     ENTRY
     =
     "entry"
     ;
    tokenEntry
     EXCEPTION
     =
     "exception"
     ;
    tokenEntry
     EXIT
     =
     "exit"
     ;
    tokenEntry
     FOR
     =
     "for"
     ;
    tokenEntry
     FUNCTION
     =
     "function"
     ;
    tokenEntry
     GENERIC
     =
     "generic"
     ;
    tokenEntry
     GOTO
     =
     "goto"
     ;
    tokenEntry
     IF
     =
     "if"
     ;
    tokenEntry
     IN
     =
     "in"
     ;
    tokenEntry
     IS
     =
     "is"
     ;
    tokenEntry
     LIMITED
     =
     "limited"
     ;
    tokenEntry
     LOOP
     =
     "loop"
     ;
    tokenEntry
     MOD
     =
     "mod"
     ;
    tokenEntry
     NEW
     =
     "new"
     ;
    tokenEntry
     NOT
     =
     "not"
     ;
    tokenEntry
     NuLL
     =
     "null"
     ;
    tokenEntry
     OF
     =
     "of"
     ;
    tokenEntry
     OR
     =
     "or"
     ;
    tokenEntry
     OTHERS
     =
     "others"
     ;
    tokenEntry
     OUT
     =
     "out"
     ;
    tokenEntry
     PACKAGE
     =
     "package"
     ;
    tokenEntry
     PRAGMA
     =
     "pragma"
     ;
    tokenEntry
     PRIVATE
     =
     "private"
     ;
    tokenEntry
     PROCEDURE
     =
     "procedure"
     ;
    tokenEntry
     PROTECTED
     =
     "protected"
     ;
    tokenEntry
     RAISE
     =
     "raise"
     ;
    tokenEntry
     RANGE
     =
     "range"
     ;
    tokenEntry
     RECORD
     =
     "record"
     ;
    tokenEntry
     REM
     =
     "rem"
     ;
    tokenEntry
     RENAMES
     =
     "renames"
     ;
    tokenEntry
     REQUEUE
     =
     "requeue"
     ;
    tokenEntry
     RETURN
     =
     "return"
     ;
    tokenEntry
     REVERSE
     =
     "reverse"
     ;
    tokenEntry
     SELECT
     =
     "select"
     ;
    tokenEntry
     SEPARATE
     =
     "separate"
     ;
    tokenEntry
     SUBTYPE
     =
     "subtype"
     ;
    tokenEntry
     TAGGED
     =
     "tagged"
     ;
    tokenEntry
     TASK
     =
     "task"
     ;
    tokenEntry
     TERMINATE
     =
     "terminate"
     ;
    tokenEntry
     THEN
     =
     "then"
     ;
    tokenEntry
     TYPE
     =
     "type"
     ;
    tokenEntry
     UNTIL
     =
     "until"
     ;
    tokenEntry
     USE
     =
     "use"
     ;
    tokenEntry
     WHEN
     =
     "when"
     ;
    tokenEntry
     WHILE
     =
     "while"
     ;
    tokenEntry
     WITH
     =
     "with"
     ;
    tokenEntry
     XOR
     =
     "xor"
     ;
    tokenEntry
     ABORTABLE_PART
     ;
    tokenEntry
     ABORT_STATEMENT
     ;
    tokenEntry
     ABSTRACT_SUBPROGRAM_DECLARATION
     ;
    tokenEntry
     ACCEPT_ALTERNATIVE
     ;
    tokenEntry
     ACCEPT_STATEMENT
     ;
    tokenEntry
     ALLOCATOR
     ;
    tokenEntry
     ASSIGNMENT_STATEMENT
     ;
    tokenEntry
     ASYNCHRONOUS_SELECT
     ;
    tokenEntry
     ATTRIBUTE_DEFINITION_CLAUSE
     ;
    tokenEntry
     AT_CLAUSE
     ;
    tokenEntry
     BLOCK_STATEMENT
     ;
    tokenEntry
     CASE_STATEMENT
     ;
    tokenEntry
     CASE_STATEMENT_ALTERNATIVE
     ;
    tokenEntry
     CODE_STATEMENT
     ;
    tokenEntry
     COMPONENT_DECLARATION
     ;
    tokenEntry
     COMPONENT_LIST
     ;
    tokenEntry
     CONDITION
     ;
    tokenEntry
     CONDITIONAL_ENTRY_CALL
     ;
    tokenEntry
     CONTEXT_CLAUSE
     ;
    tokenEntry
     DECLARATIVE_ITEM
     ;
    tokenEntry
     DECLARATIVE_PART
     ;
    tokenEntry
     DEFINING_IDENTIFIER_LIST
     ;
    tokenEntry
     DELAY_ALTERNATIVE
     ;
    tokenEntry
     DELAY_STATEMENT
     ;
    tokenEntry
     DELTA_CONSTRAINT
     ;
    tokenEntry
     DIGITS_CONSTRAINT
     ;
    tokenEntry
     DISCRETE_RANGE
     ;
    tokenEntry
     DISCRIMINANT_ASSOCIATION
     ;
    tokenEntry
     DISCRIMINANT_CONSTRAINT
     ;
    tokenEntry
     DISCRIMINANT_SPECIFICATION
     ;
    tokenEntry
     ENTRY_BODY
     ;
    tokenEntry
     ENTRY_CALL_ALTERNATIVE
     ;
    tokenEntry
     ENTRY_CALL_STATEMENT
     ;
    tokenEntry
     ENTRY_DECLARATION
     ;
    tokenEntry
     ENTRY_INDEX_SPECIFICATION
     ;
    tokenEntry
     ENUMERATION_REPESENTATION_CLAUSE
     ;
    tokenEntry
     EXCEPTION_DECLARATION
     ;
    tokenEntry
     EXCEPTION_HANDLER
     ;
    tokenEntry
     EXCEPTION_RENAMING_DECLARATION
     ;
    tokenEntry
     EXIT_STATEMENT
     ;
    tokenEntry
     FORMAL_PACKAGE_DECLARATION
     ;
    tokenEntry
     FORMAL_TYPE_DECLARATION
     ;
    tokenEntry
     FULL_TYPE_DECLARATION
     ;
    tokenEntry
     GENERIC_FORMAL_PART
     ;
    tokenEntry
     GENERIC_INSTANTIATION
     ;
    tokenEntry
     GENERIC_PACKAGE_DECLARATION
     ;
    tokenEntry
     GENERIC_RENAMING_DECLARATION
     ;
    tokenEntry
     GENERIC_SUBPROGRAM_DECLARATION
     ;
    tokenEntry
     GOTO_STATEMENT
     ;
    tokenEntry
     HANDLED_SEQUENCE_OF_STATEMENTS
     ;
    tokenEntry
     IF_STATEMENT
     ;
    tokenEntry
     INCOMPLETE_TYPE_DECLARATION
     ;
    tokenEntry
     INDEXED_COMPONENT
     ;
    tokenEntry
     INDEX_CONSTRAINT
     ;
    tokenEntry
     LIBRARY_ITEM
     ;
    tokenEntry
     LOOP_STATEMENT
     ;
    tokenEntry
     NAME
     ;
    tokenEntry
     NULL_STATEMENT
     ;
    tokenEntry
     NUMBER_DECLARATION
     ;
    tokenEntry
     OBJECT_DECLARATION
     ;
    tokenEntry
     OBJECT_RENAMING_DECLARATION
     ;
    tokenEntry
     OPERATOR_SYMBOL
     ;
    tokenEntry
     PACKAGE_BODY
     ;
    tokenEntry
     PACKAGE_BODY_STUB
     ;
    tokenEntry
     PACKAGE_RENAMING_DECLARATION
     ;
    tokenEntry
     PACKAGE_SPECIFICATION
     ;
    tokenEntry
     PARAMETER_SPECIFICATION
     ;
    tokenEntry
     PREFIX
     ;
    tokenEntry
     PRIMARY
     ;
    tokenEntry
     PRIVATE_EXTENSION_DECLARATION
     ;
    tokenEntry
     PRIVATE_TYPE_DECLARATION
     ;
    tokenEntry
     PROCEDURE_CALL_STATEMENT
     ;
    tokenEntry
     PROTECTED_BODY
     ;
    tokenEntry
     PROTECTED_BODY_STUB
     ;
    tokenEntry
     PROTECTED_TYPE_DECLARATION
     ;
    tokenEntry
     RAISE_STATEMENT
     ;
    tokenEntry
     RANGE_ATTRIBUTE_REFERENCE
     ;
    tokenEntry
     RECORD_REPRESENTATION_CLAUSE
     ;
    tokenEntry
     REQUEUE_STATEMENT
     ;
    tokenEntry
     RETURN_STATEMENT
     ;
    tokenEntry
     SELECTIVE_ACCEPT
     ;
    tokenEntry
     SELECT_ALTERNATIVE
     ;
    tokenEntry
     SELECT_STATEMENT
     ;
    tokenEntry
     SEQUENCE_OF_STATEMENTS
     ;
    tokenEntry
     SINGLE_PROTECTED_DECLARATION
     ;
    tokenEntry
     SINGLE_TASK_DECLARATION
     ;
    tokenEntry
     STATEMENT
     ;
    tokenEntry
     SUBPROGRAM_BODY
     ;
    tokenEntry
     SUBPROGRAM_BODY_STUB
     ;
    tokenEntry
     SUBPROGRAM_DECLARATION
     ;
    tokenEntry
     SUBPROGRAM_RENAMING_DECLARATION
     ;
    tokenEntry
     SUBTYPE_DECLARATION
     ;
    tokenEntry
     SUBTYPE_INDICATION
     ;
    tokenEntry
     SUBTYPE_MARK
     ;
    tokenEntry
     SUBUNIT
     ;
    tokenEntry
     TASK_BODY
     ;
    tokenEntry
     TASK_BODY_STUB
     ;
    tokenEntry
     TASK_TYPE_DECLARATION
     ;
    tokenEntry
     TERMINATE_ALTERNATIVE
     ;
    tokenEntry
     TIMED_ENTRY_CALL
     ;
    tokenEntry
     TRIGGERING_ALTERNATIVE
     ;
    tokenEntry
     TYPE_DECLARATION
     ;
    tokenEntry
     USE_CLAUSE
     ;
    tokenEntry
     USE_TYPE_CLAUSE
     ;
    tokenEntry
     VARIANT
     ;
    tokenEntry
     VARIANT_PART
     ;
    tokenEntry
     WITH_CLAUSE
     ;
    tokenEntry
     ABSTRACT_FUNCTION_DECLARATION
     ;
    tokenEntry
     ABSTRACT_PROCEDURE_DECLARATION
     ;
    tokenEntry
     ACCESS_TO_FUNCTION_DECLARATION
     ;
    tokenEntry
     ACCESS_TO_OBJECT_DECLARATION
     ;
    tokenEntry
     ACCESS_TO_PROCEDURE_DECLARATION
     ;
    tokenEntry
     ACCESS_TYPE_DECLARATION
     ;
    tokenEntry
     ARRAY_OBJECT_DECLARATION
     ;
    tokenEntry
     ARRAY_TYPE_DECLARATION
     ;
    tokenEntry
     AND_THEN
     ;
    tokenEntry
     BASIC_DECLARATIVE_ITEMS_OPT
     ;
    tokenEntry
     BLOCK_BODY
     ;
    tokenEntry
     BLOCK_BODY_OPT
     ;
    tokenEntry
     CALL_STATEMENT
     ;
    tokenEntry
     COMPONENT_CLAUSES_OPT
     ;
    tokenEntry
     COMPONENT_ITEMS
     ;
    tokenEntry
     COND_CLAUSE
     ;
    tokenEntry
     DECIMAL_FIXED_POINT_DECLARATION
     ;
    tokenEntry
     DECLARE_OPT
     ;
    tokenEntry
     DERIVED_RECORD_EXTENSION
     ;
    tokenEntry
     DERIVED_TYPE_DECLARATION
     ;
    tokenEntry
     DISCRETE_SUBTYPE_DEF_OPT
     ;
    tokenEntry
     DISCRIMINANT_SPECIFICATIONS
     ;
    tokenEntry
     DISCRIM_PART_OPT
     ;
    tokenEntry
     ELSE_OPT
     ;
    tokenEntry
     ELSIFS_OPT
     ;
    tokenEntry
     ENTRY_INDEX_OPT
     ;
    tokenEntry
     ENUMERATION_TYPE_DECLARATION
     ;
    tokenEntry
     EXCEPT_HANDLER_PART_OPT
     ;
    tokenEntry
     EXTENSION_OPT
     ;
    tokenEntry
     FLOATING_POINT_DECLARATION
     ;
    tokenEntry
     FORMAL_DECIMAL_FIXED_POINT_DECLARATION
     ;
    tokenEntry
     FORMAL_DISCRETE_TYPE_DECLARATION
     ;
    tokenEntry
     FORMAL_FLOATING_POINT_DECLARATION
     ;
    tokenEntry
     FORMAL_FUNCTION_DECLARATION
     ;
    tokenEntry
     FORMAL_MODULAR_TYPE_DECLARATION
     ;
    tokenEntry
     FORMAL_ORDINARY_DERIVED_TYPE_DECLARATION
     ;
    tokenEntry
     FORMAL_ORDINARY_FIXED_POINT_DECLARATION
     ;
    tokenEntry
     FORMAL_PART_OPT
     ;
    tokenEntry
     FORMAL_PRIVATE_EXTENSION_DECLARATION
     ;
    tokenEntry
     FORMAL_PRIVATE_TYPE_DECLARATION
     ;
    tokenEntry
     FORMAL_PROCEDURE_DECLARATION
     ;
    tokenEntry
     FORMAL_SIGNED_INTEGER_TYPE_DECLARATION
     ;
    tokenEntry
     FUNCTION_BODY
     ;
    tokenEntry
     FUNCTION_BODY_STUB
     ;
    tokenEntry
     FUNCTION_DECLARATION
     ;
    tokenEntry
     FUNCTION_RENAMING_DECLARATION
     ;
    tokenEntry
     GENERIC_FUNCTION_DECLARATION
     ;
    tokenEntry
     GENERIC_FUNCTION_INSTANTIATION
     ;
    tokenEntry
     GENERIC_FUNCTION_RENAMING
     ;
    tokenEntry
     GENERIC_PACKAGE_INSTANTIATION
     ;
    tokenEntry
     GENERIC_PACKAGE_RENAMING
     ;
    tokenEntry
     GENERIC_PROCEDURE_DECLARATION
     ;
    tokenEntry
     GENERIC_PROCEDURE_INSTANTIATION
     ;
    tokenEntry
     GENERIC_PROCEDURE_RENAMING
     ;
    tokenEntry
     GUARD_OPT
     ;
    tokenEntry
     IDENTIFIER_COLON_OPT
     ;
    tokenEntry
     INIT_OPT
     ;
    tokenEntry
     ITERATION_SCHEME_OPT
     ;
    tokenEntry
     LABEL_OPT
     ;
    tokenEntry
     MARK_WITH_CONSTRAINT
     ;
    tokenEntry
     MODIFIERS
     ;
    tokenEntry
     MODULAR_TYPE_DECLARATION
     ;
    tokenEntry
     MOD_CLAUSE_OPT
     ;
    tokenEntry
     NOT_IN
     ;
    tokenEntry
     ORDINARY_DERIVED_TYPE_DECLARATION
     ;
    tokenEntry
     ORDINARY_FIXED_POINT_DECLARATION
     ;
    tokenEntry
     OR_ELSE
     ;
    tokenEntry
     OR_SELECT_OPT
     ;
    tokenEntry
     PARENTHESIZED_PRIMARY
     ;
    tokenEntry
     PRIVATE_TASK_ITEMS_OPT
     ;
    tokenEntry
     PROCEDURE_BODY
     ;
    tokenEntry
     PROCEDURE_BODY_STUB
     ;
    tokenEntry
     PROCEDURE_DECLARATION
     ;
    tokenEntry
     PROCEDURE_RENAMING_DECLARATION
     ;
    tokenEntry
     PROT_MEMBER_DECLARATIONS
     ;
    tokenEntry
     PROT_OP_BODIES_OPT
     ;
    tokenEntry
     PROT_OP_DECLARATIONS
     ;
    tokenEntry
     RANGED_EXPRS
     ;
    tokenEntry
     RECORD_TYPE_DECLARATION
     ;
    tokenEntry
     SELECTOR_NAMES_OPT
     ;
    tokenEntry
     SIGNED_INTEGER_TYPE_DECLARATION
     ;
    tokenEntry
     TASK_ITEMS_OPT
     ;
    tokenEntry
     UNARY_MINUS
     ;
    tokenEntry
     UNARY_PLUS
     ;
    tokenEntry
     VALUE
     ;
    tokenEntry
     VALUES
     ;
    tokenEntry
     VARIANTS
     ;
    }
   actionBlock
    {
    \n
     
     
    A
    N
    T
    L
    R
    _
    L
    E
    X
    E
    R
    _
    P
    R
    E
    A
    M
    B
    L
    E
    \n
    }
  rules
   rule_
    id_
     COMMENT_INTRO
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "--"
         ast_type_spec
    ;
   rule_
    id_
     DOT_DOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ".."
         ast_type_spec
    ;
   rule_
    id_
     LT_LT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<"
         ast_type_spec
    ;
   rule_
    id_
     BOX
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<>"
         ast_type_spec
    ;
   rule_
    id_
     GT_GT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>"
         ast_type_spec
    ;
   rule_
    id_
     ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ":="
         ast_type_spec
    ;
   rule_
    id_
     RIGHT_SHAFT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "=>"
         ast_type_spec
    ;
   rule_
    id_
     NE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/="
         ast_type_spec
    ;
   rule_
    id_
     LE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<="
         ast_type_spec
    ;
   rule_
    id_
     GE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">="
         ast_type_spec
    ;
   rule_
    id_
     EXPON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "**"
         ast_type_spec
    ;
   rule_
    id_
     PIPE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '|'
    ;
   rule_
    id_
     CONCAT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '&'
    ;
   rule_
    id_
     DOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
    ;
   rule_
    id_
     EQ
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '='
    ;
   rule_
    id_
     LT_
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '<'
    ;
   rule_
    id_
     GT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '>'
    ;
   rule_
    id_
     PLUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '+'
    ;
   rule_
    id_
     MINUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '-'
    ;
   rule_
    id_
     STAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '*'
    ;
   rule_
    id_
     DIV
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '/'
    ;
   rule_
    id_
     LPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '('
    ;
   rule_
    id_
     RPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ')'
    ;
   rule_
    id_
     COLON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ':'
    ;
   rule_
    id_
     COMMA
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ','
    ;
   rule_
    id_
     SEMI
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ';'
    ;
   rule_
    id_
     TIC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         L
         A
         (
         3
         )
         !
         =
         '\''
          
         }
        ?
      element
       elementNoOptionSpec
        terminal_
         '\''
    ;
   rule_
    id_
     IDENTIFIER
    ruleOptionsSpec
     options
     {
     option
      id_
       testLiterals
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '_'
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   'a'
                   ..
                   'z'
               |
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '9'
              )
         )
         *
    ;
   rule_
    id_
     CHARACTER_LITERAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         L
         A
         (
         3
         )
         =
         =
         '\''
          
         }
        ?
      element
       elementNoOptionSpec
        terminal_
         "'"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         .
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         "'"
         ast_type_spec
    ;
   rule_
    id_
     CHAR_STRING
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\"\""
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '"'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
    ;
   rule_
    id_
     NUMERIC_LIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DIGIT
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '#'
           element
            elementNoOptionSpec
             terminal_
              BASED_INTEGER
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '.'
                element
                 elementNoOptionSpec
                  terminal_
                   BASED_INTEGER
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              '#'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '_'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        DIGIT
                        ast_type_spec
                   )
                   +
              )
              +
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              L
              A
              (
              2
              )
              !
              =
              '.'
               
              }
             ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '.'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        DIGIT
                        ast_type_spec
                   )
                   +
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        '_'
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             DIGIT
                             ast_type_spec
                        )
                        +
                   )
                   *
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        EXPONENT
                        ast_type_spec
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EXPONENT
                   ast_type_spec
              )
         )
         ?
    ;
   rule_
    protected
    id_
     DIGIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
    ;
   rule_
    protected
    id_
     EXPONENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'e'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '+'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '-'
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DIGIT
              ast_type_spec
         )
         +
    ;
   rule_
    protected
    id_
     EXTENDED_DIGIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DIGIT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'f'
         )
    ;
   rule_
    protected
    id_
     BASED_INTEGER
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              EXTENDED_DIGIT
              ast_type_spec
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '_'
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              EXTENDED_DIGIT
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     WS_
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\f'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "\r\n"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         a
         n
         t
         l
         r
         :
         :
         T
         o
         k
         e
         n
         :
         :
         S
         K
         I
         P
         )
         ;
          
         }
    ;
   rule_
    id_
     COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMENT_INTRO
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ~
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        '\n'
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        '\r'
                   )
              )
              *
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        '\n'
                   )
                   ?
              )
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         a
         n
         t
         l
         r
         :
         :
         T
         o
         k
         e
         n
         :
         :
         S
         K
         I
         P
         )
         ;
          
         n
         e
         w
         l
         i
         n
         e
         (
         )
         ;
          
         }
    ;
 <EOF>
