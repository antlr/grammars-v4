grammar_
 header_
  header
  actionBlock
   {
   \n
   \t
   u
   s
   i
   n
   g
    
   S
   t
   r
   i
   n
   g
   B
   u
   i
   l
   d
   e
   r
   \t
   \t
   \t
   \t
   =
    
   S
   y
   s
   t
   e
   m
   .
   T
   e
   x
   t
   .
   S
   t
   r
   i
   n
   g
   B
   u
   i
   l
   d
   e
   r
   ;
   \n
   \t
   u
   s
   i
   n
   g
    
   F
   i
   l
   e
   I
   n
   f
   o
    
   \t
   \t
   \t
   \t
   \t
   =
    
   S
   y
   s
   t
   e
   m
   .
   I
   O
   .
   F
   i
   l
   e
   I
   n
   f
   o
   ;
   \n
   }
 fileOptionsSpec
  options
  {
  option
   id_
    language
   =
   optionValue
    "CSharp"
   ;
  option
   id_
    namespace
   =
   optionValue
    "Kunle.CSharpParser"
   ;
  }
 classDef
  parserSpec
   class
   id_
    CSharpParser
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      k
     =
     optionValue
      2
     ;
    option
     id_
      importVocab
     =
     optionValue
      qualifiedID
       id_
        CSharpLexer
     ;
    option
     id_
      exportVocab
     =
     optionValue
      qualifiedID
       id_
        CSharp
     ;
    option
     id_
      buildAST
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    option
     id_
      ASTLabelType
     =
     optionValue
      "ASTNode"
     ;
    option
     id_
      defaultErrorHandler
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    }
   tokensSpec
    tokens
    {
    tokenEntry
     COMPILATION_UNIT
     ;
    tokenEntry
     USING_DIRECTIVES
     ;
    tokenEntry
     USING_ALIAS_DIRECTIVE
     ;
    tokenEntry
     USING_NAMESPACE_DIRECTIVE
     ;
    tokenEntry
     GLOBAL_ATTRIBUTE_SECTIONS
     ;
    tokenEntry
     GLOBAL_ATTRIBUTE_SECTION
     ;
    tokenEntry
     ATTRIBUTE_SECTIONS
     ;
    tokenEntry
     ATTRIBUTE_SECTION
     ;
    tokenEntry
     ATTRIBUTE
     ;
    tokenEntry
     QUALIFIED_IDENTIFIER
     ;
    tokenEntry
     POSITIONAL_ARGLIST
     ;
    tokenEntry
     POSITIONAL_ARG
     ;
    tokenEntry
     NAMED_ARGLIST
     ;
    tokenEntry
     NAMED_ARG
     ;
    tokenEntry
     ARG_LIST
     ;
    tokenEntry
     FORMAL_PARAMETER_LIST
     ;
    tokenEntry
     PARAMETER_FIXED
     ;
    tokenEntry
     PARAMETER_ARRAY
     ;
    tokenEntry
     ATTRIB_ARGUMENT_EXPR
     ;
    tokenEntry
     UNARY_MINUS
     ;
    tokenEntry
     UNARY_PLUS
     ;
    tokenEntry
     CLASS_BASE
     ;
    tokenEntry
     STRUCT_BASE
     ;
    tokenEntry
     INTERFACE_BASE
     ;
    tokenEntry
     ENUM_BASE
     ;
    tokenEntry
     TYPE_BODY
     ;
    tokenEntry
     MEMBER_LIST
     ;
    tokenEntry
     CONST_DECLARATOR
     ;
    tokenEntry
     CTOR_DECL
     ;
    tokenEntry
     STATIC_CTOR_DECL
     ;
    tokenEntry
     DTOR_DECL
     ;
    tokenEntry
     FIELD_DECL
     ;
    tokenEntry
     METHOD_DECL
     ;
    tokenEntry
     PROPERTY_DECL
     ;
    tokenEntry
     INDEXER_DECL
     ;
    tokenEntry
     UNARY_OP_DECL
     ;
    tokenEntry
     BINARY_OP_DECL
     ;
    tokenEntry
     CONV_OP_DECL
     ;
    tokenEntry
     TYPE
     ;
    tokenEntry
     STARS
     ;
    tokenEntry
     ARRAY_RANK
     ;
    tokenEntry
     ARRAY_RANKS
     ;
    tokenEntry
     ARRAY_INIT
     ;
    tokenEntry
     VAR_INIT
     ;
    tokenEntry
     VAR_INIT_LIST
     ;
    tokenEntry
     VAR_DECLARATOR
     ;
    tokenEntry
     LOCVAR_INIT
     ;
    tokenEntry
     LOCVAR_INIT_LIST
     ;
    tokenEntry
     LOCVAR_DECLS
     ;
    tokenEntry
     LOCAL_CONST
     ;
    tokenEntry
     EXPR
     ;
    tokenEntry
     EXPR_LIST
     ;
    tokenEntry
     MEMBER_ACCESS_EXPR
     ;
    tokenEntry
     ELEMENT_ACCESS_EXPR
     ;
    tokenEntry
     INVOCATION_EXPR
     ;
    tokenEntry
     POST_INC_EXPR
     ;
    tokenEntry
     POST_DEC_EXPR
     ;
    tokenEntry
     PAREN_EXPR
     ;
    tokenEntry
     OBJ_CREATE_EXPR
     ;
    tokenEntry
     DLG_CREATE_EXPR
     ;
    tokenEntry
     ARRAY_CREATE_EXPR
     ;
    tokenEntry
     CAST_EXPR
     ;
    tokenEntry
     PTR_ELEMENT_ACCESS_EXPR
     ;
    tokenEntry
     PTR_INDIRECTION_EXPR
     ;
    tokenEntry
     PTR_DECLARATOR
     ;
    tokenEntry
     PTR_INIT
     ;
    tokenEntry
     ADDRESS_OF_EXPR
     ;
    tokenEntry
     MODIFIERS
     ;
    tokenEntry
     NAMESPACE_BODY
     ;
    tokenEntry
     BLOCK
     ;
    tokenEntry
     STMT_LIST
     ;
    tokenEntry
     EMPTY_STMT
     ;
    tokenEntry
     LABEL_STMT
     ;
    tokenEntry
     EXPR_STMT
     ;
    tokenEntry
     FOR_INIT
     ;
    tokenEntry
     FOR_COND
     ;
    tokenEntry
     FOR_ITER
     ;
    tokenEntry
     SWITCH_SECTION
     ;
    tokenEntry
     SWITCH_LABELS
     ;
    tokenEntry
     SWITCH_LABEL
     ;
    tokenEntry
     PP_DIRECTIVES
     ;
    tokenEntry
     PP_EXPR
     ;
    tokenEntry
     PP_MESSAGE
     ;
    tokenEntry
     PP_BLOCK
     ;
    }
   actionBlock
    {
    \n
    \t
    //---------------------------------------------------------------------
    \n
    \t
    // PRIVATE DATA MEMBERS
    \n
    \t
    //---------------------------------------------------------------------
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    F
    i
    l
    e
    I
    n
    f
    o
     
    f
    i
    l
    e
    i
    n
    f
    o
    _
    ;
    \n
    \t
    \t
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
     
    N
    o
    t
    E
    x
    c
    l
    u
    d
    e
    d
    (
    C
    o
    d
    e
    M
    a
    s
    k
    E
    n
    u
    m
    s
     
    c
    o
    d
    e
    M
    a
    s
    k
    ,
     
    C
    o
    d
    e
    M
    a
    s
    k
    E
    n
    u
    m
    s
     
    c
    o
    n
    s
    t
    r
    u
    c
    t
    )
    \n
    \t
    {
    \n
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    (
    (
    c
    o
    d
    e
    M
    a
    s
    k
     
    &
     
    c
    o
    n
    s
    t
    r
    u
    c
    t
    )
     
    !
    =
     
    0
     
    )
    ;
    \n
    \t
    }
    \n
    \t
    \n
    \t
    p
    u
    b
    l
    i
    c
     
    o
    v
    e
    r
    r
    i
    d
    e
     
    v
    o
    i
    d
     
    s
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    s
    t
    r
    i
    n
    g
     
    f
    i
    l
    e
    n
    a
    m
    e
    )
    \n
    \t
    {
    \n
    \t
    \t
    b
    a
    s
    e
    .
    s
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    f
    i
    l
    e
    n
    a
    m
    e
    )
    ;
    \n
    \t
    \t
    f
    i
    l
    e
    i
    n
    f
    o
    _
     
    =
     
    n
    e
    w
     
    F
    i
    l
    e
    I
    n
    f
    o
    (
    f
    i
    l
    e
    n
    a
    m
    e
    )
    ;
    \n
    \t
    \t
    (
    (
    A
    S
    T
    N
    o
    d
    e
    F
    a
    c
    t
    o
    r
    y
    )
     
    a
    s
    t
    F
    a
    c
    t
    o
    r
    y
    )
    .
    F
    i
    l
    e
    I
    n
    f
    o
     
    =
     
    f
    i
    l
    e
    i
    n
    f
    o
    _
    ;
    \n
    \t
    }
    \n
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
     
    S
    i
    n
    g
    l
    e
    L
    i
    n
    e
    P
    P
    D
    i
    r
    e
    c
    t
    i
    v
    e
    I
    s
    P
    r
    e
    d
    i
    c
    t
    e
    d
    B
    y
    L
    A
    (
    i
    n
    t
     
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
    \n
    \t
    {
    \n
    \t
    \t
    i
    f
     
    (
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    W
    A
    R
    N
    I
    N
    G
    )
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    E
    R
    R
    O
    R
    )
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    L
    I
    N
    E
    )
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    U
    N
    D
    E
    F
    I
    N
    E
    )
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    D
    E
    F
    I
    N
    E
    )
    )
    \n
    \t
    \t
    {
    \n
    \t
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    t
    r
    u
    e
    ;
    \n
    \t
    \t
    }
    \n
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    f
    a
    l
    s
    e
    ;
    \n
    \t
    }
    \n
    \t
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
     
    P
    P
    D
    i
    r
    e
    c
    t
    i
    v
    e
    I
    s
    P
    r
    e
    d
    i
    c
    t
    e
    d
    B
    y
    L
    A
    (
    i
    n
    t
     
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
    \n
    \t
    {
    \n
    \t
    \t
    i
    f
     
    (
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    R
    E
    G
    I
    O
    N
    )
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    C
    O
    N
    D
    _
    I
    F
    )
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    W
    A
    R
    N
    I
    N
    G
    )
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    E
    R
    R
    O
    R
    )
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    L
    I
    N
    E
    )
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    U
    N
    D
    E
    F
    I
    N
    E
    )
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    P
    P
    _
    D
    E
    F
    I
    N
    E
    )
    )
    \n
    \t
    \t
    {
    \n
    \t
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    t
    r
    u
    e
    ;
    \n
    \t
    \t
    }
    \n
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    f
    a
    l
    s
    e
    ;
    \n
    \t
    }
    \n
    \t
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
     
    I
    d
    e
    n
    t
    i
    f
    i
    e
    r
    R
    u
    l
    e
    I
    s
    P
    r
    e
    d
    i
    c
    t
    e
    d
    B
    y
    L
    A
    (
    i
    n
    t
     
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
    \n
    \t
    {
    \n
    \t
    \t
    i
    f
     
    (
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    I
    D
    E
    N
    T
    I
    F
    I
    E
    R
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    a
    d
    d
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    r
    e
    m
    o
    v
    e
    )
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    g
    e
    t
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    s
    e
    t
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    a
    s
    s
    e
    m
    b
    l
    y
    )
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    f
    i
    e
    l
    d
    )
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    m
    e
    t
    h
    o
    d
    )
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    m
    o
    d
    u
    l
    e
    )
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    p
    a
    r
    a
    m
    )
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    p
    r
    o
    p
    e
    r
    t
    y
    )
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    t
    y
    p
    e
    )
    )
    \n
    \t
    \t
    {
    \n
    \t
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    t
    r
    u
    e
    ;
    \n
    \t
    \t
    }
    \n
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    f
    a
    l
    s
    e
    ;
    \n
    \t
    }
    \n
    \t
    \n
    \t
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
     
    T
    y
    p
    e
    R
    u
    l
    e
    I
    s
    P
    r
    e
    d
    i
    c
    t
    e
    d
    B
    y
    L
    A
    (
    i
    n
    t
     
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
    \n
    \t
    {
    \n
    \t
    \t
    i
    f
     
    (
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    D
    O
    T
    )
     
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    V
    O
    I
    D
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    I
    D
    E
    N
    T
    I
    F
    I
    E
    R
    )
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    I
    N
    T
    )
     
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    B
    O
    O
    L
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    S
    T
    R
    I
    N
    G
    )
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    O
    B
    J
    E
    C
    T
    )
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    B
    Y
    T
    E
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    C
    H
    A
    R
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    D
    E
    C
    I
    M
    A
    L
    )
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    D
    O
    U
    B
    L
    E
    )
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    F
    L
    O
    A
    T
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    L
    O
    N
    G
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    S
    B
    Y
    T
    E
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    S
    H
    O
    R
    T
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    U
    I
    N
    T
    )
     
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    U
    L
    O
    N
    G
    )
     
     
     
     
     
     
    |
    |
    \n
    \t
    \t
    \t
    (
    L
    A
    (
    l
    o
    o
    k
    A
    h
    e
    a
    d
    D
    e
    p
    t
    h
    )
     
    =
    =
     
    U
    S
    H
    O
    R
    T
    )
    )
    \n
    \t
    \t
    {
    \n
    \t
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    t
    r
    u
    e
    ;
    \n
    \t
    \t
    }
    \n
    \t
    \t
    r
    e
    t
    u
    r
    n
     
    f
    a
    l
    s
    e
    ;
    \n
    \t
    }
    \n
    }
  rules
   rule_
    id_
     nonKeywordLiterals
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "add"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "remove"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "get"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "set"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "assembly"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "field"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "method"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "module"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "param"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "property"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "type"
         ast_type_spec
    ;
   rule_
    id_
     identifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENTIFIER
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        rule_ref_or_keyword_as
         nonKeywordLiterals
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         n
         .
         s
         e
         t
         T
         y
         p
         e
         (
         I
         D
         E
         N
         T
         I
         F
         I
         E
         R
         )
         ;
          
         }
    ;
   rule_
    id_
     qualifiedIdentifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
         )
         ?
    ;
   rule_
    id_
     type
    !
    ruleAction
     actionBlock
      {
      \n
      \t
      \t
      A
      S
      T
      N
      o
      d
      e
       
      t
      y
      p
      e
      B
      a
      s
      e
       
       
      =
       
      n
      u
      l
      l
      ;
       
      \n
      \t
      \t
      A
      S
      T
      N
      o
      d
      e
       
      s
      t
      a
      r
      s
      B
      a
      s
      e
       
      =
       
      #
      [
      S
      T
      A
      R
      S
      ,
       
      "STARS"
      ]
      ;
       
      \n
      \t
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   p
                  :
                  rule_ref_or_keyword_as
                   predefinedTypeName
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   t
                   y
                   p
                   e
                   B
                   a
                   s
                   e
                    
                   =
                    
                   #
                   p
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   q
                  :
                  rule_ref_or_keyword_as
                   qualifiedIdentifier
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   t
                   y
                   p
                   e
                   B
                   a
                   s
                   e
                    
                   =
                    
                   #
                   q
                   ;
                    
                   }
              )
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   s1
                  :
                  terminal_
                   STAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   s
                   t
                   a
                   r
                   s
                   B
                   a
                   s
                   e
                   .
                   a
                   d
                   d
                   C
                   h
                   i
                   l
                   d
                   E
                   x
                   (
                   #
                   s
                   1
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
              )
              *
          |
          alternative
           element
            elementNoOptionSpec
             id_
              v
             :
             terminal_
              VOID
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              s2
             :
             terminal_
              STAR
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              s
              t
              a
              r
              s
              B
              a
              s
              e
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              s
              2
              )
              ;
              \n
              \t
              \t
              \t
               
               
              \t
              t
              y
              p
              e
              B
              a
              s
              e
               
              =
               
              #
              v
              ;
              \n
              \t
              \t
              \t
              }
         )
      element
       elementNoOptionSpec
        id_
         r
        :
        rule_ref_or_keyword_as
         rankSpecifiers
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         T
         Y
         P
         E
         ,
          
         "TYPE"
         ]
         ,
          
         t
         y
         p
         e
         B
         a
         s
         e
         ,
          
         s
         t
         a
         r
         s
         B
         a
         s
         e
         ,
          
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     integralType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SBYTE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              BYTE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SHORT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              USHORT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              INT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UINT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LONG
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ULONG
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHAR
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         T
         Y
         P
         E
         ,
          
         "TYPE"
         ]
         ,
          
         #
         #
         ,
          
         [
         S
         T
         A
         R
         S
         ,
          
         "STARS"
         ]
         ,
          
         [
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         S
         ,
          
         "ARRAY_RANKS"
         ]
          
         )
         ;
          
         }
    ;
   rule_
    id_
     classType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              OBJECT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         T
         Y
         P
         E
         ,
          
         "TYPE"
         ]
         ,
          
         #
         #
         ,
          
         [
         S
         T
         A
         R
         S
         ,
          
         "STARS"
         ]
         ,
          
         [
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         S
         ,
          
         "ARRAY_RANKS"
         ]
          
         )
         ;
          
         }
    ;
   rule_
    id_
     argumentList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         argument
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              argument
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         A
         R
         G
         _
         L
         I
         S
         T
         ,
          
         "ARG_LIST"
         ]
         ,
          
         #
         a
         r
         g
         u
         m
         e
         n
         t
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     argument
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         REF
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OUT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     constantExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     booleanExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     expressionList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         E
         X
         P
         R
         _
         L
         I
         S
         T
         ,
          
         "EXPR_LIST"
         ]
         ,
          
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     expression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assignmentExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         =
          
         #
         (
          
         #
         [
         E
         X
         P
         R
         ,
         "EXPR"
         ]
         ,
          
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         )
         ;
          
         }
    ;
   rule_
    id_
     assignmentExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DIV_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MOD_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BIN_AND_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BIN_OR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BIN_XOR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SHIFTL_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SHIFTR_ASSIGN
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignmentExpression
         )
         ?
    ;
   rule_
    id_
     conditionalExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              QUESTION
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignmentExpression
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              conditionalExpression
         )
         ?
    ;
   rule_
    id_
     conditionalOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalAndExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOG_OR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              conditionalAndExpression
         )
         *
    ;
   rule_
    id_
     conditionalAndExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         inclusiveOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOG_AND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              inclusiveOrExpression
         )
         *
    ;
   rule_
    id_
     inclusiveOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exclusiveOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BIN_OR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exclusiveOrExpression
         )
         *
    ;
   rule_
    id_
     exclusiveOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         andExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BIN_XOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              andExpression
         )
         *
    ;
   rule_
    id_
     andExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         equalityExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BIN_AND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              equalityExpression
         )
         *
    ;
   rule_
    id_
     equalityExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         relationalExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EQUAL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   NOT_EQUAL
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relationalExpression
         )
         *
    ;
   rule_
    id_
     relationalExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         shiftExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LTHAN
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        GTHAN
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LTE
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        GTE
                        ast_type_spec
                         ^
                   )
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   shiftExpression
              )
              *
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IS
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   AS
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
         )
    ;
   rule_
    id_
     shiftExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         additiveExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SHIFTL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SHIFTR
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              additiveExpression
         )
         *
    ;
   rule_
    id_
     additiveExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         multiplicativeExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              multiplicativeExpression
         )
         *
    ;
   rule_
    id_
     multiplicativeExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DIV
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MOD
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              unaryExpression
         )
         *
    ;
   rule_
    id_
     unaryExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              unaryExpression
         )
         =>
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_PAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         C
         A
         S
         T
         _
         E
         X
         P
         R
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PLUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         .
         s
         e
         t
         T
         y
         p
         e
         (
         U
         N
         A
         R
         Y
         _
         P
         L
         U
         S
          
         )
         ;
          
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        id_
         m
        :
        terminal_
         MINUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         m
         .
         s
         e
         t
         T
         y
         p
         e
         (
         U
         N
         A
         R
         Y
         _
         M
         I
         N
         U
         S
          
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LOG_NOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BIN_NOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         STAR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         .
         s
         e
         t
         T
         y
         p
         e
         (
         P
         T
         R
         _
         I
         N
         D
         I
         R
         E
         C
         T
         I
         O
         N
         _
         E
         X
         P
         R
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        terminal_
         BIN_AND
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         b
         .
         s
         e
         t
         T
         y
         p
         e
         (
         A
         D
         D
         R
         E
         S
         S
         _
         O
         F
         _
         E
         X
         P
         R
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         primaryExpression
    ;
   rule_
    id_
     basicPrimaryExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              literal
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
          |
          alternative
           element
            elementNoOptionSpec
             id_
              o
             :
             terminal_
              OPEN_PAREN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              o
              .
              s
              e
              t
              T
              y
              p
              e
              (
              P
              A
              R
              E
              N
              _
              E
              X
              P
              R
              )
              ;
               
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignmentExpression
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              THIS
              ast_type_spec
               ^
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              BASE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOT
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   identifier
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   expressionList
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_BRACK
                   ast_type_spec
                    !
              )
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              newExpression
          |
          alternative
           !
           element
            elementNoOptionSpec
             id_
              to_t
             :
             terminal_
              TYPEOF
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   (
                   (
                   L
                   A
                   (
                   1
                   )
                    
                   =
                   =
                    
                   V
                   O
                   I
                   D
                   )
                    
                   &
                   &
                    
                   (
                   L
                   A
                   (
                   2
                   )
                    
                   =
                   =
                    
                   C
                   L
                   O
                   S
                   E
                   _
                   P
                   A
                   R
                   E
                   N
                   )
                   )
                    
                   }
                  ?
                element
                 elementNoOptionSpec
                  id_
                   to_v
                  :
                  rule_ref_or_keyword_as
                   voidAsType
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_PAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   t
                   o
                   _
                   t
                   ,
                    
                   #
                   t
                   o
                   _
                   v
                    
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   to_typ
                  :
                  rule_ref_or_keyword_as
                   type
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_PAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   t
                   o
                   _
                   t
                   ,
                    
                   #
                   t
                   o
                   _
                   t
                   y
                   p
                    
                   )
                   ;
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SIZEOF
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHECKED
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UNCHECKED
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           !
           element
            elementNoOptionSpec
             id_
              ma_typ
             :
             rule_ref_or_keyword_as
              predefinedType
           element
            elementNoOptionSpec
             id_
              dt
             :
             terminal_
              DOT
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              ma_id
             :
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              d
              t
              .
              s
              e
              t
              T
              y
              p
              e
              (
              M
              E
              M
              B
              E
              R
              _
              A
              C
              C
              E
              S
              S
              _
              E
              X
              P
              R
              )
              ;
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              #
              d
              t
              ,
               
              #
              m
              a
              _
              t
              y
              p
              ,
               
              #
              m
              a
              _
              i
              d
               
              )
              ;
              \n
              \t
              \t
              \t
              }
         )
    ;
   rule_
    id_
     primaryExpression
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         bexpr
        :
        rule_ref_or_keyword_as
         basicPrimaryExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         b
         e
         x
         p
         r
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   op
                  :
                  terminal_
                   OPEN_PAREN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   a
                    
                   =
                    
                   n
                   u
                   l
                   l
                   ;
                    
                   }
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        a
                       :
                       rule_ref_or_keyword_as
                        argumentList
                   )
                   ?
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_PAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   o
                   p
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   I
                   N
                   V
                   O
                   C
                   A
                   T
                   I
                   O
                   N
                   _
                   E
                   X
                   P
                   R
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   o
                   p
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                   ,
                    
                   #
                   a
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   ob
                  :
                  terminal_
                   OPEN_BRACK
                   ast_type_spec
                element
                 elementNoOptionSpec
                  id_
                   elist
                  :
                  rule_ref_or_keyword_as
                   expressionList
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   o
                   b
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   E
                   L
                   E
                   M
                   E
                   N
                   T
                   _
                   A
                   C
                   C
                   E
                   S
                   S
                   _
                   E
                   X
                   P
                   R
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   o
                   b
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                   ,
                    
                   #
                   e
                   l
                   i
                   s
                   t
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   dt
                  :
                  terminal_
                   DOT
                   ast_type_spec
                element
                 elementNoOptionSpec
                  id_
                   ma_id
                  :
                  rule_ref_or_keyword_as
                   identifier
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   d
                   t
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   M
                   E
                   M
                   B
                   E
                   R
                   _
                   A
                   C
                   C
                   E
                   S
                   S
                   _
                   E
                   X
                   P
                   R
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   d
                   t
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                   ,
                    
                   #
                   m
                   a
                   _
                   i
                   d
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   ic
                  :
                  terminal_
                   INC
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   i
                   c
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   P
                   O
                   S
                   T
                   _
                   I
                   N
                   C
                   _
                   E
                   X
                   P
                   R
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   i
                   c
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   dc
                  :
                  terminal_
                   DEC
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   d
                   c
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   P
                   O
                   S
                   T
                   _
                   D
                   E
                   C
                   _
                   E
                   X
                   P
                   R
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   d
                   c
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   pm_deref
                  :
                  terminal_
                   DEREF
                   ast_type_spec
                element
                 elementNoOptionSpec
                  id_
                   pm_id
                  :
                  rule_ref_or_keyword_as
                   identifier
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   #
                   p
                   m
                   _
                   d
                   e
                   r
                   e
                   f
                   ,
                    
                   #
                   b
                   e
                   x
                   p
                   r
                   ,
                    
                   #
                   p
                   m
                   _
                   i
                   d
                    
                   )
                   ;
                    
                   }
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              b
              e
              x
              p
              r
               
              =
               
              #
              #
              ;
               
              }
         )
         *
    ;
   rule_
    id_
     newExpression
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         NEW
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         typ
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   arglist
                  :
                  rule_ref_or_keyword_as
                   argumentList
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              n
              .
              s
              e
              t
              T
              y
              p
              e
              (
              O
              B
              J
              _
              C
              R
              E
              A
              T
              E
              _
              E
              X
              P
              R
              )
              ;
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              #
              n
              ,
               
              #
              t
              y
              p
              ,
               
              #
              a
              r
              g
              l
              i
              s
              t
               
              )
              ;
               
              \n
              \t
              \t
              \t
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              ar_init
             :
             rule_ref_or_keyword_as
              arrayInitializer
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              n
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              C
              R
              E
              A
              T
              E
              _
              E
              X
              P
              R
              )
              ;
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              #
              n
              ,
               
              #
              t
              y
              p
              ,
               
              #
              a
              r
              _
              i
              n
              i
              t
               
              )
              ;
               
              \n
              \t
              \t
              \t
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              OPEN_BRACK
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              elist
             :
             rule_ref_or_keyword_as
              expressionList
           element
            elementNoOptionSpec
             terminal_
              CLOSE_BRACK
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              ar_spec2
             :
             rule_ref_or_keyword_as
              rankSpecifiers
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   ar_init2
                  :
                  rule_ref_or_keyword_as
                   arrayInitializer
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              n
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              C
              R
              E
              A
              T
              E
              _
              E
              X
              P
              R
              )
              ;
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              #
              n
              ,
               
              #
              t
              y
              p
              ,
               
              #
              e
              l
              i
              s
              t
              ,
               
              #
              a
              r
              _
              s
              p
              e
              c
              2
              ,
               
              #
              a
              r
              _
              i
              n
              i
              t
              2
               
              )
              ;
               
              \n
              \t
              \t
              \t
              }
         )
    ;
   rule_
    id_
     literal
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         TRUE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FALSE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INT_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UINT_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LONG_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ULONG_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DECIMAL_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FLOAT_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLE_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHAR_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STRING_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NULL
         ast_type_spec
    ;
   rule_
    id_
     predefinedType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BOOL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              BYTE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHAR
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DECIMAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOUBLE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              FLOAT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              INT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LONG
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              OBJECT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SBYTE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SHORT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UINT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ULONG
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              USHORT
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         T
         Y
         P
         E
         ,
          
         "TYPE"
         ]
         ,
          
         #
         #
         ,
          
         [
         S
         T
         A
         R
         S
         ,
          
         "STARS"
         ]
         ,
          
         [
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         S
         ,
          
         "ARRAY_RANKS"
         ]
          
         )
         ;
          
         }
    ;
   rule_
    id_
     predefinedTypeName
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         BOOL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BYTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHAR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DECIMAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FLOAT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LONG
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OBJECT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SBYTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SHORT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STRING
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UINT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ULONG
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         USHORT
         ast_type_spec
    ;
   rule_
    id_
     statement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         (
         I
         d
         e
         n
         t
         i
         f
         i
         e
         r
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         1
         )
          
         &
         &
          
         (
         L
         A
         (
         2
         )
          
         =
         =
          
         C
         O
         L
         O
         N
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         labeledStatement
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         (
         (
         L
         A
         (
         1
         )
          
         =
         =
          
         C
         O
         N
         S
         T
         )
          
         &
         &
          
         T
         y
         p
         e
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         2
         )
          
         &
         &
          
         I
         d
         e
         n
         t
         i
         f
         i
         e
         r
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         3
         )
         )
          
         |
         |
         \n
         \t
         \t
          
          
         (
         T
         y
         p
         e
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         1
         )
          
         &
         &
          
         I
         d
         e
         n
         t
         i
         f
         i
         e
         r
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         2
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declarationStatement
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   CONST
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declarationStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         preprocessorDirective
        argActionBlock
         [
         C
         o
         d
         e
         M
         a
         s
         k
         E
         n
         u
         m
         s
         .
         S
         t
         a
         t
         e
         m
         e
         n
         t
         s
         ]
    ;
   rule_
    id_
     embeddedStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         .
         s
         e
         t
         T
         y
         p
         e
         (
         E
         M
         P
         T
         Y
         _
         S
         T
         M
         T
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expressionStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         selectionStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         iterationStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         jumpStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         tryStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         checkedStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         uncheckedStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         lockStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         usingStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unsafeStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedStatement
    ;
   rule_
    id_
     body
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         .
         s
         e
         t
         T
         y
         p
         e
         (
         E
         M
         P
         T
         Y
         _
         S
         T
         M
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     block
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         B
         L
         O
         C
         K
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     statementList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
         L
         i
         s
         t
          
         =
          
         #
         (
          
         [
         S
         T
         M
         T
         _
         L
         I
         S
         T
         ,
          
         "STMT_LIST"
         ]
         ,
          
         #
         s
         t
         a
         t
         e
         m
         e
         n
         t
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     labeledStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         COLON
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         L
         A
         B
         E
         L
         _
         S
         T
         M
         T
         )
         ;
          
         }
      element
       elementNoOptionSpec
        id_
         stmt
        :
        rule_ref_or_keyword_as
         statement
    ;
   rule_
    id_
     declarationStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localVariableDeclaration
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localConstantDeclaration
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     localVariableDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localVariableDeclarators
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         L
         O
         C
         V
         A
         R
         _
         D
         E
         C
         L
         S
         ,
          
         "LOCVAR_DECLS"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     localVariableDeclarators
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localVariableDeclarator
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              localVariableDeclarator
         )
         *
    ;
   rule_
    id_
     localVariableDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              localVariableInitializer
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         V
         A
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         ,
          
         "VAR_DECLARATOR"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     localVariableInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              arrayInitializer
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         l
         o
         c
         a
         l
         V
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         =
          
         #
         (
          
         [
         L
         O
         C
         V
         A
         R
         _
         I
         N
         I
         T
         ,
          
         "LOCVAR_INIT"
         ]
         ,
          
         #
         l
         o
         c
         a
         l
         V
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     localConstantDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         CONST
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         L
         O
         C
         A
         L
         _
         C
         O
         N
         S
         T
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constantDeclarators
    ;
   rule_
    id_
     constantDeclarators
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constantDeclarator
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              constantDeclarator
         )
         *
    ;
   rule_
    id_
     constantDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         ASSIGN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         .
         s
         e
         t
         T
         y
         p
         e
         (
         C
         O
         N
         S
         T
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constantExpression
    ;
   rule_
    id_
     expressionStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statementExpression
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SEMI
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         .
         s
         e
         t
         T
         y
         p
         e
         (
         E
         X
         P
         R
         _
         S
         T
         M
         T
         )
         ;
          
         }
    ;
   rule_
    id_
     statementExpression
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         aexpr
        :
        rule_ref_or_keyword_as
         assignmentExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         a
         e
         x
         p
         r
         ;
          
         }
    ;
   rule_
    id_
     selectionStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ifStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         switchStatement
    ;
   rule_
    id_
     ifStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IF
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         booleanExpression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              elseStatement
         )
         ?
    ;
   rule_
    id_
     elseStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ELSE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     switchStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         SWITCH
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         switchBlock
    ;
   rule_
    id_
     switchBlock
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              switchSections
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     switchSections
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              switchSection
         )
         +
    ;
   rule_
    id_
     switchSection
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lbl
        :
        rule_ref_or_keyword_as
         switchLabels
      element
       elementNoOptionSpec
        id_
         stmt
        :
        rule_ref_or_keyword_as
         statementList
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         S
         W
         I
         T
         C
         H
         _
         S
         E
         C
         T
         I
         O
         N
         ,
          
         "SWITCH_SECTION"
         ]
         ,
          
         #
         l
         b
         l
         ,
          
         #
         s
         t
         m
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     switchLabels
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              switchLabel
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         s
         w
         i
         t
         c
         h
         L
         a
         b
         e
         l
         s
          
         =
          
         #
         (
          
         [
         S
         W
         I
         T
         C
         H
         _
         L
         A
         B
         E
         L
         S
         ,
          
         "SWITCH_LABELS"
         ]
         ,
          
         #
         s
         w
         i
         t
         c
         h
         L
         a
         b
         e
         l
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     switchLabel
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         CASE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constantExpression
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEFAULT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
    ;
   rule_
    id_
     iterationStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         whileStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         doStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         foreachStatement
    ;
   rule_
    id_
     whileStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         WHILE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         booleanExpression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     doStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         DO
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
      element
       elementNoOptionSpec
        terminal_
         WHILE
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         booleanExpression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     forStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         FOR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forInitializer
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forCondition
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forIterator
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     forInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              (
              T
              y
              p
              e
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              &
              &
               
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              2
              )
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              localVariableDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   type
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   identifier
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              localVariableDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statementExpressionList
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         o
         r
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         =
          
         #
         (
          
         [
         F
         O
         R
         _
         I
         N
         I
         T
         ,
          
         "FOR_INIT"
         ]
         ,
          
         #
         f
         o
         r
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     forCondition
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              booleanExpression
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         o
         r
         C
         o
         n
         d
         i
         t
         i
         o
         n
          
         =
          
         #
         (
          
         [
         F
         O
         R
         _
         C
         O
         N
         D
         ,
          
         "FOR_COND"
         ]
         ,
          
         #
         f
         o
         r
         C
         o
         n
         d
         i
         t
         i
         o
         n
          
         )
         ;
          
         }
    ;
   rule_
    id_
     forIterator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statementExpressionList
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         f
         o
         r
         I
         t
         e
         r
         a
         t
         o
         r
          
         =
          
         #
         (
          
         [
         F
         O
         R
         _
         I
         T
         E
         R
         ,
          
         "FOR_ITER"
         ]
         ,
          
         #
         f
         o
         r
         I
         t
         e
         r
         a
         t
         o
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     statementExpressionList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statementExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statementExpression
         )
         *
    ;
   rule_
    id_
     foreachStatement
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         f
        :
        terminal_
         FOREACH
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         t
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         IN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         e
        :
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         s
        :
        rule_ref_or_keyword_as
         embeddedStatement
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         f
         ,
          
         #
         (
          
         [
         L
         O
         C
         V
         A
         R
         _
         D
         E
         C
         L
         S
         ]
         ,
          
         #
         t
         ,
          
         #
         (
          
         [
         V
         A
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         ]
         ,
          
         #
         i
         d
          
         )
          
         )
         ,
          
         #
         e
         ,
          
         #
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     jumpStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         breakStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         continueStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         gotoStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         returnStatement
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         throwStatement
    ;
   rule_
    id_
     breakStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         BREAK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     continueStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         CONTINUE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     gotoStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         GOTO
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CASE
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              constantExpression
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DEFAULT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     returnStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         RETURN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     throwStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         THROW
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     tryStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         TRY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              finallyClause
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              catchClauses
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   finallyClause
              )
              ?
         )
    ;
   rule_
    id_
     catchClauses
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              specificCatchClause
         )
         +
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              generalCatchClause
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         generalCatchClause
    ;
   rule_
    id_
     specificCatchClause
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         CATCH
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         ctype
        :
        rule_ref_or_keyword_as
         classType
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              id
             :
             rule_ref_or_keyword_as
              identifier
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         i
         f
          
         (
         #
         i
         d
          
         =
         =
          
         n
         u
         l
         l
         )
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         #
         c
         ,
          
         #
         b
         ,
          
         #
         c
         t
         y
         p
         e
          
         )
         ;
         \n
         \t
         \t
         \t
         e
         l
         s
         e
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         #
         c
         ,
          
         #
         b
         ,
          
         #
         (
          
         [
         L
         O
         C
         V
         A
         R
         _
         D
         E
         C
         L
         S
         ]
         ,
          
         #
         c
         t
         y
         p
         e
         ,
          
         #
         (
          
         [
         V
         A
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         ]
         ,
          
         #
         i
         d
          
         )
          
         )
          
         )
         ;
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     generalCatchClause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         CATCH
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
    ;
   rule_
    id_
     finallyClause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         FINALLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
    ;
   rule_
    id_
     checkedStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHECKED
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
    ;
   rule_
    id_
     uncheckedStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         UNCHECKED
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
    ;
   rule_
    id_
     lockStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LOCK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     usingStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         USING
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         resourceAcquisition
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     unsafeStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         UNSAFE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
    ;
   rule_
    id_
     resourceAcquisition
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         (
         T
         y
         p
         e
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         1
         )
          
         &
         &
          
         I
         d
         e
         n
         t
         i
         f
         i
         e
         r
         R
         u
         l
         e
         I
         s
         P
         r
         e
         d
         i
         c
         t
         e
         d
         B
         y
         L
         A
         (
         2
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localVariableDeclaration
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         localVariableDeclaration
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
    ;
   rule_
    id_
     compilationUnit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         justPreprocessorDirectives
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         usingDirectives
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         globalAttributes
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         namespaceMemberDeclarations
      element
       elementNoOptionSpec
        terminal_
         EOF
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         C
         O
         M
         P
         I
         L
         A
         T
         I
         O
         N
         _
         U
         N
         I
         T
         ,
          
         "COMPILATION_UNIT"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     usingDirectives
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              !
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              usingDirective
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   preprocessorDirective
                  argActionBlock
                   [
                   C
                   o
                   d
                   e
                   M
                   a
                   s
                   k
                   E
                   n
                   u
                   m
                   s
                   .
                   U
                   s
                   i
                   n
                   g
                   D
                   i
                   r
                   e
                   c
                   t
                   i
                   v
                   e
                   s
                   ]
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              U
              s
              i
              n
              g
              D
              i
              r
              e
              c
              t
              i
              v
              e
              s
              ]
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \t
         \n
         \t
         \t
         \t
         #
         u
         s
         i
         n
         g
         D
         i
         r
         e
         c
         t
         i
         v
         e
         s
          
         =
          
         #
         (
          
         [
         U
         S
         I
         N
         G
         _
         D
         I
         R
         E
         C
         T
         I
         V
         E
         S
         ,
          
         "USING_DIRECTIVES"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     usingDirective
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         u
        :
        terminal_
         USING
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              (
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              &
              &
               
              (
              L
              A
              (
              2
              )
               
              =
              =
               
              A
              S
              S
              I
              G
              N
              )
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
              \t
              \n
              \t
              \t
              \t
              \t
              #
              u
              .
              s
              e
              t
              T
              y
              p
              e
              (
              U
              S
              I
              N
              G
              _
              A
              L
              I
              A
              S
              _
              D
              I
              R
              E
              C
              T
              I
              V
              E
              )
              ;
              \n
              \t
              \t
              \t
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
              \t
              \n
              \t
              \t
              \t
              \t
              #
              u
              .
              s
              e
              t
              T
              y
              p
              e
              (
              U
              S
              I
              N
              G
              _
              N
              A
              M
              E
              S
              P
              A
              C
              E
              _
              D
              I
              R
              E
              C
              T
              I
              V
              E
              )
              ;
              \n
              \t
              \t
              \t
              }
         )
    ;
   rule_
    id_
     namespaceMemberDeclarations
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              N
              a
              m
              e
              s
              p
              a
              c
              e
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              namespaceMemberDeclaration
         )
         *
    ;
   rule_
    id_
     namespaceMemberDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         namespaceDeclaration
     |
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
        !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         typeDeclaration
        argActionBlock
         [
         #
         a
         ,
          
         #
         m
         ]
    ;
   rule_
    id_
     typeDeclaration
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         structDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         interfaceDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         enumDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         delegateDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
    ;
   rule_
    id_
     namespaceDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAMESPACE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         qualifiedIdentifier
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         namespaceBody
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
    ;
   rule_
    id_
     namespaceBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         N
         A
         M
         E
         S
         P
         A
         C
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         usingDirectives
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         namespaceMemberDeclarations
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     modifiers
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              modifier
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
          
         =
          
         #
         (
          
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     modifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ABSTRACT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEW
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              OVERRIDE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PUBLIC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PROTECTED
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              INTERNAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PRIVATE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEALED
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              STATIC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              VIRTUAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              EXTERN
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              READONLY
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UNSAFE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              VOLATILE
              ast_type_spec
         )
    ;
   rule_
    id_
     classDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         cl
        :
        terminal_
         CLASS
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         ba
        :
        rule_ref_or_keyword_as
         classBase
      element
       elementNoOptionSpec
        id_
         bo
        :
        rule_ref_or_keyword_as
         classBody
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         c
         l
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         d
         ,
          
         #
         b
         a
         ,
          
         #
         b
         o
          
         )
         ;
          
         }
    ;
   rule_
    id_
     classBase
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   type
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         c
         l
         a
         s
         s
         B
         a
         s
         e
          
         =
          
         #
         (
          
         [
         C
         L
         A
         S
         S
         _
         B
         A
         S
         E
         ,
          
         "CLASS_BASE"
         ]
         ,
          
         #
         c
         l
         a
         s
         s
         B
         a
         s
         e
          
         )
         ;
          
         }
    ;
   rule_
    id_
     classBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classMemberDeclarations
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     classMemberDeclarations
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              C
              l
              a
              s
              s
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              classMemberDeclaration
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         M
         E
         M
         B
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "MEMBER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     classMemberDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
        !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              destructorDeclaration
             argActionBlock
              [
              #
              a
              ,
               
              #
              m
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeMemberDeclaration
             argActionBlock
              [
              #
              a
              ,
               
              #
              m
              ]
         )
    ;
   rule_
    id_
     typeMemberDeclaration
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    ruleAction
     actionBlock
      {
      \n
      \t
      b
      o
      o
      l
       
      \t
      I
      s
      B
      i
      n
      a
      r
      y
      O
      p
       
      =
       
      f
      a
      l
      s
      e
      ;
      \n
      \t
      A
      S
      T
       
      \t
      O
      p
      P
      a
      r
      a
      m
      s
       
      =
       
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      !
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         CONST
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         t
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        id_
         cdecl
        :
        rule_ref_or_keyword_as
         constantDeclarators
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         c
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         t
         ,
          
         #
         c
         d
         e
         c
         l
          
         )
         ;
          
         }
     |
     alternative
      !
      element
       elementNoOptionSpec
        id_
         ev
        :
        terminal_
         EVENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         ev_typ
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              &
              &
               
              (
              L
              A
              (
              2
              )
              =
              =
              A
              S
              S
              I
              G
              N
               
              |
              |
               
              L
              A
              (
              2
              )
              =
              =
              S
              E
              M
              I
               
              |
              |
              L
              A
              (
              2
              )
              =
              =
              C
              O
              M
              M
              A
              )
               
              }
             ?
           element
            elementNoOptionSpec
             id_
              ev_v
             :
             rule_ref_or_keyword_as
              variableDeclarators
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              (
               
              #
              e
              v
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              e
              v
              _
              t
              y
              p
              ,
               
              #
              e
              v
              _
              v
               
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              ev_id
             :
             rule_ref_or_keyword_as
              qualifiedIdentifier
           element
            elementNoOptionSpec
             terminal_
              OPEN_CURLY
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              ev_e
             :
             rule_ref_or_keyword_as
              eventAccessorDeclarations
           element
            elementNoOptionSpec
             id_
              ev_c
             :
             terminal_
              CLOSE_CURLY
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              (
               
              #
              e
              v
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              e
              v
              _
              t
              y
              p
              ,
               
              #
              e
              v
              _
              i
              d
              ,
               
              #
              e
              v
              _
              e
              ,
               
              #
              e
              v
              _
              c
               
              )
              ;
               
              }
         )
     |
     alternative
      !
      element
       elementNoOptionSpec
        id_
         cd_id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              cd_fp
             :
             rule_ref_or_keyword_as
              formalParameterList
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              cd_ci
             :
             rule_ref_or_keyword_as
              constructorInitializer
         )
         ?
      element
       elementNoOptionSpec
        id_
         cd_cb
        :
        rule_ref_or_keyword_as
         constructorBody
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         i
         f
          
         (
          
         (
         (
         A
         S
         T
         N
         o
         d
         e
         )
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         )
         .
         G
         e
         t
         F
         i
         r
         s
         t
         C
         h
         i
         l
         d
         O
         f
         T
         y
         p
         e
         (
         S
         T
         A
         T
         I
         C
         )
          
         =
         =
          
         n
         u
         l
         l
          
         )
         \n
         \t
         \t
         \t
         {
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         C
         T
         O
         R
         _
         D
         E
         C
         L
         ,
          
         "CTOR_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         c
         d
         _
         i
         d
         ,
          
         #
         c
         d
         _
         c
         b
         ,
          
         #
         c
         d
         _
         f
         p
         ,
          
         #
         c
         d
         _
         c
         i
          
         )
         ;
          
         \n
         \t
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         c
         d
         _
         i
         d
          
         )
         ;
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         \t
         e
         l
         s
         e
         \n
         \t
         \t
         \t
         {
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         S
         T
         A
         T
         I
         C
         _
         C
         T
         O
         R
         _
         D
         E
         C
         L
         ,
          
         "STATIC_CTOR_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         c
         d
         _
         i
         d
         ,
          
         #
         c
         d
         _
         c
         b
          
         )
         ;
          
         \n
         \t
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         c
         d
         _
         i
         d
          
         )
         ;
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         }
     |
     alternative
      !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         (
         (
         L
         A
         (
         1
         )
          
         =
         =
          
         V
         O
         I
         D
         )
          
         &
         &
          
         (
         L
         A
         (
         2
         )
          
         !
         =
          
         S
         T
         A
         R
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         mdv_rt
        :
        rule_ref_or_keyword_as
         voidAsType
      element
       elementNoOptionSpec
        id_
         mdv_mn
        :
        rule_ref_or_keyword_as
         qualifiedIdentifier
      element
       elementNoOptionSpec
        id_
         mdv_opn
        :
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              mdv_fp
             :
             rule_ref_or_keyword_as
              formalParameterList
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         mdv_mb
        :
        rule_ref_or_keyword_as
         methodBody
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         M
         E
         T
         H
         O
         D
         _
         D
         E
         C
         L
         ,
          
         "METHOD_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         m
         d
         v
         _
         r
         t
         ,
          
         #
         m
         d
         v
         _
         m
         n
         ,
          
         #
         m
         d
         v
         _
         m
         b
         ,
          
         #
         m
         d
         v
         _
         f
         p
          
         )
         ;
          
         \n
         \t
         \t
          
          
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         m
         d
         v
         _
         m
         n
          
         )
         ;
         \n
         \t
         \t
         }
     |
     alternative
      !
      element
       elementNoOptionSpec
        id_
         typ1
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OPERATOR
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              od_op
             :
             rule_ref_or_keyword_as
              overloadableOperator
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              od_f1
             :
             rule_ref_or_keyword_as
              fixedOperatorParameter
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   od_f2
                  :
                  rule_ref_or_keyword_as
                   fixedOperatorParameter
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   I
                   s
                   B
                   i
                   n
                   a
                   r
                   y
                   O
                   p
                    
                   =
                    
                   t
                   r
                   u
                   e
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
               
              O
              p
              P
              a
              r
              a
              m
              s
               
              =
               
              #
              (
               
              [
              F
              O
              R
              M
              A
              L
              _
              P
              A
              R
              A
              M
              E
              T
              E
              R
              _
              L
              I
              S
              T
              ,
               
              "FORMAL_PARAMETER_LIST"
              ]
              ,
               
              #
              o
              d
              _
              f
              1
              ,
               
              #
              o
              d
              _
              f
              2
               
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              i
              f
               
              (
              !
              I
              s
              B
              i
              n
              a
              r
              y
              O
              p
              )
              \n
              \t
              \t
              \t
              \t
              {
              \n
              \t
              \t
              \t
              \t
              \t
              i
              f
               
              (
              #
              o
              d
              _
              o
              p
              .
              T
              y
              p
              e
               
              =
              =
               
              P
              L
              U
              S
              )
               
              \n
              \t
              \t
              \t
              \t
              \t
              \t
              #
              o
              d
              _
              o
              p
              .
              T
              y
              p
              e
               
              =
               
              U
              N
              A
              R
              Y
              _
              P
              L
              U
              S
              ;
              \n
              \t
              \t
              \t
              \t
              \t
              e
              l
              s
              e
               
              i
              f
               
              (
              #
              o
              d
              _
              o
              p
              .
              T
              y
              p
              e
               
              =
              =
               
              M
              I
              N
              U
              S
              )
              \n
              \t
              \t
              \t
              \t
              \t
              \t
              #
              o
              d
              _
              o
              p
              .
              T
              y
              p
              e
               
              =
               
              U
              N
              A
              R
              Y
              _
              M
              I
              N
              U
              S
              ;
              \n
              \t
              \t
              \t
              \t
              \t
              \t
              \n
              \t
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              [
              U
              N
              A
              R
              Y
              _
              O
              P
              _
              D
              E
              C
              L
              ,
               
              "UNARY_OP_DECL"
              ]
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              t
              y
              p
              1
              ,
               
              #
              o
              d
              _
              o
              p
              ,
               
              O
              p
              P
              a
              r
              a
              m
              s
               
              )
              ;
              \n
              \t
              \t
              \t
              \t
              }
              \n
              \t
              \t
              \t
              \t
              e
              l
              s
              e
              \n
              \t
              \t
              \t
              \t
              {
              \n
              \t
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              [
              B
              I
              N
              A
              R
              Y
              _
              O
              P
              _
              D
              E
              C
              L
              ,
               
              "BINARY_OP_DECL"
              ]
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              t
              y
              p
              1
              ,
               
              #
              o
              d
              _
              o
              p
              ,
               
              O
              p
              P
              a
              r
              a
              m
              s
               
              )
              ;
              \n
              \t
              \t
              \t
              \t
              }
              \n
              \t
              \t
              \t
              \t
              #
              #
              .
              C
              o
              p
              y
              P
              o
              s
              i
              t
              i
              o
              n
              F
              r
              o
              m
              (
               
              #
              o
              d
              _
              o
              p
               
              )
              ;
              \n
              \t
              \t
              \t
              }
           element
            elementNoOptionSpec
             id_
              od_body
             :
             rule_ref_or_keyword_as
              operatorBody
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              o
              d
              _
              b
              o
              d
              y
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              &
              &
               
              (
              L
              A
              (
              2
              )
              =
              =
              A
              S
              S
              I
              G
              N
               
              |
              |
               
              L
              A
              (
              2
              )
              =
              =
              S
              E
              M
              I
               
              |
              |
              L
              A
              (
              2
              )
              =
              =
              C
              O
              M
              M
              A
              )
               
              }
             ?
           element
            elementNoOptionSpec
             id_
              fd_v
             :
             rule_ref_or_keyword_as
              variableDeclarators
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              (
               
              [
              F
              I
              E
              L
              D
              _
              D
              E
              C
              L
              ,
               
              "FIELD_DECL"
              ]
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              t
              y
              p
              1
              ,
               
              #
              f
              d
              _
              v
               
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              qid1
             :
             rule_ref_or_keyword_as
              qualifiedIdentifier
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_CURLY
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   pd_a
                  :
                  rule_ref_or_keyword_as
                   accessorDeclarations
                element
                 elementNoOptionSpec
                  id_
                   pd_c
                  :
                  terminal_
                   CLOSE_CURLY
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   [
                   P
                   R
                   O
                   P
                   E
                   R
                   T
                   Y
                   _
                   D
                   E
                   C
                   L
                   ,
                    
                   "PROPERTY_DECL"
                   ]
                   ,
                    
                   #
                   a
                   t
                   t
                   r
                   i
                   b
                   s
                   ,
                    
                   #
                   m
                   o
                   d
                   i
                   f
                   i
                   e
                   r
                   s
                   ,
                    
                   #
                   t
                   y
                   p
                   1
                   ,
                    
                   #
                   q
                   i
                   d
                   1
                   ,
                    
                   #
                   p
                   d
                   _
                   a
                   ,
                    
                   #
                   p
                   d
                   _
                   c
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                   .
                   C
                   o
                   p
                   y
                   P
                   o
                   s
                   i
                   t
                   i
                   o
                   n
                   F
                   r
                   o
                   m
                   (
                    
                   #
                   q
                   i
                   d
                   1
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_PAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        md_fp
                       :
                       rule_ref_or_keyword_as
                        formalParameterList
                   )
                   ?
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_PAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   md_mb
                  :
                  rule_ref_or_keyword_as
                   methodBody
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   [
                   M
                   E
                   T
                   H
                   O
                   D
                   _
                   D
                   E
                   C
                   L
                   ,
                    
                   "METHOD_DECL"
                   ]
                   ,
                    
                   #
                   a
                   t
                   t
                   r
                   i
                   b
                   s
                   ,
                    
                   #
                   m
                   o
                   d
                   i
                   f
                   i
                   e
                   r
                   s
                   ,
                    
                   #
                   t
                   y
                   p
                   1
                   ,
                    
                   #
                   q
                   i
                   d
                   1
                   ,
                    
                   #
                   m
                   d
                   _
                   m
                   b
                   ,
                    
                   #
                   m
                   d
                   _
                   f
                   p
                    
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                    
                    
                   \t
                   #
                   #
                   .
                   C
                   o
                   p
                   y
                   P
                   o
                   s
                   i
                   t
                   i
                   o
                   n
                   F
                   r
                   o
                   m
                   (
                    
                   #
                   q
                   i
                   d
                   1
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOT
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   ixq_t
                  :
                  terminal_
                   THIS
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   ixq_fp
                  :
                  rule_ref_or_keyword_as
                   formalParameterList
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_CURLY
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   ixq_adecls
                  :
                  rule_ref_or_keyword_as
                   accessorDeclarations
                element
                 elementNoOptionSpec
                  id_
                   ixq_c
                  :
                  terminal_
                   CLOSE_CURLY
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   [
                   I
                   N
                   D
                   E
                   X
                   E
                   R
                   _
                   D
                   E
                   C
                   L
                   ,
                    
                   "INDEXER_DECL"
                   ]
                   ,
                    
                   #
                   a
                   t
                   t
                   r
                   i
                   b
                   s
                   ,
                    
                   #
                   m
                   o
                   d
                   i
                   f
                   i
                   e
                   r
                   s
                   ,
                    
                   #
                   t
                   y
                   p
                   1
                   ,
                    
                   #
                   q
                   i
                   d
                   1
                   ,
                    
                   #
                   i
                   x
                   q
                   _
                   t
                   ,
                    
                   #
                   i
                   x
                   q
                   _
                   f
                   p
                   ,
                    
                   #
                   i
                   x
                   q
                   _
                   a
                   d
                   e
                   c
                   l
                   s
                   ,
                    
                   #
                   i
                   x
                   q
                   _
                   c
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                   .
                   C
                   o
                   p
                   y
                   P
                   o
                   s
                   i
                   t
                   i
                   o
                   n
                   F
                   r
                   o
                   m
                   (
                    
                   #
                   i
                   x
                   q
                   _
                   t
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              ix_t
             :
             terminal_
              THIS
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              OPEN_BRACK
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              ix_fp
             :
             rule_ref_or_keyword_as
              formalParameterList
           element
            elementNoOptionSpec
             terminal_
              CLOSE_BRACK
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              OPEN_CURLY
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              ix_adecls
             :
             rule_ref_or_keyword_as
              accessorDeclarations
           element
            elementNoOptionSpec
             id_
              ix_c
             :
             terminal_
              CLOSE_CURLY
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              [
              I
              N
              D
              E
              X
              E
              R
              _
              D
              E
              C
              L
              ,
               
              "INDEXER_DECL"
              ]
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              t
              y
              p
              1
              ,
               
              #
              q
              i
              d
              1
              ,
               
              #
              i
              x
              _
              t
              ,
               
              #
              i
              x
              _
              f
              p
              ,
               
              #
              i
              x
              _
              a
              d
              e
              c
              l
              s
              ,
               
              #
              i
              x
              _
              c
               
              )
              ;
              \n
              \t
              \t
              \t
              \t
              #
              #
              .
              C
              o
              p
              y
              P
              o
              s
              i
              t
              i
              o
              n
              F
              r
              o
              m
              (
               
              #
              i
              x
              _
              t
               
              )
              ;
              \n
              \t
              \t
              \t
              }
         )
     |
     alternative
      !
      element
       elementNoOptionSpec
        id_
         imp
        :
        terminal_
         IMPLICIT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         OPERATOR
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         imp_typ1
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         imp_params
        :
        rule_ref_or_keyword_as
         oneOperatorParameter
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         C
         O
         N
         V
         _
         O
         P
         _
         D
         E
         C
         L
         ,
          
         "CONV_OP_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         m
         p
         ,
          
         #
         i
         m
         p
         _
         t
         y
         p
         1
         ,
          
         #
         i
         m
         p
         _
         p
         a
         r
         a
         m
         s
          
         )
         ;
         \n
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         i
         m
         p
          
         )
         ;
         \n
         \t
         \t
         }
      element
       elementNoOptionSpec
        id_
         imp_body
        :
        rule_ref_or_keyword_as
         operatorBody
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         i
         m
         p
         _
         b
         o
         d
         y
         )
         ;
          
         }
     |
     alternative
      !
      element
       elementNoOptionSpec
        id_
         exp
        :
        terminal_
         EXPLICIT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         OPERATOR
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         exp_typ1
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         exp_params
        :
        rule_ref_or_keyword_as
         oneOperatorParameter
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         C
         O
         N
         V
         _
         O
         P
         _
         D
         E
         C
         L
         ,
          
         "CONV_OP_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         e
         x
         p
         ,
          
         #
         e
         x
         p
         _
         t
         y
         p
         1
         ,
          
         #
         e
         x
         p
         _
         p
         a
         r
         a
         m
         s
          
         )
         ;
         \n
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         e
         x
         p
          
         )
         ;
         \n
         \t
         \t
         }
      element
       elementNoOptionSpec
        id_
         exp_body
        :
        rule_ref_or_keyword_as
         operatorBody
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         e
         x
         p
         _
         b
         o
         d
         y
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         typeDeclaration
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ,
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ]
    ;
   rule_
    id_
     variableDeclarators
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         variableDeclarator
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variableDeclarator
         )
         *
    ;
   rule_
    id_
     variableDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variableInitializer
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         V
         A
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         ,
          
         "VAR_DECLARATOR"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     variableInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              arrayInitializer
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              stackallocInitializer
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         v
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         =
          
         #
         (
          
         [
         V
         A
         R
         _
         I
         N
         I
         T
         ,
          
         "VAR_INIT"
         ]
         ,
          
         #
         v
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     returnType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         (
         (
         L
         A
         (
         1
         )
          
         =
         =
          
         V
         O
         I
         D
         )
          
         &
         &
          
         (
         L
         A
         (
         2
         )
          
         !
         =
          
         S
         T
         A
         R
         )
         )
          
         }
        ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         voidAsType
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
    ;
   rule_
    id_
     methodBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         body
    ;
   rule_
    id_
     formalParameterList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         fa
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              fixedParameters
             argActionBlock
              [
              #
              f
              a
              ]
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   pa
                  :
                  rule_ref_or_keyword_as
                   attributes
                  !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   parameterArray
                  argActionBlock
                   [
                   #
                   p
                   a
                   ]
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parameterArray
             argActionBlock
              [
              #
              f
              a
              ]
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         F
         O
         R
         M
         A
         L
         _
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "FORMAL_PARAMETER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     fixedParameters
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedParameter
        argActionBlock
         [
         a
         t
         t
         r
         i
         b
         s
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              a
             :
             rule_ref_or_keyword_as
              attributes
             !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              fixedParameter
             argActionBlock
              [
              #
              a
              ]
         )
         *
    ;
   rule_
    id_
     fixedParameter
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              mod
             :
             rule_ref_or_keyword_as
              parameterModifier
         )
         ?
      element
       elementNoOptionSpec
        id_
         typ
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         F
         I
         X
         E
         D
         ,
          
         "PARAMETER_FIXED"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         t
         y
         p
         ,
          
         #
         i
         d
         ,
          
         #
         m
         o
         d
          
         )
         ;
          
         \n
         \t
         \t
          
          
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         i
         d
          
         )
         ;
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     parameterModifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         REF
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OUT
         ast_type_spec
    ;
   rule_
    id_
     parameterArray
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         PARAMS
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         t
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         p
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         t
         ,
          
         #
         i
         d
          
         )
         ;
          
         }
    ;
   rule_
    id_
     accessorDeclarations
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a1
        :
        rule_ref_or_keyword_as
         attributes
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              g1
             :
             rule_ref_or_keyword_as
              getAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              g
              1
              ;
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   a2
                  :
                  rule_ref_or_keyword_as
                   attributes
                element
                 elementNoOptionSpec
                  id_
                   s1
                  :
                  rule_ref_or_keyword_as
                   setAccessorDeclaration
                  argActionBlock
                   [
                   #
                   a
                   2
                   ]
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   g
                   1
                   .
                   s
                   e
                   t
                   N
                   e
                   x
                   t
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   s
                   1
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                    
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                    
                   #
                   s
                   1
                   .
                   s
                   e
                   t
                   P
                   r
                   e
                   v
                   i
                   o
                   u
                   s
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   g
                   1
                   )
                   ;
                    
                   }
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             id_
              s2
             :
             rule_ref_or_keyword_as
              setAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              s
              2
              ;
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   a3
                  :
                  rule_ref_or_keyword_as
                   attributes
                element
                 elementNoOptionSpec
                  id_
                   g2
                  :
                  rule_ref_or_keyword_as
                   getAccessorDeclaration
                  argActionBlock
                   [
                   #
                   a
                   3
                   ]
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   s
                   2
                   .
                   s
                   e
                   t
                   N
                   e
                   x
                   t
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   g
                   2
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                    
                   #
                   g
                   2
                   .
                   s
                   e
                   t
                   P
                   r
                   e
                   v
                   i
                   o
                   u
                   s
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   s
                   2
                   )
                   ;
                    
                   }
              )
              ?
         )
    ;
   rule_
    id_
     getAccessorDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         g
        :
        terminal_
         "get"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         abody
        :
        rule_ref_or_keyword_as
         accessorBody
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         g
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         a
         b
         o
         d
         y
          
         )
         ;
          
         }
    ;
   rule_
    id_
     setAccessorDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         "set"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         abody
        :
        rule_ref_or_keyword_as
         accessorBody
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         s
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         a
         b
         o
         d
         y
          
         )
         ;
          
         }
    ;
   rule_
    id_
     accessorBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         body
    ;
   rule_
    id_
     eventAccessorDeclarations
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a1
        :
        rule_ref_or_keyword_as
         attributes
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              add1
             :
             rule_ref_or_keyword_as
              addAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             id_
              a2
             :
             rule_ref_or_keyword_as
              attributes
           element
            elementNoOptionSpec
             id_
              rem1
             :
             rule_ref_or_keyword_as
              removeAccessorDeclaration
             argActionBlock
              [
              #
              a
              2
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              a
              d
              d
              1
              ;
              \n
              \t
              \t
              \t
               
               
              \t
              #
              a
              d
              d
              1
              .
              s
              e
              t
              N
              e
              x
              t
              S
              i
              b
              l
              i
              n
              g
              (
              #
              r
              e
              m
              1
              )
              ;
               
              \n
              \t
              \t
              \t
               
               
              \t
              #
              r
              e
              m
              1
              .
              s
              e
              t
              P
              r
              e
              v
              i
              o
              u
              s
              S
              i
              b
              l
              i
              n
              g
              (
              #
              a
              d
              d
              1
              )
              ;
               
              \n
              \t
              \t
              \t
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              rem2
             :
             rule_ref_or_keyword_as
              removeAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             id_
              a3
             :
             rule_ref_or_keyword_as
              attributes
           element
            elementNoOptionSpec
             id_
              add2
             :
             rule_ref_or_keyword_as
              addAccessorDeclaration
             argActionBlock
              [
              #
              a
              3
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              a
              d
              d
              2
              ;
              \n
              \t
              \t
              \t
               
               
              \t
              #
              a
              d
              d
              2
              .
              s
              e
              t
              N
              e
              x
              t
              S
              i
              b
              l
              i
              n
              g
              (
              #
              r
              e
              m
              2
              )
              ;
              \n
              \t
              \t
              \t
               
               
              \t
              #
              r
              e
              m
              2
              .
              s
              e
              t
              P
              r
              e
              v
              i
              o
              u
              s
              S
              i
              b
              l
              i
              n
              g
              (
              #
              a
              d
              d
              2
              )
              ;
               
              \n
              \t
              \t
              \t
              }
         )
    ;
   rule_
    id_
     addAccessorDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         "add"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         a
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         b
          
         )
         ;
          
         }
    ;
   rule_
    id_
     removeAccessorDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         r
        :
        terminal_
         "remove"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         r
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         b
          
         )
         ;
          
         }
    ;
   rule_
    id_
     overloadableOperator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PLUS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MINUS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LOG_NOT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BIN_NOT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INC
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEC
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         TRUE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FALSE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DIV
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MOD
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BIN_AND
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BIN_OR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BIN_XOR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SHIFTL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SHIFTR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NOT_EQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         GTHAN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LTHAN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         GTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LTE
         ast_type_spec
    ;
   rule_
    id_
     oneOperatorParameter
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedOperatorParameter
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         F
         O
         R
         M
         A
         L
         _
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "FORMAL_PARAMETER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     fixedOperatorParameter
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         typ
        :
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         F
         I
         X
         E
         D
         ,
          
         "PARAMETER_FIXED"
         ]
         ,
          
         [
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         S
         E
         C
         T
         I
         O
         N
         S
         ,
          
         "ATTRIBUTE_SECTIONS"
         ]
         ,
          
         #
         t
         y
         p
         ,
          
         #
         i
         d
          
         )
         ;
          
         \n
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         i
         d
          
         )
         ;
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     operatorBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         body
    ;
   rule_
    id_
     constructorInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BASE
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   argumentList
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              THIS
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   argumentList
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     constructorBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         body
    ;
   rule_
    id_
     destructorDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        terminal_
         BIN_NOT
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         dbody
        :
        rule_ref_or_keyword_as
         destructorBody
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         D
         T
         O
         R
         _
         D
         E
         C
         L
         ,
          
         "DTOR_DECL"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         d
         ,
          
         #
         d
         b
         o
         d
         y
          
         )
         ;
          
         \n
         \t
         \t
         \t
         #
         #
         .
         C
         o
         p
         y
         P
         o
         s
         i
         t
         i
         o
         n
         F
         r
         o
         m
         (
          
         #
         i
         d
          
         )
         ;
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     destructorBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        rule_ref_or_keyword_as
         body
    ;
   rule_
    id_
     structDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         st
        :
        terminal_
         STRUCT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         si
        :
        rule_ref_or_keyword_as
         structInterfaces
      element
       elementNoOptionSpec
        id_
         sb
        :
        rule_ref_or_keyword_as
         structBody
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         s
         t
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         d
         ,
          
         #
         s
         i
         ,
          
         #
         s
         b
          
         )
         ;
          
         }
    ;
   rule_
    id_
     structInterfaces
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   type
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         S
         T
         R
         U
         C
         T
         _
         B
         A
         S
         E
         ,
          
         "STRUCT_BASE"
         ]
         ,
          
         #
         s
         t
         r
         u
         c
         t
         I
         n
         t
         e
         r
         f
         a
         c
         e
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     structBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         structMemberDeclarations
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     structMemberDeclarations
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              S
              t
              r
              u
              c
              t
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structMemberDeclaration
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         M
         E
         M
         B
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "MEMBER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     structMemberDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
        !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         typeMemberDeclaration
        argActionBlock
         [
         #
         a
         ,
          
         #
         m
         ]
    ;
   rule_
    id_
     nonArrayType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
    ;
   rule_
    id_
     rankSpecifiers
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              rankSpecifier
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         r
         a
         n
         k
         S
         p
         e
         c
         i
         f
         i
         e
         r
         s
          
         =
          
         #
         (
          
         [
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         S
         ,
          
         "ARRAY_RANKS"
         ]
         ,
          
         #
         r
         a
         n
         k
         S
         p
         e
         c
         i
         f
         i
         e
         r
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     rankSpecifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_BRACK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         CLOSE_BRACK
         ast_type_spec
          !
    ;
   rule_
    id_
     arrayInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         A
         R
         R
         A
         Y
         _
         I
         N
         I
         T
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CLOSE_CURLY
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variableInitializerList
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_CURLY
              ast_type_spec
         )
    ;
   rule_
    id_
     variableInitializerList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         variableInitializer
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variableInitializer
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         v
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
         L
         i
         s
         t
          
         =
          
         #
         (
          
         [
         V
         A
         R
         _
         I
         N
         I
         T
         _
         L
         I
         S
         T
         ,
          
         "VAR_INIT_LIST"
         ]
         ,
          
         #
         v
         a
         r
         i
         a
         b
         l
         e
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     interfaceDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         iface
        :
        terminal_
         INTERFACE
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         ibase
        :
        rule_ref_or_keyword_as
         interfaceBase
      element
       elementNoOptionSpec
        id_
         ibody
        :
        rule_ref_or_keyword_as
         interfaceBody
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         i
         f
         a
         c
         e
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         d
         ,
          
         #
         i
         b
         a
         s
         e
         ,
          
         #
         i
         b
         o
         d
         y
          
         )
         ;
          
          
         }
    ;
   rule_
    id_
     interfaceBase
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   type
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         I
         N
         T
         E
         R
         F
         A
         C
         E
         _
         B
         A
         S
         E
         ,
          
         "INTERFACE_BASE"
         ]
         ,
          
         #
         i
         n
         t
         e
         r
         f
         a
         c
         e
         B
         a
         s
         e
          
         )
         ;
          
         }
    ;
   rule_
    id_
     interfaceBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         interfaceMemberDeclarations
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     interfaceMemberDeclarations
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              I
              n
              t
              e
              r
              f
              a
              c
              e
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              interfaceMemberDeclaration
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         M
         E
         M
         B
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "MEMBER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     interfaceMemberDeclaration
    ruleAction
     actionBlock
      {
      \n
      \t
      A
      S
      T
      N
      o
      d
      e
       
      m
      o
      d
      i
      f
      i
      e
      r
      s
       
      =
       
      #
      [
      M
      O
      D
      I
      F
      I
      E
      R
      S
      ,
       
      "MODIFIERS"
      ]
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         attribs
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              n
             :
             terminal_
              NEW
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              m
              o
              d
              i
              f
              i
              e
              r
              s
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              n
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              (
              (
              L
              A
              (
              1
              )
               
              =
              =
               
              V
              O
              I
              D
              )
               
              &
              &
               
              (
              L
              A
              (
              2
              )
               
              !
              =
               
              S
              T
              A
              R
              )
              )
               
              }
             ?
           element
            elementNoOptionSpec
             id_
              im1_rt
             :
             rule_ref_or_keyword_as
              voidAsType
           element
            elementNoOptionSpec
             id_
              im1_id
             :
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             terminal_
              OPEN_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   im1_fp
                  :
                  rule_ref_or_keyword_as
                   formalParameterList
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              im1_s
             :
             terminal_
              SEMI
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              i
              m
              1
              _
              s
              .
              s
              e
              t
              T
              y
              p
              e
              (
              E
              M
              P
              T
              Y
              _
              S
              T
              M
              T
              )
              ;
               
              }
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              #
              #
               
              =
               
              #
              (
               
              [
              M
              E
              T
              H
              O
              D
              _
              D
              E
              C
              L
              ,
               
              "METHOD_DECL"
              ]
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              i
              m
              1
              _
              r
              t
              ,
               
              #
              i
              m
              1
              _
              i
              d
              ,
               
              #
              i
              m
              1
              _
              s
              ,
               
              #
              i
              m
              1
              _
              f
              p
               
              )
              ;
               
              \n
              \t
              \t
              \t
              \t
              #
              #
              .
              C
              o
              p
              y
              P
              o
              s
              i
              t
              i
              o
              n
              F
              r
              o
              m
              (
               
              #
              i
              m
              1
              _
              i
              d
               
              )
              ;
              \n
              \t
              \t
              \t
              }
          |
          alternative
           !
           element
            elementNoOptionSpec
             id_
              typ1
             :
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   ix_t
                  :
                  terminal_
                   THIS
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   ix_fp
                  :
                  rule_ref_or_keyword_as
                   formalParameterList
                element
                 elementNoOptionSpec
                  terminal_
                   CLOSE_BRACK
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  terminal_
                   OPEN_CURLY
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   ix_acc
                  :
                  rule_ref_or_keyword_as
                   interfaceAccessors
                element
                 elementNoOptionSpec
                  id_
                   ix_c
                  :
                  terminal_
                   CLOSE_CURLY
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   [
                   I
                   N
                   D
                   E
                   X
                   E
                   R
                   _
                   D
                   E
                   C
                   L
                   ,
                    
                   "INDEXER_DECL"
                   ]
                   ,
                    
                   #
                   a
                   t
                   t
                   r
                   i
                   b
                   s
                   ,
                    
                   #
                   m
                   o
                   d
                   i
                   f
                   i
                   e
                   r
                   s
                   ,
                    
                   #
                   t
                   y
                   p
                   1
                   ,
                    
                   #
                   i
                   x
                   _
                   t
                   ,
                    
                   #
                   i
                   x
                   _
                   f
                   p
                   ,
                    
                   #
                   i
                   x
                   _
                   a
                   c
                   c
                   ,
                    
                   #
                   i
                   x
                   _
                   c
                    
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   #
                   #
                   .
                   C
                   o
                   p
                   y
                   P
                   o
                   s
                   i
                   t
                   i
                   o
                   n
                   F
                   r
                   o
                   m
                   (
                    
                   #
                   i
                   x
                   _
                   t
                    
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   id1
                  :
                  rule_ref_or_keyword_as
                   identifier
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        OPEN_PAREN
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            id_
                             im2_fp
                            :
                            rule_ref_or_keyword_as
                             formalParameterList
                        )
                        ?
                     element
                      elementNoOptionSpec
                       terminal_
                        CLOSE_PAREN
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       id_
                        im2_s
                       :
                       terminal_
                        SEMI
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                         
                        #
                        i
                        m
                        2
                        _
                        s
                        .
                        s
                        e
                        t
                        T
                        y
                        p
                        e
                        (
                        E
                        M
                        P
                        T
                        Y
                        _
                        S
                        T
                        M
                        T
                        )
                        ;
                         
                        }
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        \t
                        #
                        #
                         
                        =
                         
                        #
                        (
                         
                        [
                        M
                        E
                        T
                        H
                        O
                        D
                        _
                        D
                        E
                        C
                        L
                        ,
                         
                        "METHOD_DECL"
                        ]
                        ,
                         
                        #
                        a
                        t
                        t
                        r
                        i
                        b
                        s
                        ,
                         
                        #
                        m
                        o
                        d
                        i
                        f
                        i
                        e
                        r
                        s
                        ,
                         
                        #
                        t
                        y
                        p
                        1
                        ,
                         
                        #
                        i
                        d
                        1
                        ,
                         
                        #
                        i
                        m
                        2
                        _
                        s
                        ,
                         
                        #
                        i
                        m
                        2
                        _
                        f
                        p
                         
                        )
                        ;
                         
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        \t
                        #
                        #
                        .
                        C
                        o
                        p
                        y
                        P
                        o
                        s
                        i
                        t
                        i
                        o
                        n
                        F
                        r
                        o
                        m
                        (
                         
                        #
                        i
                        d
                        1
                         
                        )
                        ;
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        }
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        OPEN_CURLY
                        ast_type_spec
                         !
                     element
                      elementNoOptionSpec
                       id_
                        ip_acc
                       :
                       rule_ref_or_keyword_as
                        interfaceAccessors
                     element
                      elementNoOptionSpec
                       id_
                        ip_c
                       :
                       terminal_
                        CLOSE_CURLY
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        \t
                        #
                        #
                         
                        =
                         
                        #
                        (
                         
                        [
                        P
                        R
                        O
                        P
                        E
                        R
                        T
                        Y
                        _
                        D
                        E
                        C
                        L
                        ,
                         
                        "PROPERTY_DECL"
                        ]
                        ,
                         
                        #
                        a
                        t
                        t
                        r
                        i
                        b
                        s
                        ,
                         
                        #
                        m
                        o
                        d
                        i
                        f
                        i
                        e
                        r
                        s
                        ,
                         
                        #
                        t
                        y
                        p
                        1
                        ,
                         
                        #
                        i
                        d
                        1
                        ,
                         
                        #
                        i
                        p
                        _
                        a
                        c
                        c
                        ,
                         
                        #
                        i
                        p
                        _
                        c
                         
                        )
                        ;
                         
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        \t
                        #
                        #
                        .
                        C
                        o
                        p
                        y
                        P
                        o
                        s
                        i
                        t
                        i
                        o
                        n
                        F
                        r
                        o
                        m
                        (
                         
                        #
                        i
                        d
                        1
                         
                        )
                        ;
                        \n
                        \t
                        \t
                        \t
                        \t
                        \t
                        }
                   )
              )
          |
          alternative
           element
            elementNoOptionSpec
             id_
              ev
             :
             terminal_
              EVENT
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              ev_typ
             :
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             id_
              ev_id
             :
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              (
               
              #
              e
              v
              ,
               
              #
              a
              t
              t
              r
              i
              b
              s
              ,
               
              #
              m
              o
              d
              i
              f
              i
              e
              r
              s
              ,
               
              #
              e
              v
              _
              t
              y
              p
              ,
               
              #
              (
               
              [
              V
              A
              R
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              ,
               
              "VAR_DECLARATOR"
              ]
              ,
               
              #
              e
              v
              _
              i
              d
               
              )
               
              )
              ;
               
              }
         )
    ;
   rule_
    id_
     interfaceAccessors
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a1
        :
        rule_ref_or_keyword_as
         attributes
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              g1
             :
             rule_ref_or_keyword_as
              getAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              g
              1
              ;
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   a2
                  :
                  rule_ref_or_keyword_as
                   attributes
                element
                 elementNoOptionSpec
                  id_
                   s1
                  :
                  rule_ref_or_keyword_as
                   setAccessorDeclaration
                  argActionBlock
                   [
                   #
                   a
                   2
                   ]
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   g
                   1
                   .
                   s
                   e
                   t
                   N
                   e
                   x
                   t
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   s
                   1
                   )
                   ;
                    
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                    
                   #
                   s
                   1
                   .
                   s
                   e
                   t
                   P
                   r
                   e
                   v
                   i
                   o
                   u
                   s
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   g
                   1
                   )
                   ;
                    
                   }
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             id_
              s2
             :
             rule_ref_or_keyword_as
              setAccessorDeclaration
             argActionBlock
              [
              #
              a
              1
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              s
              2
              ;
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   a3
                  :
                  rule_ref_or_keyword_as
                   attributes
                element
                 elementNoOptionSpec
                  id_
                   g2
                  :
                  rule_ref_or_keyword_as
                   getAccessorDeclaration
                  argActionBlock
                   [
                   #
                   a
                   3
                   ]
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   #
                   s
                   2
                   .
                   s
                   e
                   t
                   N
                   e
                   x
                   t
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   g
                   2
                   )
                   ;
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                    
                   #
                   g
                   2
                   .
                   s
                   e
                   t
                   P
                   r
                   e
                   v
                   i
                   o
                   u
                   s
                   S
                   i
                   b
                   l
                   i
                   n
                   g
                   (
                   #
                   s
                   2
                   )
                   ;
                    
                   }
              )
              ?
         )
    ;
   rule_
    id_
     enumDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         en
        :
        terminal_
         ENUM
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        id_
         ebase
        :
        rule_ref_or_keyword_as
         enumBase
      element
       elementNoOptionSpec
        id_
         ebody
        :
        rule_ref_or_keyword_as
         enumBody
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         e
         n
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         i
         d
         ,
          
         #
         e
         b
         a
         s
         e
         ,
          
         #
         e
         b
         o
         d
         y
          
         )
         ;
          
         }
    ;
   rule_
    id_
     enumBase
    !
    ruleAction
     actionBlock
      {
      \n
      \t
      \t
      b
      o
      o
      l
       
      e
      m
      p
      t
      y
       
      =
       
      t
      r
      u
      e
      ;
       
      \n
      \t
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              c
             :
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              c
              .
              s
              e
              t
              T
              y
              p
              e
              (
              E
              N
              U
              M
              _
              B
              A
              S
              E
              )
              ;
               
              e
              m
              p
              t
              y
               
              =
               
              f
              a
              l
              s
              e
              ;
               
              }
           element
            elementNoOptionSpec
             id_
              t
             :
             rule_ref_or_keyword_as
              integralType
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         i
         f
          
         (
         e
         m
         p
         t
         y
         )
         \n
         \t
         \t
         \t
         {
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         [
         E
         N
         U
         M
         _
         B
         A
         S
         E
         ,
          
         "ENUM_BASE"
         ]
         ;
          
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         \t
         e
         l
         s
         e
         \n
         \t
         \t
         \t
         {
         \n
         \t
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         #
         c
         ,
          
         #
         t
          
         )
         ;
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     enumBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_CURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         _
         B
         O
         D
         Y
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumMemberDeclarations
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
              )
              ?
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_CURLY
         ast_type_spec
    ;
   rule_
    id_
     enumMemberDeclarations
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a1
        :
        rule_ref_or_keyword_as
         attributes
        !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         enumMemberDeclaration
        argActionBlock
         [
         #
         a
         1
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              a2
             :
             rule_ref_or_keyword_as
              attributes
             !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumMemberDeclaration
             argActionBlock
              [
              #
              a
              2
              ]
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         M
         E
         M
         B
         E
         R
         _
         L
         I
         S
         T
         ,
          
         "MEMBER_LIST"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     enumMemberDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             id_
              cexpr
             :
             rule_ref_or_keyword_as
              constantExpression
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         i
         d
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         c
         e
         x
         p
         r
          
         )
         ;
          
         }
    ;
   rule_
    id_
     delegateDeclaration
    !
    argActionBlock
     [
     A
     S
     T
      
     a
     t
     t
     r
     i
     b
     s
     ,
      
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    ruleAction
     actionBlock
      {
       
      \n
      \t
      \t
      \t
      A
      S
      T
       
      t
      y
      p
       
      =
       
      n
      u
      l
      l
      ;
       
      \n
      \t
      \t
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         dlg
        :
        terminal_
         DELEGATE
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              (
              (
              L
              A
              (
              1
              )
               
              =
              =
               
              V
              O
              I
              D
              )
               
              &
              &
               
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              2
              )
              )
               
              }
             ?
           element
            elementNoOptionSpec
             id_
              typ1
             :
             rule_ref_or_keyword_as
              voidAsType
           element
            elementNoOptionSpec
             actionBlock
              {
               
              t
              y
              p
               
              =
               
              #
              t
              y
              p
              1
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              typ2
             :
             rule_ref_or_keyword_as
              type
           element
            elementNoOptionSpec
             actionBlock
              {
               
              t
              y
              p
               
              =
               
              #
              t
              y
              p
              2
              ;
               
              }
         )
      element
       elementNoOptionSpec
        id_
         id
        :
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              fp
             :
             rule_ref_or_keyword_as
              formalParameterList
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         d
         l
         g
         ,
          
         #
         a
         t
         t
         r
         i
         b
         s
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
          
         #
         t
         y
         p
         ,
          
         #
         i
         d
         ,
          
         #
         f
         p
          
         )
         ;
          
         }
    ;
   rule_
    id_
     globalAttributes
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              !
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              globalAttributeSection
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   preprocessorDirective
                  argActionBlock
                   [
                   C
                   o
                   d
                   e
                   M
                   a
                   s
                   k
                   E
                   n
                   u
                   m
                   s
                   .
                   G
                   l
                   o
                   b
                   a
                   l
                   A
                   t
                   t
                   r
                   i
                   b
                   u
                   t
                   e
                   s
                   ]
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              G
              l
              o
              b
              a
              l
              A
              t
              t
              r
              i
              b
              u
              t
              e
              s
              ]
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         g
         l
         o
         b
         a
         l
         A
         t
         t
         r
         i
         b
         u
         t
         e
         s
          
         =
          
         #
         (
          
         [
         G
         L
         O
         B
         A
         L
         _
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         S
         E
         C
         T
         I
         O
         N
         S
         ,
          
         "GLOBAL_ATTRIBUTE_SECTIONS"
         ]
         ,
          
         #
         g
         l
         o
         b
         a
         l
         A
         t
         t
         r
         i
         b
         u
         t
         e
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     globalAttributeSection
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_BRACK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         G
         L
         O
         B
         A
         L
         _
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         S
         E
         C
         T
         I
         O
         N
         )
         ;
          
         }
      element
       elementNoOptionSpec
        terminal_
         "assembly"
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         attributeList
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_BRACK
         ast_type_spec
          !
    ;
   rule_
    id_
     attributes
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              !
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attributeSection
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   preprocessorDirective
                  argActionBlock
                   [
                   C
                   o
                   d
                   e
                   M
                   a
                   s
                   k
                   E
                   n
                   u
                   m
                   s
                   .
                   A
                   t
                   t
                   r
                   i
                   b
                   u
                   t
                   e
                   s
                   ]
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              A
              t
              t
              r
              i
              b
              u
              t
              e
              s
              ]
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
         s
          
         =
          
         #
         (
          
         [
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         S
         E
         C
         T
         I
         O
         N
         S
         ,
          
         "ATTRIBUTE_SECTIONS"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
         s
          
         )
         ;
          
         }
    ;
   rule_
    id_
     attributeSection
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         o
        :
        terminal_
         OPEN_BRACK
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         o
         .
         s
         e
         t
         T
         y
         p
         e
         (
         A
         T
         T
         R
         I
         B
         U
         T
         E
         _
         S
         E
         C
         T
         I
         O
         N
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attributeTarget
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         attributeList
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         CLOSE_BRACK
         ast_type_spec
          !
    ;
   rule_
    id_
     attributeTarget
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "field"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EVENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "method"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "module"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "param"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "property"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         RETURN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "type"
         ast_type_spec
    ;
   rule_
    id_
     attributeList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         attribute
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attribute
         )
         *
    ;
   rule_
    id_
     attribute
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              predefinedTypeName
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              qualifiedIdentifier
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attributeArguments
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
          
         =
          
         #
         (
          
         [
         A
         T
         T
         R
         I
         B
         U
         T
         E
         ,
          
         "ATTRIBUTE"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
          
         )
         ;
          
         }
    ;
   rule_
    id_
     attributeArguments
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              (
              I
              d
              e
              n
              t
              i
              f
              i
              e
              r
              R
              u
              l
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              &
              &
               
              (
              L
              A
              (
              2
              )
               
              =
              =
               
              A
              S
              S
              I
              G
              N
              )
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              namedArgumentList
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              positionalArgumentList
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   namedArgumentList
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     positionalArgumentList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         positionalArgument
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              positionalArgument
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         o
         s
         i
         t
         i
         o
         n
         a
         l
         A
         r
         g
         u
         m
         e
         n
         t
         L
         i
         s
         t
          
         =
          
         #
         (
          
         [
         P
         O
         S
         I
         T
         I
         O
         N
         A
         L
         _
         A
         R
         G
         L
         I
         S
         T
         ,
          
         "POSITIONAL_ARGLIST"
         ]
         ,
          
         #
         p
         o
         s
         i
         t
         i
         o
         n
         a
         l
         A
         r
         g
         u
         m
         e
         n
         t
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     positionalArgument
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         attributeArgumentExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         o
         s
         i
         t
         i
         o
         n
         a
         l
         A
         r
         g
         u
         m
         e
         n
         t
          
         =
          
         #
         (
          
         [
         P
         O
         S
         I
         T
         I
         O
         N
         A
         L
         _
         A
         R
         G
         ,
          
         "POSITIONAL_ARG"
         ]
         ,
          
         #
         p
         o
         s
         i
         t
         i
         o
         n
         a
         l
         A
         r
         g
         u
         m
         e
         n
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     namedArgumentList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         namedArgument
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              namedArgument
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         n
         a
         m
         e
         d
         A
         r
         g
         u
         m
         e
         n
         t
         L
         i
         s
         t
          
         =
          
         #
         (
          
         [
         N
         A
         M
         E
         D
         _
         A
         R
         G
         L
         I
         S
         T
         ,
          
         "NAMED_ARGLIST"
         ]
         ,
          
         #
         n
         a
         m
         e
         d
         A
         r
         g
         u
         m
         e
         n
         t
         L
         i
         s
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     namedArgument
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         attributeArgumentExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         n
         a
         m
         e
         d
         A
         r
         g
         u
         m
         e
         n
         t
          
         =
          
         #
         (
          
         [
         N
         A
         M
         E
         D
         _
         A
         R
         G
         ,
          
         "NAMED_ARG"
         ]
         ,
          
         #
         n
         a
         m
         e
         d
         A
         r
         g
         u
         m
         e
         n
         t
          
         )
         ;
          
         }
    ;
   rule_
    id_
     attributeArgumentExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
         A
         r
         g
         u
         m
         e
         n
         t
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         =
          
         #
         (
          
         [
         A
         T
         T
         R
         I
         B
         _
         A
         R
         G
         U
         M
         E
         N
         T
         _
         E
         X
         P
         R
         ,
          
         "ATTRIB_ARGUMENT_EXPR"
         ]
         ,
          
         #
         a
         t
         t
         r
         i
         b
         u
         t
         e
         A
         r
         g
         u
         m
         e
         n
         t
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         )
         ;
          
         }
    ;
   rule_
    id_
     fixedStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         FIXED
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         OPEN_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedPointerDeclarators
      element
       elementNoOptionSpec
        terminal_
         CLOSE_PAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         embeddedStatement
    ;
   rule_
    id_
     fixedPointerDeclarators
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedPointerDeclarator
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              fixedPointerDeclarator
         )
         *
    ;
   rule_
    id_
     fixedPointerDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fixedPointerInitializer
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         P
         T
         R
         _
         D
         E
         C
         L
         A
         R
         A
         T
         O
         R
         ,
          
         "PTR_DECLARATOR"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     fixedPointerInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         P
         T
         R
         _
         I
         N
         I
         T
         ,
          
         "PTR_INIT"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     stackallocInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         STACKALLOC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         qualifiedIdentifier
      element
       elementNoOptionSpec
        terminal_
         OPEN_BRACK
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         CLOSE_BRACK
         ast_type_spec
          !
    ;
   rule_
    id_
     justPreprocessorDirectives
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              S
              i
              n
              g
              l
              e
              L
              i
              n
              e
              P
              P
              D
              i
              r
              e
              c
              t
              i
              v
              e
              I
              s
              P
              r
              e
              d
              i
              c
              t
              e
              d
              B
              y
              L
              A
              (
              1
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              singleLinePreprocessorDirective
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   preprocessorDirective
                  argActionBlock
                   [
                   C
                   o
                   d
                   e
                   M
                   a
                   s
                   k
                   E
                   n
                   u
                   m
                   s
                   .
                   P
                   r
                   e
                   p
                   r
                   o
                   c
                   e
                   s
                   s
                   o
                   r
                   D
                   i
                   r
                   e
                   c
                   t
                   i
                   v
                   e
                   s
                   O
                   n
                   l
                   y
                   ]
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              P
              r
              e
              p
              r
              o
              c
              e
              s
              s
              o
              r
              D
              i
              r
              e
              c
              t
              i
              v
              e
              s
              O
              n
              l
              y
              ]
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \t
         \n
         \t
         \t
         \t
         #
         #
          
         =
          
         #
         (
          
         [
         P
         P
         _
         D
         I
         R
         E
         C
         T
         I
         V
         E
         S
         ,
          
         "PP_DIRECTIVES"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     preprocessorDirective
    argActionBlock
     [
     C
     o
     d
     e
     M
     a
     s
     k
     E
     n
     u
     m
     s
      
     c
     o
     d
     e
     M
     a
     s
     k
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_DEFINE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         PP_IDENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_UNDEFINE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         PP_IDENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         lineDirective
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_ERROR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ppMessage
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_WARNING
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ppMessage
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         regionDirective
        argActionBlock
         [
         c
         o
         d
         e
         M
         a
         s
         k
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalDirective
        argActionBlock
         [
         c
         o
         d
         e
         M
         a
         s
         k
         ]
    ;
   rule_
    id_
     singleLinePreprocessorDirective
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_DEFINE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         PP_IDENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_UNDEFINE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         PP_IDENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         lineDirective
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_ERROR
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ppMessage
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_WARNING
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         ppMessage
    ;
   rule_
    id_
     lineDirective
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PP_LINE
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DEFAULT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_NUMBER
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PP_FILENAME
                   ast_type_spec
              )
              ?
         )
    ;
   rule_
    id_
     regionDirective
    !
    argActionBlock
     [
     C
     o
     d
     e
     M
     a
     s
     k
     E
     n
     u
     m
     s
      
     c
     o
     d
     e
     M
     a
     s
     k
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         reg
        :
        terminal_
         PP_REGION
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        id_
         msg1
        :
        rule_ref_or_keyword_as
         ppMessage
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         r
         e
         g
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         m
         s
         g
         1
         )
         ;
          
         }
      element
       elementNoOptionSpec
        id_
         drtv
        :
        rule_ref_or_keyword_as
         directiveBlock
        argActionBlock
         [
         c
         o
         d
         e
         M
         a
         s
         k
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         r
         e
         g
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         d
         r
         t
         v
         )
         ;
          
         }
      element
       elementNoOptionSpec
        id_
         endreg
        :
        terminal_
         PP_ENDREGION
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         msg2
        :
        rule_ref_or_keyword_as
         ppMessage
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         #
         e
         n
         d
         r
         e
         g
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         m
         s
         g
         2
         )
         ;
          
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         #
         r
         e
         g
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         e
         n
         d
         r
         e
         g
         )
         ;
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         }
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         r
         e
         g
         ;
          
         }
    ;
   rule_
    id_
     conditionalDirective
    !
    argActionBlock
     [
     C
     o
     d
     e
     M
     a
     s
     k
     E
     n
     u
     m
     s
      
     c
     o
     d
     e
     M
     a
     s
     k
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         hashIF
        :
        terminal_
         PP_COND_IF
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        id_
         exprIF
        :
        rule_ref_or_keyword_as
         preprocessExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         h
         a
         s
         h
         I
         F
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         e
         x
         p
         r
         I
         F
         )
         ;
          
         }
      element
       elementNoOptionSpec
        id_
         drtvIF
        :
        rule_ref_or_keyword_as
         directiveBlock
        argActionBlock
         [
         c
         o
         d
         e
         M
         a
         s
         k
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         h
         a
         s
         h
         I
         F
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         d
         r
         t
         v
         I
         F
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              hashELIF
             :
             terminal_
              PP_COND_ELIF
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              exprELIF
             :
             rule_ref_or_keyword_as
              preprocessExpression
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              h
              a
              s
              h
              E
              L
              I
              F
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              e
              x
              p
              r
              E
              L
              I
              F
              )
              ;
               
              }
           element
            elementNoOptionSpec
             id_
              drtvELIF
             :
             rule_ref_or_keyword_as
              directiveBlock
             argActionBlock
              [
              c
              o
              d
              e
              M
              a
              s
              k
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              h
              a
              s
              h
              E
              L
              I
              F
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              d
              r
              t
              v
              E
              L
              I
              F
              )
              ;
               
              }
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              h
              a
              s
              h
              I
              F
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              h
              a
              s
              h
              E
              L
              I
              F
              )
              ;
               
              }
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              hashELSE
             :
             terminal_
              PP_COND_ELSE
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              drtvELSE
             :
             rule_ref_or_keyword_as
              directiveBlock
             argActionBlock
              [
              c
              o
              d
              e
              M
              a
              s
              k
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              h
              a
              s
              h
              E
              L
              S
              E
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              d
              r
              t
              v
              E
              L
              S
              E
              )
              ;
               
              }
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              h
              a
              s
              h
              I
              F
              .
              a
              d
              d
              C
              h
              i
              l
              d
              E
              x
              (
              #
              h
              a
              s
              h
              E
              L
              S
              E
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        id_
         hashENDIF
        :
        terminal_
         PP_COND_ENDIF
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         h
         a
         s
         h
         I
         F
         .
         a
         d
         d
         C
         h
         i
         l
         d
         E
         x
         (
         #
         h
         a
         s
         h
         E
         N
         D
         I
         F
         )
         ;
          
         }
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         h
         a
         s
         h
         I
         F
         ;
          
         }
    ;
   rule_
    id_
     directiveBlock
    argActionBlock
     [
     C
     o
     d
     e
     M
     a
     s
     k
     E
     n
     u
     m
     s
      
     c
     o
     d
     e
     M
     a
     s
     k
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessorDirective
             argActionBlock
              [
              c
              o
              d
              e
              M
              a
              s
              k
              ]
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              U
              s
              i
              n
              g
              D
              i
              r
              e
              c
              t
              i
              v
              e
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              usingDirective
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              G
              l
              o
              b
              a
              l
              A
              t
              t
              r
              i
              b
              u
              t
              e
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              globalAttributeSection
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              A
              t
              t
              r
              i
              b
              u
              t
              e
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              attributeSection
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              N
              a
              m
              e
              s
              p
              a
              c
              e
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              namespaceMemberDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              C
              l
              a
              s
              s
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              classMemberDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              S
              t
              r
              u
              c
              t
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structMemberDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              I
              n
              t
              e
              r
              f
              a
              c
              e
              M
              e
              m
              b
              e
              r
              D
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              interfaceMemberDeclaration
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              N
              o
              t
              E
              x
              c
              l
              u
              d
              e
              d
              (
              c
              o
              d
              e
              M
              a
              s
              k
              ,
               
              C
              o
              d
              e
              M
              a
              s
              k
              E
              n
              u
              m
              s
              .
              S
              t
              a
              t
              e
              m
              e
              n
              t
              s
              )
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         P
         P
         _
         B
         L
         O
         C
         K
         ,
          
         "PP_BLOCK"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     ppMessage
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_IDENT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_STRING
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_FILENAME
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_NUMBER
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         [
         P
         P
         _
         M
         E
         S
         S
         A
         G
         E
         ,
          
         "PP_MESSAGE"
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     preprocessExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         preprocessOrExpression
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         p
         r
         e
         p
         r
         o
         c
         e
         s
         s
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         =
          
         #
         (
          
         #
         [
         P
         P
         _
         E
         X
         P
         R
         ,
         "PP_EXPR"
         ]
         ,
          
         #
         p
         r
         e
         p
         r
         o
         c
         e
         s
         s
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         )
         ;
          
         }
    ;
   rule_
    id_
     preprocessOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         preprocessAndExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOG_OR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessAndExpression
         )
         *
    ;
   rule_
    id_
     preprocessAndExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         preprocessEqualityExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOG_AND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessEqualityExpression
         )
         *
    ;
   rule_
    id_
     preprocessEqualityExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         preprocessPrimaryExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EQUAL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   NOT_EQUAL
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessPrimaryExpression
         )
         *
    ;
   rule_
    id_
     preprocessPrimaryExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              id
             :
             rule_ref_or_keyword_as
              keywordExceptTrueAndFalse
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              i
              d
              .
              s
              e
              t
              T
              y
              p
              e
              (
              P
              P
              _
              I
              D
              E
              N
              T
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              PP_IDENT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              TRUE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              FALSE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOG_NOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessPrimaryExpression
          |
          alternative
           element
            elementNoOptionSpec
             id_
              o
             :
             terminal_
              OPEN_PAREN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              o
              .
              s
              e
              t
              T
              y
              p
              e
              (
              P
              A
              R
              E
              N
              _
              E
              X
              P
              R
              )
              ;
               
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              preprocessOrExpression
           element
            elementNoOptionSpec
             terminal_
              CLOSE_PAREN
              ast_type_spec
               !
         )
    ;
   rule_
    id_
     keywordExceptTrueAndFalse
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ABSTRACT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         AS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BASE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BOOL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BREAK
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BYTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CASE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CATCH
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHAR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHECKED
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CLASS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CONST
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CONTINUE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DECIMAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEFAULT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DELEGATE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DO
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ELSE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ENUM
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EVENT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EXPLICIT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EXTERN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FINALLY
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FIXED
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FLOAT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FOR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FOREACH
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         GOTO
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IF
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IMPLICIT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INTERFACE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INTERNAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LOCK
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LONG
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAMESPACE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEW
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NULL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OBJECT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPERATOR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OUT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         OVERRIDE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PARAMS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PRIVATE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PROTECTED
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PUBLIC
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         READONLY
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         REF
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         RETURN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SBYTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEALED
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SHORT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SIZEOF
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STACKALLOC
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STATIC
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STRING
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STRUCT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SWITCH
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         THIS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         THROW
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         TRY
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         TYPEOF
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UINT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ULONG
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UNCHECKED
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UNSAFE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         USHORT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         USING
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         VIRTUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         VOID
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         VOLATILE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         WHILE
         ast_type_spec
    ;
   rule_
    id_
     voidAsType
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         v
        :
        terminal_
         VOID
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
          
         #
         (
          
         [
         T
         Y
         P
         E
         ,
          
         "TYPE"
         ]
         ,
          
         #
         v
         ,
          
         [
         S
         T
         A
         R
         S
         ,
          
         "STARS"
         ]
         ,
          
         [
         A
         R
         R
         A
         Y
         _
         R
         A
         N
         K
         S
         ,
          
         "ARRAY_RANKS"
         ]
          
         )
         ;
          
         }
    ;
 <EOF>
