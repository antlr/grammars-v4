grammar_
 classDef
  parserSpec
   class
   id_
    JavaRecognizer
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      k
     =
     optionValue
      2
     ;
    option
     id_
      exportVocab
     =
     optionValue
      qualifiedID
       id_
        Java
     ;
    option
     id_
      codeGenMakeSwitchThreshold
     =
     optionValue
      2
     ;
    option
     id_
      codeGenBitsetTestThreshold
     =
     optionValue
      3
     ;
    option
     id_
      defaultErrorHandler
     =
     optionValue
      qualifiedID
       id_
        false
     ;
    option
     id_
      buildAST
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    }
   tokensSpec
    tokens
    {
    tokenEntry
     BLOCK
     ;
    tokenEntry
     MODIFIERS
     ;
    tokenEntry
     OBJBLOCK
     ;
    tokenEntry
     SLIST
     ;
    tokenEntry
     CTOR_DEF
     ;
    tokenEntry
     METHOD_DEF
     ;
    tokenEntry
     VARIABLE_DEF
     ;
    tokenEntry
     INSTANCE_INIT
     ;
    tokenEntry
     STATIC_INIT
     ;
    tokenEntry
     TYPE
     ;
    tokenEntry
     CLASS_DEF
     ;
    tokenEntry
     INTERFACE_DEF
     ;
    tokenEntry
     PACKAGE_DEF
     ;
    tokenEntry
     ARRAY_DECLARATOR
     ;
    tokenEntry
     EXTENDS_CLAUSE
     ;
    tokenEntry
     IMPLEMENTS_CLAUSE
     ;
    tokenEntry
     PARAMETERS
     ;
    tokenEntry
     PARAMETER_DEF
     ;
    tokenEntry
     LABELED_STAT
     ;
    tokenEntry
     TYPECAST
     ;
    tokenEntry
     INDEX_OP
     ;
    tokenEntry
     POST_INC
     ;
    tokenEntry
     POST_DEC
     ;
    tokenEntry
     METHOD_CALL
     ;
    tokenEntry
     EXPR
     ;
    tokenEntry
     ARRAY_INIT
     ;
    tokenEntry
     IMPORT
     ;
    tokenEntry
     UNARY_MINUS
     ;
    tokenEntry
     UNARY_PLUS
     ;
    tokenEntry
     CASE_GROUP
     ;
    tokenEntry
     ELIST
     ;
    tokenEntry
     FOR_INIT
     ;
    tokenEntry
     FOR_CONDITION
     ;
    tokenEntry
     FOR_ITERATOR
     ;
    tokenEntry
     EMPTY_STAT
     ;
    tokenEntry
     FINAL
     =
     "final"
     ;
    tokenEntry
     ABSTRACT
     =
     "abstract"
     ;
    tokenEntry
     STRICTFP
     =
     "strictfp"
     ;
    tokenEntry
     SUPER_CTOR_CALL
     ;
    tokenEntry
     CTOR_CALL
     ;
    }
  rules
   rule_
    id_
     compilationUnit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              packageDefinition
          |
          alternative
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              importDefinition
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeDefinition
         )
         *
      element
       elementNoOptionSpec
        terminal_
         EOF
         ast_type_spec
          !
    ;
   rule_
    id_
     packageDefinition
    ruleOptionsSpec
     options
     {
     option
      id_
       defaultErrorHandler
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         "package"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         p
         .
         s
         e
         t
         T
         y
         p
         e
         (
         P
         A
         C
         K
         A
         G
         E
         _
         D
         E
         F
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     importDefinition
    ruleOptionsSpec
     options
     {
     option
      id_
       defaultErrorHandler
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         i
        :
        terminal_
         "import"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         i
         .
         s
         e
         t
         T
         y
         p
         e
         (
         I
         M
         P
         O
         R
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifierStar
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     typeDefinition
    ruleOptionsSpec
     options
     {
     option
      id_
       defaultErrorHandler
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
        !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              classDefinition
             argActionBlock
              [
              #
              m
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              interfaceDefinition
             argActionBlock
              [
              #
              m
              ]
         )
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     declaration
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
      element
       elementNoOptionSpec
        id_
         t
        :
        rule_ref_or_keyword_as
         typeSpec
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        id_
         v
        :
        rule_ref_or_keyword_as
         variableDefinitions
        argActionBlock
         [
         #
         m
         ,
         #
         t
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         d
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
          
         =
          
         #
         v
         ;
         }
    ;
   rule_
    id_
     typeSpec
    argActionBlock
     [
     b
     o
     o
     l
     e
     a
     n
      
     a
     d
     d
     I
     m
     a
     g
     N
     o
     d
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classTypeSpec
        argActionBlock
         [
         a
         d
         d
         I
         m
         a
         g
         N
         o
         d
         e
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         builtInTypeSpec
        argActionBlock
         [
         a
         d
         d
         I
         m
         a
         g
         N
         o
         d
         e
         ]
    ;
   rule_
    id_
     classTypeSpec
    argActionBlock
     [
     b
     o
     o
     l
     e
     a
     n
      
     a
     d
     d
     I
     m
     a
     g
     N
     o
     d
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lb
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         i
         f
          
         (
          
         a
         d
         d
         I
         m
         a
         g
         N
         o
         d
         e
          
         )
          
         {
         \n
         \t
         \t
         \t
         \t
         #
         c
         l
         a
         s
         s
         T
         y
         p
         e
         S
         p
         e
         c
          
         =
          
         #
         (
         #
         [
         T
         Y
         P
         E
         ,
         "TYPE"
         ]
         ,
          
         #
         c
         l
         a
         s
         s
         T
         y
         p
         e
         S
         p
         e
         c
         )
         ;
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     builtInTypeSpec
    argActionBlock
     [
     b
     o
     o
     l
     e
     a
     n
      
     a
     d
     d
     I
     m
     a
     g
     N
     o
     d
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         builtInType
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lb
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
         \t
         \t
         \t
         i
         f
          
         (
          
         a
         d
         d
         I
         m
         a
         g
         N
         o
         d
         e
          
         )
          
         {
         \n
         \t
         \t
         \t
         \t
         #
         b
         u
         i
         l
         t
         I
         n
         T
         y
         p
         e
         S
         p
         e
         c
          
         =
          
         #
         (
         #
         [
         T
         Y
         P
         E
         ,
         "TYPE"
         ]
         ,
          
         #
         b
         u
         i
         l
         t
         I
         n
         T
         y
         p
         e
         S
         p
         e
         c
         )
         ;
         \n
         \t
         \t
         \t
         }
         \n
         \t
         \t
         }
    ;
   rule_
    id_
     type
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         builtInType
    ;
   rule_
    id_
     builtInType
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "void"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "boolean"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "byte"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "char"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "short"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "int"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "float"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "long"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "double"
         ast_type_spec
    ;
   rule_
    id_
     identifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     identifierStar
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              STAR
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     modifiers
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              modifier
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
          
         =
          
         #
         (
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
          
         "MODIFIERS"
         ]
         ,
          
         #
         m
         o
         d
         i
         f
         i
         e
         r
         s
         )
         ;
         }
    ;
   rule_
    id_
     modifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "private"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "public"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "protected"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "static"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "transient"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "final"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "abstract"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "native"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "threadsafe"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "synchronized"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "volatile"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "strictfp"
         ast_type_spec
    ;
   rule_
    id_
     classDefinition
    !
    argActionBlock
     [
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "class"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         sc
        :
        rule_ref_or_keyword_as
         superClassClause
      element
       elementNoOptionSpec
        id_
         ic
        :
        rule_ref_or_keyword_as
         implementsClause
      element
       elementNoOptionSpec
        id_
         cb
        :
        rule_ref_or_keyword_as
         classBlock
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         c
         l
         a
         s
         s
         D
         e
         f
         i
         n
         i
         t
         i
         o
         n
          
         =
          
         #
         (
         #
         [
         C
         L
         A
         S
         S
         _
         D
         E
         F
         ,
         "CLASS_DEF"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
          
          
          
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
         I
         D
         E
         N
         T
         ,
         s
         c
         ,
         i
         c
         ,
         c
         b
         )
         ;
         }
    ;
   rule_
    id_
     superClassClause
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "extends"
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              id
             :
             rule_ref_or_keyword_as
              identifier
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         s
         u
         p
         e
         r
         C
         l
         a
         s
         s
         C
         l
         a
         u
         s
         e
          
         =
          
         #
         (
         #
         [
         E
         X
         T
         E
         N
         D
         S
         _
         C
         L
         A
         U
         S
         E
         ,
         "EXTENDS_CLAUSE"
         ]
         ,
         i
         d
         )
         ;
         }
    ;
   rule_
    id_
     interfaceDefinition
    !
    argActionBlock
     [
     A
     S
     T
      
     m
     o
     d
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "interface"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         ie
        :
        rule_ref_or_keyword_as
         interfaceExtends
      element
       elementNoOptionSpec
        id_
         cb
        :
        rule_ref_or_keyword_as
         classBlock
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         i
         n
         t
         e
         r
         f
         a
         c
         e
         D
         e
         f
         i
         n
         i
         t
         i
         o
         n
          
         =
          
         #
         (
         #
         [
         I
         N
         T
         E
         R
         F
         A
         C
         E
         _
         D
         E
         F
         ,
         "INTERFACE_DEF"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         m
         o
         d
         i
         f
         i
         e
         r
         s
         ,
         I
         D
         E
         N
         T
         ,
         i
         e
         ,
         c
         b
         )
         ;
         }
    ;
   rule_
    id_
     classBlock
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              field
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         c
         l
         a
         s
         s
         B
         l
         o
         c
         k
          
         =
          
         #
         (
         [
         O
         B
         J
         B
         L
         O
         C
         K
         ,
          
         "OBJBLOCK"
         ]
         ,
          
         #
         c
         l
         a
         s
         s
         B
         l
         o
         c
         k
         )
         ;
         }
    ;
   rule_
    id_
     interfaceExtends
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              e
             :
             terminal_
              "extends"
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   identifier
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         i
         n
         t
         e
         r
         f
         a
         c
         e
         E
         x
         t
         e
         n
         d
         s
          
         =
          
         #
         (
         #
         [
         E
         X
         T
         E
         N
         D
         S
         _
         C
         L
         A
         U
         S
         E
         ,
         "EXTENDS_CLAUSE"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         #
         i
         n
         t
         e
         r
         f
         a
         c
         e
         E
         x
         t
         e
         n
         d
         s
         )
         ;
         }
    ;
   rule_
    id_
     implementsClause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              i
             :
             terminal_
              "implements"
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   identifier
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         i
         m
         p
         l
         e
         m
         e
         n
         t
         s
         C
         l
         a
         u
         s
         e
          
         =
          
         #
         (
         #
         [
         I
         M
         P
         L
         E
         M
         E
         N
         T
         S
         _
         C
         L
         A
         U
         S
         E
         ,
         "IMPLEMENTS_CLAUSE"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
          
         #
         i
         m
         p
         l
         e
         m
         e
         n
         t
         s
         C
         l
         a
         u
         s
         e
         )
         ;
         }
    ;
   rule_
    id_
     field
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         mods
        :
        rule_ref_or_keyword_as
         modifiers
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              h
             :
             rule_ref_or_keyword_as
              ctorHead
           element
            elementNoOptionSpec
             id_
              s
             :
             rule_ref_or_keyword_as
              constructorBody
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              f
              i
              e
              l
              d
               
              =
               
              #
              (
              #
              [
              C
              T
              O
              R
              _
              D
              E
              F
              ,
              "CTOR_DEF"
              ]
              ,
               
              m
              o
              d
              s
              ,
               
              h
              ,
               
              s
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              cd
             :
             rule_ref_or_keyword_as
              classDefinition
             argActionBlock
              [
              #
              m
              o
              d
              s
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              f
              i
              e
              l
              d
               
              =
               
              #
              c
              d
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              id
             :
             rule_ref_or_keyword_as
              interfaceDefinition
             argActionBlock
              [
              #
              m
              o
              d
              s
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              f
              i
              e
              l
              d
               
              =
               
              #
              i
              d
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              t
             :
             rule_ref_or_keyword_as
              typeSpec
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   IDENT
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   param
                  :
                  rule_ref_or_keyword_as
                   parameterDeclarationList
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  id_
                   rt
                  :
                  rule_ref_or_keyword_as
                   declaratorBrackets
                  argActionBlock
                   [
                   #
                   t
                   ]
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        tc
                       :
                       rule_ref_or_keyword_as
                        throwsClause
                   )
                   ?
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        s2
                       :
                       rule_ref_or_keyword_as
                        compoundStatement
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        SEMI
                        ast_type_spec
                   )
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   f
                   i
                   e
                   l
                   d
                    
                   =
                    
                   #
                   (
                   #
                   [
                   M
                   E
                   T
                   H
                   O
                   D
                   _
                   D
                   E
                   F
                   ,
                   "METHOD_DEF"
                   ]
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                    
                    
                    
                    
                   m
                   o
                   d
                   s
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                   #
                   (
                   #
                   [
                   T
                   Y
                   P
                   E
                   ,
                   "TYPE"
                   ]
                   ,
                   r
                   t
                   )
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                   I
                   D
                   E
                   N
                   T
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                   p
                   a
                   r
                   a
                   m
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                   t
                   c
                   ,
                   \n
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                   \t
                    
                   s
                   2
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   v
                  :
                  rule_ref_or_keyword_as
                   variableDefinitions
                  argActionBlock
                   [
                   #
                   m
                   o
                   d
                   s
                   ,
                   #
                   t
                   ]
                element
                 elementNoOptionSpec
                  terminal_
                   SEMI
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   f
                   i
                   e
                   l
                   d
                    
                   =
                    
                   #
                   v
                   ;
                   }
              )
         )
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "static"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         s3
        :
        rule_ref_or_keyword_as
         compoundStatement
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         f
         i
         e
         l
         d
          
         =
          
         #
         (
         #
         [
         S
         T
         A
         T
         I
         C
         _
         I
         N
         I
         T
         ,
         "STATIC_INIT"
         ]
         ,
          
         s
         3
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s4
        :
        rule_ref_or_keyword_as
         compoundStatement
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         f
         i
         e
         l
         d
          
         =
          
         #
         (
         #
         [
         I
         N
         S
         T
         A
         N
         C
         E
         _
         I
         N
         I
         T
         ,
         "INSTANCE_INIT"
         ]
         ,
          
         s
         4
         )
         ;
         }
    ;
   rule_
    id_
     constructorBody
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lc
        :
        terminal_
         LCURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         S
         L
         I
         S
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              explicitConstructorInvocation
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
    ;
   rule_
    id_
     explicitConstructorInvocation
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "this"
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         lp1
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         argList
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         p
         1
         .
         s
         e
         t
         T
         y
         p
         e
         (
         C
         T
         O
         R
         _
         C
         A
         L
         L
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "super"
         ast_type_spec
          !
      element
       elementNoOptionSpec
        id_
         lp2
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         argList
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         p
         2
         .
         s
         e
         t
         T
         y
         p
         e
         (
         S
         U
         P
         E
         R
         _
         C
         T
         O
         R
         _
         C
         A
         L
         L
         )
         ;
         }
    ;
   rule_
    id_
     variableDefinitions
    argActionBlock
     [
     A
     S
     T
      
     m
     o
     d
     s
     ,
      
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         variableDeclarator
        argActionBlock
         [
         g
         e
         t
         A
         S
         T
         F
         a
         c
         t
         o
         r
         y
         (
         )
         .
         d
         u
         p
         T
         r
         e
         e
         (
         m
         o
         d
         s
         )
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
          
          
          
         g
         e
         t
         A
         S
         T
         F
         a
         c
         t
         o
         r
         y
         (
         )
         .
         d
         u
         p
         T
         r
         e
         e
         (
         t
         )
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              variableDeclarator
             argActionBlock
              [
              g
              e
              t
              A
              S
              T
              F
              a
              c
              t
              o
              r
              y
              (
              )
              .
              d
              u
              p
              T
              r
              e
              e
              (
              m
              o
              d
              s
              )
              ,
              \n
              \t
              \t
              \t
              \t
              \t
              \t
              \t
               
               
               
              g
              e
              t
              A
              S
              T
              F
              a
              c
              t
              o
              r
              y
              (
              )
              .
              d
              u
              p
              T
              r
              e
              e
              (
              t
              )
              ]
         )
         *
    ;
   rule_
    id_
     variableDeclarator
    !
    argActionBlock
     [
     A
     S
     T
      
     m
     o
     d
     s
     ,
      
     A
     S
     T
      
     t
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         id
        :
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         d
        :
        rule_ref_or_keyword_as
         declaratorBrackets
        argActionBlock
         [
         t
         ]
      element
       elementNoOptionSpec
        id_
         v
        :
        rule_ref_or_keyword_as
         varInitializer
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         v
         a
         r
         i
         a
         b
         l
         e
         D
         e
         c
         l
         a
         r
         a
         t
         o
         r
          
         =
          
         #
         (
         #
         [
         V
         A
         R
         I
         A
         B
         L
         E
         _
         D
         E
         F
         ,
         "VARIABLE_DEF"
         ]
         ,
          
         m
         o
         d
         s
         ,
          
         #
         (
         #
         [
         T
         Y
         P
         E
         ,
         "TYPE"
         ]
         ,
         d
         )
         ,
          
         i
         d
         ,
          
         v
         )
         ;
         }
    ;
   rule_
    id_
     declaratorBrackets
    argActionBlock
     [
     A
     S
     T
      
     t
     y
     p
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         d
         e
         c
         l
         a
         r
         a
         t
         o
         r
         B
         r
         a
         c
         k
         e
         t
         s
         =
         t
         y
         p
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lb
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         *
    ;
   rule_
    id_
     varInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initializer
         )
         ?
    ;
   rule_
    id_
     arrayInitializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lc
        :
        terminal_
         LCURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         A
         R
         R
         A
         Y
         _
         I
         N
         I
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initializer
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   initializer
              )
              *
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
              )
              ?
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
    ;
   rule_
    id_
     initializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         arrayInitializer
    ;
   rule_
    id_
     ctorHead
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         parameterDeclarationList
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              throwsClause
         )
         ?
    ;
   rule_
    id_
     throwsClause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "throws"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identifier
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              identifier
         )
         *
    ;
   rule_
    id_
     parameterDeclarationList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parameterDeclaration
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   parameterDeclaration
              )
              *
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         D
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         L
         i
         s
         t
          
         =
          
         #
         (
         #
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         S
         ,
         "PARAMETERS"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         D
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         L
         i
         s
         t
         )
         ;
         }
    ;
   rule_
    id_
     parameterDeclaration
    !
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         pm
        :
        rule_ref_or_keyword_as
         parameterModifier
      element
       elementNoOptionSpec
        id_
         t
        :
        rule_ref_or_keyword_as
         typeSpec
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        id_
         id
        :
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         pd
        :
        rule_ref_or_keyword_as
         declaratorBrackets
        argActionBlock
         [
         #
         t
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         D
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
          
         =
          
         #
         (
         #
         [
         P
         A
         R
         A
         M
         E
         T
         E
         R
         _
         D
         E
         F
         ,
         "PARAMETER_DEF"
         ]
         ,
         \n
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         \t
         p
         m
         ,
          
         #
         (
         [
         T
         Y
         P
         E
         ,
         "TYPE"
         ]
         ,
         p
         d
         )
         ,
          
         i
         d
         )
         ;
         }
    ;
   rule_
    id_
     parameterModifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              f
             :
             terminal_
              "final"
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         p
         a
         r
         a
         m
         e
         t
         e
         r
         M
         o
         d
         i
         f
         i
         e
         r
          
         =
          
         #
         (
         #
         [
         M
         O
         D
         I
         F
         I
         E
         R
         S
         ,
         "MODIFIERS"
         ]
         ,
          
         f
         )
         ;
         }
    ;
   rule_
    id_
     compoundStatement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lc
        :
        terminal_
         LCURLY
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         S
         L
         I
         S
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
    ;
   rule_
    id_
     statement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declaration
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        id_
         m
        :
        rule_ref_or_keyword_as
         modifiers
        !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classDefinition
        argActionBlock
         [
         #
         m
         ]
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         c
        :
        terminal_
         COLON
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         c
         .
         s
         e
         t
         T
         y
         p
         e
         (
         L
         A
         B
         E
         L
         E
         D
         _
         S
         T
         A
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "if"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "else"
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "for"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forInit
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forCond
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         forIter
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "while"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "do"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
      element
       elementNoOptionSpec
        terminal_
         "while"
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "break"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "continue"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "return"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "switch"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         LCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              casesGroup
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         tryBlock
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "throw"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "synchronized"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
     |
     alternative
      element
       elementNoOptionSpec
        id_
         s
        :
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         s
         .
         s
         e
         t
         T
         y
         p
         e
         (
         E
         M
         P
         T
         Y
         _
         S
         T
         A
         T
         )
         ;
         }
    ;
   rule_
    id_
     casesGroup
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              aCase
         )
         +
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         caseSList
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         c
         a
         s
         e
         s
         G
         r
         o
         u
         p
          
         =
          
         #
         (
         [
         C
         A
         S
         E
         _
         G
         R
         O
         U
         P
         ,
          
         "CASE_GROUP"
         ]
         ,
          
         #
         c
         a
         s
         e
         s
         G
         r
         o
         u
         p
         )
         ;
         }
    ;
   rule_
    id_
     aCase
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "case"
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "default"
              ast_type_spec
         )
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
    ;
   rule_
    id_
     caseSList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         c
         a
         s
         e
         S
         L
         i
         s
         t
          
         =
          
         #
         (
         #
         [
         S
         L
         I
         S
         T
         ,
         "SLIST"
         ]
         ,
         #
         c
         a
         s
         e
         S
         L
         i
         s
         t
         )
         ;
         }
    ;
   rule_
    id_
     forInit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   declaration
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expressionList
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         f
         o
         r
         I
         n
         i
         t
          
         =
          
         #
         (
         #
         [
         F
         O
         R
         _
         I
         N
         I
         T
         ,
         "FOR_INIT"
         ]
         ,
         #
         f
         o
         r
         I
         n
         i
         t
         )
         ;
         }
    ;
   rule_
    id_
     forCond
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         f
         o
         r
         C
         o
         n
         d
          
         =
          
         #
         (
         #
         [
         F
         O
         R
         _
         C
         O
         N
         D
         I
         T
         I
         O
         N
         ,
         "FOR_CONDITION"
         ]
         ,
         #
         f
         o
         r
         C
         o
         n
         d
         )
         ;
         }
    ;
   rule_
    id_
     forIter
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expressionList
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         f
         o
         r
         I
         t
         e
         r
          
         =
          
         #
         (
         #
         [
         F
         O
         R
         _
         I
         T
         E
         R
         A
         T
         O
         R
         ,
         "FOR_ITERATOR"
         ]
         ,
         #
         f
         o
         r
         I
         t
         e
         r
         )
         ;
         }
    ;
   rule_
    id_
     tryBlock
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "try"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              handler
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              finallyClause
         )
         ?
    ;
   rule_
    id_
     finallyClause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "finally"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
    ;
   rule_
    id_
     handler
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "catch"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         parameterDeclaration
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
    ;
   rule_
    id_
     expression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assignmentExpression
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         =
          
         #
         (
         #
         [
         E
         X
         P
         R
         ,
         "EXPR"
         ]
         ,
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
         )
         ;
         }
    ;
   rule_
    id_
     expressionList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
         L
         i
         s
         t
          
         =
          
         #
         (
         #
         [
         E
         L
         I
         S
         T
         ,
         "ELIST"
         ]
         ,
          
         e
         x
         p
         r
         e
         s
         s
         i
         o
         n
         L
         i
         s
         t
         )
         ;
         }
    ;
   rule_
    id_
     assignmentExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DIV_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MOD_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BSR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SL_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BAND_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BXOR_ASSIGN
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BOR_ASSIGN
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignmentExpression
         )
         ?
    ;
   rule_
    id_
     conditionalExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         logicalOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              QUESTION
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignmentExpression
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              conditionalExpression
         )
         ?
    ;
   rule_
    id_
     logicalOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         logicalAndExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              logicalAndExpression
         )
         *
    ;
   rule_
    id_
     logicalAndExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         inclusiveOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LAND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              inclusiveOrExpression
         )
         *
    ;
   rule_
    id_
     inclusiveOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exclusiveOrExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exclusiveOrExpression
         )
         *
    ;
   rule_
    id_
     exclusiveOrExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         andExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BXOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              andExpression
         )
         *
    ;
   rule_
    id_
     andExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         equalityExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BAND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              equalityExpression
         )
         *
    ;
   rule_
    id_
     equalityExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         relationalExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   NOT_EQUAL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EQUAL
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relationalExpression
         )
         *
    ;
   rule_
    id_
     relationalExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         shiftExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LT
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        GT
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LE
                        ast_type_spec
                         ^
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        GE
                        ast_type_spec
                         ^
                   )
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   shiftExpression
              )
              *
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "instanceof"
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeSpec
             argActionBlock
              [
              t
              r
              u
              e
              ]
         )
    ;
   rule_
    id_
     shiftExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         additiveExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SR
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BSR
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              additiveExpression
         )
         *
    ;
   rule_
    id_
     additiveExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         multiplicativeExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              multiplicativeExpression
         )
         *
    ;
   rule_
    id_
     multiplicativeExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DIV
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MOD
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              unaryExpression
         )
         *
    ;
   rule_
    id_
     unaryExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         INC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MINUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         M
         I
         N
         U
         S
         .
         s
         e
         t
         T
         y
         p
         e
         (
         U
         N
         A
         R
         Y
         _
         M
         I
         N
         U
         S
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PLUS
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         P
         L
         U
         S
         .
         s
         e
         t
         T
         y
         p
         e
         (
         U
         N
         A
         R
         Y
         _
         P
         L
         U
         S
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpressionNotPlusMinus
    ;
   rule_
    id_
     unaryExpressionNotPlusMinus
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         BNOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LNOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              builtInTypeSpec
             argActionBlock
              [
              t
              r
              u
              e
              ]
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        id_
         lpb
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         p
         b
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         C
         A
         S
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         builtInTypeSpec
        argActionBlock
         [
         t
         r
         u
         e
         ]
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpression
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              classTypeSpec
             argActionBlock
              [
              t
              r
              u
              e
              ]
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              unaryExpressionNotPlusMinus
         )
         =>
      element
       elementNoOptionSpec
        id_
         lp
        :
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        actionBlock
         {
         #
         l
         p
         .
         s
         e
         t
         T
         y
         p
         e
         (
         T
         Y
         P
         E
         C
         A
         S
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classTypeSpec
        argActionBlock
         [
         t
         r
         u
         e
         ]
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpressionNotPlusMinus
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         postfixExpression
    ;
   rule_
    id_
     postfixExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         primaryExpression
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   lp
                  :
                  terminal_
                   LPAREN
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   l
                   p
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   M
                   E
                   T
                   H
                   O
                   D
                   _
                   C
                   A
                   L
                   L
                   )
                   ;
                   }
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   argList
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
                    !
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              "this"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              "super"
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   lp3
                  :
                  terminal_
                   LPAREN
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   argList
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
                    !
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   l
                   p
                   3
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   S
                   U
                   P
                   E
                   R
                   _
                   C
                   T
                   O
                   R
                   _
                   C
                   A
                   L
                   L
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOT
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  terminal_
                   IDENT
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        lps
                       :
                       terminal_
                        LPAREN
                        ast_type_spec
                         ^
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                        #
                        l
                        p
                        s
                        .
                        s
                        e
                        t
                        T
                        y
                        p
                        e
                        (
                        M
                        E
                        T
                        H
                        O
                        D
                        _
                        C
                        A
                        L
                        L
                        )
                        ;
                        }
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        argList
                     element
                      elementNoOptionSpec
                       terminal_
                        RPAREN
                        ast_type_spec
                         !
                   )
                   ?
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              newExpression
          |
          alternative
           element
            elementNoOptionSpec
             id_
              lb
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              .
              s
              e
              t
              T
              y
              p
              e
              (
              I
              N
              D
              E
              X
              _
              O
              P
              )
              ;
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expression
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              in
             :
             terminal_
              INC
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              i
              n
              .
              s
              e
              t
              T
              y
              p
              e
              (
              P
              O
              S
              T
              _
              I
              N
              C
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              de
             :
             terminal_
              DEC
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              d
              e
              .
              s
              e
              t
              T
              y
              p
              e
              (
              P
              O
              S
              T
              _
              D
              E
              C
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     primaryExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         identPrimary
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              "class"
              ast_type_spec
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constant
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "true"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "false"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "null"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         newExpression
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "this"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "super"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assignmentExpression
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         builtInType
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lbt
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              t
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        terminal_
         DOT
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         "class"
         ast_type_spec
    ;
   rule_
    id_
     identPrimary
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IDENT
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             terminal_
              IDENT
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   lp
                  :
                  terminal_
                   LPAREN
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   l
                   p
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   M
                   E
                   T
                   H
                   O
                   D
                   _
                   C
                   A
                   L
                   L
                   )
                   ;
                   }
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   argList
                element
                 elementNoOptionSpec
                  terminal_
                   RPAREN
                   ast_type_spec
                    !
              )
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 greedy
                =
                optionValue
                 qualifiedID
                  id_
                   true
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   lbc
                  :
                  terminal_
                   LBRACK
                   ast_type_spec
                    ^
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   #
                   l
                   b
                   c
                   .
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   A
                   R
                   R
                   A
                   Y
                   _
                   D
                   E
                   C
                   L
                   A
                   R
                   A
                   T
                   O
                   R
                   )
                   ;
                   }
                element
                 elementNoOptionSpec
                  terminal_
                   RBRACK
                   ast_type_spec
                    !
              )
              +
         )
         ?
    ;
   rule_
    id_
     newExpression
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "new"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         type
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              argList
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
               !
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   classBlock
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              newArrayDeclarator
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   arrayInitializer
              )
              ?
         )
    ;
   rule_
    id_
     argList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expressionList
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              a
              r
              g
              L
              i
              s
              t
               
              =
               
              #
              [
              E
              L
              I
              S
              T
              ,
              "ELIST"
              ]
              ;
              }
         )
    ;
   rule_
    id_
     newArrayDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lb
             :
             terminal_
              LBRACK
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              l
              b
              .
              s
              e
              t
              T
              y
              p
              e
              (
              A
              R
              R
              A
              Y
              _
              D
              E
              C
              L
              A
              R
              A
              T
              O
              R
              )
              ;
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   expression
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              RBRACK
              ast_type_spec
               !
         )
         +
    ;
   rule_
    id_
     constant
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NUM_INT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CHAR_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STRING_LITERAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NUM_FLOAT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NUM_LONG
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NUM_DOUBLE
         ast_type_spec
    ;
 classDef
  lexerSpec
   class
   id_
    JavaLexer
   extends
   Lexer
   ;
   lexerOptionsSpec
    options
    {
    lexerOption
     id_
      exportVocab
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         Java
     ;
    lexerOption
     id_
      testLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      k
     =
     lexerOptionValue
      optionValue
       4
     ;
    lexerOption
     id_
      charVocabulary
     =
     lexerOptionValue
      charSet
       setBlockElement
        '\u0003'
        ..
        '\uFFFF'
     ;
    lexerOption
     id_
      codeGenBitsetTestThreshold
     =
     lexerOptionValue
      optionValue
       20
     ;
    }
  rules
   rule_
    id_
     QUESTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '?'
    ;
   rule_
    id_
     LPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '('
    ;
   rule_
    id_
     RPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ')'
    ;
   rule_
    id_
     LBRACK
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '['
    ;
   rule_
    id_
     RBRACK
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ']'
    ;
   rule_
    id_
     LCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '{'
    ;
   rule_
    id_
     RCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '}'
    ;
   rule_
    id_
     COLON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ':'
    ;
   rule_
    id_
     COMMA
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ','
    ;
   rule_
    id_
     ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '='
    ;
   rule_
    id_
     EQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "=="
         ast_type_spec
    ;
   rule_
    id_
     LNOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '!'
    ;
   rule_
    id_
     BNOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '~'
    ;
   rule_
    id_
     NOT_EQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "!="
         ast_type_spec
    ;
   rule_
    id_
     DIV
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '/'
    ;
   rule_
    id_
     DIV_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/="
         ast_type_spec
    ;
   rule_
    id_
     PLUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '+'
    ;
   rule_
    id_
     PLUS_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "+="
         ast_type_spec
    ;
   rule_
    id_
     INC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "++"
         ast_type_spec
    ;
   rule_
    id_
     MINUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '-'
    ;
   rule_
    id_
     MINUS_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "-="
         ast_type_spec
    ;
   rule_
    id_
     DEC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "--"
         ast_type_spec
    ;
   rule_
    id_
     STAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '*'
    ;
   rule_
    id_
     STAR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "*="
         ast_type_spec
    ;
   rule_
    id_
     MOD
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '%'
    ;
   rule_
    id_
     MOD_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "%="
         ast_type_spec
    ;
   rule_
    id_
     SR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>"
         ast_type_spec
    ;
   rule_
    id_
     SR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>="
         ast_type_spec
    ;
   rule_
    id_
     BSR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>>"
         ast_type_spec
    ;
   rule_
    id_
     BSR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>>="
         ast_type_spec
    ;
   rule_
    id_
     GE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">="
         ast_type_spec
    ;
   rule_
    id_
     GT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">"
         ast_type_spec
    ;
   rule_
    id_
     SL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<"
         ast_type_spec
    ;
   rule_
    id_
     SL_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<="
         ast_type_spec
    ;
   rule_
    id_
     LE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<="
         ast_type_spec
    ;
   rule_
    id_
     LT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '<'
    ;
   rule_
    id_
     BXOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '^'
    ;
   rule_
    id_
     BXOR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "^="
         ast_type_spec
    ;
   rule_
    id_
     BOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '|'
    ;
   rule_
    id_
     BOR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "|="
         ast_type_spec
    ;
   rule_
    id_
     LOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "||"
         ast_type_spec
    ;
   rule_
    id_
     BAND
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '&'
    ;
   rule_
    id_
     BAND_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "&="
         ast_type_spec
    ;
   rule_
    id_
     LAND
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "&&"
         ast_type_spec
    ;
   rule_
    id_
     SEMI
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ';'
    ;
   rule_
    id_
     WS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\f'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 generateAmbigWarnings
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "\r\n"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
              }
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         ;
          
         }
    ;
   rule_
    id_
     SL_COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "//"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
              ?
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
          
         n
         e
         w
         l
         i
         n
         e
         (
         )
         ;
         }
    ;
   rule_
    id_
     ML_COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/*"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            generateAmbigWarnings
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              L
              A
              (
              2
              )
              !
              =
              '/'
               
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              '*'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '*'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         "*/"
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
         }
    ;
   rule_
    id_
     CHAR_LITERAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\''
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\''
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
              )
         )
      element
       elementNoOptionSpec
        terminal_
         '\''
    ;
   rule_
    id_
     STRING_LITERAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '"'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
    ;
   rule_
    protected
    id_
     ESC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\\'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'n'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'r'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              't'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'b'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'f'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '"'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\''
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\\'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'u'
              )
              +
           element
            elementNoOptionSpec
             terminal_
              HEX_DIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              HEX_DIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              HEX_DIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              HEX_DIGIT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '3'
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '7'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   subruleOptionsSpec
                    options
                    {
                    option
                     id_
                      warnWhenFollowAmbig
                     =
                     optionValue
                      qualifiedID
                       id_
                        false
                     ;
                    }
                   :
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '7'
                   )
                   ?
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '4'
              ..
              '7'
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '7'
              )
              ?
         )
    ;
   rule_
    protected
    id_
     HEX_DIGIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'F'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'f'
         )
    ;
   rule_
    protected
    id_
     VOCAB
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '\3'
         ..
         '\377'
    ;
   rule_
    id_
     IDENT
    ruleOptionsSpec
     options
     {
     option
      id_
       testLiterals
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '$'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '$'
         )
         *
    ;
   rule_
    id_
     NUM_INT
    ruleAction
     actionBlock
      {
      b
      o
      o
      l
      e
      a
      n
       
      i
      s
      D
      e
      c
      i
      m
      a
      l
      =
      f
      a
      l
      s
      e
      ;
       
      T
      o
      k
      e
      n
       
      t
      =
      n
      u
      l
      l
      ;
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
      element
       elementNoOptionSpec
        actionBlock
         {
         _
         t
         t
         y
         p
         e
          
         =
          
         D
         O
         T
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '9'
              )
              +
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EXPONENT
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   f1
                  :
                  terminal_
                   FLOAT_SUFFIX
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   t
                   =
                   f
                   1
                   ;
                   }
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              \t
              i
              f
               
              (
              t
               
              !
              =
               
              n
              u
              l
              l
               
              &
              &
               
              t
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              .
              t
              o
              U
              p
              p
              e
              r
              C
              a
              s
              e
              (
              )
              .
              i
              n
              d
              e
              x
              O
              f
              (
              'F'
              )
              >
              =
              0
              )
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              \t
              _
              t
              t
              y
              p
              e
               
              =
               
              N
              U
              M
              _
              F
              L
              O
              A
              T
              ;
              \n
              \t
              \t
              \t
              \t
              }
              \n
              \t
              \t
              \t
              \t
              e
              l
              s
              e
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              \t
              _
              t
              t
              y
              p
              e
               
              =
               
              N
              U
              M
              _
              D
              O
              U
              B
              L
              E
              ;
               
              // assume double
              \n
              \t
              \t
              \t
              \t
              }
              \n
              \t
              \t
              \t
              \t
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '0'
           element
            elementNoOptionSpec
             actionBlock
              {
              i
              s
              D
              e
              c
              i
              m
              a
              l
               
              =
               
              t
              r
              u
              e
              ;
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'x'
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'X'
                   )
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   subruleOptionsSpec
                    options
                    {
                    option
                     id_
                      warnWhenFollowAmbig
                     =
                     optionValue
                      qualifiedID
                       id_
                        false
                     ;
                    }
                   :
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        HEX_DIGIT
                        ast_type_spec
                   )
                   +
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            range_
                             '0'
                             ..
                             '9'
                        )
                        +
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             '.'
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             EXPONENT
                             ast_type_spec
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             FLOAT_SUFFIX
                             ast_type_spec
                        )
                   )
                   =>
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '9'
                   )
                   +
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '7'
                   )
                   +
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '1'
                   ..
                   '9'
              )
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '9'
              )
              *
           element
            elementNoOptionSpec
             actionBlock
              {
              i
              s
              D
              e
              c
              i
              m
              a
              l
              =
              t
              r
              u
              e
              ;
              }
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'l'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'L'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              N
              U
              M
              _
              L
              O
              N
              G
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              i
              s
              D
              e
              c
              i
              m
              a
              l
              }
             ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '.'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '9'
                   )
                   *
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        EXPONENT
                        ast_type_spec
                   )
                   ?
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        f2
                       :
                       terminal_
                        FLOAT_SUFFIX
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                        t
                        =
                        f
                        2
                        ;
                        }
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EXPONENT
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        f3
                       :
                       terminal_
                        FLOAT_SUFFIX
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       actionBlock
                        {
                        t
                        =
                        f
                        3
                        ;
                        }
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   f4
                  :
                  terminal_
                   FLOAT_SUFFIX
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   t
                   =
                   f
                   4
                   ;
                   }
              )
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
              \t
              \t
              \t
              i
              f
               
              (
              t
               
              !
              =
               
              n
              u
              l
              l
               
              &
              &
               
              t
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              .
              t
              o
              U
              p
              p
              e
              r
              C
              a
              s
              e
              (
              )
               
              .
              i
              n
              d
              e
              x
              O
              f
              (
              'F'
              )
               
              >
              =
               
              0
              )
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              _
              t
              t
              y
              p
              e
               
              =
               
              N
              U
              M
              _
              F
              L
              O
              A
              T
              ;
              \n
              \t
              \t
              \t
              }
              \n
               
               
               
               
               
               
               
               
               
               
               
               
              e
              l
              s
              e
               
              {
              \n
              \t
               
               
               
               
               
               
               
               
               
               
               
              \t
              _
              t
              t
              y
              p
              e
               
              =
               
              N
              U
              M
              _
              D
              O
              U
              B
              L
              E
              ;
               
              // assume double
              \n
              \t
              \t
              \t
              }
              \n
              \t
              \t
              \t
              }
         )
         ?
    ;
   rule_
    protected
    id_
     EXPONENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'e'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'E'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '+'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '-'
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         +
    ;
   rule_
    protected
    id_
     FLOAT_SUFFIX
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         'f'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'F'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'd'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'D'
    ;
 <EOF>
