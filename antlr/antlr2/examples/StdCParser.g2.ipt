grammar_
 classDef
  actionBlock
   {
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   *
   ;
   \n
   \n
   i
   m
   p
   o
   r
   t
    
   a
   n
   t
   l
   r
   .
   C
   o
   m
   m
   o
   n
   A
   S
   T
   ;
   \n
   i
   m
   p
   o
   r
   t
    
   a
   n
   t
   l
   r
   .
   D
   u
   m
   p
   A
   S
   T
   V
   i
   s
   i
   t
   o
   r
   ;
   \n
   }
  parserSpec
   class
   id_
    StdCParser
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      k
     =
     optionValue
      2
     ;
    option
     id_
      exportVocab
     =
     optionValue
      qualifiedID
       id_
        STDC
     ;
    option
     id_
      buildAST
     =
     optionValue
      qualifiedID
       id_
        true
     ;
    option
     id_
      ASTLabelType
     =
     optionValue
      "TNode"
     ;
    option
     id_
      codeGenMakeSwitchThreshold
     =
     optionValue
      2
     ;
    option
     id_
      codeGenBitsetTestThreshold
     =
     optionValue
      3
     ;
    }
   actionBlock
    {
    \n
     
     
     
     
    // Suppport C++-style single-line comments?
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    s
    t
    a
    t
    i
    c
     
    b
    o
    o
    l
    e
    a
    n
     
    C
    P
    P
    C
    o
    m
    m
    e
    n
    t
    s
     
    =
     
    t
    r
    u
    e
    ;
    \n
    \n
     
     
     
     
    // access to symbol table
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    C
    S
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
     
    s
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
     
    =
     
    n
    e
    w
     
    C
    S
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
    (
    )
    ;
    \n
    \n
     
     
     
     
    // source for names to unnamed scopes
    \n
     
     
     
     
    p
    r
    o
    t
    e
    c
    t
    e
    d
     
    i
    n
    t
     
    u
    n
    n
    a
    m
    e
    d
    S
    c
    o
    p
    e
    C
    o
    u
    n
    t
    e
    r
     
    =
     
    0
    ;
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    b
    o
    o
    l
    e
    a
    n
     
    i
    s
    T
    y
    p
    e
    d
    e
    f
    N
    a
    m
    e
    (
    S
    t
    r
    i
    n
    g
     
    n
    a
    m
    e
    )
     
    {
    \n
     
     
     
     
     
     
    b
    o
    o
    l
    e
    a
    n
     
    r
    e
    t
    u
    r
    n
    V
    a
    l
    u
    e
     
    =
     
    f
    a
    l
    s
    e
    ;
    \n
     
     
     
     
     
     
    T
    N
    o
    d
    e
     
    n
    o
    d
    e
     
    =
     
    s
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
    .
    l
    o
    o
    k
    u
    p
    N
    a
    m
    e
    I
    n
    C
    u
    r
    r
    e
    n
    t
    S
    c
    o
    p
    e
    (
    n
    a
    m
    e
    )
    ;
    \n
     
     
     
     
     
     
    f
    o
    r
     
    (
    ;
     
    n
    o
    d
    e
     
    !
    =
     
    n
    u
    l
    l
    ;
     
    n
    o
    d
    e
     
    =
     
    (
    T
    N
    o
    d
    e
    )
     
    n
    o
    d
    e
    .
    g
    e
    t
    N
    e
    x
    t
    S
    i
    b
    l
    i
    n
    g
    (
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
    i
    f
    (
    n
    o
    d
    e
    .
    g
    e
    t
    T
    y
    p
    e
    (
    )
     
    =
    =
     
    L
    I
    T
    E
    R
    A
    L
    _
    t
    y
    p
    e
    d
    e
    f
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
    V
    a
    l
    u
    e
     
    =
     
    t
    r
    u
    e
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    b
    r
    e
    a
    k
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    r
    e
    t
    u
    r
    n
    V
    a
    l
    u
    e
    ;
    \n
     
     
     
     
    }
    \n
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    S
    t
    r
    i
    n
    g
     
    g
    e
    t
    A
    S
    c
    o
    p
    e
    N
    a
    m
    e
    (
    )
     
    {
    \n
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    ""
     
    +
     
    (
    u
    n
    n
    a
    m
    e
    d
    S
    c
    o
    p
    e
    C
    o
    u
    n
    t
    e
    r
    +
    +
    )
    ;
    \n
     
     
     
     
    }
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    p
    u
    s
    h
    S
    c
    o
    p
    e
    (
    S
    t
    r
    i
    n
    g
     
    s
    c
    o
    p
    e
    N
    a
    m
    e
    )
     
    {
    \n
     
     
     
     
     
     
    s
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
    .
    p
    u
    s
    h
    S
    c
    o
    p
    e
    (
    s
    c
    o
    p
    e
    N
    a
    m
    e
    )
    ;
    \n
     
     
     
     
    }
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    p
    o
    p
    S
    c
    o
    p
    e
    (
    )
     
    {
    \n
     
     
     
     
     
     
    s
    y
    m
    b
    o
    l
    T
    a
    b
    l
    e
    .
    p
    o
    p
    S
    c
    o
    p
    e
    (
    )
    ;
    \n
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    i
    n
    t
     
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
     
    =
     
    0
    ;
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    R
    e
    c
    o
    g
    n
    i
    t
    i
    o
    n
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    x
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    y
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "ANTLR Parsing Error: "
    +
    e
    x
     
    +
     
    " token name:"
     
    +
     
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    L
    A
    (
    1
    )
    ]
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    e
    x
    .
    p
    r
    i
    n
    t
    S
    t
    a
    c
    k
    T
    r
    a
    c
    e
    (
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
    \t
     
     
    c
    a
    t
    c
    h
     
    (
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "ANTLR Parsing Error: "
    +
    e
    x
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    e
    x
    .
    p
    r
    i
    n
    t
    S
    t
    a
    c
    k
    T
    r
    a
    c
    e
    (
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    )
    ;
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    S
    t
    r
    i
    n
    g
     
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "ANTLR Parsing Error from String: "
     
    +
     
    s
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    W
    a
    r
    n
    i
    n
    g
    (
    S
    t
    r
    i
    n
    g
     
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    e
    r
    r
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "ANTLR Parsing Warning from String: "
     
    +
     
    s
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    m
    a
    t
    c
    h
    (
    i
    n
    t
     
    t
    )
     
    t
    h
    r
    o
    w
    s
     
    M
    i
    s
    m
    a
    t
    c
    h
    e
    d
    T
    o
    k
    e
    n
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    b
    o
    o
    l
    e
    a
    n
     
    d
    e
    b
    u
    g
    g
    i
    n
    g
     
    =
     
    f
    a
    l
    s
    e
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    \n
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    d
    e
    b
    u
    g
    g
    i
    n
    g
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
    f
    o
    r
     
    (
    i
    n
    t
     
    x
    =
    0
    ;
     
    x
    <
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
    ;
     
    x
    +
    +
    )
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    (
    " "
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
    t
    r
    y
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "Match("
    +
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    t
    ]
    +
    ") with LA(1)="
    +
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    L
    A
    (
    1
    )
    ]
     
    +
     
    (
    (
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
    >
    0
    )
    ?
    " [inputState.guessing "
    +
     
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
     
    +
     
    "]"
    :
    ""
    )
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    t
    c
    h
     
    (
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "Match("
    +
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    t
    ]
    +
    ") "
     
    +
     
    (
    (
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
    >
    0
    )
    ?
    " [inputState.guessing "
    +
     
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
     
    +
     
    "]"
    :
    ""
    )
    )
    ;
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    y
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    L
    A
    (
    1
    )
    !
    =
    t
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    d
    e
    b
    u
    g
    g
    i
    n
    g
     
    )
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    f
    o
    r
     
    (
    i
    n
    t
     
    x
    =
    0
    ;
     
    x
    <
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
    ;
     
    x
    +
    +
    )
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    (
    " "
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "token mismatch: "
    +
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    L
    A
    (
    1
    )
    ]
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    +
     
    "!="
    +
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    t
    ]
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
    \t
     
     
     
     
     
     
     
     
    t
    h
    r
    o
    w
     
    n
    e
    w
     
    M
    i
    s
    m
    a
    t
    c
    h
    e
    d
    T
    o
    k
    e
    n
    E
    x
    c
    e
    p
    t
    i
    o
    n
    (
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    ,
     
    L
    T
    (
    1
    )
    ,
     
    t
    ,
     
    f
    a
    l
    s
    e
    ,
     
    g
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    )
    )
    ;
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    }
     
    e
    l
    s
    e
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    // mark token as consumed -- fetch next token deferred until LA/LT
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    o
    n
    s
    u
    m
    e
    (
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    c
    a
    t
    c
    h
     
    (
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    t
    r
    a
    c
    e
    I
    n
    (
    S
    t
    r
    i
    n
    g
     
    r
    n
    a
    m
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
     
    +
    =
     
    1
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    f
    o
    r
     
    (
    i
    n
    t
     
    x
    =
    0
    ;
     
    x
    <
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
    ;
     
    x
    +
    +
    )
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    (
    " "
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    y
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "> "
    +
    r
    n
    a
    m
    e
    +
    "; LA(1)==("
    +
     
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    L
    T
    (
    1
    )
    .
    g
    e
    t
    T
    y
    p
    e
    (
    )
    ]
     
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    +
     
    ") "
     
    +
     
    L
    T
    (
    1
    )
    .
    g
    e
    t
    T
    e
    x
    t
    (
    )
     
    +
     
    " [inputState.guessing "
    +
     
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
     
    +
     
    "]"
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    c
    a
    t
    c
    h
     
    (
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    t
    r
    a
    c
    e
    O
    u
    t
    (
    S
    t
    r
    i
    n
    g
     
    r
    n
    a
    m
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    f
    o
    r
     
    (
    i
    n
    t
     
    x
    =
    0
    ;
     
    x
    <
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
    ;
     
    x
    +
    +
    )
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    (
    " "
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    y
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    S
    y
    s
    t
    e
    m
    .
    o
    u
    t
    .
    p
    r
    i
    n
    t
    l
    n
    (
    "< "
    +
    r
    n
    a
    m
    e
    +
    "; LA(1)==("
    +
     
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    [
    L
    T
    (
    1
    )
    .
    g
    e
    t
    T
    y
    p
    e
    (
    )
    ]
     
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    +
     
    ") "
    +
    L
    T
    (
    1
    )
    .
    g
    e
    t
    T
    e
    x
    t
    (
    )
     
    +
     
    " [inputState.guessing "
    +
     
    i
    n
    p
    u
    t
    S
    t
    a
    t
    e
    .
    g
    u
    e
    s
    s
    i
    n
    g
     
    +
     
    "]"
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    c
    a
    t
    c
    h
     
    (
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
    t
    r
    a
    c
    e
    D
    e
    p
    t
    h
     
    -
    =
     
    1
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
    \n
    }
  rules
   rule_
    id_
     translationUnit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         externalList
     |
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         S
         y
         s
         t
         e
         m
         .
         e
         r
         r
         .
         p
         r
         i
         n
         t
         l
         n
          
         (
          
         "Empty source file!"
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     externalList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              externalDef
         )
         +
    ;
   rule_
    id_
     externalDef
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "typedef"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
         )
         =>
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         declaration
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         functionDef
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         asm_expr
    ;
   rule_
    id_
     asm_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "asm"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "volatile"
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         LCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
    ;
   rule_
    id_
     declaration
    ruleAction
     actionBlock
      {
       
      A
      S
      T
       
      d
      s
      1
       
      =
       
      n
      u
      l
      l
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         ds
        :
        rule_ref_or_keyword_as
         declSpecifiers
      element
       elementNoOptionSpec
        actionBlock
         {
          
         d
         s
         1
          
         =
          
         a
         s
         t
         F
         a
         c
         t
         o
         r
         y
         .
         d
         u
         p
         L
         i
         s
         t
         (
         #
         d
         s
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initDeclList
             argActionBlock
              [
              d
              s
              1
              ]
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         D
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         ]
         ,
          
         #
         #
         )
         ;
          
         }
    ;
   rule_
    id_
     declSpecifiers
    ruleAction
     actionBlock
      {
       
      i
      n
      t
       
      s
      p
      e
      c
      C
      o
      u
      n
      t
      =
      0
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             id_
              s
             :
             rule_ref_or_keyword_as
              storageClassSpecifier
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeQualifier
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "struct"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "union"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "enum"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   typeSpecifier
                  argActionBlock
                   [
                   s
                   p
                   e
                   c
                   C
                   o
                   u
                   n
                   t
                   ]
              )
              =>
           element
            elementNoOptionSpec
             id_
              specCount
             =
             rule_ref_or_keyword_as
              typeSpecifier
             argActionBlock
              [
              s
              p
              e
              c
              C
              o
              u
              n
              t
              ]
         )
         +
    ;
   rule_
    id_
     storageClassSpecifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "auto"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "register"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "typedef"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         functionStorageClassSpecifier
    ;
   rule_
    id_
     functionStorageClassSpecifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "extern"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "static"
         ast_type_spec
    ;
   rule_
    id_
     typeQualifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "const"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "volatile"
         ast_type_spec
    ;
   rule_
    id_
     typeSpecifier
    argActionBlock
     [
     i
     n
     t
      
     s
     p
     e
     c
     C
     o
     u
     n
     t
     ]
    returns
    argActionBlock
     [
     i
     n
     t
      
     r
     e
     t
     S
     p
     e
     c
     C
     o
     u
     n
     t
     ]
    ruleAction
     actionBlock
      {
       
      r
      e
      t
      S
      p
      e
      c
      C
      o
      u
      n
      t
       
      =
       
      s
      p
      e
      c
      C
      o
      u
      n
      t
       
      +
       
      1
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "void"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "char"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "short"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "int"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "long"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "float"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "double"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "signed"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "unsigned"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structOrUnionSpecifier
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumSpecifier
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              s
              p
              e
              c
              C
              o
              u
              n
              t
               
              =
              =
               
              0
               
              }
             ?
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typedefName
         )
    ;
   rule_
    id_
     typedefName
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         i
         s
         T
         y
         p
         e
         d
         e
         f
         N
         a
         m
         e
          
         (
          
         L
         T
         (
         1
         )
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
          
         )
          
         }
        ?
      element
       elementNoOptionSpec
        id_
         i
        :
        terminal_
         ID
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
         #
         [
         N
         T
         y
         p
         e
         d
         e
         f
         N
         a
         m
         e
         ]
         ,
          
         #
         i
         )
         ;
          
         }
    ;
   rule_
    id_
     structOrUnionSpecifier
    ruleAction
     actionBlock
      {
       
      S
      t
      r
      i
      n
      g
       
      s
      c
      o
      p
      e
      N
      a
      m
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         sou
        :
        rule_ref_or_keyword_as
         structOrUnion
        !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ID
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   LCURLY
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             id_
              i
             :
             terminal_
              ID
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              l
             :
             terminal_
              LCURLY
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              s
              c
              o
              p
              e
              N
              a
              m
              e
               
              =
               
              #
              s
              o
              u
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
               
              +
               
              " "
               
              +
               
              #
              i
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              #
              l
              .
              s
              e
              t
              T
              e
              x
              t
              (
              s
              c
              o
              p
              e
              N
              a
              m
              e
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              p
              u
              s
              h
              S
              c
              o
              p
              e
              (
              s
              c
              o
              p
              e
              N
              a
              m
              e
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structDeclarationList
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              S
              c
              o
              p
              e
              (
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              RCURLY
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             id_
              l1
             :
             terminal_
              LCURLY
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              s
              c
              o
              p
              e
              N
              a
              m
              e
               
              =
               
              g
              e
              t
              A
              S
              c
              o
              p
              e
              N
              a
              m
              e
              (
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              #
              l
              1
              .
              s
              e
              t
              T
              e
              x
              t
              (
              s
              c
              o
              p
              e
              N
              a
              m
              e
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              p
              u
              s
              h
              S
              c
              o
              p
              e
              (
              s
              c
              o
              p
              e
              N
              a
              m
              e
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structDeclarationList
           element
            elementNoOptionSpec
             actionBlock
              {
               
              p
              o
              p
              S
              c
              o
              p
              e
              (
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              RCURLY
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ID
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         #
          
         =
          
         #
         (
          
         #
         s
         o
         u
         ,
          
         #
         #
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     structOrUnion
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "struct"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "union"
         ast_type_spec
    ;
   rule_
    id_
     structDeclarationList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structDeclaration
         )
         +
    ;
   rule_
    id_
     structDeclaration
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         specifierQualifierList
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         structDeclaratorList
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         +
    ;
   rule_
    id_
     specifierQualifierList
    ruleAction
     actionBlock
      {
       
      i
      n
      t
       
      s
      p
      e
      c
      C
      o
      u
      n
      t
       
      =
       
      0
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "struct"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "union"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "enum"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   typeSpecifier
                  argActionBlock
                   [
                   s
                   p
                   e
                   c
                   C
                   o
                   u
                   n
                   t
                   ]
              )
              =>
           element
            elementNoOptionSpec
             id_
              specCount
             =
             rule_ref_or_keyword_as
              typeSpecifier
             argActionBlock
              [
              s
              p
              e
              c
              C
              o
              u
              n
              t
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeQualifier
         )
         +
    ;
   rule_
    id_
     structDeclaratorList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         structDeclarator
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              structDeclarator
         )
         *
    ;
   rule_
    id_
     structDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              constExpr
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declarator
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COLON
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   constExpr
              )
              ?
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         S
         t
         r
         u
         c
         t
         D
         e
         c
         l
         a
         r
         a
         t
         o
         r
         ]
         ,
          
         #
         #
         )
         ;
          
         }
    ;
   rule_
    id_
     enumSpecifier
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "enum"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ID
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   LCURLY
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             id_
              i
             :
             terminal_
              ID
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              LCURLY
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumList
             argActionBlock
              [
              i
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ]
           element
            elementNoOptionSpec
             terminal_
              RCURLY
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LCURLY
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumList
             argActionBlock
              [
              "anonymous"
              ]
           element
            elementNoOptionSpec
             terminal_
              RCURLY
              ast_type_spec
               !
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              ID
              ast_type_spec
         )
    ;
   rule_
    id_
     enumList
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     e
     n
     u
     m
     N
     a
     m
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         enumerator
        argActionBlock
         [
         e
         n
         u
         m
         N
         a
         m
         e
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              enumerator
             argActionBlock
              [
              e
              n
              u
              m
              N
              a
              m
              e
              ]
         )
         *
    ;
   rule_
    id_
     enumerator
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     e
     n
     u
     m
     N
     a
     m
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         i
        :
        terminal_
         ID
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         s
         y
         m
         b
         o
         l
         T
         a
         b
         l
         e
         .
         a
         d
         d
         (
          
          
         i
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ,
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         (
          
          
          
         n
         u
         l
         l
         ,
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         [
         L
         I
         T
         E
         R
         A
         L
         _
         e
         n
         u
         m
         ,
          
         "enum"
         ]
         ,
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         [
          
         I
         D
         ,
          
         e
         n
         u
         m
         N
         a
         m
         e
         ]
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         )
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              constExpr
         )
         ?
    ;
   rule_
    id_
     initDeclList
    argActionBlock
     [
     A
     S
     T
      
     d
     e
     c
     l
     a
     r
     a
     t
     i
     o
     n
     S
     p
     e
     c
     i
     f
     i
     e
     r
     s
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         initDecl
        argActionBlock
         [
         d
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         S
         p
         e
         c
         i
         f
         i
         e
         r
         s
         ]
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initDecl
             argActionBlock
              [
              d
              e
              c
              l
              a
              r
              a
              t
              i
              o
              n
              S
              p
              e
              c
              i
              f
              i
              e
              r
              s
              ]
         )
         *
    ;
   rule_
    id_
     initDecl
    argActionBlock
     [
     A
     S
     T
      
     d
     e
     c
     l
     a
     r
     a
     t
     i
     o
     n
     S
     p
     e
     c
     i
     f
     i
     e
     r
     s
     ]
    ruleAction
     actionBlock
      {
       
      S
      t
      r
      i
      n
      g
       
      d
      e
      c
      l
      N
      a
      m
      e
       
      =
       
      ""
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         declName
        =
        id_
         d
        :
        rule_ref_or_keyword_as
         declarator
        argActionBlock
         [
         f
         a
         l
         s
         e
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
          
          
          
         A
         S
         T
          
         d
         s
         1
         ,
          
         d
         1
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         d
         s
         1
          
         =
          
         a
         s
         t
         F
         a
         c
         t
         o
         r
         y
         .
         d
         u
         p
         L
         i
         s
         t
         (
         d
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         S
         p
         e
         c
         i
         f
         i
         e
         r
         s
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         d
         1
          
         =
          
         a
         s
         t
         F
         a
         c
         t
         o
         r
         y
         .
         d
         u
         p
         L
         i
         s
         t
         (
         #
         d
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         y
         m
         b
         o
         l
         T
         a
         b
         l
         e
         .
         a
         d
         d
         (
         d
         e
         c
         l
         N
         a
         m
         e
         ,
          
         #
         (
         n
         u
         l
         l
         ,
          
         d
         s
         1
         ,
          
         d
         1
         )
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initializer
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         I
         n
         i
         t
         D
         e
         c
         l
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     pointerGroup
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              STAR
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   typeQualifier
              )
              *
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         P
         o
         i
         n
         t
         e
         r
         G
         r
         o
         u
         p
         ]
         ,
          
         #
         #
         )
         ;
          
         }
    ;
   rule_
    id_
     idList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ID
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              ID
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     initializer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignExpr
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LCURLY
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initializerList
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                    !
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              RCURLY
              ast_type_spec
               !
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         I
         n
         i
         t
         i
         a
         l
         i
         z
         e
         r
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     initializerList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         initializer
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              initializer
         )
         *
    ;
   rule_
    id_
     declarator
    argActionBlock
     [
     b
     o
     o
     l
     e
     a
     n
      
     i
     s
     F
     u
     n
     c
     t
     i
     o
     n
     D
     e
     f
     i
     n
     i
     t
     i
     o
     n
     ]
    returns
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     d
     e
     c
     l
     N
     a
     m
     e
     ]
    ruleAction
     actionBlock
      {
       
      d
      e
      c
      l
      N
      a
      m
      e
       
      =
       
      ""
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pointerGroup
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              id
             :
             terminal_
              ID
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              d
              e
              c
              l
              N
              a
              m
              e
               
              =
               
              i
              d
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              declName
             =
             rule_ref_or_keyword_as
              declarator
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           !
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              i
              f
               
              (
              i
              s
              F
              u
              n
              c
              t
              i
              o
              n
              D
              e
              f
              i
              n
              i
              t
              i
              o
              n
              )
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              p
              u
              s
              h
              S
              c
              o
              p
              e
              (
              d
              e
              c
              l
              N
              a
              m
              e
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              e
              l
              s
              e
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              p
              u
              s
              h
              S
              c
              o
              p
              e
              (
              "!"
              +
              d
              e
              c
              l
              N
              a
              m
              e
              )
              ;
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        declSpecifiers
                   )
                   =>
                element
                 elementNoOptionSpec
                  id_
                   p
                  :
                  rule_ref_or_keyword_as
                   parameterTypeList
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   n
                   u
                   l
                   l
                   ,
                    
                   #
                   #
                   ,
                    
                   #
                   (
                    
                   #
                   [
                   N
                   P
                   a
                   r
                   a
                   m
                   e
                   t
                   e
                   r
                   T
                   y
                   p
                   e
                   L
                   i
                   s
                   t
                   ]
                   ,
                    
                   #
                   p
                    
                   )
                    
                   )
                   ;
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       id_
                        i
                       :
                       rule_ref_or_keyword_as
                        idList
                   )
                   ?
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   #
                   #
                    
                   =
                    
                   #
                   (
                    
                   n
                   u
                   l
                   l
                   ,
                    
                   #
                   #
                   ,
                    
                   #
                   (
                    
                   #
                   [
                   N
                   P
                   a
                   r
                   a
                   m
                   e
                   t
                   e
                   r
                   T
                   y
                   p
                   e
                   L
                   i
                   s
                   t
                   ]
                   ,
                    
                   #
                   i
                    
                   )
                    
                   )
                   ;
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   }
              )
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              p
              o
              p
              S
              c
              o
              p
              e
              (
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LBRACKET
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   constExpr
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              RBRACKET
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         D
         e
         c
         l
         a
         r
         a
         t
         o
         r
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     parameterTypeList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         parameterDeclaration
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parameterDeclaration
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             terminal_
              VARARGS
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     parameterDeclaration
    ruleAction
     actionBlock
      {
       
      S
      t
      r
      i
      n
      g
       
      d
      e
      c
      l
      N
      a
      m
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         ds
        :
        rule_ref_or_keyword_as
         declSpecifiers
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   declarator
                  argActionBlock
                   [
                   f
                   a
                   l
                   s
                   e
                   ]
              )
              =>
           element
            elementNoOptionSpec
             id_
              declName
             =
             id_
              d
             :
             rule_ref_or_keyword_as
              declarator
             argActionBlock
              [
              f
              a
              l
              s
              e
              ]
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              A
              S
              T
               
              d
              2
              ,
               
              d
              s
              2
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              d
              2
               
              =
               
              a
              s
              t
              F
              a
              c
              t
              o
              r
              y
              .
              d
              u
              p
              L
              i
              s
              t
              (
              #
              d
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              d
              s
              2
               
              =
               
              a
              s
              t
              F
              a
              c
              t
              o
              r
              y
              .
              d
              u
              p
              L
              i
              s
              t
              (
              #
              d
              s
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              s
              y
              m
              b
              o
              l
              T
              a
              b
              l
              e
              .
              a
              d
              d
              (
              d
              e
              c
              l
              N
              a
              m
              e
              ,
               
              #
              (
              n
              u
              l
              l
              ,
               
              d
              s
              2
              ,
               
              d
              2
              )
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              nonemptyAbstractDeclarator
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         P
         a
         r
         a
         m
         e
         t
         e
         r
         D
         e
         c
         l
         a
         r
         a
         t
         i
         o
         n
         ]
         ,
          
         #
         #
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     functionDef
    ruleAction
     actionBlock
      {
       
      S
      t
      r
      i
      n
      g
       
      d
      e
      c
      l
      N
      a
      m
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   functionDeclSpecifiers
              )
              =>
           element
            elementNoOptionSpec
             id_
              ds
             :
             rule_ref_or_keyword_as
              functionDeclSpecifiers
          |
          alternative
         )
      element
       elementNoOptionSpec
        id_
         declName
        =
        id_
         d
        :
        rule_ref_or_keyword_as
         declarator
        argActionBlock
         [
         t
         r
         u
         e
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         A
         S
         T
          
         d
         2
         ,
          
         d
         s
         2
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         d
         2
          
         =
          
         a
         s
         t
         F
         a
         c
         t
         o
         r
         y
         .
         d
         u
         p
         L
         i
         s
         t
         (
         #
         d
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         d
         s
         2
          
         =
          
         a
         s
         t
         F
         a
         c
         t
         o
         r
         y
         .
         d
         u
         p
         L
         i
         s
         t
         (
         #
         d
         s
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         y
         m
         b
         o
         l
         T
         a
         b
         l
         e
         .
         a
         d
         d
         (
         d
         e
         c
         l
         N
         a
         m
         e
         ,
          
         #
         (
         n
         u
         l
         l
         ,
          
         d
         s
         2
         ,
          
         d
         2
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         p
         u
         s
         h
         S
         c
         o
         p
         e
         (
         d
         e
         c
         l
         N
         a
         m
         e
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              VARARGS
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
               !
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         S
         c
         o
         p
         e
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
        argActionBlock
         [
         d
         e
         c
         l
         N
         a
         m
         e
         ]
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         F
         u
         n
         c
         t
         i
         o
         n
         D
         e
         f
         ]
         ,
          
         #
         #
          
         )
         ;
         }
    ;
   rule_
    id_
     functionDeclSpecifiers
    ruleAction
     actionBlock
      {
       
      i
      n
      t
       
      s
      p
      e
      c
      C
      o
      u
      n
      t
       
      =
       
      0
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              functionStorageClassSpecifier
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeQualifier
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "struct"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "union"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "enum"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   typeSpecifier
                  argActionBlock
                   [
                   s
                   p
                   e
                   c
                   C
                   o
                   u
                   n
                   t
                   ]
              )
              =>
           element
            elementNoOptionSpec
             id_
              specCount
             =
             rule_ref_or_keyword_as
              typeSpecifier
             argActionBlock
              [
              s
              p
              e
              c
              C
              o
              u
              n
              t
              ]
         )
         +
    ;
   rule_
    id_
     declarationList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   declarationPredictor
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
         )
         +
    ;
   rule_
    id_
     declarationPredictor
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "typedef"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declaration
         )
    ;
   rule_
    id_
     compoundStatement
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     s
     c
     o
     p
     e
     N
     a
     m
     e
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         p
         u
         s
         h
         S
         c
         o
         p
         e
         (
         s
         c
         o
         p
         e
         N
         a
         m
         e
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   declarationPredictor
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              declarationList
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statementList
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         p
         o
         p
         S
         c
         o
         p
         e
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         C
         o
         m
         p
         o
         u
         n
         d
         S
         t
         a
         t
         e
         m
         e
         n
         t
         ,
          
         s
         c
         o
         p
         e
         N
         a
         m
         e
         ]
         ,
          
         #
         #
         )
         ;
          
         }
    ;
   rule_
    id_
     statementList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         +
    ;
   rule_
    id_
     statement
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compoundStatement
        argActionBlock
         [
         g
         e
         t
         A
         S
         c
         o
         p
         e
         N
         a
         m
         e
         (
         )
         ]
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         S
         t
         a
         t
         e
         m
         e
         n
         t
         E
         x
         p
         r
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "while"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "do"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
      element
       elementNoOptionSpec
        terminal_
         "while"
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      !
      element
       elementNoOptionSpec
        terminal_
         "for"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              e1
             :
             rule_ref_or_keyword_as
              expr
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              e2
             :
             rule_ref_or_keyword_as
              expr
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              e3
             :
             rule_ref_or_keyword_as
              expr
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         s
        :
        rule_ref_or_keyword_as
         statement
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         i
         f
          
         (
          
         #
         e
         1
          
         =
         =
          
         n
         u
         l
         l
         )
          
         {
          
         #
         e
         1
          
         =
          
         #
         [
          
         N
         E
         m
         p
         t
         y
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         ]
         ;
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         i
         f
          
         (
          
         #
         e
         2
          
         =
         =
          
         n
         u
         l
         l
         )
          
         {
          
         #
         e
         2
          
         =
          
         #
         [
          
         N
         E
         m
         p
         t
         y
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         ]
         ;
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         i
         f
          
         (
          
         #
         e
         3
          
         =
         =
          
         n
         u
         l
         l
         )
          
         {
          
         #
         e
         3
          
         =
          
         #
         [
          
         N
         E
         m
         p
         t
         y
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
          
         ]
         ;
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         L
         I
         T
         E
         R
         A
         L
         _
         f
         o
         r
         ,
          
         "for"
         ]
         ,
          
         #
         e
         1
         ,
          
         #
         e
         2
         ,
          
         #
         e
         3
         ,
          
         #
         s
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "goto"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         ID
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "continue"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "break"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "return"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
          !
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ID
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         L
         a
         b
         e
         l
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "case"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         constExpr
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "default"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "if"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "else"
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              statement
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "switch"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         statement
    ;
   rule_
    id_
     expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assignExpr
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             id_
              c
             :
             terminal_
              COMMA
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              c
              .
              s
              e
              t
              T
              y
              p
              e
              (
              N
              C
              o
              m
              m
              a
              E
              x
              p
              r
              )
              ;
               
              }
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignExpr
         )
         *
    ;
   rule_
    id_
     assignExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             rule_ref_or_keyword_as
              assignOperator
             !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignExpr
           element
            elementNoOptionSpec
             actionBlock
              {
               
              #
              #
               
              =
               
              #
              (
               
              #
              a
              ,
               
              #
              #
               
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     assignOperator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DIV_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PLUS_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MINUS_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAR_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MOD_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         RSHIFT_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LSHIFT_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BAND_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BOR_ASSIGN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BXOR_ASSIGN
         ast_type_spec
    ;
   rule_
    id_
     conditionalExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         logicalOrExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              QUESTION
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              conditionalExpr
         )
         ?
    ;
   rule_
    id_
     constExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         conditionalExpr
    ;
   rule_
    id_
     logicalOrExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         logicalAndExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              logicalAndExpr
         )
         *
    ;
   rule_
    id_
     logicalAndExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         inclusiveOrExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LAND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              inclusiveOrExpr
         )
         *
    ;
   rule_
    id_
     inclusiveOrExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exclusiveOrExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exclusiveOrExpr
         )
         *
    ;
   rule_
    id_
     exclusiveOrExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         bitAndExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BXOR
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              bitAndExpr
         )
         *
    ;
   rule_
    id_
     bitAndExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         equalityExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BAND
              ast_type_spec
               ^
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              equalityExpr
         )
         *
    ;
   rule_
    id_
     equalityExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         relationalExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   EQUAL
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   NOT_EQUAL
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              relationalExpr
         )
         *
    ;
   rule_
    id_
     relationalExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         shiftExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LT
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LTE
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   GT
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   GTE
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              shiftExpr
         )
         *
    ;
   rule_
    id_
     shiftExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         additiveExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LSHIFT
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   RSHIFT
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              additiveExpr
         )
         *
    ;
   rule_
    id_
     additiveExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         multExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              multExpr
         )
         *
    ;
   rule_
    id_
     multExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         castExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DIV
                   ast_type_spec
                    ^
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MOD
                   ast_type_spec
                    ^
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              castExpr
         )
         *
    ;
   rule_
    id_
     castExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeName
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         typeName
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              castExpr
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         C
         a
         s
         t
         ,
          
         "("
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpr
    ;
   rule_
    id_
     typeName
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         specifierQualifierList
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              nonemptyAbstractDeclarator
         )
         ?
    ;
   rule_
    id_
     nonemptyAbstractDeclarator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              pointerGroup
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LPAREN
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             nonemptyAbstractDeclarator
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             parameterTypeList
                        )
                        ?
                     element
                      elementNoOptionSpec
                       terminal_
                        RPAREN
                        ast_type_spec
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LBRACKET
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             expr
                        )
                        ?
                     element
                      elementNoOptionSpec
                       terminal_
                        RBRACKET
                        ast_type_spec
                   )
              )
              *
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LPAREN
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             nonemptyAbstractDeclarator
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             parameterTypeList
                        )
                        ?
                     element
                      elementNoOptionSpec
                       terminal_
                        RPAREN
                        ast_type_spec
                   )
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        LBRACKET
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            rule_ref_or_keyword_as
                             expr
                        )
                        ?
                     element
                      elementNoOptionSpec
                       terminal_
                        RBRACKET
                        ast_type_spec
                   )
              )
              +
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
          
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         N
         o
         n
         e
         m
         p
         t
         y
         A
         b
         s
         t
         r
         a
         c
         t
         D
         e
         c
         l
         a
         r
         a
         t
         o
         r
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     unaryExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         postfixExpr
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpr
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DEC
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         unaryExpr
     |
     alternative
      element
       elementNoOptionSpec
        id_
         u
        :
        rule_ref_or_keyword_as
         unaryOperator
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         castExpr
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         U
         n
         a
         r
         y
         E
         x
         p
         r
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "sizeof"
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LPAREN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   typeName
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              typeName
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              unaryExpr
         )
    ;
   rule_
    id_
     unaryOperator
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         BAND
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAR
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PLUS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MINUS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BNOT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LNOT
         ast_type_spec
    ;
   rule_
    id_
     postfixExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         primaryExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              postfixSuffix
           element
            elementNoOptionSpec
             actionBlock
              {
              #
              #
               
              =
               
              #
              (
               
              #
              [
              N
              P
              o
              s
              t
              f
              i
              x
              E
              x
              p
              r
              ]
              ,
               
              #
              #
               
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     postfixSuffix
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PTR
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              ID
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              ID
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              functionCall
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LBRACKET
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
           element
            elementNoOptionSpec
             terminal_
              RBRACKET
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              INC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              DEC
              ast_type_spec
         )
         +
    ;
   rule_
    id_
     functionCall
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          ^
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             rule_ref_or_keyword_as
              argExprList
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         #
         #
         .
         s
         e
         t
         T
         y
         p
         e
         (
          
         N
         F
         u
         n
         c
         t
         i
         o
         n
         C
         a
         l
         l
         A
         r
         g
         s
          
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     primaryExpr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ID
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         charConst
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         intConst
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         floatConst
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         stringConst
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
          !
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
          
         #
         [
         N
         E
         x
         p
         r
         e
         s
         s
         i
         o
         n
         G
         r
         o
         u
         p
         ,
          
         "("
         ]
         ,
          
         #
         #
          
         )
         ;
          
         }
    ;
   rule_
    id_
     argExprList
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assignExpr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
               !
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              assignExpr
         )
         *
    ;
   rule_
    protected
    id_
     charConst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         CharLiteral
         ast_type_spec
    ;
   rule_
    protected
    id_
     stringConst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              StringLiteral
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         #
         #
          
         =
          
         #
         (
         #
         [
         N
         S
         t
         r
         i
         n
         g
         S
         e
         q
         ]
         ,
          
         #
         #
         )
         ;
          
         }
    ;
   rule_
    protected
    id_
     intConst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         IntOctalConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LongOctalConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UnsignedOctalConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IntIntConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LongIntConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UnsignedIntConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         IntHexConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LongHexConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         UnsignedHexConst
         ast_type_spec
    ;
   rule_
    protected
    id_
     floatConst
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         FloatDoubleConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DoubleDoubleConst
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LongDoubleConst
         ast_type_spec
    ;
   rule_
    id_
     dummy
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NTypedefName
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NInitDecl
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NDeclarator
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NStructDeclarator
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NDeclaration
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NCast
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NPointerGroup
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NExpressionGroup
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NFunctionCallArgs
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NNonemptyAbstractDeclarator
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NInitializer
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NStatementExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEmptyExpression
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NParameterTypeList
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NFunctionDef
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NCompoundStatement
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NParameterDeclaration
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NCommaExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NUnaryExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NLabel
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NPostfixExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NRangeExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NStringSeq
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NInitializerElementLabel
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NLcurlyInitializer
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAsmAttribute
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NGnuAsmExpr
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NTypeMissing
         ast_type_spec
    ;
 classDef
  actionBlock
   {
   \n
    
    
    
    
    
    
    
    
   i
   m
   p
   o
   r
   t
    
   C
   T
   o
   k
   e
   n
   ;
   \n
    
    
    
    
    
    
    
    
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   *
   ;
   \n
    
    
    
    
    
    
    
    
   i
   m
   p
   o
   r
   t
    
   L
   i
   n
   e
   O
   b
   j
   e
   c
   t
   ;
   \n
    
    
    
    
    
    
    
    
   i
   m
   p
   o
   r
   t
    
   a
   n
   t
   l
   r
   .
   *
   ;
   \n
   }
  lexerSpec
   class
   id_
    StdCLexer
   extends
   Lexer
   ;
   lexerOptionsSpec
    options
    {
    lexerOption
     id_
      k
     =
     lexerOptionValue
      optionValue
       3
     ;
    lexerOption
     id_
      exportVocab
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         STDC
     ;
    lexerOption
     id_
      testLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    }
   actionBlock
    {
    \n
     
     
    L
    i
    n
    e
    O
    b
    j
    e
    c
    t
     
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
     
    =
     
    n
    e
    w
     
    L
    i
    n
    e
    O
    b
    j
    e
    c
    t
    (
    )
    ;
    \n
     
     
    S
    t
    r
    i
    n
    g
     
    o
    r
    i
    g
    i
    n
    a
    l
    S
    o
    u
    r
    c
    e
     
    =
     
    ""
    ;
    \n
     
     
    P
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
     
    p
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
     
    =
     
    n
    e
    w
     
    P
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
    (
    )
    ;
    \n
     
     
    i
    n
    t
     
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
     
    =
     
    0
    ;
    \n
     
     
    b
    o
    o
    l
    e
    a
    n
     
    c
    o
    u
    n
    t
    i
    n
    g
    T
    o
    k
    e
    n
    s
     
    =
     
    t
    r
    u
    e
    ;
    \n
     
     
    i
    n
    t
     
    d
    e
    f
    e
    r
    r
    e
    d
    L
    i
    n
    e
    C
    o
    u
    n
    t
     
    =
     
    0
    ;
    \n
    \n
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    s
    e
    t
    C
    o
    u
    n
    t
    i
    n
    g
    T
    o
    k
    e
    n
    s
    (
    b
    o
    o
    l
    e
    a
    n
     
    c
    t
    )
     
    \n
     
     
    {
    \n
     
     
     
     
    c
    o
    u
    n
    t
    i
    n
    g
    T
    o
    k
    e
    n
    s
     
    =
     
    c
    t
    ;
    \n
     
     
     
     
    i
    f
     
    (
     
    c
    o
    u
    n
    t
    i
    n
    g
    T
    o
    k
    e
    n
    s
     
    )
     
    {
    \n
     
     
     
     
     
     
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
     
    =
     
    0
    ;
    \n
     
     
     
     
    }
    \n
     
     
     
     
    e
    l
    s
    e
     
    {
    \n
     
     
     
     
     
     
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
     
    =
     
    1
    ;
    \n
     
     
     
     
    }
    \n
     
     
    }
    \n
    \n
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    s
    e
    t
    O
    r
    i
    g
    i
    n
    a
    l
    S
    o
    u
    r
    c
    e
    (
    S
    t
    r
    i
    n
    g
     
    s
    r
    c
    )
     
    \n
     
     
    {
    \n
     
     
     
     
    o
    r
    i
    g
    i
    n
    a
    l
    S
    o
    u
    r
    c
    e
     
    =
     
    s
    r
    c
    ;
    \n
     
     
     
     
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    s
    e
    t
    S
    o
    u
    r
    c
    e
    (
    s
    r
    c
    )
    ;
    \n
     
     
    }
    \n
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    s
    e
    t
    S
    o
    u
    r
    c
    e
    (
    S
    t
    r
    i
    n
    g
     
    s
    r
    c
    )
     
    \n
     
     
    {
    \n
     
     
     
     
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    s
    e
    t
    S
    o
    u
    r
    c
    e
    (
    s
    r
    c
    )
    ;
    \n
     
     
    }
    \n
     
     
    \n
     
     
    p
    u
    b
    l
    i
    c
     
    P
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
     
    g
    e
    t
    P
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
    (
    )
     
    \n
     
     
    {
    \n
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    p
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
    ;
    \n
     
     
    }
    \n
    \n
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    s
    e
    t
    P
    r
    e
    p
    r
    o
    c
    e
    s
    s
    i
    n
    g
    D
    i
    r
    e
    c
    t
    i
    v
    e
    (
    S
    t
    r
    i
    n
    g
     
    p
    r
    e
    )
    \n
     
     
    {
    \n
     
     
     
     
    p
    r
    e
    p
    r
    o
    c
    e
    s
    s
    o
    r
    I
    n
    f
    o
    C
    h
    a
    n
    n
    e
    l
    .
    a
    d
    d
    L
    i
    n
    e
    F
    o
    r
    T
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
    (
     
    p
    r
    e
    ,
     
    n
    e
    w
     
    I
    n
    t
    e
    g
    e
    r
    (
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
    )
     
    )
    ;
    \n
     
     
    }
    \n
     
     
    \n
     
     
    p
    r
    o
    t
    e
    c
    t
    e
    d
     
    T
    o
    k
    e
    n
     
    m
    a
    k
    e
    T
    o
    k
    e
    n
    (
    i
    n
    t
     
    t
    )
    \n
     
     
    {
    \n
     
     
     
     
    i
    f
     
    (
     
    t
     
    !
    =
     
    T
    o
    k
    e
    n
    .
    S
    K
    I
    P
     
    &
    &
     
    c
    o
    u
    n
    t
    i
    n
    g
    T
    o
    k
    e
    n
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
    +
    +
    ;
    \n
     
     
     
     
    }
    \n
     
     
     
     
    C
    T
    o
    k
    e
    n
     
    t
    o
    k
     
    =
     
    (
    C
    T
    o
    k
    e
    n
    )
     
    s
    u
    p
    e
    r
    .
    m
    a
    k
    e
    T
    o
    k
    e
    n
    (
    t
    )
    ;
    \n
     
     
     
     
    t
    o
    k
    .
    s
    e
    t
    L
    i
    n
    e
    (
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    l
    i
    n
    e
    )
    ;
    \n
     
     
     
     
    t
    o
    k
    .
    s
    e
    t
    S
    o
    u
    r
    c
    e
    (
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    s
    o
    u
    r
    c
    e
    )
    ;
    \n
     
     
     
     
    t
    o
    k
    .
    s
    e
    t
    T
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
    (
    t
    o
    k
    e
    n
    N
    u
    m
    b
    e
    r
    )
    ;
    \n
    \n
     
     
     
     
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    l
    i
    n
    e
     
    +
    =
     
    d
    e
    f
    e
    r
    r
    e
    d
    L
    i
    n
    e
    C
    o
    u
    n
    t
    ;
    \n
     
     
     
     
    d
    e
    f
    e
    r
    r
    e
    d
    L
    i
    n
    e
    C
    o
    u
    n
    t
     
    =
     
    0
    ;
    \n
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    t
    o
    k
    ;
    \n
     
     
    }
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    d
    e
    f
    e
    r
    r
    e
    d
    N
    e
    w
    l
    i
    n
    e
    (
    )
     
    {
     
    \n
     
     
     
     
     
     
     
     
    d
    e
    f
    e
    r
    r
    e
    d
    L
    i
    n
    e
    C
    o
    u
    n
    t
    +
    +
    ;
    \n
     
     
     
     
    }
    \n
    \n
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    n
    e
    w
    l
    i
    n
    e
    (
    )
     
    {
     
    \n
     
     
     
     
     
     
     
     
    l
    i
    n
    e
    O
    b
    j
    e
    c
    t
    .
    n
    e
    w
    l
    i
    n
    e
    (
    )
    ;
    \n
     
     
     
     
    }
    \n
    \n
    \n
    \n
    \n
    \n
    \n
    }
  rules
   rule_
    protected
    id_
     Vocabulary
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '\3'
         ..
         '\377'
    ;
   rule_
    id_
     ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '='
    ;
   rule_
    id_
     COLON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ':'
    ;
   rule_
    id_
     COMMA
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ','
    ;
   rule_
    id_
     QUESTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '?'
    ;
   rule_
    id_
     SEMI
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ';'
    ;
   rule_
    id_
     PTR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "->"
         ast_type_spec
    ;
   rule_
    protected
    id_
     DOT
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     VARARGS
    :
    altList
     alternative
    ;
   rule_
    id_
     LPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '('
    ;
   rule_
    id_
     RPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ')'
    ;
   rule_
    id_
     LBRACKET
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '['
    ;
   rule_
    id_
     RBRACKET
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ']'
    ;
   rule_
    id_
     LCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '{'
    ;
   rule_
    id_
     RCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '}'
    ;
   rule_
    id_
     EQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "=="
         ast_type_spec
    ;
   rule_
    id_
     NOT_EQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "!="
         ast_type_spec
    ;
   rule_
    id_
     LTE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<="
         ast_type_spec
    ;
   rule_
    id_
     LT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<"
         ast_type_spec
    ;
   rule_
    id_
     GTE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">="
         ast_type_spec
    ;
   rule_
    id_
     GT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">"
         ast_type_spec
    ;
   rule_
    id_
     DIV
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '/'
    ;
   rule_
    id_
     DIV_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/="
         ast_type_spec
    ;
   rule_
    id_
     PLUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '+'
    ;
   rule_
    id_
     PLUS_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "+="
         ast_type_spec
    ;
   rule_
    id_
     INC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "++"
         ast_type_spec
    ;
   rule_
    id_
     MINUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '-'
    ;
   rule_
    id_
     MINUS_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "-="
         ast_type_spec
    ;
   rule_
    id_
     DEC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "--"
         ast_type_spec
    ;
   rule_
    id_
     STAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '*'
    ;
   rule_
    id_
     STAR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "*="
         ast_type_spec
    ;
   rule_
    id_
     MOD
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '%'
    ;
   rule_
    id_
     MOD_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "%="
         ast_type_spec
    ;
   rule_
    id_
     RSHIFT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>"
         ast_type_spec
    ;
   rule_
    id_
     RSHIFT_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>="
         ast_type_spec
    ;
   rule_
    id_
     LSHIFT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<"
         ast_type_spec
    ;
   rule_
    id_
     LSHIFT_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<="
         ast_type_spec
    ;
   rule_
    id_
     LAND
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "&&"
         ast_type_spec
    ;
   rule_
    id_
     LNOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '!'
    ;
   rule_
    id_
     LOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "||"
         ast_type_spec
    ;
   rule_
    id_
     BAND
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '&'
    ;
   rule_
    id_
     BAND_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "&="
         ast_type_spec
    ;
   rule_
    id_
     BNOT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '~'
    ;
   rule_
    id_
     BOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '|'
    ;
   rule_
    id_
     BOR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "|="
         ast_type_spec
    ;
   rule_
    id_
     BXOR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '^'
    ;
   rule_
    id_
     BXOR_ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "^="
         ast_type_spec
    ;
   rule_
    id_
     Whitespace
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '\003'
                   ..
                   '\010'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\t'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\013'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\f'
               |
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '\016'
                   ..
                   '\037'
               |
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '\177'
                   ..
                   '\377'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ' '
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\r\n"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         ;
          
          
         }
    ;
   rule_
    id_
     Comment
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/*"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              L
              A
              (
              2
              )
               
              !
              =
               
              '/'
               
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              '*'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\r\n"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              d
              e
              f
              e
              r
              r
              e
              d
              N
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
               
              d
              e
              f
              e
              r
              r
              e
              d
              N
              e
              w
              l
              i
              n
              e
              (
              )
              ;
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '*'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         "*/"
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         ;
          
          
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     CPPComment
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "//"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         _
         t
         t
         y
         p
         e
          
         =
          
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     PREPROC_DIRECTIVE
    ruleOptionsSpec
     options
     {
     option
      id_
       paraphrase
      =
      optionValue
       "a line directive"
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '#'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "line"
                   ast_type_spec
               |
               alternative
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       ebnf
                        (
                        block
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             ' '
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             '\t'
                         |
                         alternative
                          element
                           elementNoOptionSpec
                            terminal_
                             '\014'
                        )
                        +
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '9'
                   )
              )
              =>
           element
            elementNoOptionSpec
             terminal_
              LineDirective
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ~
                  notTerminal
                   '\n'
              )
              *
           element
            elementNoOptionSpec
             actionBlock
              {
               
              s
              e
              t
              P
              r
              e
              p
              r
              o
              c
              e
              s
              s
              i
              n
              g
              D
              i
              r
              e
              c
              t
              i
              v
              e
              (
              g
              e
              t
              T
              e
              x
              t
              (
              )
              )
              ;
               
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
          
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         _
         t
         t
         y
         p
         e
          
         =
          
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    protected
    id_
     Space
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\014'
         )
    ;
   rule_
    protected
    id_
     LineDirective
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      b
      o
      o
      l
      e
      a
      n
       
      o
      l
      d
      C
      o
      u
      n
      t
      i
      n
      g
      T
      o
      k
      e
      n
      s
       
      =
       
      c
      o
      u
      n
      t
      i
      n
      g
      T
      o
      k
      e
      n
      s
      ;
      \n
       
       
       
       
       
       
       
       
      c
      o
      u
      n
      t
      i
      n
      g
      T
      o
      k
      e
      n
      s
       
      =
       
      f
      a
      l
      s
      e
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         l
         i
         n
         e
         O
         b
         j
         e
         c
         t
          
         =
          
         n
         e
         w
          
         L
         i
         n
         e
         O
         b
         j
         e
         c
         t
         (
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         d
         e
         f
         e
         r
         r
         e
         d
         L
         i
         n
         e
         C
         o
         u
         n
         t
          
         =
          
         0
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "line"
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         Number
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         l
         i
         n
         e
         O
         b
         j
         e
         c
         t
         .
         s
         e
         t
         L
         i
         n
         e
         (
         I
         n
         t
         e
         g
         e
         r
         .
         p
         a
         r
         s
         e
         I
         n
         t
         (
         n
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         )
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              fn
             :
             terminal_
              StringLiteral
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
               
              t
              r
              y
               
              {
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              S
              o
              u
              r
              c
              e
              (
              f
              n
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              .
              s
              u
              b
              s
              t
              r
              i
              n
              g
              (
              1
              ,
              f
              n
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              .
              l
              e
              n
              g
              t
              h
              (
              )
              -
              1
              )
              )
              ;
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              c
              a
              t
              c
              h
               
              (
              S
              t
              r
              i
              n
              g
              I
              n
              d
              e
              x
              O
              u
              t
              O
              f
              B
              o
              u
              n
              d
              s
              E
              x
              c
              e
              p
              t
              i
              o
              n
               
              e
              )
               
              {
               
              /*not possible*/
               
              }
               
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              fi
             :
             terminal_
              ID
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              S
              o
              u
              r
              c
              e
              (
              f
              i
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "1"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              E
              n
              t
              e
              r
              i
              n
              g
              F
              i
              l
              e
              (
              t
              r
              u
              e
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "2"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              R
              e
              t
              u
              r
              n
              i
              n
              g
              T
              o
              F
              i
              l
              e
              (
              t
              r
              u
              e
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "3"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              S
              y
              s
              t
              e
              m
              H
              e
              a
              d
              e
              r
              (
              t
              r
              u
              e
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Space
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "4"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              i
              n
              e
              O
              b
              j
              e
              c
              t
              .
              s
              e
              t
              T
              r
              e
              a
              t
              A
              s
              C
              (
              t
              r
              u
              e
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
              )
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\r\n"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\r"
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "\n"
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         p
         r
         e
         p
         r
         o
         c
         e
         s
         s
         o
         r
         I
         n
         f
         o
         C
         h
         a
         n
         n
         e
         l
         .
         a
         d
         d
         L
         i
         n
         e
         F
         o
         r
         T
         o
         k
         e
         n
         N
         u
         m
         b
         e
         r
         (
         n
         e
         w
          
         L
         i
         n
         e
         O
         b
         j
         e
         c
         t
         (
         l
         i
         n
         e
         O
         b
         j
         e
         c
         t
         )
         ,
          
         n
         e
         w
          
         I
         n
         t
         e
         g
         e
         r
         (
         t
         o
         k
         e
         n
         N
         u
         m
         b
         e
         r
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         c
         o
         u
         n
         t
         i
         n
         g
         T
         o
         k
         e
         n
         s
          
         =
          
         o
         l
         d
         C
         o
         u
         n
         t
         i
         n
         g
         T
         o
         k
         e
         n
         s
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     CharLiteral
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\''
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Escape
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\''
              )
         )
      element
       elementNoOptionSpec
        terminal_
         '\''
    ;
   rule_
    id_
     StringLiteral
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Escape
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   d
                   e
                   f
                   e
                   r
                   r
                   e
                   d
                   N
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   d
                   e
                   f
                   e
                   r
                   r
                   e
                   d
                   N
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   _
                   t
                   t
                   y
                   p
                   e
                    
                   =
                    
                   B
                   a
                   d
                   S
                   t
                   r
                   i
                   n
                   g
                   L
                   i
                   t
                   e
                   r
                   a
                   l
                   ;
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   d
                   e
                   f
                   e
                   r
                   r
                   e
                   d
                   N
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   \n
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '"'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
    ;
   rule_
    protected
    id_
     BadStringLiteral
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     Escape
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\\'
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'a'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'b'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'f'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'n'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'r'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              't'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'v'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '"'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\''
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\\'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '?'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '3'
              )
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   subruleOptionsSpec
                    options
                    {
                    option
                     id_
                      warnWhenFollowAmbig
                     =
                     optionValue
                      qualifiedID
                       id_
                        false
                     ;
                    }
                   :
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        Digit
                        ast_type_spec
                   )
                   ?
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '4'
                   ..
                   '7'
              )
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'x'
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  range_
                   'a'
                   ..
                   'f'
               |
               alternative
                element
                 elementNoOptionSpec
                  range_
                   'A'
                   ..
                   'F'
              )
              +
         )
    ;
   rule_
    protected
    id_
     Digit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '0'
         ..
         '9'
    ;
   rule_
    protected
    id_
     LongSuffix
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         'l'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'L'
    ;
   rule_
    protected
    id_
     UnsignedSuffix
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         'u'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'U'
    ;
   rule_
    protected
    id_
     FloatSuffix
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         'f'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         'F'
    ;
   rule_
    protected
    id_
     Exponent
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'e'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'E'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '+'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '-'
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Digit
              ast_type_spec
         )
         +
    ;
   rule_
    protected
    id_
     DoubleDoubleConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     FloatDoubleConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     LongDoubleConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     IntOctalConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     LongOctalConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     UnsignedOctalConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     IntIntConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     LongIntConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     UnsignedIntConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     IntHexConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     LongHexConst
    :
    altList
     alternative
    ;
   rule_
    protected
    id_
     UnsignedHexConst
    :
    altList
     alternative
    ;
   rule_
    id_
     Number
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
              )
              +
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '.'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'e'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'E'
              )
         )
         =>
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Digit
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '.'
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
              )
              *
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Exponent
                   ast_type_spec
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              Exponent
              ast_type_spec
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         D
         o
         u
         b
         l
         e
         D
         o
         u
         b
         l
         e
         C
         o
         n
         s
         t
         ;
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              FloatSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              F
              l
              o
              a
              t
              D
              o
              u
              b
              l
              e
              C
              o
              n
              s
              t
              ;
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              LongSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              L
              o
              n
              g
              D
              o
              u
              b
              l
              e
              C
              o
              n
              s
              t
              ;
               
               
               
               
               
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "..."
              ast_type_spec
         )
         =>
      element
       elementNoOptionSpec
        terminal_
         "..."
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         V
         A
         R
         A
         R
         G
         S
         ;
          
          
          
          
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         D
         O
         T
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Digit
                   ast_type_spec
              )
              +
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Exponent
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              D
              o
              u
              b
              l
              e
              D
              o
              u
              b
              l
              e
              C
              o
              n
              s
              t
              ;
               
               
               
              }
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   FloatSuffix
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   _
                   t
                   t
                   y
                   p
                   e
                    
                   =
                    
                   F
                   l
                   o
                   a
                   t
                   D
                   o
                   u
                   b
                   l
                   e
                   C
                   o
                   n
                   s
                   t
                   ;
                    
                    
                    
                    
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LongSuffix
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   _
                   t
                   t
                   y
                   p
                   e
                    
                   =
                    
                   L
                   o
                   n
                   g
                   D
                   o
                   u
                   b
                   l
                   e
                   C
                   o
                   n
                   s
                   t
                   ;
                    
                    
                    
                    
                    
                   }
              )
              ?
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '0'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '7'
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         I
         n
         t
         O
         c
         t
         a
         l
         C
         o
         n
         s
         t
         ;
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LongSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              L
              o
              n
              g
              O
              c
              t
              a
              l
              C
              o
              n
              s
              t
              ;
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UnsignedSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              U
              n
              s
              i
              g
              n
              e
              d
              O
              c
              t
              a
              l
              C
              o
              n
              s
              t
              ;
               
               
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        range_
         '1'
         ..
         '9'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Digit
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         I
         n
         t
         I
         n
         t
         C
         o
         n
         s
         t
         ;
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LongSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              L
              o
              n
              g
              I
              n
              t
              C
              o
              n
              s
              t
              ;
               
               
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UnsignedSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              U
              n
              s
              i
              g
              n
              e
              d
              I
              n
              t
              C
              o
              n
              s
              t
              ;
               
               
               
               
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '0'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'x'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'X'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'f'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'F'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              Digit
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         _
         t
         t
         y
         p
         e
          
         =
          
         I
         n
         t
         H
         e
         x
         C
         o
         n
         s
         t
         ;
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LongSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              L
              o
              n
              g
              H
              e
              x
              C
              o
              n
              s
              t
              ;
               
               
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              UnsignedSuffix
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              _
              t
              t
              y
              p
              e
               
              =
               
              U
              n
              s
              i
              g
              n
              e
              d
              H
              e
              x
              C
              o
              n
              s
              t
              ;
               
               
               
               
              }
         )
         ?
    ;
   rule_
    id_
     ID
    ruleOptionsSpec
     options
     {
     option
      id_
       testLiterals
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         *
    ;
 <EOF>
