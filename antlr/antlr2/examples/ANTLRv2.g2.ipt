grammar_
 header_
  header
  actionBlock
   {
   \n
   p
   a
   c
   k
   a
   g
   e
    
   a
   n
   t
   l
   r
   ;
   \n
   }
 classDef
  actionBlock
   {
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   u
   t
   i
   l
   .
   E
   n
   u
   m
   e
   r
   a
   t
   i
   o
   n
   ;
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   D
   a
   t
   a
   I
   n
   p
   u
   t
   S
   t
   r
   e
   a
   m
   ;
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   I
   n
   p
   u
   t
   S
   t
   r
   e
   a
   m
   ;
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   F
   i
   l
   e
   I
   n
   p
   u
   t
   S
   t
   r
   e
   a
   m
   ;
   \n
   i
   m
   p
   o
   r
   t
    
   j
   a
   v
   a
   .
   i
   o
   .
   I
   O
   E
   x
   c
   e
   p
   t
   i
   o
   n
   ;
   \n
   }
  parserSpec
   class
   id_
    ANTLRParser
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      exportVocab
     =
     optionValue
      qualifiedID
       id_
        ANTLR
     ;
    option
     id_
      defaultErrorHandler
     =
     optionValue
      qualifiedID
       id_
        false
     ;
    option
     id_
      k
     =
     optionValue
      2
     ;
    }
   tokensSpec
    tokens
    {
    tokenEntry
     "tokens"
     ;
    }
   actionBlock
    {
    \n
     
     
     
     
     
     
     
     
    p
    r
    i
    v
    a
    t
    e
     
    s
    t
    a
    t
    i
    c
     
    f
    i
    n
    a
    l
     
    b
    o
    o
    l
    e
    a
    n
     
    D
    E
    B
    U
    G
    _
    P
    A
    R
    S
    E
    R
     
    =
     
    f
    a
    l
    s
    e
    ;
    \n
    \n
     
     
     
     
     
     
     
     
    A
    N
    T
    L
    R
    G
    r
    a
    m
    m
    a
    r
    P
    a
    r
    s
    e
    B
    e
    h
    a
    v
    i
    o
    r
     
    b
    e
    h
    a
    v
    i
    o
    r
    ;
    \n
     
     
     
     
     
     
     
     
    T
    o
    o
    l
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
    ;
    \n
     
     
     
     
     
     
     
     
    p
    r
    o
    t
    e
    c
    t
    e
    d
     
    i
    n
    t
     
    b
    l
    o
    c
    k
    N
    e
    s
    t
    i
    n
    g
    =
     
    -
    1
    ;
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    A
    N
    T
    L
    R
    P
    a
    r
    s
    e
    r
    (
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    T
    o
    k
    e
    n
    B
    u
    f
    f
    e
    r
     
    t
    o
    k
    e
    n
    B
    u
    f
    ,
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    A
    N
    T
    L
    R
    G
    r
    a
    m
    m
    a
    r
    P
    a
    r
    s
    e
    B
    e
    h
    a
    v
    i
    o
    r
     
    b
    e
    h
    a
    v
    i
    o
    r
    _
    ,
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    T
    o
    o
    l
     
    t
    o
    o
    l
    _
    \n
     
     
     
     
     
     
     
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    s
    u
    p
    e
    r
    (
    t
    o
    k
    e
    n
    B
    u
    f
    ,
     
    1
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
     
    =
     
    _
    t
    o
    k
    e
    n
    N
    a
    m
    e
    s
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    b
    e
    h
    a
    v
    i
    o
    r
     
    =
     
    b
    e
    h
    a
    v
    i
    o
    r
    _
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
     
    =
     
    t
    o
    o
    l
    _
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    S
    t
    r
    i
    n
    g
     
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
    .
    e
    r
    r
    o
    r
    (
    s
    ,
     
    g
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    )
    ,
     
    -
    1
    ,
     
    -
    1
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    R
    e
    c
    o
    g
    n
    i
    t
    i
    o
    n
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    e
    ,
     
    e
    .
    g
    e
    t
    E
    r
    r
    o
    r
    M
    e
    s
    s
    a
    g
    e
    (
    )
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    E
    r
    r
    o
    r
    (
    R
    e
    c
    o
    g
    n
    i
    t
    i
    o
    n
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    e
    ,
     
    S
    t
    r
    i
    n
    g
     
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
    .
    e
    r
    r
    o
    r
    (
    s
    ,
     
    e
    .
    g
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    )
    ,
     
    e
    .
    g
    e
    t
    L
    i
    n
    e
    (
    )
    ,
     
    e
    .
    g
    e
    t
    C
    o
    l
    u
    m
    n
    (
    )
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    v
    o
    i
    d
     
    r
    e
    p
    o
    r
    t
    W
    a
    r
    n
    i
    n
    g
    (
    S
    t
    r
    i
    n
    g
     
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
    .
    w
    a
    r
    n
    i
    n
    g
    (
    s
    ,
     
    g
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    )
    ,
     
    -
    1
    ,
     
    -
    1
    )
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    r
    i
    v
    a
    t
    e
     
    b
    o
    o
    l
    e
    a
    n
     
    l
    a
    s
    t
    I
    n
    R
    u
    l
    e
    (
    )
     
    t
    h
    r
    o
    w
    s
     
    T
    o
    k
    e
    n
    S
    t
    r
    e
    a
    m
    E
    x
    c
    e
    p
    t
    i
    o
    n
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    b
    l
    o
    c
    k
    N
    e
    s
    t
    i
    n
    g
    =
    =
    0
     
    &
    &
     
    (
    L
    A
    (
    1
    )
    =
    =
    S
    E
    M
    I
     
    |
    |
     
    L
    A
    (
    1
    )
    =
    =
    L
    I
    T
    E
    R
    A
    L
    _
    e
    x
    c
    e
    p
    t
    i
    o
    n
     
    |
    |
     
    L
    A
    (
    1
    )
    =
    =
    O
    R
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    t
    r
    u
    e
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    f
    a
    l
    s
    e
    ;
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    r
    i
    v
    a
    t
    e
     
    v
    o
    i
    d
     
    c
    h
    e
    c
    k
    F
    o
    r
    M
    i
    s
    s
    i
    n
    g
    E
    n
    d
    R
    u
    l
    e
    (
    T
    o
    k
    e
    n
     
    l
    a
    b
    e
    l
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    l
    a
    b
    e
    l
    .
    g
    e
    t
    C
    o
    l
    u
    m
    n
    (
    )
    =
    =
    1
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    a
    n
    t
    l
    r
    T
    o
    o
    l
    .
    w
    a
    r
    n
    i
    n
    g
    (
    "did you forget to terminate previous rule?"
    ,
     
    g
    e
    t
    F
    i
    l
    e
    n
    a
    m
    e
    (
    )
    ,
     
    l
    a
    b
    e
    l
    .
    g
    e
    t
    L
    i
    n
    e
    (
    )
    ,
     
    l
    a
    b
    e
    l
    .
    g
    e
    t
    C
    o
    l
    u
    m
    n
    (
    )
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    }
    \n
    }
  rules
   rule_
    id_
     grammar
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              n
               
              =
               
              n
              u
              l
              l
              ;
               
               
               
               
               
               
               
              // RK: prevent certain orders of header actions
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              // overwriting eachother.
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
           element
            elementNoOptionSpec
             terminal_
              "header"
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   n
                  :
                  terminal_
                   STRING_LITERAL
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             id_
              h
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              // store the header action
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              // FIXME: 'n' should be checked for validity
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              H
              e
              a
              d
              e
              r
              A
              c
              t
              i
              o
              n
              (
              n
              ,
              h
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              fileOptionsSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              classDef
         )
         *
      element
       elementNoOptionSpec
        terminal_
         EOF
         ast_type_spec
    ;
    exceptionGroup
     exceptionSpec
      exception
      exceptionHandler
       catch
       argActionBlock
        [
        R
        e
        c
        o
        g
        n
        i
        t
        i
        o
        n
        E
        x
        c
        e
        p
        t
        i
        o
        n
         
        e
        x
        ]
       actionBlock
        {
        \n
         
         
         
         
         
         
         
         
        r
        e
        p
        o
        r
        t
        E
        r
        r
        o
        r
        (
        e
        x
        ,
         
        "rule grammar trapped:\n"
        +
        e
        x
        .
        t
        o
        S
        t
        r
        i
        n
        g
        (
        )
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        o
        n
        s
        u
        m
        e
        U
        n
        t
        i
        l
        (
        E
        O
        F
        )
        ;
        \n
         
         
         
         
         
         
         
         
        }
   rule_
    id_
     classDef
    ruleAction
     actionBlock
      {
      S
      t
      r
      i
      n
      g
       
      d
      o
      c
      =
      n
      u
      l
      l
      ;
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              P
              r
              e
              a
              m
              b
              l
              e
              A
              c
              t
              i
              o
              n
              (
              a
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              d
             :
             terminal_
              DOC_COMMENT
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              d
              o
              c
              =
              d
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "lexclass"
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "class"
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   id
                element
                 elementNoOptionSpec
                  terminal_
                   "extends"
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   "Lexer"
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              lexerSpec
             argActionBlock
              [
              d
              o
              c
              ]
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "class"
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   id
                element
                 elementNoOptionSpec
                  terminal_
                   "extends"
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   "TreeParser"
                   ast_type_spec
              )
              =>
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              treeParserSpec
             argActionBlock
              [
              d
              o
              c
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parserSpec
             argActionBlock
              [
              d
              o
              c
              ]
         )
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         rules
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         G
         r
         a
         m
         m
         a
         r
         (
         )
         ;
          
         }
    ;
    exceptionGroup
     exceptionSpec
      exception
      exceptionHandler
       catch
       argActionBlock
        [
        R
        e
        c
        o
        g
        n
        i
        t
        i
        o
        n
        E
        x
        c
        e
        p
        t
        i
        o
        n
         
        e
        x
        ]
       actionBlock
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        i
        f
         
        (
         
        e
        x
         
        i
        n
        s
        t
        a
        n
        c
        e
        o
        f
         
        N
        o
        V
        i
        a
        b
        l
        e
        A
        l
        t
        E
        x
        c
        e
        p
        t
        i
        o
        n
         
        )
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        N
        o
        V
        i
        a
        b
        l
        e
        A
        l
        t
        E
        x
        c
        e
        p
        t
        i
        o
        n
         
        e
         
        =
         
        (
        N
        o
        V
        i
        a
        b
        l
        e
        A
        l
        t
        E
        x
        c
        e
        p
        t
        i
        o
        n
        )
        e
        x
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        // RK: These probably generate inconsequent error messages...
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        // have to see how this comes out..
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        i
        f
         
        (
         
        e
        .
        t
        o
        k
        e
        n
        .
        g
        e
        t
        T
        y
        p
        e
        (
        )
        =
        =
        D
        O
        C
        _
        C
        O
        M
        M
        E
        N
        T
         
        )
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        r
        e
        p
        o
        r
        t
        E
        r
        r
        o
        r
        (
        e
        x
        ,
         
        "JAVADOC comments may only prefix rules and grammars"
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        e
        l
        s
        e
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        r
        e
        p
        o
        r
        t
        E
        r
        r
        o
        r
        (
        e
        x
        ,
         
        "rule classDef trapped:\n"
        +
        e
        x
        .
        t
        o
        S
        t
        r
        i
        n
        g
        (
        )
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        e
        l
        s
        e
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        r
        e
        p
        o
        r
        t
        E
        r
        r
        o
        r
        (
        e
        x
        ,
         
        "rule classDef trapped:\n"
        +
        e
        x
        .
        t
        o
        S
        t
        r
        i
        n
        g
        (
        )
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        b
        e
        h
        a
        v
        i
        o
        r
        .
        a
        b
        o
        r
        t
        G
        r
        a
        m
        m
        a
        r
        (
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        b
        o
        o
        l
        e
        a
        n
         
        c
        o
        n
        s
        u
        m
        i
        n
        g
         
        =
         
        t
        r
        u
        e
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        // consume everything until the next class definition or EOF
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        w
        h
        i
        l
        e
         
        (
        c
        o
        n
        s
        u
        m
        i
        n
        g
        )
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        o
        n
        s
        u
        m
        e
        (
        )
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        s
        w
        i
        t
        c
        h
        (
        L
        A
        (
        1
        )
        )
         
        {
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        a
        s
        e
         
        L
        I
        T
        E
        R
        A
        L
        _
        c
        l
        a
        s
        s
        :
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        a
        s
        e
         
        L
        I
        T
        E
        R
        A
        L
        _
        l
        e
        x
        c
        l
        a
        s
        s
        :
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        a
        s
        e
         
        E
        O
        F
        :
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        c
        o
        n
        s
        u
        m
        i
        n
        g
         
        =
         
        f
        a
        l
        s
        e
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        b
        r
        e
        a
        k
        ;
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
        }
        \n
         
         
         
         
         
         
         
         
        }
   rule_
    id_
     fileOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              F
              i
              l
              e
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              ,
              g
              e
              t
              I
              n
              p
              u
              t
              S
              t
              a
              t
              e
              (
              )
              .
              f
              i
              l
              e
              n
              a
              m
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     parserOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              G
              r
              a
              m
              m
              a
              r
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     treeParserOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              G
              r
              a
              m
              m
              a
              r
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     lexerOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      B
      i
      t
      S
      e
      t
       
      b
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "charVocabulary"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              b
             =
             rule_ref_or_keyword_as
              charSet
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              C
              h
              a
              r
              V
              o
              c
              a
              b
              u
              l
              a
              r
              y
              (
              b
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              G
              r
              a
              m
              m
              a
              r
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     subruleOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              S
              u
              b
              r
              u
              l
              e
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     optionValue
    returns
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     r
     e
     t
     v
     a
     l
      
     ]
    ruleAction
     actionBlock
      {
       
      r
      e
      t
      v
      a
      l
       
      =
       
      n
      u
      l
      l
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         retval
        =
        rule_ref_or_keyword_as
         qualifiedID
     |
     alternative
      element
       elementNoOptionSpec
        id_
         sl
        :
        terminal_
         STRING_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         r
         e
         t
         v
         a
         l
          
         =
          
         s
         l
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         cl
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         r
         e
         t
         v
         a
         l
          
         =
          
         c
         l
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         il
        :
        terminal_
         INT
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         r
         e
         t
         v
         a
         l
          
         =
          
         i
         l
         ;
          
         }
    ;
   rule_
    id_
     charSet
    returns
    argActionBlock
     [
      
     B
     i
     t
     S
     e
     t
      
     b
      
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      b
       
      =
       
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      B
      i
      t
      S
      e
      t
       
      t
      m
      p
      S
      e
      t
       
      =
       
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         b
        =
        rule_ref_or_keyword_as
         setBlockElement
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OR
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              tmpSet
             =
             rule_ref_or_keyword_as
              setBlockElement
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              .
              o
              r
              I
              n
              P
              l
              a
              c
              e
              (
              t
              m
              p
              S
              e
              t
              )
              ;
               
              }
         )
         *
    ;
   rule_
    id_
     setBlockElement
    returns
    argActionBlock
     [
      
     B
     i
     t
     S
     e
     t
      
     b
      
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      b
       
      =
       
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      i
      n
      t
       
      r
      a
      n
      g
      e
      M
      i
      n
       
      =
       
      0
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         c1
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         r
         a
         n
         g
         e
         M
         i
         n
          
         =
          
         A
         N
         T
         L
         R
         L
         e
         x
         e
         r
         .
         t
         o
         k
         e
         n
         T
         y
         p
         e
         F
         o
         r
         C
         h
         a
         r
         L
         i
         t
         e
         r
         a
         l
         (
         c
         1
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         b
          
         =
          
         B
         i
         t
         S
         e
         t
         .
         o
         f
         (
         r
         a
         n
         g
         e
         M
         i
         n
         )
         ;
         \n
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              RANGE
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              c2
             :
             terminal_
              CHAR_LITERAL
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              i
              n
              t
               
              r
              a
              n
              g
              e
              M
              a
              x
               
              =
               
              A
              N
              T
              L
              R
              L
              e
              x
              e
              r
              .
              t
              o
              k
              e
              n
              T
              y
              p
              e
              F
              o
              r
              C
              h
              a
              r
              L
              i
              t
              e
              r
              a
              l
              (
              c
              2
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              i
              f
               
              (
              r
              a
              n
              g
              e
              M
              a
              x
               
              <
               
              r
              a
              n
              g
              e
              M
              i
              n
              )
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              a
              n
              t
              l
              r
              T
              o
              o
              l
              .
              e
              r
              r
              o
              r
              (
              "Malformed range line "
              ,
               
              g
              e
              t
              F
              i
              l
              e
              n
              a
              m
              e
              (
              )
              ,
               
              c
              1
              .
              g
              e
              t
              L
              i
              n
              e
              (
              )
              ,
               
              c
              1
              .
              g
              e
              t
              C
              o
              l
              u
              m
              n
              (
              )
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              f
              o
              r
               
              (
              i
              n
              t
               
              i
               
              =
               
              r
              a
              n
              g
              e
              M
              i
              n
              +
              1
              ;
               
              i
               
              <
              =
               
              r
              a
              n
              g
              e
              M
              a
              x
              ;
               
              i
              +
              +
              )
               
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              b
              .
              a
              d
              d
              (
              i
              )
              ;
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
         )
         ?
    ;
   rule_
    id_
     tokensSpec
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         TOKENS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   s
                   1
                   =
                   n
                   u
                   l
                   l
                   ;
                   }
                element
                 elementNoOptionSpec
                  id_
                   t1
                  :
                  terminal_
                   TOKEN_REF
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        ASSIGN
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       id_
                        s1
                       :
                       terminal_
                        STRING_LITERAL
                        ast_type_spec
                   )
                   ?
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   d
                   e
                   f
                   i
                   n
                   e
                   T
                   o
                   k
                   e
                   n
                   (
                   t
                   1
                   ,
                    
                   s
                   1
                   )
                   ;
                   }
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        tokensSpecOptions
                       argActionBlock
                        [
                        t
                        1
                        ]
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  id_
                   s3
                  :
                  terminal_
                   STRING_LITERAL
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   d
                   e
                   f
                   i
                   n
                   e
                   T
                   o
                   k
                   e
                   n
                   (
                   n
                   u
                   l
                   l
                   ,
                    
                   s
                   3
                   )
                   ;
                   }
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        tokensSpecOptions
                       argActionBlock
                        [
                        s
                        3
                        ]
                   )
                   ?
              )
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         +
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     tokensSpecOptions
    argActionBlock
     [
     T
     o
     k
     e
     n
      
     t
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      o
      =
      n
      u
      l
      l
      ,
       
      v
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPEN_ELEMENT_OPTION
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         o
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         v
        =
        rule_ref_or_keyword_as
         optionValue
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         T
         o
         k
         e
         n
         s
         S
         p
         e
         c
         E
         l
         e
         m
         e
         n
         t
         O
         p
         t
         i
         o
         n
         (
         t
         ,
         o
         ,
         v
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              o
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              v
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              T
              o
              k
              e
              n
              s
              S
              p
              e
              c
              E
              l
              e
              m
              e
              n
              t
              O
              p
              t
              i
              o
              n
              (
              t
              ,
              o
              ,
              v
              )
              ;
              }
         )
         *
      element
       elementNoOptionSpec
        terminal_
         CLOSE_ELEMENT_OPTION
         ast_type_spec
    ;
   rule_
    id_
     superClass
    returns
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     s
     u
     p
     ]
    ruleAction
     actionBlock
      {
      s
      u
      p
      =
      n
      u
      l
      l
      ;
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         u
         p
          
         =
          
         L
         T
         (
         1
         )
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         u
         p
          
         =
          
         S
         t
         r
         i
         n
         g
         U
         t
         i
         l
         s
         .
         s
         t
         r
         i
         p
         F
         r
         o
         n
         t
         B
         a
         c
         k
         (
         s
         u
         p
         ,
          
         "\""
         ,
          
         "\""
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING_LITERAL
              ast_type_spec
         )
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
    ;
   rule_
    id_
     parserSpec
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     d
     o
     c
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      s
      u
      p
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "class"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         idTok
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "extends"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              "Parser"
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   sup
                  =
                  rule_ref_or_keyword_as
                   superClass
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              a
              n
              t
              l
              r
              T
              o
              o
              l
              .
              w
              a
              r
              n
              i
              n
              g
              (
              "use 'class X extends Parser'"
              ,
               
              g
              e
              t
              F
              i
              l
              e
              n
              a
              m
              e
              (
              )
              ,
               
              i
              d
              T
              o
              k
              .
              g
              e
              t
              L
              i
              n
              e
              (
              )
              ,
               
              i
              d
              T
              o
              k
              .
              g
              e
              t
              C
              o
              l
              u
              m
              n
              (
              )
              )
              ;
              \n
              //                      System.out.println("warning: line " +
              \n
              //                              idTok.getLine() + ": use 'class X extends Parser'");
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         s
         t
         a
         r
         t
         P
         a
         r
         s
         e
         r
         (
         g
         e
         t
         F
         i
         l
         e
         n
         a
         m
         e
         (
         )
         ,
          
         i
         d
         T
         o
         k
         ,
          
         s
         u
         p
         ,
          
         d
         o
         c
         )
         ;
         }
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              parserOptionsSpec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         O
         p
         t
         i
         o
         n
         s
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              tokensSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              M
              e
              m
              b
              e
              r
              A
              c
              t
              i
              o
              n
              (
              a
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     lexerSpec
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     d
     o
     c
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      s
      u
      p
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              lc
             :
             terminal_
              "lexclass"
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             actionBlock
              {
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              a
              n
              t
              l
              r
              T
              o
              o
              l
              .
              w
              a
              r
              n
              i
              n
              g
              (
              "lexclass' is deprecated; use 'class X extends Lexer'"
              ,
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              g
              e
              t
              F
              i
              l
              e
              n
              a
              m
              e
              (
              )
              ,
               
              l
              c
              .
              g
              e
              t
              L
              i
              n
              e
              (
              )
              ,
               
              l
              c
              .
              g
              e
              t
              C
              o
              l
              u
              m
              n
              (
              )
              )
              ;
              \n
              //                              System.out.println("warning: line " + lc.getLine() + ": 'lexclass' is deprecated; use 'class X extends Lexer'");
              \n
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "class"
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              "extends"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              "Lexer"
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   sup
                  =
                  rule_ref_or_keyword_as
                   superClass
              )
              ?
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         s
         t
         a
         r
         t
         L
         e
         x
         e
         r
         (
         g
         e
         t
         F
         i
         l
         e
         n
         a
         m
         e
         (
         )
         ,
          
         i
         d
         T
         o
         k
         ,
         s
         u
         p
         ,
         d
         o
         c
         )
         ;
         }
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              lexerOptionsSpec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         O
         p
         t
         i
         o
         n
         s
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              tokensSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              M
              e
              m
              b
              e
              r
              A
              c
              t
              i
              o
              n
              (
              a
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     treeParserSpec
    argActionBlock
     [
     S
     t
     r
     i
     n
     g
      
     d
     o
     c
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      s
      u
      p
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "class"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         idTok
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        terminal_
         "extends"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         "TreeParser"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              sup
             =
             rule_ref_or_keyword_as
              superClass
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         s
         t
         a
         r
         t
         T
         r
         e
         e
         W
         a
         l
         k
         e
         r
         (
         g
         e
         t
         F
         i
         l
         e
         n
         a
         m
         e
         (
         )
         ,
          
         i
         d
         T
         o
         k
         ,
         s
         u
         p
         ,
         d
         o
         c
         )
         ;
         }
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              treeParserOptionsSpec
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         O
         p
         t
         i
         o
         n
         s
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              tokensSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              M
              e
              m
              b
              e
              r
              A
              c
              t
              i
              o
              n
              (
              a
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     rules
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              rule
         )
         +
    ;
   rule_
    id_
     rule
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      a
      c
      c
      e
      s
      s
      =
      "public"
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      d
      o
      c
      =
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      b
      o
      o
      l
      e
      a
      n
       
      r
      u
      l
      e
      A
      u
      t
      o
      G
      e
      n
       
      =
       
      t
      r
      u
      e
      ;
      \n
       
       
       
       
       
       
       
       
      b
      l
      o
      c
      k
      N
      e
      s
      t
      i
      n
      g
       
      =
       
      -
      1
      ;
       
       
       
       
       
       
      // block increments, so -1 to make rule at level 0
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              d
             :
             terminal_
              DOC_COMMENT
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              d
              o
              c
              =
              d
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              p1
             :
             terminal_
              "protected"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              a
              c
              c
              e
              s
              s
              =
              p
              1
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              p2
             :
             terminal_
              "public"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              a
              c
              c
              e
              s
              s
              =
              p
              2
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              p3
             :
             terminal_
              "private"
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              a
              c
              c
              e
              s
              s
              =
              p
              3
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        id_
         idTok
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              r
              u
              l
              e
              A
              u
              t
              o
              G
              e
              n
               
              =
               
              f
              a
              l
              s
              e
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         d
         e
         f
         i
         n
         e
         R
         u
         l
         e
         N
         a
         m
         e
         (
         i
         d
         T
         o
         k
         ,
          
         a
         c
         c
         e
         s
         s
         ,
          
         r
         u
         l
         e
         A
         u
         t
         o
         G
         e
         n
         ,
          
         d
         o
         c
         )
         ;
         \n
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              aa
             :
             terminal_
              ARG_ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              A
              r
              g
              A
              c
              t
              i
              o
              n
              (
              a
              a
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "returns"
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              rt
             :
             terminal_
              ARG_ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              R
              e
              t
              u
              r
              n
              A
              c
              t
              i
              o
              n
              (
              r
              t
              )
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              throwsSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              ruleOptionsSpec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              a
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              I
              n
              i
              t
              A
              c
              t
              i
              o
              n
              (
              a
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        terminal_
         SEMI
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exceptionGroup
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         R
         u
         l
         e
         (
         i
         d
         T
         o
         k
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         )
         ;
         }
    ;
   rule_
    id_
     ruleOptionsSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      i
      d
      T
      o
      k
      ;
       
      T
      o
      k
      e
      n
       
      v
      a
      l
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPTIONS
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              idTok
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              value
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              e
              t
              R
              u
              l
              e
              O
              p
              t
              i
              o
              n
              (
              i
              d
              T
              o
              k
              ,
               
              v
              a
              l
              u
              e
              )
              ;
               
              }
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
    ;
   rule_
    id_
     throwsSpec
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      t
      =
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      a
      ,
      b
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "throws"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         a
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        actionBlock
         {
         t
         =
         a
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              b
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              +
              =
              ","
              +
              b
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              ;
              }
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         s
         e
         t
         U
         s
         e
         r
         E
         x
         c
         e
         p
         t
         i
         o
         n
         s
         (
         t
         )
         ;
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     block
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         l
         o
         c
         k
         N
         e
         s
         t
         i
         n
         g
         +
         +
         ;
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              OR
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              alternative
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         l
         o
         c
         k
         N
         e
         s
         t
         i
         n
         g
         -
         -
         ;
         }
    ;
   rule_
    id_
     alternative
    ruleAction
     actionBlock
      {
       
      b
      o
      o
      l
      e
      a
      n
       
      a
      l
      t
      A
      u
      t
      o
      G
      e
      n
       
      =
       
      t
      r
      u
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              l
              t
              A
              u
              t
              o
              G
              e
              n
              =
              f
              a
              l
              s
              e
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         A
         l
         t
         (
         a
         l
         t
         A
         u
         t
         o
         G
         e
         n
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              element
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exceptionSpecNoLabel
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         A
         l
         t
         (
         )
         ;
         }
    ;
   rule_
    id_
     exceptionGroup
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         E
         x
         c
         e
         p
         t
         i
         o
         n
         G
         r
         o
         u
         p
         (
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exceptionSpec
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         E
         x
         c
         e
         p
         t
         i
         o
         n
         G
         r
         o
         u
         p
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     exceptionSpec
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      l
      a
      b
      e
      l
      A
      c
      t
      i
      o
      n
       
      =
       
      n
      u
      l
      l
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "exception"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              aa
             :
             terminal_
              ARG_ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              l
              a
              b
              e
              l
              A
              c
              t
              i
              o
              n
               
              =
               
              a
              a
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         E
         x
         c
         e
         p
         t
         i
         o
         n
         S
         p
         e
         c
         (
         l
         a
         b
         e
         l
         A
         c
         t
         i
         o
         n
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exceptionHandler
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         E
         x
         c
         e
         p
         t
         i
         o
         n
         S
         p
         e
         c
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     exceptionSpecNoLabel
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "exception"
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         E
         x
         c
         e
         p
         t
         i
         o
         n
         S
         p
         e
         c
         (
         n
         u
         l
         l
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              exceptionHandler
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         E
         x
         c
         e
         p
         t
         i
         o
         n
         S
         p
         e
         c
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     exceptionHandler
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      e
      x
      T
      y
      p
      e
      ;
       
      T
      o
      k
      e
      n
       
      e
      x
      N
      a
      m
      e
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "catch"
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         a1
        :
        terminal_
         ARG_ACTION
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         a2
        :
        terminal_
         ACTION
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         E
         x
         c
         e
         p
         t
         i
         o
         n
         H
         a
         n
         d
         l
         e
         r
         (
         a
         1
         ,
          
         a
         2
         )
         ;
          
         }
    ;
   rule_
    id_
     element
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         elementNoOptionSpec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              elementOptionSpec
         )
         ?
    ;
   rule_
    id_
     elementOptionSpec
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      o
      =
      n
      u
      l
      l
      ,
       
      v
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         OPEN_ELEMENT_OPTION
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         o
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         v
        =
        rule_ref_or_keyword_as
         optionValue
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         E
         l
         e
         m
         e
         n
         t
         O
         p
         t
         i
         o
         n
         (
         o
         ,
         v
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              o
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              v
             =
             rule_ref_or_keyword_as
              optionValue
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              E
              l
              e
              m
              e
              n
              t
              O
              p
              t
              i
              o
              n
              (
              o
              ,
              v
              )
              ;
              }
         )
         *
      element
       elementNoOptionSpec
        terminal_
         CLOSE_ELEMENT_OPTION
         ast_type_spec
    ;
   rule_
    id_
     elementNoOptionSpec
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      l
      a
      b
      e
      l
       
      =
       
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      a
      s
      s
      i
      g
      n
      I
      d
       
      =
       
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      a
      r
      g
      s
       
      =
       
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      i
      n
      t
       
      a
      u
      t
      o
      G
      e
      n
       
      =
       
      G
      r
      a
      m
      m
      a
      r
      E
      l
      e
      m
      e
      n
      t
      .
      A
      U
      T
      O
      _
      G
      E
      N
      _
      N
      O
      N
      E
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         assignId
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        terminal_
         ASSIGN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              label
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              c
              h
              e
              c
              k
              F
              o
              r
              M
              i
              s
              s
              i
              n
              g
              E
              n
              d
              R
              u
              l
              e
              (
              l
              a
              b
              e
              l
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              rr
             :
             terminal_
              RULE_REF
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   aa
                  :
                  terminal_
                   ARG_ACTION
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   a
                   r
                   g
                   s
                   =
                   a
                   a
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BANG
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   a
                   u
                   t
                   o
                   G
                   e
                   n
                    
                   =
                    
                   G
                   r
                   a
                   m
                   m
                   a
                   r
                   E
                   l
                   e
                   m
                   e
                   n
                   t
                   .
                   A
                   U
                   T
                   O
                   _
                   G
                   E
                   N
                   _
                   B
                   A
                   N
                   G
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              R
              u
              l
              e
              (
              a
              s
              s
              i
              g
              n
              I
              d
              ,
               
              r
              r
              ,
               
              l
              a
              b
              e
              l
              ,
               
              a
              r
              g
              s
              ,
               
              a
              u
              t
              o
              G
              e
              n
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              tr
             :
             terminal_
              TOKEN_REF
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   aa2
                  :
                  terminal_
                   ARG_ACTION
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   a
                   r
                   g
                   s
                   =
                   a
                   a
                   2
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              T
              o
              k
              e
              n
              (
              a
              s
              s
              i
              g
              n
              I
              d
              ,
               
              t
              r
              ,
               
              l
              a
              b
              e
              l
              ,
               
              a
              r
              g
              s
              ,
               
              f
              a
              l
              s
              e
              ,
               
              a
              u
              t
              o
              G
              e
              n
              ,
               
              l
              a
              s
              t
              I
              n
              R
              u
              l
              e
              (
              )
              )
              ;
               
              }
         )
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              label
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              c
              h
              e
              c
              k
              F
              o
              r
              M
              i
              s
              s
              i
              n
              g
              E
              n
              d
              R
              u
              l
              e
              (
              l
              a
              b
              e
              l
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              r2
             :
             terminal_
              RULE_REF
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   aa3
                  :
                  terminal_
                   ARG_ACTION
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   a
                   r
                   g
                   s
                   =
                   a
                   a
                   3
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BANG
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                    
                   a
                   u
                   t
                   o
                   G
                   e
                   n
                    
                   =
                    
                   G
                   r
                   a
                   m
                   m
                   a
                   r
                   E
                   l
                   e
                   m
                   e
                   n
                   t
                   .
                   A
                   U
                   T
                   O
                   _
                   G
                   E
                   N
                   _
                   B
                   A
                   N
                   G
                   ;
                    
                   }
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
               
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              R
              u
              l
              e
              (
              a
              s
              s
              i
              g
              n
              I
              d
              ,
               
              r
              2
              ,
               
              l
              a
              b
              e
              l
              ,
               
              a
              r
              g
              s
              ,
               
              a
              u
              t
              o
              G
              e
              n
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              range
             argActionBlock
              [
              l
              a
              b
              e
              l
              ]
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              terminal
             argActionBlock
              [
              l
              a
              b
              e
              l
              ]
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NOT_OP
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   notTerminal
                  argActionBlock
                   [
                   l
                   a
                   b
                   e
                   l
                   ]
               |
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   ebnf
                  argActionBlock
                   [
                   l
                   a
                   b
                   e
                   l
                   ,
                   t
                   r
                   u
                   e
                   ]
              )
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              ebnf
             argActionBlock
              [
              l
              a
              b
              e
              l
              ,
              f
              a
              l
              s
              e
              ]
         )
     |
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         ACTION
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         A
         c
         t
         i
         o
         n
         (
         a
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         p
        :
        terminal_
         SEMPRED
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         S
         e
         m
         P
         r
         e
         d
         (
         p
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         tree
    ;
   rule_
    id_
     tree
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lp
        :
        terminal_
         TREE_BEGIN
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         T
         r
         e
         e
         (
         l
         p
         )
         ;
          
         }
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         rootNode
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         C
         h
         i
         l
         d
         L
         i
         s
         t
         (
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              element
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         C
         h
         i
         l
         d
         L
         i
         s
         t
         (
         )
         ;
         }
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         T
         r
         e
         e
         (
         )
         ;
          
         }
    ;
   rule_
    id_
     rootNode
    ruleAction
     actionBlock
      {
       
      T
      o
      k
      e
      n
       
      l
      a
      b
      e
      l
       
      =
       
      n
      u
      l
      l
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              label
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              c
              h
              e
              c
              k
              F
              o
              r
              M
              i
              s
              s
              i
              n
              g
              E
              n
              d
              R
              u
              l
              e
              (
              l
              a
              b
              e
              l
              )
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         terminal
        argActionBlock
         [
         l
         a
         b
         e
         l
         ]
    ;
   rule_
    id_
     ebnf
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     l
     a
     b
     e
     l
     ,
      
     b
     o
     o
     l
     e
     a
     n
      
     n
     o
     t
      
     ]
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         lp
        :
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         b
         e
         g
         i
         n
         S
         u
         b
         R
         u
         l
         e
         (
         l
         a
         b
         e
         l
         ,
          
         l
         p
         ,
          
         n
         o
         t
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subruleOptionsSpec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  id_
                   aa
                  :
                  terminal_
                   ACTION
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   r
                   e
                   f
                   I
                   n
                   i
                   t
                   A
                   c
                   t
                   i
                   o
                   n
                   (
                   a
                   a
                   )
                   ;
                   }
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             id_
              ab
             :
             terminal_
              ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              r
              e
              f
              I
              n
              i
              t
              A
              c
              t
              i
              o
              n
              (
              a
              b
              )
              ;
              }
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         block
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   QUESTION
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   o
                   p
                   t
                   i
                   o
                   n
                   a
                   l
                   S
                   u
                   b
                   R
                   u
                   l
                   e
                   (
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   z
                   e
                   r
                   o
                   O
                   r
                   M
                   o
                   r
                   e
                   S
                   u
                   b
                   R
                   u
                   l
                   e
                   (
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   o
                   n
                   e
                   O
                   r
                   M
                   o
                   r
                   e
                   S
                   u
                   b
                   R
                   u
                   l
                   e
                   (
                   )
                   ;
                   }
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   BANG
                   ast_type_spec
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   b
                   e
                   h
                   a
                   v
                   i
                   o
                   r
                   .
                   n
                   o
                   A
                   S
                   T
                   S
                   u
                   b
                   R
                   u
                   l
                   e
                   (
                   )
                   ;
                    
                   }
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              IMPLIES
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              e
              h
              a
              v
              i
              o
              r
              .
              s
              y
              n
              P
              r
              e
              d
              (
              )
              ;
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         e
         n
         d
         S
         u
         b
         R
         u
         l
         e
         (
         )
         ;
         }
    ;
   rule_
    id_
     ast_type_spec
    returns
    argActionBlock
     [
      
     i
     n
     t
      
     a
     u
     t
     o
     G
     e
     n
      
     ]
    ruleAction
     actionBlock
      {
       
      a
      u
      t
      o
      G
      e
      n
       
      =
       
      G
      r
      a
      m
      m
      a
      r
      E
      l
      e
      m
      e
      n
      t
      .
      A
      U
      T
      O
      _
      G
      E
      N
      _
      N
      O
      N
      E
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CARET
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              u
              t
              o
              G
              e
              n
               
              =
               
              G
              r
              a
              m
              m
              a
              r
              E
              l
              e
              m
              e
              n
              t
              .
              A
              U
              T
              O
              _
              G
              E
              N
              _
              C
              A
              R
              E
              T
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              u
              t
              o
              G
              e
              n
               
              =
               
              G
              r
              a
              m
              m
              a
              r
              E
              l
              e
              m
              e
              n
              t
              .
              A
              U
              T
              O
              _
              G
              E
              N
              _
              B
              A
              N
              G
              ;
               
              }
         )
         ?
    ;
   rule_
    id_
     range
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     l
     a
     b
     e
     l
      
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      t
      r
      L
      e
      f
      t
      =
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      t
      r
      R
      i
      g
      h
      t
      =
      n
      u
      l
      l
      ;
      \n
       
       
       
       
       
       
       
       
      i
      n
      t
       
      a
      u
      t
      o
      G
      e
      n
      =
      G
      r
      a
      m
      m
      a
      r
      E
      l
      e
      m
      e
      n
      t
      .
      A
      U
      T
      O
      _
      G
      E
      N
      _
      N
      O
      N
      E
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         crLeft
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         RANGE
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         crRight
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              u
              t
              o
              G
              e
              n
               
              =
               
              G
              r
              a
              m
              m
              a
              r
              E
              l
              e
              m
              e
              n
              t
              .
              A
              U
              T
              O
              _
              G
              E
              N
              _
              B
              A
              N
              G
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         C
         h
         a
         r
         R
         a
         n
         g
         e
         (
         c
         r
         L
         e
         f
         t
         ,
          
         c
         r
         R
         i
         g
         h
         t
         ,
          
         l
         a
         b
         e
         l
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              t
             :
             terminal_
              TOKEN_REF
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              r
              L
              e
              f
              t
              =
              t
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              u
             :
             terminal_
              STRING_LITERAL
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              r
              L
              e
              f
              t
              =
              u
              ;
              }
         )
      element
       elementNoOptionSpec
        terminal_
         RANGE
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              v
             :
             terminal_
              TOKEN_REF
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              r
              R
              i
              g
              h
              t
              =
              v
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             id_
              w
             :
             terminal_
              STRING_LITERAL
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              r
              R
              i
              g
              h
              t
              =
              w
              ;
              }
         )
      element
       elementNoOptionSpec
        id_
         autoGen
        =
        rule_ref_or_keyword_as
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         T
         o
         k
         e
         n
         R
         a
         n
         g
         e
         (
         t
         r
         L
         e
         f
         t
         ,
          
         t
         r
         R
         i
         g
         h
         t
         ,
          
         l
         a
         b
         e
         l
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
          
         }
    ;
   rule_
    id_
     terminal
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     l
     a
     b
     e
     l
      
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      i
      n
      t
       
      a
      u
      t
      o
      G
      e
      n
      =
      G
      r
      a
      m
      m
      a
      r
      E
      l
      e
      m
      e
      n
      t
      .
      A
      U
      T
      O
      _
      G
      E
      N
      _
      N
      O
      N
      E
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      a
      r
      g
      s
      =
      n
      u
      l
      l
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         cl
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              u
              t
              o
              G
              e
              n
               
              =
               
              G
              r
              a
              m
              m
              a
              r
              E
              l
              e
              m
              e
              n
              t
              .
              A
              U
              T
              O
              _
              G
              E
              N
              _
              B
              A
              N
              G
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         C
         h
         a
         r
         L
         i
         t
         e
         r
         a
         l
         (
         c
         l
         ,
          
         l
         a
         b
         e
         l
         ,
          
         f
         a
         l
         s
         e
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         tr
        :
        terminal_
         TOKEN_REF
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         autoGen
        =
        rule_ref_or_keyword_as
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             id_
              aa
             :
             terminal_
              ARG_ACTION
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              r
              g
              s
              =
              a
              a
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
          
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         T
         o
         k
         e
         n
         (
         n
         u
         l
         l
         ,
          
         t
         r
         ,
          
         l
         a
         b
         e
         l
         ,
          
         a
         r
         g
         s
         ,
          
         f
         a
         l
         s
         e
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
          
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         sl
        :
        terminal_
         STRING_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         autoGen
        =
        rule_ref_or_keyword_as
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         S
         t
         r
         i
         n
         g
         L
         i
         t
         e
         r
         a
         l
         (
         s
         l
         ,
          
         l
         a
         b
         e
         l
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         wi
        :
        terminal_
         WILDCARD
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         autoGen
        =
        rule_ref_or_keyword_as
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         W
         i
         l
         d
         c
         a
         r
         d
         (
         w
         i
         ,
          
         l
         a
         b
         e
         l
         ,
          
         a
         u
         t
         o
         G
         e
         n
         )
         ;
         }
    ;
   rule_
    id_
     notTerminal
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     l
     a
     b
     e
     l
      
     ]
    ruleAction
     actionBlock
      {
       
      i
      n
      t
       
      a
      u
      t
      o
      G
      e
      n
      =
      G
      r
      a
      m
      m
      a
      r
      E
      l
      e
      m
      e
      n
      t
      .
      A
      U
      T
      O
      _
      G
      E
      N
      _
      N
      O
      N
      E
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         cl
        :
        terminal_
         CHAR_LITERAL
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              BANG
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
               
              a
              u
              t
              o
              G
              e
              n
               
              =
               
              G
              r
              a
              m
              m
              a
              r
              E
              l
              e
              m
              e
              n
              t
              .
              A
              U
              T
              O
              _
              G
              E
              N
              _
              B
              A
              N
              G
              ;
               
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         C
         h
         a
         r
         L
         i
         t
         e
         r
         a
         l
         (
         c
         l
         ,
          
         l
         a
         b
         e
         l
         ,
          
         t
         r
         u
         e
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         tr
        :
        terminal_
         TOKEN_REF
         ast_type_spec
      element
       elementNoOptionSpec
        id_
         autoGen
        =
        rule_ref_or_keyword_as
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         e
         h
         a
         v
         i
         o
         r
         .
         r
         e
         f
         T
         o
         k
         e
         n
         (
         n
         u
         l
         l
         ,
          
         t
         r
         ,
          
         l
         a
         b
         e
         l
         ,
          
         n
         u
         l
         l
         ,
          
         t
         r
         u
         e
         ,
          
         a
         u
         t
         o
         G
         e
         n
         ,
          
         l
         a
         s
         t
         I
         n
         R
         u
         l
         e
         (
         )
         )
         ;
         }
    ;
   rule_
    id_
     qualifiedID
    returns
    argActionBlock
     [
     T
     o
     k
     e
     n
      
     q
     i
     d
     T
     o
     k
     =
     n
     u
     l
     l
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      S
      t
      r
      i
      n
      g
      B
      u
      f
      f
      e
      r
       
      b
      u
      f
       
      =
       
      n
      e
      w
       
      S
      t
      r
      i
      n
      g
      B
      u
      f
      f
      e
      r
      (
      3
      0
      )
      ;
      \n
       
       
       
       
       
       
       
       
      T
      o
      k
      e
      n
       
      a
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        =
        rule_ref_or_keyword_as
         id
      element
       elementNoOptionSpec
        actionBlock
         {
         b
         u
         f
         .
         a
         p
         p
         e
         n
         d
         (
         a
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WILDCARD
              ast_type_spec
           element
            elementNoOptionSpec
             id_
              a
             =
             rule_ref_or_keyword_as
              id
           element
            elementNoOptionSpec
             actionBlock
              {
              b
              u
              f
              .
              a
              p
              p
              e
              n
              d
              (
              '.'
              )
              ;
               
              b
              u
              f
              .
              a
              p
              p
              e
              n
              d
              (
              a
              .
              g
              e
              t
              T
              e
              x
              t
              (
              )
              )
              ;
              }
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         // can use either TOKEN_REF or RULE_REF; should
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         // really create a QID or something instead.
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         q
         i
         d
         T
         o
         k
          
         =
          
         n
         e
         w
          
         C
         o
         m
         m
         o
         n
         T
         o
         k
         e
         n
         (
         T
         O
         K
         E
         N
         _
         R
         E
         F
         ,
          
         b
         u
         f
         .
         t
         o
         S
         t
         r
         i
         n
         g
         (
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         q
         i
         d
         T
         o
         k
         .
         s
         e
         t
         L
         i
         n
         e
         (
         a
         .
         g
         e
         t
         L
         i
         n
         e
         (
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     id
    returns
    argActionBlock
     [
      
     T
     o
     k
     e
     n
      
     i
     d
     T
     o
     k
      
     ]
    ruleAction
     actionBlock
      {
       
      i
      d
      T
      o
      k
       
      =
       
      n
      u
      l
      l
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         a
        :
        terminal_
         TOKEN_REF
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         d
         T
         o
         k
          
         =
          
         a
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         b
        :
        terminal_
         RULE_REF
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         d
         T
         o
         k
          
         =
          
         b
         ;
         }
    ;
 classDef
  lexerSpec
   class
   id_
    ANTLRLexer
   extends
   Lexer
   ;
   lexerOptionsSpec
    options
    {
    lexerOption
     id_
      k
     =
     lexerOptionValue
      optionValue
       2
     ;
    lexerOption
     id_
      exportVocab
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         ANTLR
     ;
    lexerOption
     id_
      testLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      interactive
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         true
     ;
    lexerOption
     id_
      charVocabulary
     =
     lexerOptionValue
      charSet
       setBlockElement
        '\003'
        ..
        '\377'
     ;
    }
   tokensSpec
    tokens
    {
    tokenEntry
     "options"
     ;
    }
   actionBlock
    {
    \n
     
     
     
     
     
     
     
     
    /**Convert 'c' to an integer char value. */
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    s
    t
    a
    t
    i
    c
     
    i
    n
    t
     
    e
    s
    c
    a
    p
    e
    C
    h
    a
    r
    V
    a
    l
    u
    e
    (
    S
    t
    r
    i
    n
    g
     
    c
    s
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    //System.out.println("escapeCharValue("+cs+")");
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    1
    )
    !
    =
    '\\'
     
    )
     
    r
    e
    t
    u
    r
    n
     
    0
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    s
    w
    i
    t
    c
    h
     
    (
     
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    'b'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\b'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    'r'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\r'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    't'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\t'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    'n'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\n'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    'f'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\f'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '"'
     
    :
     
    r
    e
    t
    u
    r
    n
     
    '\"'
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '\''
     
    :
    r
    e
    t
    u
    r
    n
     
    '\''
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '\\'
     
    :
    r
    e
    t
    u
    r
    n
     
    '\\'
    ;
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    'u'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    // Unicode char
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
    c
    s
    .
    l
    e
    n
    g
    t
    h
    (
    )
     
    !
    =
     
    8
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    0
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    e
    l
    s
    e
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    d
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    ,
     
    1
    6
    )
     
    *
     
    1
    6
     
    *
     
    1
    6
     
    *
     
    1
    6
     
    +
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    d
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    4
    )
    ,
     
    1
    6
    )
     
    *
     
    1
    6
     
    *
     
    1
    6
     
    +
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    d
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    5
    )
    ,
     
    1
    6
    )
     
    *
     
    1
    6
     
    +
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    d
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    6
    )
    ,
     
    1
    6
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '0'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '1'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '2'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '3'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    c
    s
    .
    l
    e
    n
    g
    t
    h
    (
    )
    >
    5
     
    &
    &
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    i
    s
    D
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    4
    )
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
    -
    '0'
    )
    *
    8
    *
    8
     
    +
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    -
    '0'
    )
    *
    8
     
    +
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    4
    )
    -
    '0'
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    c
    s
    .
    l
    e
    n
    g
    t
    h
    (
    )
    >
    4
     
    &
    &
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    i
    s
    D
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
    -
    '0'
    )
    *
    8
     
    +
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    -
    '0'
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
    -
    '0'
    ;
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '4'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '5'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '6'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    c
    a
    s
    e
     
    '7'
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    c
    s
    .
    l
    e
    n
    g
    t
    h
    (
    )
    >
    4
     
    &
    &
     
    C
    h
    a
    r
    a
    c
    t
    e
    r
    .
    i
    s
    D
    i
    g
    i
    t
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    )
     
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
    -
    '0'
    )
    *
    8
     
    +
     
    (
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    3
    )
    -
    '0'
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    c
    s
    .
    c
    h
    a
    r
    A
    t
    (
    2
    )
    -
    '0'
    ;
    \n
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    d
    e
    f
    a
    u
    l
    t
     
    :
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    0
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    }
    \n
    \n
     
     
     
     
     
     
     
     
    p
    u
    b
    l
    i
    c
     
    s
    t
    a
    t
    i
    c
     
    i
    n
    t
     
    t
    o
    k
    e
    n
    T
    y
    p
    e
    F
    o
    r
    C
    h
    a
    r
    L
    i
    t
    e
    r
    a
    l
    (
    S
    t
    r
    i
    n
    g
     
    l
    i
    t
    )
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    i
    f
     
    (
     
    l
    i
    t
    .
    l
    e
    n
    g
    t
    h
    (
    )
    >
    3
     
    )
     
    {
     
     
    // does char contain escape?
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    e
    s
    c
    a
    p
    e
    C
    h
    a
    r
    V
    a
    l
    u
    e
    (
    l
    i
    t
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    e
    l
    s
    e
     
    {
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    r
    e
    t
    u
    r
    n
     
    l
    i
    t
    .
    c
    h
    a
    r
    A
    t
    (
    1
    )
    ;
    \n
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    }
    \n
     
     
     
     
     
     
     
     
    }
    \n
    }
  rules
   rule_
    id_
     WS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            generateAmbigWarnings
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
          
         }
    ;
   rule_
    id_
     COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SL_COMMENT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             id_
              t
             :
             terminal_
              ML_COMMENT
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              t
              .
              g
              e
              t
              T
              y
              p
              e
              (
              )
              )
              ;
              }
         )
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         f
          
         (
          
         _
         t
         t
         y
         p
         e
          
         !
         =
          
         D
         O
         C
         _
         C
         O
         M
         M
         E
         N
         T
          
         )
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
         }
    ;
   rule_
    protected
    id_
     SL_COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "//"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            generateAmbigWarnings
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             terminal_
              '\n'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
         )
      element
       elementNoOptionSpec
        actionBlock
         {
          
         n
         e
         w
         l
         i
         n
         e
         (
         )
         ;
          
         }
    ;
   rule_
    protected
    id_
     ML_COMMENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/*"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
               
              L
              A
              (
              2
              )
              !
              =
              '/'
               
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              '*'
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              D
              O
              C
              _
              C
              O
              M
              M
              E
              N
              T
              )
              ;
              }
          |
          alternative
         )
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          option
           id_
            generateAmbigWarnings
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         "*/"
         ast_type_spec
    ;
   rule_
    id_
     OPEN_ELEMENT_OPTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '<'
    ;
   rule_
    id_
     CLOSE_ELEMENT_OPTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '>'
    ;
   rule_
    id_
     COMMA
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ','
    ;
   rule_
    id_
     QUESTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '?'
    ;
   rule_
    id_
     TREE_BEGIN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "#("
         ast_type_spec
    ;
   rule_
    id_
     LPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '('
    ;
   rule_
    id_
     RPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ')'
    ;
   rule_
    id_
     COLON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ':'
    ;
   rule_
    id_
     STAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '*'
    ;
   rule_
    id_
     PLUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '+'
    ;
   rule_
    id_
     ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '='
    ;
   rule_
    id_
     IMPLIES
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "=>"
         ast_type_spec
    ;
   rule_
    id_
     SEMI
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ';'
    ;
   rule_
    id_
     CARET
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '^'
    ;
   rule_
    id_
     BANG
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '!'
    ;
   rule_
    id_
     OR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '|'
    ;
   rule_
    id_
     WILDCARD
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
    ;
   rule_
    id_
     RANGE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ".."
         ast_type_spec
    ;
   rule_
    id_
     NOT_OP
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '~'
    ;
   rule_
    id_
     RCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '}'
    ;
   rule_
    id_
     CHAR_LITERAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\''
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             notTerminal
              '\''
         )
      element
       elementNoOptionSpec
        terminal_
         '\''
    ;
   rule_
    id_
     STRING_LITERAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             notTerminal
              '"'
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
    ;
   rule_
    protected
    id_
     ESC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\\'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'n'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'r'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              't'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'b'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'f'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'w'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'a'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '"'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\''
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\\'
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '3'
              )
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '7'
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   subruleOptionsSpec
                    options
                    {
                    option
                     id_
                      warnWhenFollowAmbig
                     =
                     optionValue
                      qualifiedID
                       id_
                        false
                     ;
                    }
                   :
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       range_
                        '0'
                        ..
                        '7'
                   )
                   ?
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '4'
                   ..
                   '7'
              )
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 warnWhenFollowAmbig
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  range_
                   '0'
                   ..
                   '7'
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'u'
           element
            elementNoOptionSpec
             terminal_
              XDIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              XDIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              XDIGIT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              XDIGIT
              ast_type_spec
         )
    ;
   rule_
    protected
    id_
     DIGIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '0'
         ..
         '9'
    ;
   rule_
    protected
    id_
     XDIGIT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '0'
         ..
         '9'
     |
     alternative
      element
       elementNoOptionSpec
        range_
         'a'
         ..
         'f'
     |
     alternative
      element
       elementNoOptionSpec
        range_
         'A'
         ..
         'F'
    ;
   rule_
    id_
     INT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         +
    ;
   rule_
    id_
     ARG_ACTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NESTED_ARG_ACTION
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
          
         s
         e
         t
         T
         e
         x
         t
         (
         S
         t
         r
         i
         n
         g
         U
         t
         i
         l
         s
         .
         s
         t
         r
         i
         p
         F
         r
         o
         n
         t
         B
         a
         c
         k
         (
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ,
          
         "["
         ,
          
         "]"
         )
         )
         ;
          
         }
    ;
   rule_
    protected
    id_
     NESTED_ARG_ACTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '['
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            generateAmbigWarnings
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NESTED_ARG_ACTION
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHAR_LITERAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING_LITERAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             notTerminal
              ']'
         )
         *
      element
       elementNoOptionSpec
        terminal_
         ']'
    ;
   rule_
    id_
     ACTION
    ruleAction
     actionBlock
      {
      i
      n
      t
       
      a
      c
      t
      i
      o
      n
      L
      i
      n
      e
      =
      g
      e
      t
      L
      i
      n
      e
      (
      )
      ;
       
      i
      n
      t
       
      a
      c
      t
      i
      o
      n
      C
      o
      l
      u
      m
      n
       
      =
       
      g
      e
      t
      C
      o
      l
      u
      m
      n
      (
      )
      ;
       
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NESTED_ACTION
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '?'
           element
            elementNoOptionSpec
             actionBlock
              {
              _
              t
              t
              y
              p
              e
               
              =
               
              S
              E
              M
              P
              R
              E
              D
              ;
              }
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         i
         f
          
         (
          
         _
         t
         t
         y
         p
         e
         =
         =
         A
         C
         T
         I
         O
         N
          
         )
          
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         e
         t
         T
         e
         x
         t
         (
         S
         t
         r
         i
         n
         g
         U
         t
         i
         l
         s
         .
         s
         t
         r
         i
         p
         F
         r
         o
         n
         t
         B
         a
         c
         k
         (
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ,
          
         "{"
         ,
          
         "}"
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         e
         l
         s
         e
          
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         s
         e
         t
         T
         e
         x
         t
         (
         S
         t
         r
         i
         n
         g
         U
         t
         i
         l
         s
         .
         s
         t
         r
         i
         p
         F
         r
         o
         n
         t
         B
         a
         c
         k
         (
         g
         e
         t
         T
         e
         x
         t
         (
         )
         ,
          
         "{"
         ,
          
         "}?"
         )
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         C
         o
         m
         m
         o
         n
         T
         o
         k
         e
         n
          
         t
          
         =
          
         n
         e
         w
          
         C
         o
         m
         m
         o
         n
         T
         o
         k
         e
         n
         (
         _
         t
         t
         y
         p
         e
         ,
         $
         g
         e
         t
         T
         e
         x
         t
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         t
         .
         s
         e
         t
         L
         i
         n
         e
         (
         a
         c
         t
         i
         o
         n
         L
         i
         n
         e
         )
         ;
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         // set action line to start
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         t
         .
         s
         e
         t
         C
         o
         l
         u
         m
         n
         (
         a
         c
         t
         i
         o
         n
         C
         o
         l
         u
         m
         n
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         $
         s
         e
         t
         T
         o
         k
         e
         n
         (
         t
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    protected
    id_
     NESTED_ACTION
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '{'
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 generateAmbigWarnings
                =
                optionValue
                 qualifiedID
                  id_
                   false
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   n
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   n
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   n
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   }
              )
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NESTED_ACTION
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              CHAR_LITERAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMENT
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING_LITERAL
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              .
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '}'
    ;
   rule_
    id_
     TOKEN_REF
    ruleOptionsSpec
     options
     {
     option
      id_
       testLiterals
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         'A'
         ..
         'Z'
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         *
    ;
   rule_
    id_
     RULE_REF
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      i
      n
      t
       
      t
      =
      0
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        id_
         t
        =
        INTERNAL_RULE_REF
      element
       elementNoOptionSpec
        actionBlock
         {
         _
         t
         t
         y
         p
         e
         =
         t
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              =
              =
              L
              I
              T
              E
              R
              A
              L
              _
              o
              p
              t
              i
              o
              n
              s
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              WS_LOOP
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '{'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   _
                   t
                   t
                   y
                   p
                   e
                    
                   =
                    
                   O
                   P
                   T
                   I
                   O
                   N
                   S
                   ;
                   }
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              t
              =
              =
              L
              I
              T
              E
              R
              A
              L
              _
              t
              o
              k
              e
              n
              s
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              WS_LOOP
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '{'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   _
                   t
                   t
                   y
                   p
                   e
                    
                   =
                    
                   T
                   O
                   K
                   E
                   N
                   S
                   ;
                   }
              )
              ?
          |
          alternative
         )
    ;
   rule_
    protected
    id_
     WS_LOOP
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WS
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMENT
              ast_type_spec
         )
         *
    ;
   rule_
    protected
    id_
     INTERNAL_RULE_REF
    returns
    argActionBlock
     [
     i
     n
     t
      
     t
     ]
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
       
       
       
       
      t
       
      =
       
      R
      U
      L
      E
      _
      R
      E
      F
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         'a'
         ..
         'z'
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            warnWhenFollowAmbig
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
         t
          
         =
          
         t
         e
         s
         t
         L
         i
         t
         e
         r
         a
         l
         s
         T
         a
         b
         l
         e
         (
         t
         )
         ;
         }
    ;
   rule_
    protected
    id_
     WS_OPT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              WS
              ast_type_spec
         )
         ?
    ;
 <EOF>
