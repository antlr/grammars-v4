grammar_
 classDef
  parserSpec
   class
   id_
    PythonParser
   extends
   Parser
   ;
   parserOptionsSpec
    options
    {
    option
     id_
      k
     =
     optionValue
      2
     ;
    }
  rules
   rule_
    id_
     single_input
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEWLINE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_stmt
      element
       elementNoOptionSpec
        terminal_
         NEWLINE
         ast_type_spec
    ;
   rule_
    id_
     file_input
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEWLINE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              stmt
         )
         *
      element
       elementNoOptionSpec
        terminal_
         EOF
         ast_type_spec
    ;
   rule_
    id_
     eval_input
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEWLINE
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEWLINE
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         EOF
         ast_type_spec
    ;
   rule_
    id_
     funcdef
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "def"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         parameters
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
    ;
   rule_
    id_
     parameters
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              varargslist
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
    ;
   rule_
    id_
     varargslist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         defparameter
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              defparameter
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   NAME
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        COMMA
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       terminal_
                        DOUBLESTAR
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       terminal_
                        NAME
                        ast_type_spec
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOUBLESTAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   NAME
                   ast_type_spec
              )
              ?
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAR
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              DOUBLESTAR
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLESTAR
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
    ;
   rule_
    id_
     defparameter
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fpdef
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
    ;
   rule_
    id_
     fpdef
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fplist
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
    ;
   rule_
    id_
     fplist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         fpdef
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              fpdef
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         compound_stmt
    ;
   rule_
    id_
     simple_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         small_stmt
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              small_stmt
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              SEMI
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         NEWLINE
         ast_type_spec
    ;
   rule_
    id_
     small_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         print_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         del_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         pass_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         flow_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         import_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         global_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exec_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         assert_stmt
    ;
   rule_
    id_
     expr_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              augassign
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   ASSIGN
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   testlist
              )
              +
         )
         ?
    ;
   rule_
    id_
     augassign
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         PLUSEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         MINUSEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAREQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         SLASHEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         PERCENTEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         AMPEREQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         VBAREQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         CIRCUMFLEXEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LEFTSHIFTEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         RIGHTSHIFTEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLESTAREQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLESLASHEQUAL
         ast_type_spec
    ;
   rule_
    id_
     print_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "print"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              RIGHTSHIFT
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
         )
         ?
    ;
   rule_
    id_
     del_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "del"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exprlist
    ;
   rule_
    id_
     pass_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "pass"
         ast_type_spec
    ;
   rule_
    id_
     flow_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         break_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         continue_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         return_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         raise_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         yield_stmt
    ;
   rule_
    id_
     break_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "break"
         ast_type_spec
    ;
   rule_
    id_
     continue_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "continue"
         ast_type_spec
    ;
   rule_
    id_
     return_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "return"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
         )
         ?
    ;
   rule_
    id_
     yield_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "yield"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
    ;
   rule_
    id_
     raise_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "raise"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        COMMA
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        test
                   )
                   ?
              )
              ?
         )
         ?
    ;
   rule_
    id_
     import_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "import"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         dotted_as_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              dotted_as_name
         )
         *
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "from"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         dotted_name
      element
       elementNoOptionSpec
        terminal_
         "import"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              STAR
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              import_as_name
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   import_as_name
              )
              *
         )
    ;
   rule_
    id_
     import_as_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     dotted_as_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         dotted_name
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     dotted_name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOT
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     global_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "global"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              NAME
              ast_type_spec
         )
         *
    ;
   rule_
    id_
     exec_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "exec"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "in"
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
              )
              ?
         )
         ?
    ;
   rule_
    id_
     assert_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "assert"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
    ;
   rule_
    id_
     compound_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         if_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         while_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         for_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         try_stmt
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         funcdef
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         classdef
    ;
   rule_
    id_
     if_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "if"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "elif"
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              suite
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "else"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              suite
         )
         ?
    ;
   rule_
    id_
     while_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "while"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "else"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              suite
         )
         ?
    ;
   rule_
    id_
     for_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "for"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exprlist
      element
       elementNoOptionSpec
        terminal_
         "in"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "else"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              suite
         )
         ?
    ;
   rule_
    id_
     try_stmt
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "try"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   except_clause
                element
                 elementNoOptionSpec
                  terminal_
                   COLON
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   suite
              )
              +
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   "else"
                   ast_type_spec
                element
                 elementNoOptionSpec
                  terminal_
                   COLON
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   suite
              )
              ?
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              "finally"
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              suite
         )
    ;
   rule_
    id_
     except_clause
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "except"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
              )
              ?
         )
         ?
    ;
   rule_
    id_
     suite
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         simple_stmt
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NEWLINE
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         INDENT
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              stmt
         )
         +
      element
       elementNoOptionSpec
        terminal_
         DEDENT
         ast_type_spec
    ;
   rule_
    id_
     test
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         and_test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "or"
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              and_test
         )
         *
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         lambdef
    ;
   rule_
    id_
     and_test
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         not_test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              "and"
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              not_test
         )
         *
    ;
   rule_
    id_
     not_test
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "not"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         not_test
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         comparison
    ;
   rule_
    id_
     comparison
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              comp_op
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
         )
         *
    ;
   rule_
    id_
     comp_op
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LESS
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         GREATER
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         EQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         GREATEREQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LESSEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         ALT_NOTEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NOTEQUAL
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "in"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "not"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         "in"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "is"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         "is"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         "not"
         ast_type_spec
    ;
   rule_
    id_
     expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         xor_expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              VBAR
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              xor_expr
         )
         *
    ;
   rule_
    id_
     xor_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         and_expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              CIRCUMFLEX
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              and_expr
         )
         *
    ;
   rule_
    id_
     and_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         shift_expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              AMPER
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              shift_expr
         )
         *
    ;
   rule_
    id_
     shift_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         arith_expr
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   LEFTSHIFT
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   RIGHTSHIFT
                   ast_type_spec
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              arith_expr
         )
         *
    ;
   rule_
    id_
     arith_expr
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         term
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PLUS
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   MINUS
                   ast_type_spec
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              term
         )
         *
    ;
   rule_
    id_
     term
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         factor
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   SLASH
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   PERCENT
                   ast_type_spec
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOUBLESLASH
                   ast_type_spec
              )
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
         )
         *
    ;
   rule_
    id_
     factor
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              PLUS
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              MINUS
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              TILDE
              ast_type_spec
         )
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         factor
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         power
    ;
   rule_
    id_
     power
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         atom
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              trailer
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              DOUBLESTAR
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              factor
         )
         ?
    ;
   rule_
    id_
     atom
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LBRACK
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              listmaker
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RBRACK
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LCURLY
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              dictmaker
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RCURLY
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         BACKQUOTE
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
      element
       elementNoOptionSpec
        terminal_
         BACKQUOTE
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         INT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LONGINT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         FLOAT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         COMPLEX
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              STRING
              ast_type_spec
         )
         +
    ;
   rule_
    id_
     listmaker
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              list_for
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              subruleOptionsSpec
               options
               {
               option
                id_
                 greedy
                =
                optionValue
                 qualifiedID
                  id_
                   true
                ;
               }
              :
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   COMMA
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
              )
              *
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     lambdef
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "lambda"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              varargslist
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
    ;
   rule_
    id_
     trailer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         LPAREN
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              arglist
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         RPAREN
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         LBRACK
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subscriptlist
      element
       elementNoOptionSpec
        terminal_
         RBRACK
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
    ;
   rule_
    id_
     subscriptlist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         subscript
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              subscript
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     subscript
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         DOT
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         DOT
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   sliceop
              )
              ?
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              sliceop
         )
         ?
    ;
   rule_
    id_
     sliceop
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
    ;
   rule_
    id_
     exprlist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         expr
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              expr
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     testlist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     dictmaker
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
           element
            elementNoOptionSpec
             terminal_
              COLON
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
         )
         ?
    ;
   rule_
    id_
     classdef
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "class"
         ast_type_spec
      element
       elementNoOptionSpec
        terminal_
         NAME
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              LPAREN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              testlist
           element
            elementNoOptionSpec
             terminal_
              RPAREN
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         COLON
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         suite
    ;
   rule_
    id_
     arglist
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         argument
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              argument
         )
         *
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   STAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        COMMA
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       terminal_
                        DOUBLESTAR
                        ast_type_spec
                     element
                      elementNoOptionSpec
                       rule_ref_or_keyword_as
                        test
                   )
                   ?
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   DOUBLESTAR
                   ast_type_spec
                element
                 elementNoOptionSpec
                  rule_ref_or_keyword_as
                   test
              )
              ?
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         STAR
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              COMMA
              ast_type_spec
           element
            elementNoOptionSpec
             terminal_
              DOUBLESTAR
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         DOUBLESTAR
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
    ;
   rule_
    id_
     argument
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ASSIGN
              ast_type_spec
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              test
         )
         ?
    ;
   rule_
    id_
     list_iter
    :
    altList
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         list_for
     |
     alternative
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         list_if
    ;
   rule_
    id_
     list_for
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "for"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         exprlist
      element
       elementNoOptionSpec
        terminal_
         "in"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         testlist
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              list_iter
         )
         ?
    ;
   rule_
    id_
     list_if
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "if"
         ast_type_spec
      element
       elementNoOptionSpec
        rule_ref_or_keyword_as
         test
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             rule_ref_or_keyword_as
              list_iter
         )
         ?
    ;
 classDef
  lexerSpec
   class
   id_
    PythonLexer
   extends
   Lexer
   ;
   lexerOptionsSpec
    options
    {
    lexerOption
     id_
      k
     =
     lexerOptionValue
      optionValue
       3
     ;
    lexerOption
     id_
      testLiterals
     =
     lexerOptionValue
      optionValue
       qualifiedID
        id_
         false
     ;
    lexerOption
     id_
      charVocabulary
     =
     lexerOptionValue
      charSet
       setBlockElement
        '\u0003'
        ..
        '\ufffe'
     ;
    }
   actionBlock
    {
    \n
    /** Handles context-sensitive lexing of implicit line joining such as\n *  the case where newline is ignored in cases like this:\n *  a = [3,\n *       4]\n */
    \n
    i
    n
    t
     
    i
    m
    p
    l
    i
    c
    i
    t
    L
    i
    n
    e
    J
    o
    i
    n
    i
    n
    g
    L
    e
    v
    e
    l
     
    =
     
    0
    ;
    \n
    }
  rules
   rule_
    id_
     LPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '('
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         +
         +
         ;
         }
    ;
   rule_
    id_
     RPAREN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ')'
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         -
         -
         ;
         }
    ;
   rule_
    id_
     LBRACK
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '['
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         +
         +
         ;
         }
    ;
   rule_
    id_
     RBRACK
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ']'
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         -
         -
         ;
         }
    ;
   rule_
    id_
     COLON
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ':'
    ;
   rule_
    id_
     COMMA
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ','
    ;
   rule_
    id_
     SEMI
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ';'
    ;
   rule_
    id_
     PLUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '+'
    ;
   rule_
    id_
     MINUS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '-'
    ;
   rule_
    id_
     STAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '*'
    ;
   rule_
    id_
     SLASH
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '/'
    ;
   rule_
    id_
     VBAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '|'
    ;
   rule_
    id_
     AMPER
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '&'
    ;
   rule_
    id_
     LESS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '<'
    ;
   rule_
    id_
     GREATER
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '>'
    ;
   rule_
    id_
     ASSIGN
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '='
    ;
   rule_
    id_
     PERCENT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '%'
    ;
   rule_
    id_
     BACKQUOTE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '`'
    ;
   rule_
    id_
     LCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '{'
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         +
         +
         ;
         }
    ;
   rule_
    id_
     RCURLY
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '}'
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         -
         -
         ;
         }
    ;
   rule_
    id_
     CIRCUMFLEX
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '^'
    ;
   rule_
    id_
     TILDE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '~'
    ;
   rule_
    id_
     EQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "=="
         ast_type_spec
    ;
   rule_
    id_
     NOTEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "!="
         ast_type_spec
    ;
   rule_
    id_
     ALT_NOTEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<>"
         ast_type_spec
    ;
   rule_
    id_
     LESSEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<="
         ast_type_spec
    ;
   rule_
    id_
     LEFTSHIFT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<"
         ast_type_spec
    ;
   rule_
    id_
     GREATEREQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">="
         ast_type_spec
    ;
   rule_
    id_
     RIGHTSHIFT
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>"
         ast_type_spec
    ;
   rule_
    id_
     PLUSEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "+="
         ast_type_spec
    ;
   rule_
    id_
     MINUSEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "-="
         ast_type_spec
    ;
   rule_
    id_
     DOUBLESTAR
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "**"
         ast_type_spec
    ;
   rule_
    id_
     STAREQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "*="
         ast_type_spec
    ;
   rule_
    id_
     DOUBLESLASH
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "//"
         ast_type_spec
    ;
   rule_
    id_
     SLASHEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "/="
         ast_type_spec
    ;
   rule_
    id_
     VBAREQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "|="
         ast_type_spec
    ;
   rule_
    id_
     PERCENTEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "%="
         ast_type_spec
    ;
   rule_
    id_
     AMPEREQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "&="
         ast_type_spec
    ;
   rule_
    id_
     CIRCUMFLEXEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "^="
         ast_type_spec
    ;
   rule_
    id_
     LEFTSHIFTEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "<<="
         ast_type_spec
    ;
   rule_
    id_
     RIGHTSHIFTEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         ">>="
         ast_type_spec
    ;
   rule_
    id_
     DOUBLESTAREQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "**="
         ast_type_spec
    ;
   rule_
    id_
     DOUBLESLASHEQUAL
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "//="
         ast_type_spec
    ;
   rule_
    id_
     NUMBER
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '0'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'x'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'X'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'f'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'F'
         )
         +
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'l'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'L'
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         I
         N
         T
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '0'
      element
       elementNoOptionSpec
        terminal_
         Int
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         I
         N
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              FloatTrailer
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'j'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'J'
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              C
              O
              M
              P
              L
              E
              X
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'l'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'L'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              L
              O
              N
              G
              I
              N
              T
              )
              ;
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '0'
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         I
         N
         T
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              FloatTrailer
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'j'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'J'
              )
              ?
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              F
              L
              O
              A
              T
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'l'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   'L'
              )
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              L
              O
              N
              G
              I
              N
              T
              )
              ;
              }
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              NonZeroDigit
              ast_type_spec
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   Int
                   ast_type_spec
              )
              ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'l'
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'L'
                   )
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   $
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   L
                   O
                   N
                   G
                   I
                   N
                   T
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'j'
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'J'
                   )
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   $
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   C
                   O
                   M
                   P
                   L
                   E
                   X
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   FloatTrailer
                   ast_type_spec
                element
                 elementNoOptionSpec
                  ebnf
                   (
                   block
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'j'
                    |
                    alternative
                     element
                      elementNoOptionSpec
                       terminal_
                        'J'
                   )
                   ?
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   $
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   F
                   L
                   O
                   A
                   T
                   )
                   ;
                   }
               |
               alternative
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   $
                   s
                   e
                   t
                   T
                   y
                   p
                   e
                   (
                   I
                   N
                   T
                   )
                   ;
                   }
              )
         )
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
      element
       elementNoOptionSpec
        terminal_
         Int
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Exponent
              ast_type_spec
         )
         ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'j'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'J'
         )
         ?
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         F
         L
         O
         A
         T
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         D
         O
         T
         )
         ;
         }
    ;
   rule_
    protected
    id_
     Int
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         +
    ;
   rule_
    protected
    id_
     NonZeroDigit
    :
    altList
     alternative
      element
       elementNoOptionSpec
        range_
         '1'
         ..
         '9'
    ;
   rule_
    protected
    id_
     FloatTrailer
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '.'
      element
       elementNoOptionSpec
        terminal_
         Int
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              Exponent
              ast_type_spec
         )
         ?
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         Exponent
         ast_type_spec
    ;
   rule_
    protected
    id_
     Exponent
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              'e'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              'E'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '+'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '-'
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         Int
         ast_type_spec
    ;
   rule_
    protected
    id_
     Name
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
         )
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             range_
              'a'
              ..
              'z'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              'A'
              ..
              'Z'
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '_'
          |
          alternative
           element
            elementNoOptionSpec
             range_
              '0'
              ..
              '9'
         )
         *
    ;
   rule_
    id_
     STRING_OR_NAME
    ruleOptionsSpec
     options
     {
     option
      id_
       testLiterals
      =
      optionValue
       qualifiedID
        id_
         true
      ;
     }
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
      S
      t
      r
      i
      n
      g
       
      p
      r
      e
      f
      i
      x
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         String
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         S
         T
         R
         I
         N
         G
         )
         ;
         }
     |
     alternative
      element
       elementNoOptionSpec
        id_
         n
        :
        terminal_
         Name
         ast_type_spec
      element
       elementNoOptionSpec
        actionBlock
         {
         p
         r
         e
         f
         i
         x
         =
         n
         .
         g
         e
         t
         T
         e
         x
         t
         (
         )
         .
         t
         o
         U
         p
         p
         e
         r
         C
         a
         s
         e
         (
         )
         ;
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              p
              r
              e
              f
              i
              x
              .
              e
              q
              u
              a
              l
              s
              (
              "R"
              )
              |
              |
              p
              r
              e
              f
              i
              x
              .
              e
              q
              u
              a
              l
              s
              (
              "U"
              )
              |
              |
              p
              r
              e
              f
              i
              x
              .
              e
              q
              u
              a
              l
              s
              (
              "UR"
              )
              }
             ?
           element
            elementNoOptionSpec
             terminal_
              String
              ast_type_spec
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              S
              T
              R
              I
              N
              G
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              N
              A
              M
              E
              )
              ;
              }
         )
    ;
   rule_
    protected
    id_
     String
    ruleOptionsSpec
     options
     {
     option
      id_
       generateAmbigWarnings
      =
      optionValue
       qualifiedID
        id_
         false
      ;
     }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         "'''"
         ast_type_spec
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEWLINE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              .
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         "'''"
         ast_type_spec
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              false
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              NEWLINE
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              .
              ast_type_spec
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        terminal_
         '"'
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\''
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\''
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '\''
     |
     alternative
      element
       elementNoOptionSpec
        terminal_
         '"'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ESC
              ast_type_spec
          |
          alternative
           element
            elementNoOptionSpec
             ~
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\\'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
               |
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '"'
              )
         )
         *
      element
       elementNoOptionSpec
        terminal_
         '"'
    ;
   rule_
    protected
    id_
     ESC
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\\'
      element
       elementNoOptionSpec
        terminal_
         .
         ast_type_spec
    ;
   rule_
    id_
     CONTINUED_LINE
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '\\'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\r'
         )
         ?
      element
       elementNoOptionSpec
        terminal_
         '\n'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         n
         e
         w
         l
         i
         n
         e
         (
         )
         ;
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
          
         }
    ;
   rule_
    id_
     LEADING_WS
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
      i
      n
      t
       
      s
      p
      a
      c
      e
      s
       
      =
       
      0
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        actionBlock
         {
         g
         e
         t
         C
         o
         l
         u
         m
         n
         (
         )
         =
         =
         1
         }
        ?
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
           element
            elementNoOptionSpec
             actionBlock
              {
               
              s
              p
              a
              c
              e
              s
              +
              +
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
           element
            elementNoOptionSpec
             actionBlock
              {
               
              s
              p
              a
              c
              e
              s
               
              +
              =
               
              8
              ;
               
              s
              p
              a
              c
              e
              s
               
              -
              =
               
              (
              s
              p
              a
              c
              e
              s
               
              %
               
              8
              )
              ;
               
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\014'
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
         i
         f
          
         (
          
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         >
         0
          
         )
          
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         // ignore ws if nested
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
         e
         l
         s
         e
          
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         // make a string of n spaces where n is column number - 1
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         c
         h
         a
         r
         [
         ]
          
         i
         n
         d
         e
         n
         t
         a
         t
         i
         o
         n
          
         =
          
         n
         e
         w
          
         c
         h
         a
         r
         [
         s
         p
         a
         c
         e
         s
         ]
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         f
         o
         r
          
         (
         i
         n
         t
          
         i
         =
         0
         ;
          
         i
         <
         s
         p
         a
         c
         e
         s
         ;
          
         i
         +
         +
         )
          
         {
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         i
         n
         d
         e
         n
         t
         a
         t
         i
         o
         n
         [
         i
         ]
          
         =
          
         ' '
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         }
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         S
         t
         r
         i
         n
         g
          
         s
          
         =
          
         n
         e
         w
          
         S
         t
         r
         i
         n
         g
         (
         i
         n
         d
         e
         n
         t
         a
         t
         i
         o
         n
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
         $
         s
         e
         t
         T
         e
         x
         t
         (
         s
         )
         ;
         \n
          
          
          
          
          
          
          
          
          
          
          
          
         }
         \n
          
          
          
          
          
          
          
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              i
              m
              p
              l
              i
              c
              i
              t
              L
              i
              n
              e
              J
              o
              i
              n
              i
              n
              g
              L
              e
              v
              e
              l
              =
              =
              0
              }
             ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              T
              o
              k
              e
              n
              .
              S
              K
              I
              P
              )
              ;
              }
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '#'
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  ~
                  notTerminal
                   '\n'
              )
              *
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   n
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   }
              )
              +
           element
            elementNoOptionSpec
             actionBlock
              {
              $
              s
              e
              t
              T
              y
              p
              e
              (
              T
              o
              k
              e
              n
              .
              S
              K
              I
              P
              )
              ;
              }
         )
         ?
    ;
   rule_
    id_
     COMMENT
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
      i
      n
      t
       
      s
      t
      a
      r
      t
      C
      o
      l
       
      =
       
      g
      e
      t
      C
      o
      l
      u
      m
      n
      (
      )
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        terminal_
         '#'
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             ~
             notTerminal
              '\n'
         )
         *
      element
       elementNoOptionSpec
        actionBlock
         {
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
          
         }
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             actionBlock
              {
              s
              t
              a
              r
              t
              C
              o
              l
              =
              =
              1
              }
             ?
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\n'
                element
                 elementNoOptionSpec
                  actionBlock
                   {
                   n
                   e
                   w
                   l
                   i
                   n
                   e
                   (
                   )
                   ;
                   }
              )
              +
         )
         ?
    ;
   rule_
    id_
     NEWLINE
    ruleAction
     actionBlock
      {
      \n
       
       
       
       
      i
      n
      t
       
      s
      t
      a
      r
      t
      C
      o
      l
       
      =
       
      g
      e
      t
      C
      o
      l
      u
      m
      n
      (
      )
      ;
      \n
      }
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         subruleOptionsSpec
          options
          {
          option
           id_
            greedy
           =
           optionValue
            qualifiedID
             id_
              true
           ;
          }
         :
         block
          alternative
           element
            elementNoOptionSpec
             ebnf
              (
              block
               alternative
                element
                 elementNoOptionSpec
                  terminal_
                   '\r'
              )
              ?
           element
            elementNoOptionSpec
             terminal_
              '\n'
           element
            elementNoOptionSpec
             actionBlock
              {
              n
              e
              w
              l
              i
              n
              e
              (
              )
              ;
              }
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
         i
         f
          
         (
          
         s
         t
         a
         r
         t
         C
         o
         l
         =
         =
         1
          
         |
         |
          
         i
         m
         p
         l
         i
         c
         i
         t
         L
         i
         n
         e
         J
         o
         i
         n
         i
         n
         g
         L
         e
         v
         e
         l
         >
         0
          
         )
         \n
          
          
          
          
          
          
          
          
          
          
          
          
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
         \n
          
          
          
          
          
          
          
          
         }
    ;
   rule_
    id_
     WS
    :
    altList
     alternative
      element
       elementNoOptionSpec
        ebnf
         (
         block
          alternative
           element
            elementNoOptionSpec
             terminal_
              ' '
          |
          alternative
           element
            elementNoOptionSpec
             terminal_
              '\t'
         )
         +
      element
       elementNoOptionSpec
        actionBlock
         {
         $
         s
         e
         t
         T
         y
         p
         e
         (
         T
         o
         k
         e
         n
         .
         S
         K
         I
         P
         )
         ;
         }
    ;
 <EOF>
