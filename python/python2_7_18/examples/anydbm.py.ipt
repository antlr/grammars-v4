file_input
 stmt
  simple_stmt
   small_stmt
    expr_stmt
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    """Generic interface to all dbm clones.\n\nInstead of\n\n        import dbm\n        d = dbm.open(file, 'w', 0666)\n\nuse\n\n        import anydbm\n        d = anydbm.open(file, 'w')\n\nThe returned object is a dbhash, gdbm, dbm or dumbdbm object,\ndependent on the type of database being opened (determined by whichdb\nmodule) in the case of an existing dbm. If the dbm does not exist and\nthe create or new flag ('c' or 'n') was specified, the dbm type will\nbe determined by the availability of the modules (tested in the above\norder).\n\nIt has the following interface (key and data are strings):\n\n        d[key] = data   # store data at key (may override data at\n                        # existing key)\n        data = d[key]   # retrieve data at key (raise KeyError if no\n                        # such key)\n        del d[key]      # delete data stored at key (raises KeyError\n                        # if no such key)\n        flag = key in d   # true if the key exists\n        list = d.keys() # return a list of all existing keys (slow!)\n\nFuture versions may change the order in which implementations are\ntested for existence, and add interfaces to other dbm-like\nimplementations.\n"""
   \n
 stmt
  compound_stmt
   classdef
    class
    error
    (
    testlist
     test
      or_test
       and_test
        not_test
         comparison
          expr
           xor_expr
            and_expr
             shift_expr
              arith_expr
               term
                factor
                 power
                  atom
                   Exception
    )
    :
    suite
     \n
     <INDENT>
     stmt
      simple_stmt
       small_stmt
        pass_stmt
         pass
       \n
     <DEDENT>
 stmt
  simple_stmt
   small_stmt
    expr_stmt
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    _names
     =
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    [
                    listmaker
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           xor_expr
                            and_expr
                             shift_expr
                              arith_expr
                               term
                                factor
                                 power
                                  atom
                                   'dbhash'
                     ,
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           xor_expr
                            and_expr
                             shift_expr
                              arith_expr
                               term
                                factor
                                 power
                                  atom
                                   'gdbm'
                     ,
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           xor_expr
                            and_expr
                             shift_expr
                              arith_expr
                               term
                                factor
                                 power
                                  atom
                                   'dbm'
                     ,
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           xor_expr
                            and_expr
                             shift_expr
                              arith_expr
                               term
                                factor
                                 power
                                  atom
                                   'dumbdbm'
                    ]
   \n
 stmt
  simple_stmt
   small_stmt
    expr_stmt
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    _errors
     =
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    [
                    listmaker
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           xor_expr
                            and_expr
                             shift_expr
                              arith_expr
                               term
                                factor
                                 power
                                  atom
                                   error
                    ]
   \n
 stmt
  simple_stmt
   small_stmt
    expr_stmt
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    _defaultmod
     =
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    None
   \n
 stmt
  compound_stmt
   for_stmt
    for
    exprlist
     expr
      xor_expr
       and_expr
        shift_expr
         arith_expr
          term
           factor
            power
             atom
              _name
    in
    testlist
     test
      or_test
       and_test
        not_test
         comparison
          expr
           xor_expr
            and_expr
             shift_expr
              arith_expr
               term
                factor
                 power
                  atom
                   _names
    :
    suite
     \n
     <INDENT>
     stmt
      compound_stmt
       try_stmt
        try
        :
        suite
         \n
         <INDENT>
         stmt
          simple_stmt
           small_stmt
            expr_stmt
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            _mod
             =
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            __import__
                           trailer
                            (
                            arglist
                             argument
                              test
                               or_test
                                and_test
                                 not_test
                                  comparison
                                   expr
                                    xor_expr
                                     and_expr
                                      shift_expr
                                       arith_expr
                                        term
                                         factor
                                          power
                                           atom
                                            _name
                            )
           \n
         <DEDENT>
        except_clause
         except
         test
          or_test
           and_test
            not_test
             comparison
              expr
               xor_expr
                and_expr
                 shift_expr
                  arith_expr
                   term
                    factor
                     power
                      atom
                       ImportError
        :
        suite
         \n
         <INDENT>
         stmt
          simple_stmt
           small_stmt
            flow_stmt
             continue_stmt
              continue
           \n
         <DEDENT>
     stmt
      compound_stmt
       if_stmt
        if
        test
         or_test
          and_test
           not_test
            not
            not_test
             comparison
              expr
               xor_expr
                and_expr
                 shift_expr
                  arith_expr
                   term
                    factor
                     power
                      atom
                       _defaultmod
        :
        suite
         \n
         <INDENT>
         stmt
          simple_stmt
           small_stmt
            expr_stmt
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            _defaultmod
             =
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            _mod
           \n
         <DEDENT>
     stmt
      simple_stmt
       small_stmt
        expr_stmt
         testlist
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        _errors
                       trailer
                        .
                        append
                       trailer
                        (
                        arglist
                         argument
                          test
                           or_test
                            and_test
                             not_test
                              comparison
                               expr
                                xor_expr
                                 and_expr
                                  shift_expr
                                   arith_expr
                                    term
                                     factor
                                      power
                                       atom
                                        _mod
                                       trailer
                                        .
                                        error
                        )
       \n
     <DEDENT>
 stmt
  compound_stmt
   if_stmt
    if
    test
     or_test
      and_test
       not_test
        not
        not_test
         comparison
          expr
           xor_expr
            and_expr
             shift_expr
              arith_expr
               term
                factor
                 power
                  atom
                   _defaultmod
    :
    suite
     \n
     <INDENT>
     stmt
      simple_stmt
       small_stmt
        flow_stmt
         raise_stmt
          raise
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        ImportError
          ,
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        "no dbm clone found; tried %s"
                     %
                     factor
                      power
                       atom
                        _names
       \n
     <DEDENT>
 stmt
  simple_stmt
   small_stmt
    expr_stmt
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    error
     =
     testlist
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    tuple
                   trailer
                    (
                    arglist
                     argument
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            xor_expr
                             and_expr
                              shift_expr
                               arith_expr
                                term
                                 factor
                                  power
                                   atom
                                    _errors
                    )
   \n
 stmt
  compound_stmt
   funcdef
    def
    open
    parameters
     (
     varargslist
      fpdef
       file
      ,
      fpdef
       flag
      =
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    'r'
      ,
      fpdef
       mode
      =
      test
       or_test
        and_test
         not_test
          comparison
           expr
            xor_expr
             and_expr
              shift_expr
               arith_expr
                term
                 factor
                  power
                   atom
                    0666
     )
    :
    suite
     \n
     <INDENT>
     stmt
      simple_stmt
       small_stmt
        expr_stmt
         testlist
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        """Open or create database at path given by *file*.\n\n    Optional argument *flag* can be 'r' (default) for read-only access, 'w'\n    for read-write access of an existing database, 'c' for read-write access\n    to a new or existing database, and 'n' for read-write access to a new\n    database.\n\n    Note: 'r' and 'w' fail if the database doesn't exist; 'c' creates it\n    only if it doesn't exist; and 'n' always creates a new database.\n    """
       \n
     stmt
      simple_stmt
       small_stmt
        import_stmt
         import_from
          from
          dotted_name
           whichdb
          import
          import_as_names
           import_as_name
            whichdb
       \n
     stmt
      simple_stmt
       small_stmt
        expr_stmt
         testlist
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        result
         =
         testlist
          test
           or_test
            and_test
             not_test
              comparison
               expr
                xor_expr
                 and_expr
                  shift_expr
                   arith_expr
                    term
                     factor
                      power
                       atom
                        whichdb
                       trailer
                        (
                        arglist
                         argument
                          test
                           or_test
                            and_test
                             not_test
                              comparison
                               expr
                                xor_expr
                                 and_expr
                                  shift_expr
                                   arith_expr
                                    term
                                     factor
                                      power
                                       atom
                                        file
                        )
       \n
     stmt
      compound_stmt
       if_stmt
        if
        test
         or_test
          and_test
           not_test
            comparison
             expr
              xor_expr
               and_expr
                shift_expr
                 arith_expr
                  term
                   factor
                    power
                     atom
                      result
             comp_op
              is
             expr
              xor_expr
               and_expr
                shift_expr
                 arith_expr
                  term
                   factor
                    power
                     atom
                      None
        :
        suite
         \n
         <INDENT>
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  xor_expr
                   and_expr
                    shift_expr
                     arith_expr
                      term
                       factor
                        power
                         atom
                          'c'
                 comp_op
                  in
                 expr
                  xor_expr
                   and_expr
                    shift_expr
                     arith_expr
                      term
                       factor
                        power
                         atom
                          flag
              or
              and_test
               not_test
                comparison
                 expr
                  xor_expr
                   and_expr
                    shift_expr
                     arith_expr
                      term
                       factor
                        power
                         atom
                          'n'
                 comp_op
                  in
                 expr
                  xor_expr
                   and_expr
                    shift_expr
                     arith_expr
                      term
                       factor
                        power
                         atom
                          flag
            :
            suite
             \n
             <INDENT>
             stmt
              simple_stmt
               small_stmt
                expr_stmt
                 testlist
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        xor_expr
                         and_expr
                          shift_expr
                           arith_expr
                            term
                             factor
                              power
                               atom
                                mod
                 =
                 testlist
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        xor_expr
                         and_expr
                          shift_expr
                           arith_expr
                            term
                             factor
                              power
                               atom
                                _defaultmod
               \n
             <DEDENT>
            else
            :
            suite
             \n
             <INDENT>
             stmt
              simple_stmt
               small_stmt
                flow_stmt
                 raise_stmt
                  raise
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        xor_expr
                         and_expr
                          shift_expr
                           arith_expr
                            term
                             factor
                              power
                               atom
                                error
                  ,
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        xor_expr
                         and_expr
                          shift_expr
                           arith_expr
                            term
                             factor
                              power
                               atom
                                "need 'c' or 'n' flag to open new db"
               \n
             <DEDENT>
         <DEDENT>
        elif
        test
         or_test
          and_test
           not_test
            comparison
             expr
              xor_expr
               and_expr
                shift_expr
                 arith_expr
                  term
                   factor
                    power
                     atom
                      result
             comp_op
              ==
             expr
              xor_expr
               and_expr
                shift_expr
                 arith_expr
                  term
                   factor
                    power
                     atom
                      ""
        :
        suite
         \n
         <INDENT>
         stmt
          simple_stmt
           small_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            error
              ,
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            "db type could not be determined"
           \n
         <DEDENT>
        else
        :
        suite
         \n
         <INDENT>
         stmt
          simple_stmt
           small_stmt
            expr_stmt
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            mod
             =
             testlist
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    xor_expr
                     and_expr
                      shift_expr
                       arith_expr
                        term
                         factor
                          power
                           atom
                            __import__
                           trailer
                            (
                            arglist
                             argument
                              test
                               or_test
                                and_test
                                 not_test
                                  comparison
                                   expr
                                    xor_expr
                                     and_expr
                                      shift_expr
                                       arith_expr
                                        term
                                         factor
                                          power
                                           atom
                                            result
                            )
           \n
         <DEDENT>
     stmt
      simple_stmt
       small_stmt
        flow_stmt
         return_stmt
          return
          testlist
           test
            or_test
             and_test
              not_test
               comparison
                expr
                 xor_expr
                  and_expr
                   shift_expr
                    arith_expr
                     term
                      factor
                       power
                        atom
                         mod
                        trailer
                         .
                         open
                        trailer
                         (
                         arglist
                          argument
                           test
                            or_test
                             and_test
                              not_test
                               comparison
                                expr
                                 xor_expr
                                  and_expr
                                   shift_expr
                                    arith_expr
                                     term
                                      factor
                                       power
                                        atom
                                         file
                          ,
                          argument
                           test
                            or_test
                             and_test
                              not_test
                               comparison
                                expr
                                 xor_expr
                                  and_expr
                                   shift_expr
                                    arith_expr
                                     term
                                      factor
                                       power
                                        atom
                                         flag
                          ,
                          argument
                           test
                            or_test
                             and_test
                              not_test
                               comparison
                                expr
                                 xor_expr
                                  and_expr
                                   shift_expr
                                    arith_expr
                                     term
                                      factor
                                       power
                                        atom
                                         mode
                         )
       \n
     <DEDENT>
 <EOF>
