file_input
 stmt
  simple_stmts
   simple_stmt
    expr_stmt
     testlist_star_expr
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              """Abstract Transport class."""
   \n
 stmt
  simple_stmts
   simple_stmt
    import_stmt
     import_from
      from
      dotted_name
       name
        asyncio
      import
      import_as_names
       import_as_name
        name
         compat
   \n
 stmt
  simple_stmts
   simple_stmt
    expr_stmt
     testlist_star_expr
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               __all__
     =
     testlist_star_expr
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              [
              testlist_comp
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'BaseTransport'
               ,
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'ReadTransport'
               ,
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'WriteTransport'
               ,
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'Transport'
               ,
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'DatagramTransport'
               ,
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       'SubprocessTransport'
               ,
              ]
   \n
 stmt
  compound_stmt
   classdef
    class
    name
     BaseTransport
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """Base class for transports."""
        
     stmt
      compound_stmt
       funcdef
        def
        name
         __init__
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            extra
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  atom_expr
                   atom
                    name
                     extra
                 comp_op
                  is
                 expr
                  atom_expr
                   atom
                    None
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                expr_stmt
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          name
                           extra
                 =
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          {
                          }
                
              
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _extra
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       extra
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_extra_info
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            name
          ,
          tfpdef
           name
            default
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Get optional transport information."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             return_stmt
              return
              testlist
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       name
                        self
                      trailer
                       .
                       name
                        _extra
                      trailer
                       .
                       name
                        get
                      trailer
                       (
                       arglist
                        argument
                         test
                          or_test
                           and_test
                            not_test
                             comparison
                              expr
                               atom_expr
                                atom
                                 name
                                  name
                        ,
                        argument
                         test
                          or_test
                           and_test
                            not_test
                             comparison
                              expr
                               atom_expr
                                atom
                                 name
                                  default
                       )
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         is_closing
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Return True if the transport is closing or closed."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         close
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Close the transport.\n\n        Buffered data will be flushed asynchronously.  No more data\n        will be received.  After all buffered data is flushed, the\n        protocol's connection_lost() method will (eventually) called\n        with None as its argument.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         set_protocol
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            protocol
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Set a new protocol."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_protocol
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Return the current protocol."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     ReadTransport
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               BaseTransport
    )
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """Interface for read-only transports."""
        
     stmt
      compound_stmt
       funcdef
        def
        name
         pause_reading
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Pause the receiving end.\n\n        No data will be passed to the protocol's data_received()\n        method until resume_reading() is called.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         resume_reading
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Resume the receiving end.\n\n        Data received will once again be passed to the protocol's\n        data_received() method.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     WriteTransport
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               BaseTransport
    )
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """Interface for write-only transports."""
        
     stmt
      compound_stmt
       funcdef
        def
        name
         set_write_buffer_limits
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            high
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
          ,
          tfpdef
           name
            low
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Set the high- and low-water limits for write flow control.\n\n        These two values control when to call the protocol's\n        pause_writing() and resume_writing() methods.  If specified,\n        the low-water limit must be less than or equal to the\n        high-water limit.  Neither value can be negative.\n\n        The defaults are implementation-specific.  If only the\n        high-water limit is given, the low-water limit defaults to an\n        implementation-specific value less than or equal to the\n        high-water limit.  Setting high to zero forces low to zero as\n        well, and causes pause_writing() to be called whenever the\n        buffer becomes non-empty.  Setting low to zero causes\n        resume_writing() to be called only once the buffer is empty.\n        Use of zero for either limit is generally sub-optimal as it\n        reduces opportunities for doing I/O and computation\n        concurrently.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_write_buffer_size
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Return the current size of the write buffer."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         write
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            data
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Write some data bytes to the transport.\n\n        This does not block; it buffers the data and arranges for it\n        to be sent out asynchronously.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         writelines
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            list_of_data
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Write a list (or any iterable) of data bytes to the transport.\n\n        The default implementation concatenates the arguments and\n        calls write() on the result.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       data
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       compat
                     trailer
                      .
                      name
                       flatten_list_bytes
                     trailer
                      (
                      arglist
                       argument
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 list_of_data
                      )
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       write
                     trailer
                      (
                      arglist
                       argument
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 data
                      )
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         write_eof
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Close the write end after flushing buffered data.\n\n        (This is like typing ^D into a UNIX program reading from stdin.)\n\n        Data may still be received.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         can_write_eof
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Return True if this transport supports write_eof(), False if not."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         abort
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Close the transport immediately.\n\n        Buffered data will be lost.  No more data will be received.\n        The protocol's connection_lost() method will (eventually) be\n        called with None as its argument.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     Transport
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               ReadTransport
     ,
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               WriteTransport
    )
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """Interface representing a bidirectional transport.\n\n    There may be several implementations, but typically, the user does\n    not implement new transports; rather, the platform provides some\n    useful transports that are implemented using the platform's best\n    practices.\n\n    The user never instantiates a transport directly; they call a\n    utility function, passing it a protocol factory and other\n    information necessary to create the transport and protocol.  (E.g.\n    EventLoop.create_connection() or EventLoop.create_server().)\n\n    The utility function will asynchronously create a transport and a\n    protocol and hook them up by calling the protocol's\n    connection_made() method, passing it the transport.\n\n    The implementation here raises NotImplemented for every method\n    except writelines(), which calls write() in a loop.\n    """
       \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     DatagramTransport
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               BaseTransport
    )
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """Interface for datagram (UDP) transports."""
        
     stmt
      compound_stmt
       funcdef
        def
        name
         sendto
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            data
          ,
          tfpdef
           name
            addr
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Send data to the transport.\n\n        This does not block; it buffers the data and arranges for it\n        to be sent out asynchronously.\n        addr is target socket address.\n        If addr is None use target address pointed on transport creation.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         abort
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Close the transport immediately.\n\n        Buffered data will be lost.  No more data will be received.\n        The protocol's connection_lost() method will (eventually) be\n        called with None as its argument.\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     SubprocessTransport
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               BaseTransport
    )
    :
    block
      
         
     stmt
      compound_stmt
       funcdef
        def
        name
         get_pid
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Get subprocess id."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_returncode
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Get subprocess returncode.\n\n        See also\n        http://docs.python.org/3/library/subprocess#subprocess.Popen.returncode\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_pipe_transport
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            fd
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Get transport for pipe with number fd."""
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         send_signal
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            signal
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Send signal to subprocess.\n\n        See also:\n        docs.python.org/3/library/subprocess#subprocess.Popen.send_signal\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         terminate
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Stop the subprocess.\n\n        Alias for close() method.\n\n        On Posix OSs the method sends SIGTERM to the subprocess.\n        On Windows the Win32 API function TerminateProcess()\n         is called to stop the subprocess.\n\n        See also:\n        http://docs.python.org/3/library/subprocess#subprocess.Popen.terminate\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         kill
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      """Kill the subprocess.\n\n        On Posix OSs the function sends SIGKILL to the subprocess.\n        On Windows kill() is an alias for terminate().\n\n        See also:\n        http://docs.python.org/3/library/subprocess#subprocess.Popen.kill\n        """
            
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 stmt
  compound_stmt
   classdef
    class
    name
     _FlowControlMixin
    (
    arglist
     argument
      test
       or_test
        and_test
         not_test
          comparison
           expr
            atom_expr
             atom
              name
               Transport
    )
    :
    block
      
         
     stmt
      simple_stmts
       simple_stmt
        expr_stmt
         testlist_star_expr
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  """All the logic for (write) flow control in a mix-in base class.\n\n    The subclass must implement get_write_buffer_size().  It must call\n    _maybe_pause_protocol() whenever the write buffer size increases,\n    and _maybe_resume_protocol() whenever it decreases.  It may also\n    override set_write_buffer_limits() (e.g. to specify different\n    defaults).\n\n    The subclass constructor must call super().__init__(extra).  This\n    will call set_write_buffer_limits().\n\n    The user may call set_write_buffer_limits() and\n    get_write_buffer_size(), and their protocol's pause_writing() and\n    resume_writing() may be called.\n    """
        
     stmt
      compound_stmt
       funcdef
        def
        name
         __init__
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            extra
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
          ,
          tfpdef
           name
            loop
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       super
                     trailer
                      (
                      )
                     trailer
                      .
                      name
                       __init__
                     trailer
                      (
                      arglist
                       argument
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 extra
                      )
            
         stmt
          simple_stmts
           simple_stmt
            assert_stmt
             assert
             test
              or_test
               and_test
                not_test
                 comparison
                  expr
                   atom_expr
                    atom
                     name
                      loop
                  comp_op
                   is
                   not
                  expr
                   atom_expr
                    atom
                     None
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _loop
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       loop
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _protocol_paused
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      False
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _set_write_buffer_limits
                     trailer
                      (
                      )
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         _maybe_pause_protocol
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       size
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       get_write_buffer_size
                     trailer
                      (
                      )
            
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  atom_expr
                   atom
                    name
                     size
                 comp_op
                  <=
                 expr
                  atom_expr
                   atom
                    name
                     self
                   trailer
                    .
                    name
                     _high_water
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                flow_stmt
                 return_stmt
                  return
                
              
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                not
                not_test
                 comparison
                  expr
                   atom_expr
                    atom
                     name
                      self
                    trailer
                     .
                     name
                      _protocol_paused
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                expr_stmt
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          name
                           self
                         trailer
                          .
                          name
                           _protocol_paused
                 =
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          True
                
             stmt
              compound_stmt
               try_stmt
                try
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               self
                             trailer
                              .
                              name
                               _protocol
                             trailer
                              .
                              name
                               pause_writing
                             trailer
                              (
                              )
                    
                  
                except_clause
                 except
                 test
                  or_test
                   and_test
                    not_test
                     comparison
                      expr
                       atom_expr
                        atom
                         name
                          Exception
                 as
                 name
                  exc
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               self
                             trailer
                              .
                              name
                               _loop
                             trailer
                              .
                              name
                               call_exception_handler
                             trailer
                              (
                              arglist
                               argument
                                test
                                 or_test
                                  and_test
                                   not_test
                                    comparison
                                     expr
                                      atom_expr
                                       atom
                                        {
                                        dictorsetmaker
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'message'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'protocol.pause_writing() failed'
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'exception'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  exc
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'transport'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  self
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'protocol'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  self
                                                trailer
                                                 .
                                                 name
                                                  _protocol
                                         ,
                                        }
                              )
                    
                  
              
          
     stmt
      compound_stmt
       funcdef
        def
        name
         _maybe_resume_protocol
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  atom_expr
                   atom
                    (
                    testlist_comp
                     test
                      or_test
                       and_test
                        not_test
                         comparison
                          expr
                           atom_expr
                            atom
                             name
                              self
                            trailer
                             .
                             name
                              _protocol_paused
                        and
                        not_test
                         comparison
                          expr
                           atom_expr
                            atom
                             name
                              self
                            trailer
                             .
                             name
                              get_write_buffer_size
                            trailer
                             (
                             )
                          comp_op
                           <=
                          expr
                           atom_expr
                            atom
                             name
                              self
                            trailer
                             .
                             name
                              _low_water
                    )
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                expr_stmt
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          name
                           self
                         trailer
                          .
                          name
                           _protocol_paused
                 =
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          False
                
             stmt
              compound_stmt
               try_stmt
                try
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               self
                             trailer
                              .
                              name
                               _protocol
                             trailer
                              .
                              name
                               resume_writing
                             trailer
                              (
                              )
                    
                  
                except_clause
                 except
                 test
                  or_test
                   and_test
                    not_test
                     comparison
                      expr
                       atom_expr
                        atom
                         name
                          Exception
                 as
                 name
                  exc
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               self
                             trailer
                              .
                              name
                               _loop
                             trailer
                              .
                              name
                               call_exception_handler
                             trailer
                              (
                              arglist
                               argument
                                test
                                 or_test
                                  and_test
                                   not_test
                                    comparison
                                     expr
                                      atom_expr
                                       atom
                                        {
                                        dictorsetmaker
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'message'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'protocol.resume_writing() failed'
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'exception'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  exc
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'transport'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  self
                                         ,
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 'protocol'
                                         :
                                         test
                                          or_test
                                           and_test
                                            not_test
                                             comparison
                                              expr
                                               atom_expr
                                                atom
                                                 name
                                                  self
                                                trailer
                                                 .
                                                 name
                                                  _protocol
                                         ,
                                        }
                              )
                    
                  
              
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_write_buffer_limits
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             return_stmt
              return
              testlist
               test
                or_test
                 and_test
                  not_test
                   comparison
                    expr
                     atom_expr
                      atom
                       (
                       testlist_comp
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 self
                               trailer
                                .
                                name
                                 _low_water
                        ,
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 self
                               trailer
                                .
                                name
                                 _high_water
                       )
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         _set_write_buffer_limits
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            high
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
          ,
          tfpdef
           name
            low
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  atom_expr
                   atom
                    name
                     high
                 comp_op
                  is
                 expr
                  atom_expr
                   atom
                    None
            :
            block
              
                         
             stmt
              compound_stmt
               if_stmt
                if
                test
                 or_test
                  and_test
                   not_test
                    comparison
                     expr
                      atom_expr
                       atom
                        name
                         low
                     comp_op
                      is
                     expr
                      atom_expr
                       atom
                        None
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               high
                     =
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            expr
                             atom_expr
                              atom
                               64
                            *
                            expr
                             atom_expr
                              atom
                               1024
                    
                  
                else
                :
                block
                  
                                 
                 stmt
                  simple_stmts
                   simple_stmt
                    expr_stmt
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            atom_expr
                             atom
                              name
                               high
                     =
                     testlist_star_expr
                      test
                       or_test
                        and_test
                         not_test
                          comparison
                           expr
                            expr
                             atom_expr
                              atom
                               4
                            *
                            expr
                             atom_expr
                              atom
                               name
                                low
                    
                  
              
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                comparison
                 expr
                  atom_expr
                   atom
                    name
                     low
                 comp_op
                  is
                 expr
                  atom_expr
                   atom
                    None
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                expr_stmt
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          name
                           low
                 =
                 testlist_star_expr
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        expr
                         atom_expr
                          atom
                           name
                            high
                        //
                        expr
                         atom_expr
                          atom
                           4
                
              
         stmt
          compound_stmt
           if_stmt
            if
            test
             or_test
              and_test
               not_test
                not
                not_test
                 comparison
                  expr
                   atom_expr
                    atom
                     name
                      high
                  comp_op
                   >=
                  expr
                   atom_expr
                    atom
                     name
                      low
                  comp_op
                   >=
                  expr
                   atom_expr
                    atom
                     0
            :
            block
              
                         
             stmt
              simple_stmts
               simple_stmt
                flow_stmt
                 raise_stmt
                  raise
                  test
                   or_test
                    and_test
                     not_test
                      comparison
                       expr
                        atom_expr
                         atom
                          name
                           ValueError
                         trailer
                          (
                          arglist
                           argument
                            test
                             or_test
                              and_test
                               not_test
                                comparison
                                 expr
                                  expr
                                   atom_expr
                                    atom
                                     'high (%r) must be >= low (%r) must be >= 0'
                                  %
                                  expr
                                   atom_expr
                                    atom
                                     (
                                     testlist_comp
                                      test
                                       or_test
                                        and_test
                                         not_test
                                          comparison
                                           expr
                                            atom_expr
                                             atom
                                              name
                                               high
                                      ,
                                      test
                                       or_test
                                        and_test
                                         not_test
                                          comparison
                                           expr
                                            atom_expr
                                             atom
                                              name
                                               low
                                     )
                          )
                
              
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _high_water
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       high
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _low_water
             =
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       low
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         set_write_buffer_limits
        parameters
         (
         typedargslist
          tfpdef
           name
            self
          ,
          tfpdef
           name
            high
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
          ,
          tfpdef
           name
            low
          =
          test
           or_test
            and_test
             not_test
              comparison
               expr
                atom_expr
                 atom
                  None
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _set_write_buffer_limits
                     trailer
                      (
                      arglist
                       argument
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 high
                        =
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 high
                       ,
                       argument
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 low
                        =
                        test
                         or_test
                          and_test
                           not_test
                            comparison
                             expr
                              atom_expr
                               atom
                                name
                                 low
                      )
            
         stmt
          simple_stmts
           simple_stmt
            expr_stmt
             testlist_star_expr
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       self
                     trailer
                      .
                      name
                       _maybe_pause_protocol
                     trailer
                      (
                      )
            
          
     stmt
      compound_stmt
       funcdef
        def
        name
         get_write_buffer_size
        parameters
         (
         typedargslist
          tfpdef
           name
            self
         )
        :
        block
          
                 
         stmt
          simple_stmts
           simple_stmt
            flow_stmt
             raise_stmt
              raise
              test
               or_test
                and_test
                 not_test
                  comparison
                   expr
                    atom_expr
                     atom
                      name
                       NotImplementedError
           \n
         \n
     \n
 <EOF>
