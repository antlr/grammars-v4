(compilationUnit (typeDeclaration (classOrInterfaceModifier (annotation @ (annotationName (qualifiedName IsTest)))) (classOrInterfaceModifier private) (classDeclaration class TestRunAs (classBody { (classBodyDeclaration (modifier (classOrInterfaceModifier public)) (modifier (classOrInterfaceModifier static)) (modifier (classOrInterfaceModifier testMethod)) (memberDeclaration (methodDeclaration void testRunAs (formalParameters ( )) (methodBody (block { (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (type_ (classOrInterfaceType String)) (variableDeclarators (variableDeclarator (variableDeclaratorId uniqueUserName) = (variableInitializer (expression (expression (expression (primary (literal 'tester'))) + (expression (expression (expression (expression (expression (primary DateTime)) . now) ( )) . getTime) ( ))) + (expression (primary (literal '@testing.org')))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (type_ (classOrInterfaceType Profile)) (variableDeclarators (variableDeclarator (variableDeclaratorId standard) = (variableInitializer (expression (primary [SELECT Id FROM Profile WHERE Name = 'Standard User'])))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (type_ (classOrInterfaceType User)) (variableDeclarators (variableDeclarator (variableDeclaratorId testUser) = (variableInitializer (expression new (creator (createdName User) (classCreatorRest (arguments ( ))))))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . Alias) = (expression (primary (literal 'tester'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . Email) = (expression (primary (literal 'testUser123@example.com'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . EmailEncodingKey) = (expression (primary (literal 'UTF-8'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . LastName) = (expression (primary (literal 'Tester'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . LanguageLocaleKey) = (expression (primary (literal 'en_US'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . LocaleSidKey) = (expression (primary (literal 'en_US'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . ProfileId) = (expression (expression (primary standard)) . Id))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . TimeZoneSidKey) = (expression (primary (literal 'America/Los_Angeles'))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary testUser)) . UserName) = (expression (primary uniqueUserName)))) ;)) (blockStatement (statement System.runAs ( (expression (primary testUser)) ) (statement (block { (blockStatement (statement (statementExpression (expression (expression (expression (primary System)) . debug) ( (expressionList (expression (expression (primary (literal 'Current User: '))) + (expression (expression (expression (primary UserInfo)) . getUserName) ( )))) ))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary System)) . debug) ( (expressionList (expression (expression (primary (literal 'Current Profile: '))) + (expression (expression (expression (primary UserInfo)) . getProfileId) ( )))) ))) ;)) })))) }))))) }))) <EOF>)