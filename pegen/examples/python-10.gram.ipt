start
 grammar_
  metas
   meta
    @
    name
     trailer
    string
     '''\nvoid *\n_PyPegen_parse(Parser *p)\n{\n    // Initialize keywords\n    p->keywords = reserved_keywords;\n    p->n_keyword_lists = n_keyword_lists;\n    p->soft_keywords = soft_keywords;\n\n    // Run parser\n    void *result = NULL;\n    if (p->start_rule == Py_file_input) {\n        result = file_rule(p);\n    } else if (p->start_rule == Py_single_input) {\n        result = interactive_rule(p);\n    } else if (p->start_rule == Py_eval_input) {\n        result = eval_rule(p);\n    } else if (p->start_rule == Py_func_type_input) {\n        result = func_type_rule(p);\n    } else if (p->start_rule == Py_fstring_input) {\n        result = fstring_rule(p);\n    }\n\n    return result;\n}\n\n// The end\n'''
    newline
  rules
   rule_
    rulename
     name
      file
     attribute
      [
      name
       mod_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               name
                statements
         ]
       named_item
        item
         atom
          name
           ENDMARKER
      action
       { _PyPegen_make_module(p, a) }
    newline
   rule_
    rulename
     name
      interactive
     attribute
      [
      name
       mod_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           statement_newline
      action
       { _PyAST_Interactive(a, p->arena) }
    newline
   rule_
    rulename
     name
      eval
     attribute
      [
      name
       mod_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           expressions
       named_item
        item
         atom
          name
           NEWLINE
         *
       named_item
        item
         atom
          name
           ENDMARKER
      action
       { _PyAST_Expression(a, p->arena) }
    newline
   rule_
    rulename
     name
      func_type
     attribute
      [
      name
       mod_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '('
       named_item
        attribute_name
         name
          a
         =
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               name
                type_expressions
         ]
       named_item
        item
         atom
          string
           ')'
       named_item
        item
         atom
          string
           '->'
       named_item
        attribute_name
         name
          b
         =
        item
         atom
          name
           expression
       named_item
        item
         atom
          name
           NEWLINE
         *
       named_item
        item
         atom
          name
           ENDMARKER
      action
       { _PyAST_FunctionType(a, b, p->arena) }
    newline
   rule_
    rulename
     name
      fstring
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          name
           star_expressions
    newline
   rule_
    rulename
     name
      type_expressions
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ','
          .
          atom
           name
            expression
          +
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            expression
       action
        {\n        (asdl_expr_seq*)_PyPegen_seq_append_to_end(\n            p,\n            CHECK(asdl_seq*, _PyPegen_seq_append_to_end(p, a, b)),\n            c) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ','
          .
          atom
           name
            expression
          +
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        { (asdl_expr_seq*)_PyPegen_seq_append_to_end(p, a, b) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ','
          .
          atom
           name
            expression
          +
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        { (asdl_expr_seq*)_PyPegen_seq_append_to_end(p, a, b) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        {\n        (asdl_expr_seq*)_PyPegen_seq_append_to_end(\n            p,\n            CHECK(asdl_seq*, _PyPegen_singleton_seq(p, a)),\n            b) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { (asdl_expr_seq*)_PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { (asdl_expr_seq*)_PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            expression
          +
       action
        {a}
     newline
    dedent
   rule_
    rulename
     name
      statements
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           statement
         +
      action
       { (asdl_stmt_seq*)_PyPegen_seq_flatten(p, a) }
    newline
   rule_
    rulename
     name
      statement
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           compound_stmt
      action
       { (asdl_stmt_seq*)_PyPegen_singleton_seq(p, a) }
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_stmt_seq
          *
          ]
          =
         item
          atom
           name
            simple_stmts
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      statement_newline
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            compound_stmt
        named_item
         item
          atom
           name
            NEWLINE
       action
        { (asdl_stmt_seq*)_PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            simple_stmts
      |
      alt
       items
        named_item
         item
          atom
           name
            NEWLINE
       action
        { (asdl_stmt_seq*)_PyPegen_singleton_seq(p, CHECK(stmt_ty, _PyAST_Pass(EXTRA))) }
      |
      alt
       items
        named_item
         item
          atom
           name
            ENDMARKER
       action
        { _PyPegen_interactive_exit(p) }
     newline
    dedent
   rule_
    rulename
     name
      simple_stmts
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            simple_stmt
        named_item
         lookahead
          !
          atom
           string
            ';'
        named_item
         item
          atom
           name
            NEWLINE
       action
        { (asdl_stmt_seq*)_PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_stmt_seq
          *
          ]
          =
         item
          atom
           string
            ';'
          .
          atom
           name
            simple_stmt
          +
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ';'
          ]
        named_item
         item
          atom
           name
            NEWLINE
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      simple_stmt
     attribute
      [
      name
       stmt_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            assignment
      |
      alt
       items
        named_item
         attribute_name
          name
           e
          =
         item
          atom
           name
            star_expressions
       action
        { _PyAST_Expr(e, EXTRA) }
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'return'
        named_item
         item
          atom
           name
            return_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'import'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'from'
           )
        named_item
         item
          atom
           name
            import_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'raise'
        named_item
         item
          atom
           name
            raise_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'pass'
       action
        { _PyAST_Pass(EXTRA) }
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'del'
        named_item
         item
          atom
           name
            del_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'yield'
        named_item
         item
          atom
           name
            yield_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'assert'
        named_item
         item
          atom
           name
            assert_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'break'
       action
        { _PyAST_Break(EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'continue'
       action
        { _PyAST_Continue(EXTRA) }
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'global'
        named_item
         item
          atom
           name
            global_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'nonlocal'
        named_item
         item
          atom
           name
            nonlocal_stmt
     newline
    dedent
   rule_
    rulename
     name
      compound_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'def'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '@'
            |
            alt
             items
              named_item
               item
                atom
                 name
                  ASYNC
           )
        named_item
         item
          atom
           name
            function_def
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'if'
        named_item
         item
          atom
           name
            if_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'class'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '@'
           )
        named_item
         item
          atom
           name
            class_def
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'with'
            |
            alt
             items
              named_item
               item
                atom
                 name
                  ASYNC
           )
        named_item
         item
          atom
           name
            with_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'for'
            |
            alt
             items
              named_item
               item
                atom
                 name
                  ASYNC
           )
        named_item
         item
          atom
           name
            for_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'try'
        named_item
         item
          atom
           name
            try_stmt
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            'while'
        named_item
         item
          atom
           name
            while_stmt
      |
      alt
       items
        named_item
         item
          atom
           name
            match_stmt
     newline
    dedent
   rule_
    rulename
     name
      assignment
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '='
             named_item
              attribute_name
               name
                d
               =
              item
               atom
                name
                 annotated_rhs
            action
             { d }
          ]
       action
        {\n        CHECK_VERSION(\n            stmt_ty,\n            6,\n            "Variable annotation syntax is",\n            _PyAST_AnnAssign(CHECK(expr_ty, _PyPegen_set_expr_context(p, a, Store)), b, c, 1, EXTRA)\n        ) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '('
              named_item
               attribute_name
                name
                 b
                =
               item
                atom
                 name
                  single_target
              named_item
               item
                atom
                 string
                  ')'
             action
              { b }
            |
            alt
             items
              named_item
               item
                atom
                 name
                  single_subscript_attribute_target
           )
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '='
             named_item
              attribute_name
               name
                d
               =
              item
               atom
                name
                 annotated_rhs
            action
             { d }
          ]
       action
        {\n        CHECK_VERSION(stmt_ty, 6, "Variable annotations syntax is", _PyAST_AnnAssign(a, b, c, 0, EXTRA)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               attribute_name
                name
                 z
                =
               item
                atom
                 name
                  star_targets
              named_item
               item
                atom
                 string
                  '='
             action
              { z }
           )
          +
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  yield_expr
            |
            alt
             items
              named_item
               item
                atom
                 name
                  star_expressions
           )
        named_item
         lookahead
          !
          atom
           string
            '='
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 TYPE_COMMENT
          ]
       action
        {\n         _PyAST_Assign(a, b, NEW_TYPE_COMMENT(p, tc), EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            single_target
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            augassign
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  yield_expr
            |
            alt
             items
              named_item
               item
                atom
                 name
                  star_expressions
           )
       action
        {\n         _PyAST_AugAssign(a, b->kind, c, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_assignment
     newline
    dedent
   rule_
    rulename
     name
      augassign
     attribute
      [
      name
       AugOperator
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '+='
       action
        { _PyPegen_augoperator(p, Add) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '-='
       action
        { _PyPegen_augoperator(p, Sub) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*='
       action
        { _PyPegen_augoperator(p, Mult) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '@='
       action
        { CHECK_VERSION(AugOperator*, 5, "The '@' operator is", _PyPegen_augoperator(p, MatMult)) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '/='
       action
        { _PyPegen_augoperator(p, Div) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '%='
       action
        { _PyPegen_augoperator(p, Mod) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '&='
       action
        { _PyPegen_augoperator(p, BitAnd) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '|='
       action
        { _PyPegen_augoperator(p, BitOr) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '^='
       action
        { _PyPegen_augoperator(p, BitXor) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '<<='
       action
        { _PyPegen_augoperator(p, LShift) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '>>='
       action
        { _PyPegen_augoperator(p, RShift) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '**='
       action
        { _PyPegen_augoperator(p, Pow) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '//='
       action
        { _PyPegen_augoperator(p, FloorDiv) }
     newline
    dedent
   rule_
    rulename
     name
      global_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'global'
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          string
           ','
         .
         atom
          name
           NAME
         +
      action
       {\n    _PyAST_Global(CHECK(asdl_identifier_seq*, _PyPegen_map_names_to_ids(p, a)), EXTRA) }
    newline
   rule_
    rulename
     name
      nonlocal_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'nonlocal'
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          string
           ','
         .
         atom
          name
           NAME
         +
      action
       {\n    _PyAST_Nonlocal(CHECK(asdl_identifier_seq*, _PyPegen_map_names_to_ids(p, a)), EXTRA) }
    newline
   rule_
    rulename
     name
      yield_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          y
         =
        item
         atom
          name
           yield_expr
      action
       { _PyAST_Expr(y, EXTRA) }
    newline
   rule_
    rulename
     name
      assert_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'assert'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           expression
       named_item
        attribute_name
         name
          b
         =
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               string
                ','
            named_item
             attribute_name
              name
               z
              =
             item
              atom
               name
                expression
           action
            { z }
         ]
      action
       { _PyAST_Assert(a, b, EXTRA) }
    newline
   rule_
    rulename
     name
      del_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'del'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            del_targets
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ';'
            |
            alt
             items
              named_item
               item
                atom
                 name
                  NEWLINE
           )
       action
        { _PyAST_Delete(a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_del_stmt
     newline
    dedent
   rule_
    rulename
     name
      import_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          name
           import_name
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            import_from
     newline
    dedent
   rule_
    rulename
     name
      import_name
     attribute
      [
      name
       stmt_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'import'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           dotted_as_names
      action
       { _PyAST_Import(a, EXTRA) }
    newline
   rule_
    rulename
     name
      import_from
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'from'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '.'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '...'
           )
          *
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            dotted_name
        named_item
         item
          atom
           string
            'import'
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            import_from_targets
       action
        {\n        _PyAST_ImportFrom(b->v.Name.id, c, _PyPegen_seq_count_dots(a), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'from'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '.'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '...'
           )
          +
        named_item
         item
          atom
           string
            'import'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            import_from_targets
       action
        {\n        _PyAST_ImportFrom(NULL, b, _PyPegen_seq_count_dots(a), EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      import_from_targets
     attribute
      [
      name
       asdl_alias_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            import_from_as_names
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
        named_item
         item
          atom
           string
            ')'
       action
        { a }
      |
      alt
       items
        named_item
         item
          atom
           name
            import_from_as_names
        named_item
         lookahead
          !
          atom
           string
            ','
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
       action
        { (asdl_alias_seq*)_PyPegen_singleton_seq(p, CHECK(alias_ty, _PyPegen_alias_for_star(p, EXTRA))) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_import_from_targets
     newline
    dedent
   rule_
    rulename
     name
      import_from_as_names
     attribute
      [
      name
       asdl_alias_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_alias_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            import_from_as_name
          +
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      import_from_as_name
     attribute
      [
      name
       alias_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 NAME
            action
             { z }
          ]
       action
        { _PyAST_alias(a->v.Name.id,\n                                               (b) ? ((expr_ty) b)->v.Name.id : NULL,\n                                               EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      dotted_as_names
     attribute
      [
      name
       asdl_alias_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_alias_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            dotted_as_name
          +
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      dotted_as_name
     attribute
      [
      name
       alias_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            dotted_name
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 NAME
            action
             { z }
          ]
       action
        { _PyAST_alias(a->v.Name.id,\n                                                      (b) ? ((expr_ty) b)->v.Name.id : NULL,\n                                                      EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      dotted_name
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            dotted_name
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
       action
        { _PyPegen_join_names_with_dot(p, a, b) }
      |
      alt
       items
        named_item
         item
          atom
           name
            NAME
     newline
    dedent
   rule_
    rulename
     name
      if_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_if_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            elif_stmt
       action
        {\n        _PyAST_If(a, b, CHECK(asdl_stmt_seq*, _PyPegen_singleton_seq(p, c)), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
       action
        { _PyAST_If(a, b, c, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      elif_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_elif_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'elif'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            elif_stmt
       action
        {\n        _PyAST_If(a, b, CHECK(asdl_stmt_seq*, _PyPegen_singleton_seq(p, c)), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'elif'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
       action
        { _PyAST_If(a, b, c, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      else_block
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_else_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'else'
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        { b }
     newline
    dedent
   rule_
    rulename
     name
      while_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_while_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'while'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
       action
        { _PyAST_While(a, b, c, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      for_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_for_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'for'
        named_item
         attribute_name
          name
           t
          =
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           ex
          =
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 TYPE_COMMENT
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           el
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
       action
        {\n        _PyAST_For(t, ex, b, el, NEW_TYPE_COMMENT(p, tc), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
        named_item
         item
          atom
           string
            'for'
        named_item
         attribute_name
          name
           t
          =
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           ex
          =
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 TYPE_COMMENT
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           el
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
       action
        {\n        CHECK_VERSION(stmt_ty, 5, "Async for loops are", _PyAST_AsyncFor(t, ex, b, el, NEW_TYPE_COMMENT(p, tc), EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_for_target
     newline
    dedent
   rule_
    rulename
     name
      with_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_with_stmt_indent
      |
      alt
       items
        named_item
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_withitem_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            with_item
          +
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n        CHECK_VERSION(stmt_ty, 9, "Parenthesized context managers are", _PyAST_With(a, b, NULL, EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'with'
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_withitem_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            with_item
          +
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 TYPE_COMMENT
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n        _PyAST_With(a, b, NEW_TYPE_COMMENT(p, tc), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
        named_item
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_withitem_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            with_item
          +
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n       CHECK_VERSION(stmt_ty, 5, "Async with statements are", _PyAST_AsyncWith(a, b, NULL, EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
        named_item
         item
          atom
           string
            'with'
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_withitem_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            with_item
          +
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 TYPE_COMMENT
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n       CHECK_VERSION(stmt_ty, 5, "Async with statements are", _PyAST_AsyncWith(a, b, NEW_TYPE_COMMENT(p, tc), EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_with_stmt
     newline
    dedent
   rule_
    rulename
     name
      with_item
     attribute
      [
      name
       withitem_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           e
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            'as'
        named_item
         attribute_name
          name
           t
          =
         item
          atom
           name
            star_target
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ')'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ':'
           )
       action
        { _PyAST_withitem(e, t, p->arena) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_with_item
      |
      alt
       items
        named_item
         attribute_name
          name
           e
          =
         item
          atom
           name
            expression
       action
        { _PyAST_withitem(e, NULL, p->arena) }
     newline
    dedent
   rule_
    rulename
     name
      try_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_try_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'try'
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           f
          =
         item
          atom
           name
            finally_block
       action
        { _PyAST_Try(b, NULL, NULL, f, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'try'
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
        named_item
         attribute_name
          name
           ex
          [
          name
           asdl_excepthandler_seq
          *
          ]
          =
         item
          atom
           name
            except_block
          +
        named_item
         attribute_name
          name
           el
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 else_block
          ]
        named_item
         attribute_name
          name
           f
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 finally_block
          ]
       action
        { _PyAST_Try(b, ex, el, f, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      except_block
     attribute
      [
      name
       excepthandler_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_except_stmt_indent
      |
      alt
       items
        named_item
         item
          atom
           string
            'except'
        named_item
         attribute_name
          name
           e
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           t
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 NAME
            action
             { z }
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n        _PyAST_ExceptHandler(e, (t) ? ((expr_ty) t)->v.Name.id : NULL, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'except'
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        { _PyAST_ExceptHandler(NULL, NULL, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_except_stmt
     newline
    dedent
   rule_
    rulename
     name
      finally_block
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_finally_stmt
      |
      alt
       items
        named_item
         item
          atom
           string
            'finally'
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            block
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      match_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            "match"
        named_item
         attribute_name
          name
           subject
          =
         item
          atom
           name
            subject_expr
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         item
          atom
           name
            INDENT
        named_item
         attribute_name
          name
           cases
          [
          name
           asdl_match_case_seq
          *
          ]
          =
         item
          atom
           name
            case_block
          +
        named_item
         item
          atom
           name
            DEDENT
       action
        {\n        CHECK_VERSION(stmt_ty, 10, "Pattern matching is", _PyAST_Match(subject, cases, EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_match_stmt
     newline
    dedent
   rule_
    rulename
     name
      subject_expr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            star_named_expression
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           values
          =
         item
          atom
           name
            star_named_expressions
          ?
       action
        {\n        _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, value, values)), Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            named_expression
     newline
    dedent
   rule_
    rulename
     name
      case_block
     attribute
      [
      name
       match_case_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_case_block
      |
      alt
       items
        named_item
         item
          atom
           string
            "case"
        named_item
         attribute_name
          name
           pattern
          =
         item
          atom
           name
            patterns
        named_item
         attribute_name
          name
           guard
          =
         item
          atom
           name
            guard
          ?
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           body
          =
         item
          atom
           name
            block
       action
        {\n        _PyAST_match_case(pattern, guard, body, p->arena) }
     newline
    dedent
   rule_
    rulename
     name
      guard
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'if'
       named_item
        attribute_name
         name
          guard
         =
        item
         atom
          name
           named_expression
      action
       { guard }
    newline
   rule_
    rulename
     name
      patterns
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           patterns
          [
          name
           asdl_pattern_seq
          *
          ]
          =
         item
          atom
           name
            open_sequence_pattern
       action
        {\n        _PyAST_MatchSequence(patterns, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            pattern
     newline
    dedent
   rule_
    rulename
     name
      pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            as_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            or_pattern
     newline
    dedent
   rule_
    rulename
     name
      as_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           pattern
          =
         item
          atom
           name
            or_pattern
        named_item
         item
          atom
           string
            'as'
        named_item
         attribute_name
          name
           target
          =
         item
          atom
           name
            pattern_capture_target
       action
        {\n        _PyAST_MatchAs(pattern, target->v.Name.id, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_as_pattern
     newline
    dedent
   rule_
    rulename
     name
      or_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           patterns
          [
          name
           asdl_pattern_seq
          *
          ]
          =
         item
          atom
           string
            '|'
          .
          atom
           name
            closed_pattern
          +
       action
        {\n        asdl_seq_LEN(patterns) == 1 ? asdl_seq_GET(patterns, 0) : _PyAST_MatchOr(patterns, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      closed_pattern
     attribute
      [
      name
       pattern_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            literal_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            capture_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            wildcard_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            value_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            group_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            sequence_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            mapping_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            class_pattern
     newline
    dedent
   rule_
    rulename
     name
      literal_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            signed_number
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '+'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '-'
           )
       action
        { _PyAST_MatchValue(value, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            complex_number
       action
        { _PyAST_MatchValue(value, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            strings
       action
        { _PyAST_MatchValue(value, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'None'
       action
        { _PyAST_MatchSingleton(Py_None, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'True'
       action
        { _PyAST_MatchSingleton(Py_True, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'False'
       action
        { _PyAST_MatchSingleton(Py_False, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      literal_expr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            signed_number
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '+'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '-'
           )
      |
      alt
       items
        named_item
         item
          atom
           name
            complex_number
      |
      alt
       items
        named_item
         item
          atom
           name
            strings
      |
      alt
       items
        named_item
         item
          atom
           string
            'None'
       action
        { _PyAST_Constant(Py_None, NULL, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'True'
       action
        { _PyAST_Constant(Py_True, NULL, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'False'
       action
        { _PyAST_Constant(Py_False, NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      complex_number
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           real
          =
         item
          atom
           name
            signed_real_number
        named_item
         item
          atom
           string
            '+'
        named_item
         attribute_name
          name
           imag
          =
         item
          atom
           name
            imaginary_number
       action
        {\n        _PyAST_BinOp(real, Add, imag, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           real
          =
         item
          atom
           name
            signed_real_number
        named_item
         item
          atom
           string
            '-'
        named_item
         attribute_name
          name
           imag
          =
         item
          atom
           name
            imaginary_number
       action
        {\n        _PyAST_BinOp(real, Sub, imag, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      signed_number
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            NUMBER
      |
      alt
       items
        named_item
         item
          atom
           string
            '-'
        named_item
         attribute_name
          name
           number
          =
         item
          atom
           name
            NUMBER
       action
        { _PyAST_UnaryOp(USub, number, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      signed_real_number
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            real_number
      |
      alt
       items
        named_item
         item
          atom
           string
            '-'
        named_item
         attribute_name
          name
           real
          =
         item
          atom
           name
            real_number
       action
        { _PyAST_UnaryOp(USub, real, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      real_number
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           real
          =
         item
          atom
           name
            NUMBER
       action
        { _PyPegen_ensure_real(p, real) }
     newline
    dedent
   rule_
    rulename
     name
      imaginary_number
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           imag
          =
         item
          atom
           name
            NUMBER
       action
        { _PyPegen_ensure_imaginary(p, imag) }
     newline
    dedent
   rule_
    rulename
     name
      capture_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           target
          =
         item
          atom
           name
            pattern_capture_target
       action
        { _PyAST_MatchAs(NULL, target->v.Name.id, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      pattern_capture_target
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         lookahead
          !
          atom
           string
            "_"
        named_item
         attribute_name
          name
           name
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '.'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '('
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '='
           )
       action
        {\n        _PyPegen_set_expr_context(p, name, Store) }
     newline
    dedent
   rule_
    rulename
     name
      wildcard_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            "_"
       action
        { _PyAST_MatchAs(NULL, NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      value_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           attr
          =
         item
          atom
           name
            attr
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '.'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '('
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '='
           )
       action
        { _PyAST_MatchValue(attr, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      attr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           attr
          =
         item
          atom
           name
            NAME
       action
        {\n        _PyAST_Attribute(value, attr->v.Name.id, Load, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      name_or_attr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            attr
      |
      alt
       items
        named_item
         item
          atom
           name
            NAME
     newline
    dedent
   rule_
    rulename
     name
      group_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           pattern
          =
         item
          atom
           name
            pattern
        named_item
         item
          atom
           string
            ')'
       action
        { pattern }
     newline
    dedent
   rule_
    rulename
     name
      sequence_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           name
            maybe_sequence_pattern
          ?
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_MatchSequence(patterns, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           name
            open_sequence_pattern
          ?
        named_item
         item
          atom
           string
            ')'
       action
        { _PyAST_MatchSequence(patterns, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      open_sequence_pattern
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           pattern
          =
         item
          atom
           name
            maybe_star_pattern
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           name
            maybe_sequence_pattern
          ?
       action
        {\n        _PyPegen_seq_insert_in_front(p, pattern, patterns) }
     newline
    dedent
   rule_
    rulename
     name
      maybe_sequence_pattern
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           string
            ','
          .
          atom
           name
            maybe_star_pattern
          +
        named_item
         item
          atom
           string
            ','
          ?
       action
        { patterns }
     newline
    dedent
   rule_
    rulename
     name
      maybe_star_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            star_pattern
      |
      alt
       items
        named_item
         item
          atom
           name
            pattern
     newline
    dedent
   rule_
    rulename
     name
      star_pattern
     attribute
      [
      name
       pattern_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           target
          =
         item
          atom
           name
            pattern_capture_target
       action
        {\n        _PyAST_MatchStar(target->v.Name.id, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         item
          atom
           name
            wildcard_pattern
       action
        {\n        _PyAST_MatchStar(NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      mapping_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         item
          atom
           string
            '}'
       action
        {\n        _PyAST_MatchMapping(NULL, NULL, NULL, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           rest
          =
         item
          atom
           name
            double_star_pattern
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            '}'
       action
        {\n        _PyAST_MatchMapping(NULL, NULL, rest->v.Name.id, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           items
          =
         item
          atom
           name
            items_pattern
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           rest
          =
         item
          atom
           name
            double_star_pattern
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            '}'
       action
        {\n        _PyAST_MatchMapping(\n            CHECK(asdl_expr_seq*, _PyPegen_get_pattern_keys(p, items)),\n            CHECK(asdl_pattern_seq*, _PyPegen_get_patterns(p, items)),\n            rest->v.Name.id,\n            EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           items
          =
         item
          atom
           name
            items_pattern
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            '}'
       action
        {\n        _PyAST_MatchMapping(\n            CHECK(asdl_expr_seq*, _PyPegen_get_pattern_keys(p, items)),\n            CHECK(asdl_pattern_seq*, _PyPegen_get_patterns(p, items)),\n            NULL,\n            EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      items_pattern
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            ','
          .
          atom
           name
            key_value_pattern
          +
     newline
    dedent
   rule_
    rulename
     name
      key_value_pattern
     attribute
      [
      name
       KeyPatternPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           key
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  literal_expr
            |
            alt
             items
              named_item
               item
                atom
                 name
                  attr
           )
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           pattern
          =
         item
          atom
           name
            pattern
       action
        {\n        _PyPegen_key_pattern_pair(p, key, pattern) }
     newline
    dedent
   rule_
    rulename
     name
      double_star_pattern
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           target
          =
         item
          atom
           name
            pattern_capture_target
       action
        { target }
     newline
    dedent
   rule_
    rulename
     name
      class_pattern
     attribute
      [
      name
       pattern_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           cls
          =
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '('
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_MatchClass(cls, NULL, NULL, NULL, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           cls
          =
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           name
            positional_patterns
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_MatchClass(cls, patterns, NULL, NULL, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           cls
          =
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           keywords
          =
         item
          atom
           name
            keyword_patterns
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_MatchClass(\n            cls, NULL,\n            CHECK(asdl_identifier_seq*, _PyPegen_map_names_to_ids(p,\n                CHECK(asdl_expr_seq*, _PyPegen_get_pattern_keys(p, keywords)))),\n            CHECK(asdl_pattern_seq*, _PyPegen_get_patterns(p, keywords)),\n            EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           cls
          =
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           patterns
          =
         item
          atom
           name
            positional_patterns
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           keywords
          =
         item
          atom
           name
            keyword_patterns
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_MatchClass(\n            cls,\n            patterns,\n            CHECK(asdl_identifier_seq*, _PyPegen_map_names_to_ids(p,\n                CHECK(asdl_expr_seq*, _PyPegen_get_pattern_keys(p, keywords)))),\n            CHECK(asdl_pattern_seq*, _PyPegen_get_patterns(p, keywords)),\n            EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_class_pattern
     newline
    dedent
   rule_
    rulename
     name
      positional_patterns
     attribute
      [
      name
       asdl_pattern_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           args
          [
          name
           asdl_pattern_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            pattern
          +
       action
        { args }
     newline
    dedent
   rule_
    rulename
     name
      keyword_patterns
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            ','
          .
          atom
           name
            keyword_pattern
          +
     newline
    dedent
   rule_
    rulename
     name
      keyword_pattern
     attribute
      [
      name
       KeyPatternPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           arg
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '='
        named_item
         attribute_name
          name
           value
          =
         item
          atom
           name
            pattern
       action
        { _PyPegen_key_pattern_pair(p, arg, value) }
     newline
    dedent
   rule_
    rulename
     name
      return_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'return'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_expressions
          ]
       action
        { _PyAST_Return(a, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      raise_stmt
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'raise'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'from'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 expression
            action
             { z }
          ]
       action
        { _PyAST_Raise(a, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'raise'
       action
        { _PyAST_Raise(NULL, NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      function_def
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           d
          =
         item
          atom
           name
            decorators
        named_item
         attribute_name
          name
           f
          =
         item
          atom
           name
            function_def_raw
       action
        { _PyPegen_function_def_decorators(p, d, f) }
      |
      alt
       items
        named_item
         item
          atom
           name
            function_def_raw
     newline
    dedent
   rule_
    rulename
     name
      function_def_raw
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_def_raw
      |
      alt
       items
        named_item
         item
          atom
           string
            'def'
        named_item
         attribute_name
          name
           n
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           params
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 params
          ]
        named_item
         item
          atom
           string
            ')'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '->'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 expression
            action
             { z }
          ]
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 func_type_comment
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n        _PyAST_FunctionDef(n->v.Name.id,\n                        (params) ? params : CHECK(arguments_ty, _PyPegen_empty_arguments(p)),\n                        b, NULL, a, NEW_TYPE_COMMENT(p, tc), EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
        named_item
         item
          atom
           string
            'def'
        named_item
         attribute_name
          name
           n
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           params
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 params
          ]
        named_item
         item
          atom
           string
            ')'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '->'
             named_item
              attribute_name
               name
                z
               =
              item
               atom
                name
                 expression
            action
             { z }
          ]
        named_item
         forced_atom
          &
          &
          atom
           string
            ':'
        named_item
         attribute_name
          name
           tc
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 func_type_comment
          ]
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            block
       action
        {\n        CHECK_VERSION(\n            stmt_ty,\n            5,\n            "Async functions are",\n            _PyAST_AsyncFunctionDef(n->v.Name.id,\n                            (params) ? params : CHECK(arguments_ty, _PyPegen_empty_arguments(p)),\n                            b, NULL, a, NEW_TYPE_COMMENT(p, tc), EXTRA)\n        ) }
     newline
    dedent
   rule_
    rulename
     name
      func_type_comment
     attribute
      [
      name
       Token
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         attribute_name
          name
           t
          =
         item
          atom
           name
            TYPE_COMMENT
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  NEWLINE
              named_item
               item
                atom
                 name
                  INDENT
           )
       action
        { t }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_double_type_comments
      |
      alt
       items
        named_item
         item
          atom
           name
            TYPE_COMMENT
     newline
    dedent
   rule_
    rulename
     name
      params
     attribute
      [
      name
       arguments_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_parameters
      |
      alt
       items
        named_item
         item
          atom
           name
            parameters
     newline
    dedent
   rule_
    rulename
     name
      parameters
     attribute
      [
      name
       arguments_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            slash_no_default
        named_item
         attribute_name
          name
           b
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            param_no_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            param_with_default
          *
        named_item
         attribute_name
          name
           d
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_etc
          ]
       action
        {\n        CHECK_VERSION(arguments_ty, 8, "Positional-only parameters are", _PyPegen_make_arguments(p, a, NULL, b, c, d)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            slash_with_default
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_with_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_etc
          ]
       action
        {\n        CHECK_VERSION(arguments_ty, 8, "Positional-only parameters are", _PyPegen_make_arguments(p, NULL, a, NULL, b, c)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            param_no_default
          +
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_with_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_etc
          ]
       action
        {\n        _PyPegen_make_arguments(p, NULL, NULL, a, b, c) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param_with_default
          +
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_etc
          ]
       action
        { _PyPegen_make_arguments(p, NULL, NULL, NULL, a, b)}
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_etc
       action
        { _PyPegen_make_arguments(p, NULL, NULL, NULL, NULL, a) }
     newline
    dedent
   rule_
    rulename
     name
      slash_no_default
     attribute
      [
      name
       asdl_arg_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            param_no_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         item
          atom
           string
            ','
       action
        { a }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            param_no_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      slash_with_default
     attribute
      [
      name
       SlashWithDefault
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param_no_default
          *
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_with_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         item
          atom
           string
            ','
       action
        { _PyPegen_slash_with_default(p, (asdl_arg_seq *)a, b) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param_no_default
          *
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_with_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { _PyPegen_slash_with_default(p, (asdl_arg_seq *)a, b) }
     newline
    dedent
   rule_
    rulename
     name
      star_etc
     attribute
      [
      name
       StarEtc
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param_no_default
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_maybe_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 kwds
          ]
       action
        {\n        _PyPegen_star_etc(p, a, b, c) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            param_maybe_default
          +
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 kwds
          ]
       action
        {\n        _PyPegen_star_etc(p, NULL, b, c) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            kwds
       action
        { _PyPegen_star_etc(p, NULL, NULL, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_star_etc
     newline
    dedent
   rule_
    rulename
     name
      kwds
     attribute
      [
      name
       arg_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '**'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           param_no_default
      action
       { a }
    newline
   rule_
    rulename
     name
      param_no_default
     attribute
      [
      name
       arg_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
       action
        { _PyPegen_add_type_comment_to_arg(p, a, tc) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { _PyPegen_add_type_comment_to_arg(p, a, tc) }
     newline
    dedent
   rule_
    rulename
     name
      param_with_default
     attribute
      [
      name
       NameDefaultPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
       action
        { _PyPegen_name_default_pair(p, a, c, tc) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { _PyPegen_name_default_pair(p, a, c, tc) }
     newline
    dedent
   rule_
    rulename
     name
      param_maybe_default
     attribute
      [
      name
       NameDefaultPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
          ?
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
       action
        { _PyPegen_name_default_pair(p, a, c, tc) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
          ?
        named_item
         attribute_name
          name
           tc
          =
         item
          atom
           name
            TYPE_COMMENT
          ?
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { _PyPegen_name_default_pair(p, a, c, tc) }
     newline
    dedent
   rule_
    rulename
     name
      param
     attribute
      [
      name
       arg_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           NAME
       named_item
        attribute_name
         name
          b
         =
        item
         atom
          name
           annotation
         ?
      action
       { _PyAST_arg(a->v.Name.id, b, NULL, EXTRA) }
    newline
   rule_
    rulename
     name
      annotation
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           ':'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           expression
      action
       { a }
    newline
   rule_
    rulename
     name
      default
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '='
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           expression
      action
       { a }
    newline
   rule_
    rulename
     name
      decorators
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          (
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '@'
             named_item
              attribute_name
               name
                f
               =
              item
               atom
                name
                 named_expression
             named_item
              item
               atom
                name
                 NEWLINE
            action
             { f }
          )
         +
      action
       { a }
    newline
   rule_
    rulename
     name
      class_def
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            decorators
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            class_def_raw
       action
        { _PyPegen_class_def_decorators(p, a, b) }
      |
      alt
       items
        named_item
         item
          atom
           name
            class_def_raw
     newline
    dedent
   rule_
    rulename
     name
      class_def_raw
     attribute
      [
      name
       stmt_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_class_def_raw
      |
      alt
       items
        named_item
         item
          atom
           string
            'class'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '('
             named_item
              attribute_name
               name
                z
               =
              item
               [
               alts
                alt
                 items
                  named_item
                   item
                    atom
                     name
                      arguments
               ]
             named_item
              item
               atom
                string
                 ')'
            action
             { z }
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            block
       action
        {\n        _PyAST_ClassDef(a->v.Name.id,\n                     (b) ? ((expr_ty) b)->v.Call.args : NULL,\n                     (b) ? ((expr_ty) b)->v.Call.keywords : NULL,\n                     c, NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      block
     attribute
      [
      name
       asdl_stmt_seq
      *
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         item
          atom
           name
            INDENT
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            statements
        named_item
         item
          atom
           name
            DEDENT
       action
        { a }
      |
      alt
       items
        named_item
         item
          atom
           name
            simple_stmts
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_block
     newline
    dedent
   rule_
    rulename
     name
      star_expressions
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  star_expression
             action
              { c }
           )
          +
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
       action
        {\n        _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, a, b)), Load, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expression
        named_item
         item
          atom
           string
            ','
       action
        { _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_singleton_seq(p, a)), Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            star_expression
     newline
    dedent
   rule_
    rulename
     name
      star_expression
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
       action
        { _PyAST_Starred(a, Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
     newline
    dedent
   rule_
    rulename
     name
      star_named_expressions
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          string
           ','
         .
         atom
          name
           star_named_expression
         +
       named_item
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               string
                ','
         ]
      action
       { a }
    newline
   rule_
    rulename
     name
      star_named_expression
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
       action
        { _PyAST_Starred(a, Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            named_expression
     newline
    dedent
   rule_
    rulename
     name
      assignment_expression
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            ':='
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        {\n        CHECK_VERSION(expr_ty, 8, "Assignment expressions are",\n        _PyAST_NamedExpr(CHECK(expr_ty, _PyPegen_set_expr_context(p, a, Store)), b, EXTRA)) }
     newline
    dedent
   rule_
    rulename
     name
      named_expression
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            assignment_expression
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_named_expression
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         lookahead
          !
          atom
           string
            ':='
     newline
    dedent
   rule_
    rulename
     name
      annotated_rhs
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          name
           yield_expr
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            star_expressions
     newline
    dedent
   rule_
    rulename
     name
      expressions
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  expression
             action
              { c }
           )
          +
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
       action
        {\n        _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, a, b)), Load, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ','
       action
        { _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_singleton_seq(p, a)), Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
     newline
    dedent
   rule_
    rulename
     name
      expression
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_expression
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_legacy_expression
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            disjunction
        named_item
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            disjunction
        named_item
         item
          atom
           string
            'else'
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            expression
       action
        { _PyAST_IfExp(b, a, c, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            disjunction
      |
      alt
       items
        named_item
         item
          atom
           name
            lambdef
     newline
    dedent
   rule_
    rulename
     name
      lambdef
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'lambda'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_params
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        {\n        _PyAST_Lambda((a) ? a : CHECK(arguments_ty, _PyPegen_empty_arguments(p)), b, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      lambda_params
     attribute
      [
      name
       arguments_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_lambda_parameters
      |
      alt
       items
        named_item
         item
          atom
           name
            lambda_parameters
     newline
    dedent
   rule_
    rulename
     name
      lambda_parameters
     attribute
      [
      name
       arguments_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_slash_no_default
        named_item
         attribute_name
          name
           b
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            lambda_param_no_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            lambda_param_with_default
          *
        named_item
         attribute_name
          name
           d
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_star_etc
          ]
       action
        {\n        CHECK_VERSION(arguments_ty, 8, "Positional-only parameters are", _PyPegen_make_arguments(p, a, NULL, b, c, d)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_slash_with_default
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_with_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_star_etc
          ]
       action
        {\n        CHECK_VERSION(arguments_ty, 8, "Positional-only parameters are", _PyPegen_make_arguments(p, NULL, a, NULL, b, c)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            lambda_param_no_default
          +
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_with_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_star_etc
          ]
       action
        {\n        _PyPegen_make_arguments(p, NULL, NULL, a, b, c) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param_with_default
          +
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_star_etc
          ]
       action
        { _PyPegen_make_arguments(p, NULL, NULL, NULL, a, b)}
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_star_etc
       action
        { _PyPegen_make_arguments(p, NULL, NULL, NULL, NULL, a) }
     newline
    dedent
   rule_
    rulename
     name
      lambda_slash_no_default
     attribute
      [
      name
       asdl_arg_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            lambda_param_no_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         item
          atom
           string
            ','
       action
        { a }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_arg_seq
          *
          ]
          =
         item
          atom
           name
            lambda_param_no_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         lookahead
          &
          atom
           string
            ':'
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      lambda_slash_with_default
     attribute
      [
      name
       SlashWithDefault
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param_no_default
          *
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_with_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         item
          atom
           string
            ','
       action
        { _PyPegen_slash_with_default(p, (asdl_arg_seq *)a, b) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param_no_default
          *
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_with_default
          +
        named_item
         item
          atom
           string
            '/'
        named_item
         lookahead
          &
          atom
           string
            ':'
       action
        { _PyPegen_slash_with_default(p, (asdl_arg_seq *)a, b) }
     newline
    dedent
   rule_
    rulename
     name
      lambda_star_etc
     attribute
      [
      name
       StarEtc
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param_no_default
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_maybe_default
          *
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_kwds
          ]
       action
        {\n        _PyPegen_star_etc(p, a, b, c) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            lambda_param_maybe_default
          +
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 lambda_kwds
          ]
       action
        {\n        _PyPegen_star_etc(p, NULL, b, c) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_kwds
       action
        { _PyPegen_star_etc(p, NULL, NULL, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_lambda_star_etc
     newline
    dedent
   rule_
    rulename
     name
      lambda_kwds
     attribute
      [
      name
       arg_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '**'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           lambda_param_no_default
      action
       { a }
    newline
   rule_
    rulename
     name
      lambda_param_no_default
     attribute
      [
      name
       arg_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         item
          atom
           string
            ','
       action
        { a }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         lookahead
          &
          atom
           string
            ':'
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      lambda_param_with_default
     attribute
      [
      name
       NameDefaultPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
        named_item
         item
          atom
           string
            ','
       action
        { _PyPegen_name_default_pair(p, a, c, NULL) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
        named_item
         lookahead
          &
          atom
           string
            ':'
       action
        { _PyPegen_name_default_pair(p, a, c, NULL) }
     newline
    dedent
   rule_
    rulename
     name
      lambda_param_maybe_default
     attribute
      [
      name
       NameDefaultPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
          ?
        named_item
         item
          atom
           string
            ','
       action
        { _PyPegen_name_default_pair(p, a, c, NULL) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            default
          ?
        named_item
         lookahead
          &
          atom
           string
            ':'
       action
        { _PyPegen_name_default_pair(p, a, c, NULL) }
     newline
    dedent
   rule_
    rulename
     name
      lambda_param
     attribute
      [
      name
       arg_ty
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           NAME
      action
       { _PyAST_arg(a->v.Name.id, NULL, NULL, EXTRA) }
    newline
   rule_
    rulename
     name
      disjunction
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            conjunction
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'or'
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  conjunction
             action
              { c }
           )
          +
       action
        { _PyAST_BoolOp(\n        Or,\n        CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, a, b)),\n        EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            conjunction
     newline
    dedent
   rule_
    rulename
     name
      conjunction
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            inversion
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'and'
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  inversion
             action
              { c }
           )
          +
       action
        { _PyAST_BoolOp(\n        And,\n        CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, a, b)),\n        EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            inversion
     newline
    dedent
   rule_
    rulename
     name
      inversion
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'not'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            inversion
       action
        { _PyAST_UnaryOp(Not, a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            comparison
     newline
    dedent
   rule_
    rulename
     name
      comparison
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            compare_op_bitwise_or_pair
          +
       action
        {\n        _PyAST_Compare(\n            a,\n            CHECK(asdl_int_seq*, _PyPegen_get_cmpops(p, b)),\n            CHECK(asdl_expr_seq*, _PyPegen_get_exprs(p, b)),\n            EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            bitwise_or
     newline
    dedent
   rule_
    rulename
     name
      compare_op_bitwise_or_pair
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            eq_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            noteq_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            lte_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            lt_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            gte_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            gt_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            notin_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            in_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            isnot_bitwise_or
      |
      alt
       items
        named_item
         item
          atom
           name
            is_bitwise_or
     newline
    dedent
   rule_
    rulename
     name
      eq_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '=='
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, Eq, a) }
    newline
   rule_
    rulename
     name
      noteq_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               attribute_name
                name
                 tok
                =
               item
                atom
                 string
                  '!='
             action
              { _PyPegen_check_barry_as_flufl(p, tok) ? NULL : tok}
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
       action
        {_PyPegen_cmpop_expr_pair(p, NotEq, a) }
     newline
    dedent
   rule_
    rulename
     name
      lte_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '<='
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, LtE, a) }
    newline
   rule_
    rulename
     name
      lt_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '<'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, Lt, a) }
    newline
   rule_
    rulename
     name
      gte_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '>='
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, GtE, a) }
    newline
   rule_
    rulename
     name
      gt_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '>'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, Gt, a) }
    newline
   rule_
    rulename
     name
      notin_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'not'
       named_item
        item
         atom
          string
           'in'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, NotIn, a) }
    newline
   rule_
    rulename
     name
      in_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'in'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, In, a) }
    newline
   rule_
    rulename
     name
      isnot_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'is'
       named_item
        item
         atom
          string
           'not'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, IsNot, a) }
    newline
   rule_
    rulename
     name
      is_bitwise_or
     attribute
      [
      name
       CmpopExprPair
      *
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           'is'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           bitwise_or
      action
       { _PyPegen_cmpop_expr_pair(p, Is, a) }
    newline
   rule_
    rulename
     name
      bitwise_or
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
        named_item
         item
          atom
           string
            '|'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            bitwise_xor
       action
        { _PyAST_BinOp(a, BitOr, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            bitwise_xor
     newline
    dedent
   rule_
    rulename
     name
      bitwise_xor
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_xor
        named_item
         item
          atom
           string
            '^'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            bitwise_and
       action
        { _PyAST_BinOp(a, BitXor, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            bitwise_and
     newline
    dedent
   rule_
    rulename
     name
      bitwise_and
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_and
        named_item
         item
          atom
           string
            '&'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            shift_expr
       action
        { _PyAST_BinOp(a, BitAnd, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            shift_expr
     newline
    dedent
   rule_
    rulename
     name
      shift_expr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            shift_expr
        named_item
         item
          atom
           string
            '<<'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            sum
       action
        { _PyAST_BinOp(a, LShift, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            shift_expr
        named_item
         item
          atom
           string
            '>>'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            sum
       action
        { _PyAST_BinOp(a, RShift, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            sum
     newline
    dedent
   rule_
    rulename
     name
      sum
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            sum
        named_item
         item
          atom
           string
            '+'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            term
       action
        { _PyAST_BinOp(a, Add, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            sum
        named_item
         item
          atom
           string
            '-'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            term
       action
        { _PyAST_BinOp(a, Sub, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            term
     newline
    dedent
   rule_
    rulename
     name
      term
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            term
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { _PyAST_BinOp(a, Mult, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            term
        named_item
         item
          atom
           string
            '/'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { _PyAST_BinOp(a, Div, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            term
        named_item
         item
          atom
           string
            '//'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { _PyAST_BinOp(a, FloorDiv, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            term
        named_item
         item
          atom
           string
            '%'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { _PyAST_BinOp(a, Mod, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            term
        named_item
         item
          atom
           string
            '@'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { CHECK_VERSION(expr_ty, 5, "The '@' operator is", _PyAST_BinOp(a, MatMult, b, EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            factor
     newline
    dedent
   rule_
    rulename
     name
      factor
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '+'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            factor
       action
        { _PyAST_UnaryOp(UAdd, a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '-'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            factor
       action
        { _PyAST_UnaryOp(USub, a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '~'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            factor
       action
        { _PyAST_UnaryOp(Invert, a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            power
     newline
    dedent
   rule_
    rulename
     name
      power
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            await_primary
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            factor
       action
        { _PyAST_BinOp(a, Pow, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            await_primary
     newline
    dedent
   rule_
    rulename
     name
      await_primary
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            AWAIT
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            primary
       action
        { CHECK_VERSION(expr_ty, 5, "Await expressions are", _PyAST_Await(a, EXTRA)) }
      |
      alt
       items
        named_item
         item
          atom
           name
            primary
     newline
    dedent
   rule_
    rulename
     name
      primary
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            primary
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
       action
        { _PyAST_Attribute(a, b->v.Name.id, Load, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            primary
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            genexp
       action
        { _PyAST_Call(a, CHECK(asdl_expr_seq*, (asdl_expr_seq*)_PyPegen_singleton_seq(p, b)), NULL, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            primary
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 arguments
          ]
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_Call(a,\n                 (b) ? ((expr_ty) b)->v.Call.args : NULL,\n                 (b) ? ((expr_ty) b)->v.Call.keywords : NULL,\n                 EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            primary
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            slices
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_Subscript(a, b, Load, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            atom
     newline
    dedent
   rule_
    rulename
     name
      slices
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            slice
        named_item
         lookahead
          !
          atom
           string
            ','
       action
        { a }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           name
            slice
          +
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
       action
        { _PyAST_Tuple(a, Load, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      slice
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 expression
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 expression
          ]
        named_item
         attribute_name
          name
           c
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ':'
             named_item
              attribute_name
               name
                d
               =
              item
               [
               alts
                alt
                 items
                  named_item
                   item
                    atom
                     name
                      expression
               ]
            action
             { d }
          ]
       action
        { _PyAST_Slice(a, b, c, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      atom
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            NAME
      |
      alt
       items
        named_item
         item
          atom
           string
            'True'
       action
        { _PyAST_Constant(Py_True, NULL, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'False'
       action
        { _PyAST_Constant(Py_False, NULL, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'None'
       action
        { _PyAST_Constant(Py_None, NULL, EXTRA) }
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           name
            STRING
        named_item
         item
          atom
           name
            strings
      |
      alt
       items
        named_item
         item
          atom
           name
            NUMBER
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            '('
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  tuple
            |
            alt
             items
              named_item
               item
                atom
                 name
                  group
            |
            alt
             items
              named_item
               item
                atom
                 name
                  genexp
           )
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            '['
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  list
            |
            alt
             items
              named_item
               item
                atom
                 name
                  listcomp
           )
      |
      alt
       items
        named_item
         lookahead
          &
          atom
           string
            '{'
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  dict
            |
            alt
             items
              named_item
               item
                atom
                 name
                  set
            |
            alt
             items
              named_item
               item
                atom
                 name
                  dictcomp
            |
            alt
             items
              named_item
               item
                atom
                 name
                  setcomp
           )
      |
      alt
       items
        named_item
         item
          atom
           string
            '...'
       action
        { _PyAST_Constant(Py_Ellipsis, NULL, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      strings
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           STRING
         +
      action
       { _PyPegen_concatenate_strings(p, a) }
    newline
   rule_
    rulename
     name
      list
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_named_expressions
          ]
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_List(a, Load, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      listcomp
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_ListComp(a, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_comprehension
     newline
    dedent
   rule_
    rulename
     name
      tuple
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              attribute_name
               name
                y
               =
              item
               atom
                name
                 star_named_expression
             named_item
              item
               atom
                string
                 ','
             named_item
              attribute_name
               name
                z
               =
              item
               [
               alts
                alt
                 items
                  named_item
                   item
                    atom
                     name
                      star_named_expressions
               ]
            action
             { _PyPegen_seq_insert_in_front(p, y, z) }
          ]
        named_item
         item
          atom
           string
            ')'
       action
        {\n        _PyAST_Tuple(a, Load, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      group
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  yield_expr
            |
            alt
             items
              named_item
               item
                atom
                 name
                  named_expression
           )
        named_item
         item
          atom
           string
            ')'
       action
        { a }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_group
     newline
    dedent
   rule_
    rulename
     name
      genexp
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  assignment_expression
            |
            alt
             items
              named_item
               item
                atom
                 name
                  expression
              named_item
               lookahead
                !
                atom
                 string
                  ':='
           )
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            ')'
       action
        { _PyAST_GeneratorExp(a, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_comprehension
     newline
    dedent
   rule_
    rulename
     name
      set
     attribute
      [
      name
       expr_ty
      ]
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '{'
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           star_named_expressions
       named_item
        item
         atom
          string
           '}'
      action
       { _PyAST_Set(a, EXTRA) }
    newline
   rule_
    rulename
     name
      setcomp
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            '}'
       action
        { _PyAST_SetComp(a, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_comprehension
     newline
    dedent
   rule_
    rulename
     name
      dict
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 double_starred_kvpairs
          ]
        named_item
         item
          atom
           string
            '}'
       action
        {\n        _PyAST_Dict(\n            CHECK(asdl_expr_seq*, _PyPegen_get_keys(p, a)),\n            CHECK(asdl_expr_seq*, _PyPegen_get_values(p, a)),\n            EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         item
          atom
           name
            invalid_double_starred_kvpairs
        named_item
         item
          atom
           string
            '}'
     newline
    dedent
   rule_
    rulename
     name
      dictcomp
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            kvpair
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            '}'
       action
        { _PyAST_DictComp(a->key, a->value, b, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_dict_comprehension
     newline
    dedent
   rule_
    rulename
     name
      double_starred_kvpairs
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          string
           ','
         .
         atom
          name
           double_starred_kvpair
         +
       named_item
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               string
                ','
         ]
      action
       { a }
    newline
   rule_
    rulename
     name
      double_starred_kvpair
     attribute
      [
      name
       KeyValuePair
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
       action
        { _PyPegen_key_value_pair(p, NULL, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            kvpair
     newline
    dedent
   rule_
    rulename
     name
      kvpair
     attribute
      [
      name
       KeyValuePair
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         =
        item
         atom
          name
           expression
       named_item
        item
         atom
          string
           ':'
       named_item
        attribute_name
         name
          b
         =
        item
         atom
          name
           expression
      action
       { _PyPegen_key_value_pair(p, a, b) }
    newline
   rule_
    rulename
     name
      for_if_clauses
     attribute
      [
      name
       asdl_comprehension_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_comprehension_seq
          *
          ]
          =
         item
          atom
           name
            for_if_clause
          +
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      for_if_clause
     attribute
      [
      name
       comprehension_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
        named_item
         item
          atom
           string
            'for'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            disjunction
        named_item
         attribute_name
          name
           c
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'if'
              named_item
               attribute_name
                name
                 z
                =
               item
                atom
                 name
                  disjunction
             action
              { z }
           )
          *
       action
        {\n        CHECK_VERSION(comprehension_ty, 6, "Async comprehensions are", _PyAST_comprehension(a, b, c, 1, p->arena)) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'for'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         lookahead
          ~
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            disjunction
        named_item
         attribute_name
          name
           c
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'if'
              named_item
               attribute_name
                name
                 z
                =
               item
                atom
                 name
                  disjunction
             action
              { z }
           )
          *
       action
        {\n        _PyAST_comprehension(a, b, c, 0, p->arena) }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_for_target
     newline
    dedent
   rule_
    rulename
     name
      yield_expr
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'yield'
        named_item
         item
          atom
           string
            'from'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { _PyAST_YieldFrom(a, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'yield'
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_expressions
          ]
       action
        { _PyAST_Yield(a, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      arguments
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            args
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
        named_item
         lookahead
          &
          atom
           string
            ')'
       action
        { a }
      |
      alt
       items
        named_item
         item
          atom
           name
            invalid_arguments
     newline
    dedent
   rule_
    rulename
     name
      args
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           asdl_expr_seq
          *
          ]
          =
         item
          atom
           string
            ','
          .
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  starred_expression
            |
            alt
             items
              named_item
               item
                atom
                 (
                 alts
                  alt
                   items
                    named_item
                     item
                      atom
                       name
                        assignment_expression
                  |
                  alt
                   items
                    named_item
                     item
                      atom
                       name
                        expression
                    named_item
                     lookahead
                      !
                      atom
                       string
                        ':='
                 )
              named_item
               lookahead
                !
                atom
                 string
                  '='
           )
          +
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
             named_item
              attribute_name
               name
                k
               =
              item
               atom
                name
                 kwargs
            action
             {k}
          ]
       action
        {\n        _PyPegen_collect_call_seqs(p, a, b, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            kwargs
       action
        { _PyAST_Call(_PyPegen_dummy_name(p),\n                          CHECK_NULL_ALLOWED(asdl_expr_seq*, _PyPegen_seq_extract_starred_exprs(p, a)),\n                          CHECK_NULL_ALLOWED(asdl_keyword_seq*, _PyPegen_seq_delete_starred_exprs(p, a)),\n                          EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      kwargs
     attribute
      [
      name
       asdl_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ','
          .
          atom
           name
            kwarg_or_starred
          +
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            ','
          .
          atom
           name
            kwarg_or_double_starred
          +
       action
        { _PyPegen_join_sequences(p, a, b) }
      |
      alt
       items
        named_item
         item
          atom
           string
            ','
          .
          atom
           name
            kwarg_or_starred
          +
      |
      alt
       items
        named_item
         item
          atom
           string
            ','
          .
          atom
           name
            kwarg_or_double_starred
          +
     newline
    dedent
   rule_
    rulename
     name
      starred_expression
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { _PyAST_Starred(a, Load, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      kwarg_or_starred
     attribute
      [
      name
       KeywordOrStarred
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_kwarg
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '='
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        {\n        _PyPegen_keyword_or_starred(p, CHECK(keyword_ty, _PyAST_keyword(a->v.Name.id, b, EXTRA)), 1) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            starred_expression
       action
        { _PyPegen_keyword_or_starred(p, a, 0) }
     newline
    dedent
   rule_
    rulename
     name
      kwarg_or_double_starred
     attribute
      [
      name
       KeywordOrStarred
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            invalid_kwarg
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '='
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression
       action
        {\n        _PyPegen_keyword_or_starred(p, CHECK(keyword_ty, _PyAST_keyword(a->v.Name.id, b, EXTRA)), 1) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '**'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { _PyPegen_keyword_or_starred(p, CHECK(keyword_ty, _PyAST_keyword(NULL, a, EXTRA)), 1) }
     newline
    dedent
   rule_
    rulename
     name
      star_targets
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_target
        named_item
         lookahead
          !
          atom
           string
            ','
       action
        { a }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_target
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  star_target
             action
              { c }
           )
          *
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
       action
        {\n        _PyAST_Tuple(CHECK(asdl_expr_seq*, _PyPegen_seq_insert_in_front(p, a, b)), Store, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      star_targets_list_seq
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          string
           ','
         .
         atom
          name
           star_target
         +
       named_item
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               string
                ','
         ]
      action
       { a }
    newline
   rule_
    rulename
     name
      star_targets_tuple_seq
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_target
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               attribute_name
                name
                 c
                =
               item
                atom
                 name
                  star_target
             action
              { c }
           )
          +
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 ','
          ]
       action
        { (asdl_expr_seq*) _PyPegen_seq_insert_in_front(p, a, b) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_target
        named_item
         item
          atom
           string
            ','
       action
        { (asdl_expr_seq*) _PyPegen_singleton_seq(p, a) }
     newline
    dedent
   rule_
    rulename
     name
      star_target
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               lookahead
                !
                atom
                 string
                  '*'
              named_item
               item
                atom
                 name
                  star_target
           )
       action
        {\n        _PyAST_Starred(CHECK(expr_ty, _PyPegen_set_expr_context(p, a, Store)), Store, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            target_with_star_atom
     newline
    dedent
   rule_
    rulename
     name
      target_with_star_atom
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Attribute(a, b->v.Name.id, Store, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            slices
        named_item
         item
          atom
           string
            ']'
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Subscript(a, b, Store, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            star_atom
     newline
    dedent
   rule_
    rulename
     name
      star_atom
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
       action
        { _PyPegen_set_expr_context(p, a, Store) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            target_with_star_atom
        named_item
         item
          atom
           string
            ')'
       action
        { _PyPegen_set_expr_context(p, a, Store) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_targets_tuple_seq
          ]
        named_item
         item
          atom
           string
            ')'
       action
        { _PyAST_Tuple(a, Store, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 star_targets_list_seq
          ]
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_List(a, Store, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      single_target
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            single_subscript_attribute_target
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
       action
        { _PyPegen_set_expr_context(p, a, Store) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            single_target
        named_item
         item
          atom
           string
            ')'
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      single_subscript_attribute_target
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Attribute(a, b->v.Name.id, Store, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            slices
        named_item
         item
          atom
           string
            ']'
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Subscript(a, b, Store, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      del_targets
     attribute
      [
      name
       asdl_expr_seq
      *
      ]
    :
    alts
     alt
      items
       named_item
        attribute_name
         name
          a
         [
         name
          asdl_expr_seq
         *
         ]
         =
        item
         atom
          string
           ','
         .
         atom
          name
           del_target
         +
       named_item
        item
         [
         alts
          alt
           items
            named_item
             item
              atom
               string
                ','
         ]
      action
       { a }
    newline
   rule_
    rulename
     name
      del_target
     attribute
      [
      name
       expr_ty
      ]
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Attribute(a, b->v.Name.id, Del, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            slices
        named_item
         item
          atom
           string
            ']'
        named_item
         lookahead
          !
          atom
           name
            t_lookahead
       action
        { _PyAST_Subscript(a, b, Del, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            del_t_atom
     newline
    dedent
   rule_
    rulename
     name
      del_t_atom
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
       action
        { _PyPegen_set_expr_context(p, a, Del) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            del_target
        named_item
         item
          atom
           string
            ')'
       action
        { _PyPegen_set_expr_context(p, a, Del) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 del_targets
          ]
        named_item
         item
          atom
           string
            ')'
       action
        { _PyAST_Tuple(a, Del, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           a
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 del_targets
          ]
        named_item
         item
          atom
           string
            ']'
       action
        { _PyAST_List(a, Del, EXTRA) }
     newline
    dedent
   rule_
    rulename
     name
      t_primary
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '.'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          &
          atom
           name
            t_lookahead
       action
        { _PyAST_Attribute(a, b->v.Name.id, Load, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '['
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            slices
        named_item
         item
          atom
           string
            ']'
        named_item
         lookahead
          &
          atom
           name
            t_lookahead
       action
        { _PyAST_Subscript(a, b, Load, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            genexp
        named_item
         lookahead
          &
          atom
           name
            t_lookahead
       action
        {\n        _PyAST_Call(a, CHECK(asdl_expr_seq*, (asdl_expr_seq*)_PyPegen_singleton_seq(p, b)), NULL, EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            t_primary
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           b
          =
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 arguments
          ]
        named_item
         item
          atom
           string
            ')'
        named_item
         lookahead
          &
          atom
           name
            t_lookahead
       action
        {\n        _PyAST_Call(a,\n                 (b) ? ((expr_ty) b)->v.Call.args : NULL,\n                 (b) ? ((expr_ty) b)->v.Call.keywords : NULL,\n                 EXTRA) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            atom
        named_item
         lookahead
          &
          atom
           name
            t_lookahead
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      t_lookahead
    :
    alts
     alt
      items
       named_item
        item
         atom
          string
           '('
     |
     alt
      items
       named_item
        item
         atom
          string
           '['
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '.'
     newline
    dedent
   rule_
    rulename
     name
      invalid_arguments
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            args
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           string
            '*'
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "iterable argument unpacking follows keyword argument unpacking") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            ','
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 args
           |
           alt
            items
             named_item
              item
               atom
                name
                 expression
             named_item
              item
               atom
                name
                 for_if_clauses
          ]
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, _PyPegen_get_last_comprehension_item(PyPegen_last_item(b, comprehension_ty)), "Generator expression must be parenthesized") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            '='
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "invalid syntax. Maybe you meant '==' or ':=' instead of '='?")}
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            args
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
       action
        { _PyPegen_nonparen_genexp_in_call(p, a, b) }
      |
      alt
       items
        named_item
         item
          atom
           name
            args
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, _PyPegen_get_last_comprehension_item(PyPegen_last_item(b, comprehension_ty)), "Generator expression must be parenthesized") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            args
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            args
       action
        { _PyPegen_arguments_parsing_error(p, a) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_kwarg
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          [
          name
           Token
          *
          ]
          =
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'True'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'False'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'None'
           )
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            '='
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "cannot assign to %s", PyBytes_AS_STRING(a->bytes)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            '='
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "invalid syntax. Maybe you meant '==' or ':=' instead of '='?")}
      |
      alt
       items
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  NAME
              named_item
               item
                atom
                 string
                  '='
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            '='
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(\n            a, b, "expression cannot contain assignment, perhaps you meant \"==\"?") }
     newline
    dedent
   rule_
    rulename
     name
      expression_without_invalid
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            disjunction
        named_item
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            disjunction
        named_item
         item
          atom
           string
            'else'
        named_item
         attribute_name
          name
           c
          =
         item
          atom
           name
            expression
       action
        { _PyAST_IfExp(b, a, c, EXTRA) }
      |
      alt
       items
        named_item
         item
          atom
           name
            disjunction
      |
      alt
       items
        named_item
         item
          atom
           name
            lambdef
     newline
    dedent
   rule_
    rulename
     name
      invalid_legacy_expression
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         lookahead
          !
          atom
           string
            '('
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            star_expressions
       action
        {\n        _PyPegen_check_legacy_stmt(p, a) ? RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b,\n            "Missing parentheses in call to '%U'. Did you mean %U(...)?", a->v.Name.id, a->v.Name.id) : NULL}
     newline
    dedent
   rule_
    rulename
     name
      invalid_expression
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  NAME
              named_item
               item
                atom
                 name
                  STRING
            |
            alt
             items
              named_item
               item
                atom
                 name
                  SOFT_KEYWORD
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            disjunction
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            expression_without_invalid
       action
        {\n        _PyPegen_check_legacy_stmt(p, a) ? NULL : p->tokens[p->mark-1]->level == 0 ? NULL :\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "invalid syntax. Perhaps you forgot a comma?") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            disjunction
        named_item
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            disjunction
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'else'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ':'
           )
       action
        { RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "expected 'else' after 'if' expression") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_named_expression
    memoflag
     (
     memo
     )
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ':='
        named_item
         item
          atom
           name
            expression
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(\n            a, "cannot use assignment expressions with %s", _PyPegen_get_expr_name(a)) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '='
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            bitwise_or
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '='
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ':='
           )
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "invalid syntax. Maybe you meant '==' or ':=' instead of '='?") }
      |
      alt
       items
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  list
            |
            alt
             items
              named_item
               item
                atom
                 name
                  tuple
            |
            alt
             items
              named_item
               item
                atom
                 name
                  genexp
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'True'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'None'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'False'
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            bitwise_or
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            '='
        named_item
         item
          atom
           name
            bitwise_or
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '='
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ':='
           )
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "cannot assign to %s here. Maybe you meant '==' instead of '='?",\n                                          _PyPegen_get_expr_name(a)) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_assignment
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            invalid_ann_assign_target
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            expression
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(\n            a,\n            "only single target (not %s) can be annotated",\n            _PyPegen_get_expr_name(a)\n        )}
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_named_expression
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            star_named_expressions
          *
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            expression
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "only single target (not tuple) can be annotated") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            expression
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "illegal target for annotation") }
      |
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  star_targets
              named_item
               item
                atom
                 string
                  '='
           )
          *
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           string
            '='
       action
        {\n        RAISE_SYNTAX_ERROR_INVALID_TARGET(STAR_TARGETS, a) }
      |
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  star_targets
              named_item
               item
                atom
                 string
                  '='
           )
          *
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            yield_expr
        named_item
         item
          atom
           string
            '='
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "assignment to yield expression not possible") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           name
            augassign
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  yield_expr
            |
            alt
             items
              named_item
               item
                atom
                 name
                  star_expressions
           )
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(\n            a,\n            "'%s' is an illegal expression for augmented assignment",\n            _PyPegen_get_expr_name(a)\n        )}
     newline
    dedent
   rule_
    rulename
     name
      invalid_ann_assign_target
     attribute
      [
      name
       expr_ty
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            list
      |
      alt
       items
        named_item
         item
          atom
           name
            tuple
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            invalid_ann_assign_target
        named_item
         item
          atom
           string
            ')'
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      invalid_del_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'del'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expressions
       action
        {\n        RAISE_SYNTAX_ERROR_INVALID_TARGET(DEL_TARGETS, a) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_block
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        { RAISE_INDENTATION_ERROR("expected an indented block") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_comprehension
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '['
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '('
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '{'
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            starred_expression
        named_item
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "iterable unpacking cannot be used in comprehension") }
      |
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '['
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '{'
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_named_expression
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           name
            star_named_expressions
        named_item
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, PyPegen_last_item(b, expr_ty),\n        "did you forget parentheses around the comprehension target?") }
      |
      alt
       items
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '['
            |
            alt
             items
              named_item
               item
                atom
                 string
                  '{'
           )
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_named_expression
        named_item
         attribute_name
          name
           b
          =
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            for_if_clauses
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_RANGE(a, b, "did you forget parentheses around the comprehension target?") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_dict_comprehension
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '{'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            '**'
        named_item
         item
          atom
           name
            bitwise_or
        named_item
         item
          atom
           name
            for_if_clauses
        named_item
         item
          atom
           string
            '}'
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "dict unpacking cannot be used in dict comprehension") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_parameters
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            param_no_default
          *
        named_item
         item
          atom
           name
            invalid_parameters_helper
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            param_no_default
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "non-default argument follows default argument") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_parameters_helper
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            slash_with_default
       action
        { _PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            param_with_default
          +
     newline
    dedent
   rule_
    rulename
     name
      invalid_lambda_parameters
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            lambda_param_no_default
          *
        named_item
         item
          atom
           name
            invalid_lambda_parameters_helper
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_param_no_default
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "non-default argument follows default argument") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_lambda_parameters_helper
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            lambda_slash_with_default
       action
        { _PyPegen_singleton_seq(p, a) }
      |
      alt
       items
        named_item
         item
          atom
           name
            lambda_param_with_default
          +
     newline
    dedent
   rule_
    rulename
     name
      invalid_star_etc
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            '*'
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ')'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               item
                atom
                 (
                 alts
                  alt
                   items
                    named_item
                     item
                      atom
                       string
                        ')'
                  |
                  alt
                   items
                    named_item
                     item
                      atom
                       string
                        '**'
                 )
           )
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "named arguments must follow bare *") }
      |
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            TYPE_COMMENT
       action
        { RAISE_SYNTAX_ERROR("bare * has associated type comment") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_lambda_star_etc
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '*'
        named_item
         item
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ':'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ','
              named_item
               item
                atom
                 (
                 alts
                  alt
                   items
                    named_item
                     item
                      atom
                       string
                        ':'
                  |
                  alt
                   items
                    named_item
                     item
                      atom
                       string
                        '**'
                 )
           )
       action
        { RAISE_SYNTAX_ERROR("named arguments must follow bare *") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_double_type_comments
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            TYPE_COMMENT
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         item
          atom
           name
            TYPE_COMMENT
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         item
          atom
           name
            INDENT
       action
        {\n        RAISE_SYNTAX_ERROR("Cannot have two type comments on def") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_with_item
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            'as'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ','
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ')'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ':'
           )
       action
        {\n        RAISE_SYNTAX_ERROR_INVALID_TARGET(STAR_TARGETS, a) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_for_target
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            ASYNC
          ?
        named_item
         item
          atom
           string
            'for'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            star_expressions
       action
        {\n        RAISE_SYNTAX_ERROR_INVALID_TARGET(FOR_TARGETS, a) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_group
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            starred_expression
        named_item
         item
          atom
           string
            ')'
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "cannot use starred expression here") }
      |
      alt
       items
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            '**'
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ')'
       action
        {\n        RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "cannot use double starred expression here") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_import_from_targets
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            import_from_as_names
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            NEWLINE
       action
        {\n        RAISE_SYNTAX_ERROR("trailing comma not allowed without surrounding parentheses") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_with_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            ','
          .
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  expression
              named_item
               item
                [
                alts
                 alt
                  items
                   named_item
                    item
                     atom
                      string
                       'as'
                   named_item
                    item
                     atom
                      name
                       star_target
                ]
           )
          +
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            '('
        named_item
         item
          atom
           string
            ','
          .
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  expressions
              named_item
               item
                [
                alts
                 alt
                  items
                   named_item
                    item
                     atom
                      string
                       'as'
                   named_item
                    item
                     atom
                      name
                       star_target
                ]
           )
          +
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_with_stmt_indent
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            ','
          .
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  expression
              named_item
               item
                [
                alts
                 alt
                  items
                   named_item
                    item
                     atom
                      string
                       'as'
                   named_item
                    item
                     atom
                      name
                       star_target
                ]
           )
          +
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'with' statement on line %d", a->lineno) }
      |
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'with'
        named_item
         item
          atom
           string
            '('
        named_item
         item
          atom
           string
            ','
          .
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 name
                  expressions
              named_item
               item
                [
                alts
                 alt
                  items
                   named_item
                    item
                     atom
                      string
                       'as'
                   named_item
                    item
                     atom
                      name
                       star_target
                ]
           )
          +
        named_item
         item
          atom
           string
            ','
          ?
        named_item
         item
          atom
           string
            ')'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'with' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_try_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'try'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'try' statement on line %d", a->lineno) }
      |
      alt
       items
        named_item
         item
          atom
           string
            'try'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            block
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  'except'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  'finally'
           )
       action
        { RAISE_SYNTAX_ERROR("expected 'except' or 'finally' block") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_except_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'except'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            expressions
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              item
               atom
                name
                 NAME
          ]
        named_item
         item
          atom
           string
            ':'
       action
        {\n        RAISE_SYNTAX_ERROR_STARTING_FROM(a, "multiple exception types must be parenthesized") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'except'
        named_item
         item
          atom
           name
            expression
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              item
               atom
                name
                 NAME
          ]
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'except'
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_finally_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'finally'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'finally' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_except_stmt_indent
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'except'
        named_item
         item
          atom
           name
            expression
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 'as'
             named_item
              item
               atom
                name
                 NAME
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'except' statement on line %d", a->lineno) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'except'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        { RAISE_INDENTATION_ERROR("expected an indented block after 'except' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_match_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            "match"
        named_item
         item
          atom
           name
            subject_expr
        named_item
         item
          atom
           name
            NEWLINE
       action
        { CHECK_VERSION(void*, 10, "Pattern matching is", RAISE_SYNTAX_ERROR("expected ':'") ) }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            "match"
        named_item
         attribute_name
          name
           subject
          =
         item
          atom
           name
            subject_expr
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'match' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_case_block
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            "case"
        named_item
         item
          atom
           name
            patterns
        named_item
         item
          atom
           name
            guard
          ?
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            "case"
        named_item
         item
          atom
           name
            patterns
        named_item
         item
          atom
           name
            guard
          ?
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'case' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_as_pattern
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            or_pattern
        named_item
         item
          atom
           string
            'as'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            "_"
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "cannot use '_' as a target") }
      |
      alt
       items
        named_item
         item
          atom
           name
            or_pattern
        named_item
         item
          atom
           string
            'as'
        named_item
         lookahead
          !
          atom
           name
            NAME
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "invalid pattern target") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_class_pattern
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           name
            name_or_attr
        named_item
         item
          atom
           string
            '('
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            invalid_class_argument_pattern
       action
        { RAISE_SYNTAX_ERROR_KNOWN_RANGE(\n        PyPegen_first_item(a, pattern_ty),\n        PyPegen_last_item(a, pattern_ty),\n        "positional patterns follow keyword patterns") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_class_argument_pattern
     attribute
      [
      name
       asdl_pattern_seq
      *
      ]
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 positional_patterns
             named_item
              item
               atom
                string
                 ','
          ]
        named_item
         item
          atom
           name
            keyword_patterns
        named_item
         item
          atom
           string
            ','
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            positional_patterns
       action
        { a }
     newline
    dedent
   rule_
    rulename
     name
      invalid_if_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'if'
        named_item
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'if'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'if' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_elif_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'elif'
        named_item
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'elif'
        named_item
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'elif' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_else_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'else'
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'else' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_while_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'while'
        named_item
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'while'
        named_item
         item
          atom
           name
            named_expression
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'while' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_for_stmt
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         item
          atom
           string
            'for'
        named_item
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'for'
        named_item
         item
          atom
           name
            star_targets
        named_item
         item
          atom
           string
            'in'
        named_item
         item
          atom
           name
            star_expressions
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after 'for' statement on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_def_raw
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 ASYNC
          ]
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'def'
        named_item
         item
          atom
           name
            NAME
        named_item
         item
          atom
           string
            '('
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                name
                 params
          ]
        named_item
         item
          atom
           string
            ')'
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '->'
             named_item
              item
               atom
                name
                 expression
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after function definition on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_class_def_raw
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            'class'
        named_item
         item
          atom
           name
            NAME
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '('
             named_item
              item
               [
               alts
                alt
                 items
                  named_item
                   item
                    atom
                     name
                      arguments
               ]
             named_item
              item
               atom
                string
                 ')'
          ]
        named_item
         item
          atom
           name
            NEWLINE
       action
        { RAISE_SYNTAX_ERROR("expected ':'") }
      |
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            'class'
        named_item
         item
          atom
           name
            NAME
        named_item
         item
          [
          alts
           alt
            items
             named_item
              item
               atom
                string
                 '('
             named_item
              item
               [
               alts
                alt
                 items
                  named_item
                   item
                    atom
                     name
                      arguments
               ]
             named_item
              item
               atom
                string
                 ')'
          ]
        named_item
         item
          atom
           string
            ':'
        named_item
         item
          atom
           name
            NEWLINE
        named_item
         lookahead
          !
          atom
           name
            INDENT
       action
        {\n        RAISE_INDENTATION_ERROR("expected an indented block after class definition on line %d", a->lineno) }
     newline
    dedent
   rule_
    rulename
     name
      invalid_double_starred_kvpairs
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         item
          atom
           string
            ','
          .
          atom
           name
            double_starred_kvpair
          +
        named_item
         item
          atom
           string
            ','
        named_item
         item
          atom
           name
            invalid_kvpair
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            '*'
        named_item
         item
          atom
           name
            bitwise_or
       action
        { RAISE_SYNTAX_ERROR_STARTING_FROM(a, "cannot use a starred expression in a dictionary value") }
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ':'
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '}'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ','
           )
       action
        { RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "expression expected after dictionary key and ':'") }
     newline
    dedent
   rule_
    rulename
     name
      invalid_kvpair
    :
    newline
    indent
    more_alts
     |
     alts
      alt
       items
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           name
            expression
        named_item
         lookahead
          !
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  ':'
           )
       action
        {\n        RAISE_ERROR_KNOWN_LOCATION(p, PyExc_SyntaxError, a->lineno, a->end_col_offset - 1, a->end_lineno, -1, "':' expected after dictionary key") }
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         item
          atom
           string
            ':'
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            '*'
        named_item
         item
          atom
           name
            bitwise_or
       action
        { RAISE_SYNTAX_ERROR_STARTING_FROM(a, "cannot use a starred expression in a dictionary value") }
      |
      alt
       items
        named_item
         item
          atom
           name
            expression
        named_item
         attribute_name
          name
           a
          =
         item
          atom
           string
            ':'
        named_item
         lookahead
          &
          atom
           (
           alts
            alt
             items
              named_item
               item
                atom
                 string
                  '}'
            |
            alt
             items
              named_item
               item
                atom
                 string
                  ','
           )
       action
        {RAISE_SYNTAX_ERROR_KNOWN_LOCATION(a, "expression expected after dictionary key and ':'") }
     newline
    dedent
 <EOF>
