input_
 prologue_declarations
  prologue_declaration
   %{\n#define YYSTYPE double\n#include <math.h>\n%}
  prologue_declaration
   grammar_declaration
    symbol_declaration
     %token
     token_decls
      token_decl
       id
        NUM
       int_opt
       alias
  prologue_declaration
   grammar_declaration
    symbol_declaration
     precedence_declarator
      %left
     token_decls_for_prec
      token_decl_for_prec
       id
        '-'
       int_opt
      token_decl_for_prec
       id
        '+'
       int_opt
  prologue_declaration
   grammar_declaration
    symbol_declaration
     precedence_declarator
      %left
     token_decls_for_prec
      token_decl_for_prec
       id
        '*'
       int_opt
      token_decl_for_prec
       id
        '/'
       int_opt
  prologue_declaration
   grammar_declaration
    symbol_declaration
     precedence_declarator
      %left
     token_decls_for_prec
      token_decl_for_prec
       id
        NEG
       int_opt
  prologue_declaration
   grammar_declaration
    symbol_declaration
     precedence_declarator
      %right
     token_decls_for_prec
      token_decl_for_prec
       id
        '^'
       int_opt
 %%
 bison_grammar
  bison_grammar
   bison_grammar
    rules_or_grammar_declaration
     rules
      id
       input
      named_ref_opt
      :
      rhses_1
       rhs
       |
       rhs
        symbol
         id
          input
        named_ref_opt
        symbol
         id
          line
        named_ref_opt
       ;
   rules_or_grammar_declaration
    rules
     id
      line
     named_ref_opt
     :
     rhses_1
      rhs
       symbol
        id
         '\n'
       named_ref_opt
      |
      rhs
       symbol
        id
         exp
       named_ref_opt
       symbol
        id
         '\n'
       named_ref_opt
       tag_opt
       actionBlock
        { printf ("\t%.10g\n", $1); }
       named_ref_opt
      ;
  rules_or_grammar_declaration
   rules
    id
     exp
    named_ref_opt
    :
    rhses_1
     rhs
      symbol
       id
        NUM
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $1;         }
      named_ref_opt
     |
     rhs
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        '+'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $1 + $3;    }
      named_ref_opt
     |
     rhs
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        '-'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $1 - $3;    }
      named_ref_opt
     |
     rhs
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        '*'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $1 * $3;    }
      named_ref_opt
     |
     rhs
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        '/'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $1 / $3;    }
      named_ref_opt
     |
     rhs
      symbol
       id
        '-'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      %prec
      symbol
       id
        NEG
      tag_opt
      actionBlock
       { $$ = -$2;        }
      named_ref_opt
     |
     rhs
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        '^'
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = pow ($1, $3); }
      named_ref_opt
     |
     rhs
      symbol
       id
        '('
      named_ref_opt
      symbol
       id
        exp
      named_ref_opt
      symbol
       id
        ')'
      named_ref_opt
      tag_opt
      actionBlock
       { $$ = $2;         }
      named_ref_opt
     ;
 epilogue_opt
  %%
 <EOF>
