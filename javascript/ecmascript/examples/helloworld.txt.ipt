program
 sourceElements
  sourceElement
   functionDeclaration
    function
    factorial
    (
    formalParameterList
     n
    )
    {
    functionBody
     sourceElements
      sourceElement
       statement
        ifStatement
         if
         (
         expressionSequence
          singleExpression
           singleExpression
            n
           ==
           singleExpression
            literal
             numericLiteral
              0
         )
         statement
          returnStatement
           return
           expressionSequence
            singleExpression
             literal
              numericLiteral
               1
           eos
            ;
         else
         statement
          returnStatement
           return
           expressionSequence
            singleExpression
             singleExpression
              n
             *
             singleExpression
              singleExpression
               factorial
              arguments
               (
               argumentList
                singleExpression
                 singleExpression
                  n
                 -
                 singleExpression
                  literal
                   numericLiteral
                    1
               )
           eos
            ;
    }
  sourceElement
   statement
    variableStatement
     var
     variableDeclarationList
      variableDeclaration
       i
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         document
        .
        identifierName
         clear
       arguments
        (
        )
     eos
      ;
  sourceElement
   statement
    iterationStatement
     for
     (
     expressionSequence
      singleExpression
       singleExpression
        i
       =
       singleExpression
        literal
         numericLiteral
          0
     ;
     expressionSequence
      singleExpression
       singleExpression
        i
       <=
       singleExpression
        literal
         numericLiteral
          16
     ;
     expressionSequence
      singleExpression
       singleExpression
        i
       ++
     )
     statement
      expressionStatement
       expressionSequence
        singleExpression
         singleExpression
          singleExpression
           document
          .
          identifierName
           write
         arguments
          (
          argumentList
           singleExpression
            singleExpression
             singleExpression
              singleExpression
               i
              +
              singleExpression
               literal
                "! = "
             +
             singleExpression
              singleExpression
               factorial
              arguments
               (
               argumentList
                singleExpression
                 i
               )
            +
            singleExpression
             literal
              "<br />"
          )
       eos
        ;
 <EOF>
