program
 sourceElements
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       literal
        "use strict"
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         }
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             item1
          :
          singleExpression
           literal
            "item1"
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item2
          :
          singleExpression
           literal
            "item2"
         }
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             item1
          :
          singleExpression
           literal
            "item1"
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item2
          :
          singleExpression
           literal
            "item2"
         ,
         }
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             item1
          :
          singleExpression
           literal
            "item1"
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item2
          :
          singleExpression
           literal
            "item2"
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item3
          :
          singleExpression
           anonymousFunction
            function
            (
            formalParameterList
             formalParameterArg
              assignable
               identifier
                arg1
            )
            functionBody
             {
             sourceElements
              sourceElement
               statement
                returnStatement
                 return
                 expressionSequence
                  singleExpression
                   identifier
                    arg1
                 eos
                  ;
             }
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item4
          :
          singleExpression
           anonymousFunction
            functionDeclaration
             function
             identifier
              myFunction
             (
             formalParameterList
              formalParameterArg
               assignable
                identifier
                 arg1
             )
             functionBody
              {
              sourceElements
               sourceElement
                statement
                 returnStatement
                  return
                  expressionSequence
                   singleExpression
                    identifier
                     arg1
                  eos
                   ;
              }
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             item5
          :
          singleExpression
           anonymousFunction
            arrowFunctionParameters
             (
             formalParameterList
              formalParameterArg
               assignable
                identifier
                 arg1
             )
            =>
            arrowFunctionBody
             functionBody
              {
              sourceElements
               sourceElement
                statement
                 returnStatement
                  return
                  expressionSequence
                   singleExpression
                    identifier
                     arg1
                  eos
                   ;
              }
         }
     eos
      ;
 <EOF>
