program
 sourceElements
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       literal
        "use strict"
     eos
      ;
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         list
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            literal
             numericLiteral
              1
          ,
          arrayElement
           singleExpression
            literal
             numericLiteral
              2
          ,
          arrayElement
           singleExpression
            literal
             numericLiteral
              3
         ]
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            identifier
             a
          ,
          ,
          arrayElement
           singleExpression
            identifier
             b
         ]
       =
       singleExpression
        singleExpression
         singleExpression
          identifier
           list
         [
         expressionSequence
          singleExpression
           identifier
            b
          ,
          singleExpression
           identifier
            a
         ]
        =
        singleExpression
         arrayLiteral
          [
          elementList
           arrayElement
            singleExpression
             identifier
              a
           ,
           arrayElement
            singleExpression
             identifier
              b
          ]
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        objectLiteral
         {
         propertyAssignment
          singleExpression
           identifier
            op
         ,
         propertyAssignment
          singleExpression
           identifier
            lhs
         ,
         propertyAssignment
          singleExpression
           identifier
            rhs
         }
       =
       singleExpression
        singleExpression
         identifier
          getASTNode
        arguments
         (
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             op
          :
          singleExpression
           identifier
            a
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             lhs
          :
          singleExpression
           objectLiteral
            {
            propertyAssignment
             propertyName
              identifierName
               identifier
                op
             :
             singleExpression
              identifier
               b
            }
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             rhs
          :
          singleExpression
           identifier
            c
         }
       =
       singleExpression
        singleExpression
         identifier
          getASTNode
        arguments
         (
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             a
          :
          singleExpression
           literal
            numericLiteral
             1
         }
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         list
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            literal
             numericLiteral
              1
         ]
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        objectLiteral
         {
         propertyAssignment
          singleExpression
           identifier
            a
         ,
         propertyAssignment
          singleExpression
           singleExpression
            identifier
             b
           =
           singleExpression
            literal
             numericLiteral
              2
         }
       =
       singleExpression
        identifier
         obj
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            identifier
             x
          ,
          arrayElement
           singleExpression
            singleExpression
             identifier
              y
            =
            singleExpression
             literal
              numericLiteral
               2
         ]
       =
       singleExpression
        identifier
         list
     eos
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      f
     (
     formalParameterList
      formalParameterArg
       assignable
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            identifier
             name
          ,
          arrayElement
           singleExpression
            identifier
             val
         ]
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             singleExpression
              identifier
               console
             .
             identifierName
              identifier
               log
            arguments
             (
             argument
              singleExpression
               identifier
                name
             ,
             argument
              singleExpression
               identifier
                val
             )
          eos
      }
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      g
     (
     formalParameterList
      formalParameterArg
       assignable
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             name
          :
          singleExpression
           identifier
            n
         ,
         propertyAssignment
          propertyName
           identifierName
            identifier
             val
          :
          singleExpression
           identifier
            v
         }
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             singleExpression
              identifier
               console
             .
             identifierName
              identifier
               log
            arguments
             (
             argument
              singleExpression
               identifier
                n
             ,
             argument
              singleExpression
               identifier
                v
             )
          eos
      }
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      h
     (
     formalParameterList
      formalParameterArg
       assignable
        objectLiteral
         {
         propertyAssignment
          singleExpression
           identifier
            name
         ,
         propertyAssignment
          singleExpression
           identifier
            val
         }
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             singleExpression
              identifier
               console
             .
             identifierName
              identifier
               log
            arguments
             (
             argument
              singleExpression
               identifier
                name
             ,
             argument
              singleExpression
               identifier
                val
             )
          eos
      }
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         f
       arguments
        (
        argument
         singleExpression
          arrayLiteral
           [
           elementList
            arrayElement
             singleExpression
              literal
               "bar"
            ,
            arrayElement
             singleExpression
              literal
               numericLiteral
                42
           ]
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         g
       arguments
        (
        argument
         singleExpression
          objectLiteral
           {
           propertyAssignment
            propertyName
             identifierName
              identifier
               name
            :
            singleExpression
             literal
              "foo"
           ,
           propertyAssignment
            propertyName
             identifierName
              identifier
               val
            :
            singleExpression
             literal
              numericLiteral
               7
           }
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         h
       arguments
        (
        argument
         singleExpression
          objectLiteral
           {
           propertyAssignment
            propertyName
             identifierName
              identifier
               name
            :
            singleExpression
             literal
              "bar"
           ,
           propertyAssignment
            propertyName
             identifierName
              identifier
               val
            :
            singleExpression
             literal
              numericLiteral
               42
           }
        )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         list
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            literal
             numericLiteral
              7
          ,
          arrayElement
           singleExpression
            literal
             numericLiteral
              42
         ]
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            singleExpression
             identifier
              a
            =
            singleExpression
             literal
              numericLiteral
               1
          ,
          arrayElement
           singleExpression
            singleExpression
             identifier
              b
            =
            singleExpression
             literal
              numericLiteral
               2
          ,
          arrayElement
           singleExpression
            singleExpression
             identifier
              c
            =
            singleExpression
             literal
              numericLiteral
               3
          ,
          arrayElement
           singleExpression
            identifier
             d
         ]
       =
       singleExpression
        identifier
         list
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         a
       ===
       singleExpression
        literal
         numericLiteral
          7
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         b
       ===
       singleExpression
        literal
         numericLiteral
          42
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         c
       ===
       singleExpression
        literal
         numericLiteral
          3
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         d
       ===
       singleExpression
        identifier
         undefined
     eos
      <EOF>
 <EOF>
