program
 sourceElements
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       literal
        "use strict"
     eos
      ;
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      f
     (
     formalParameterList
      formalParameterArg
       assignable
        identifier
         x
      ,
      formalParameterArg
       assignable
        identifier
         y
       =
       singleExpression
        literal
         numericLiteral
          7
      ,
      formalParameterArg
       assignable
        identifier
         z
       =
       singleExpression
        literal
         numericLiteral
          42
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         returnStatement
          return
          expressionSequence
           singleExpression
            singleExpression
             singleExpression
              identifier
               x
             +
             singleExpression
              identifier
               y
            +
            singleExpression
             identifier
              z
          eos
      }
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          f
        arguments
         (
         argument
          singleExpression
           literal
            numericLiteral
             1
         )
       ===
       singleExpression
        literal
         numericLiteral
          50
     eos
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      f
     (
     formalParameterList
      formalParameterArg
       assignable
        identifier
         x
      ,
      formalParameterArg
       assignable
        identifier
         y
      ,
      lastFormalParameterArg
       ...
       singleExpression
        identifier
         a
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         returnStatement
          return
          expressionSequence
           singleExpression
            singleExpression
             (
             expressionSequence
              singleExpression
               singleExpression
                identifier
                 x
               +
               singleExpression
                identifier
                 y
             )
            *
            singleExpression
             singleExpression
              identifier
               a
             .
             identifierName
              identifier
               length
          eos
      }
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          f
        arguments
         (
         argument
          singleExpression
           literal
            numericLiteral
             1
         ,
         argument
          singleExpression
           literal
            numericLiteral
             2
         ,
         argument
          singleExpression
           literal
            "hello"
         ,
         argument
          singleExpression
           literal
            true
         ,
         argument
          singleExpression
           literal
            numericLiteral
             7
         )
       ===
       singleExpression
        literal
         numericLiteral
          9
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         params
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            literal
             "hello"
          ,
          arrayElement
           singleExpression
            literal
             true
          ,
          arrayElement
           singleExpression
            literal
             numericLiteral
              7
         ]
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         other
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           singleExpression
            literal
             numericLiteral
              1
          ,
          arrayElement
           singleExpression
            literal
             numericLiteral
              2
          ,
          arrayElement
           ...
           singleExpression
            identifier
             params
         ]
     eos
  sourceElement
   statement
    functionDeclaration
     function
     identifier
      f
     (
     formalParameterList
      formalParameterArg
       assignable
        identifier
         x
      ,
      formalParameterArg
       assignable
        identifier
         y
      ,
      lastFormalParameterArg
       ...
       singleExpression
        identifier
         a
     )
     functionBody
      {
      sourceElements
       sourceElement
        statement
         returnStatement
          return
          expressionSequence
           singleExpression
            singleExpression
             (
             expressionSequence
              singleExpression
               singleExpression
                identifier
                 x
               +
               singleExpression
                identifier
                 y
             )
            *
            singleExpression
             singleExpression
              identifier
               a
             .
             identifierName
              identifier
               length
          eos
      }
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          f
        arguments
         (
         argument
          singleExpression
           literal
            numericLiteral
             1
         ,
         argument
          singleExpression
           literal
            numericLiteral
             2
         ,
         argument
          ...
          singleExpression
           identifier
            params
         )
       ===
       singleExpression
        literal
         numericLiteral
          9
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         str
       =
       singleExpression
        literal
         "foo"
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         chars
       =
       singleExpression
        arrayLiteral
         [
         elementList
          arrayElement
           ...
           singleExpression
            identifier
             str
         ]
     eos
      <EOF>
 <EOF>
