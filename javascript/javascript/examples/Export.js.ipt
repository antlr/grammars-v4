program
 sourceElements
  sourceElement
   statement
    exportStatement
     export
     declaration
      variableStatement
       variableDeclarationList
        varModifier
         let_
          let
        variableDeclaration
         assignable
          identifier
           name1
        ,
        variableDeclaration
         assignable
          identifier
           name2
       eos
        ;
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      variableStatement
       variableDeclarationList
        varModifier
         const
        variableDeclaration
         assignable
          identifier
           name1
         =
         singleExpression
          literal
           numericLiteral
            1
        ,
        variableDeclaration
         assignable
          identifier
           name2
         =
         singleExpression
          literal
           numericLiteral
            2
       eos
        ;
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      functionDeclaration
       function
       identifier
        functionName
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      classDeclaration
       class
       identifier
        ClassName
       classTail
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      functionDeclaration
       function
       *
       identifier
        generatorFunctionName
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      variableStatement
       variableDeclarationList
        varModifier
         const
        variableDeclaration
         assignable
          objectLiteral
           {
           propertyAssignment
            singleExpression
             identifier
              name1
           ,
           propertyAssignment
            propertyName
             identifierName
              identifier
               name2
            :
            singleExpression
             identifier
              bar
           }
         =
         singleExpression
          identifier
           o
       eos
        ;
     eos
  sourceElement
   statement
    exportStatement
     export
     declaration
      variableStatement
       variableDeclarationList
        varModifier
         const
        variableDeclaration
         assignable
          arrayLiteral
           [
           elementList
            arrayElement
             singleExpression
              identifier
               name1
            ,
            arrayElement
             singleExpression
              identifier
               name2
           ]
         =
         singleExpression
          identifier
           array
       eos
        ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           name1
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           nameN
       }
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           variable1
        as
        moduleExportName
         identifierName
          identifier
           name1
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           variable2
        as
        moduleExportName
         identifierName
          identifier
           name2
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           nameN
       }
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           variable1
        as
        moduleExportName
         "string name"
       }
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           name1
        as
        moduleExportName
         identifierName
          reservedWord
           keyword
            default
       }
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     singleExpression
      identifier
       expression
     eos
      ;
  sourceElement
   statement
    exportStatement
     export
     default
     declaration
      functionDeclaration
       function
       identifier
        functionName
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     declaration
      classDeclaration
       class
       identifier
        ClassName
       classTail
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     declaration
      functionDeclaration
       function
       *
       identifier
        generatorFunctionName
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     singleExpression
      anonymousFunction
       function
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     singleExpression
      class
      classTail
       {
       }
     eos
  sourceElement
   statement
    exportStatement
     export
     default
     singleExpression
      anonymousFunction
       function
       *
       (
       )
       functionBody
        {
        }
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      importNamespace
       *
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      importNamespace
       *
       as
       identifierName
        identifier
         name1
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           name1
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           nameN
       }
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          identifier
           import1
        as
        moduleExportName
         identifierName
          identifier
           name1
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           import2
        as
        moduleExportName
         identifierName
          identifier
           name2
       ,
       exportAliasName
        moduleExportName
         identifierName
          identifier
           nameN
       }
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          reservedWord
           keyword
            default
       ,
       }
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      exportModuleItems
       {
       exportAliasName
        moduleExportName
         identifierName
          reservedWord
           keyword
            default
        as
        moduleExportName
         identifierName
          identifier
           name1
       }
      importFrom
       from
       "module-name"
      eos
       ;
     eos
      <EOF>
 <EOF>
