program
 sourceElements
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       literal
        "use strict"
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          singleExpression
           identifier
            x
         ,
         propertyAssignment
          singleExpression
           identifier
            y
         }
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       let_
        let
      variableDeclaration
       assignable
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             foo
          :
          singleExpression
           literal
            "bar"
         ,
         propertyAssignment
          propertyName
           [
           singleExpression
            singleExpression
             literal
              "baz"
            +
            singleExpression
             singleExpression
              identifier
               quux
             arguments
              (
              )
           ]
          :
          singleExpression
           literal
            numericLiteral
             42
         }
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             foo
          :
          singleExpression
           literal
            "bar"
         }
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          obj
        [
        expressionSequence
         singleExpression
          singleExpression
           literal
            "baz"
          +
          singleExpression
           singleExpression
            identifier
             quux
           arguments
            (
            )
        ]
       =
       singleExpression
        literal
         numericLiteral
          42
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         propertyAssignment
          propertyName
           identifierName
            identifier
             foo
          (
          formalParameterList
           formalParameterArg
            assignable
             identifier
              a
           ,
           formalParameterArg
            assignable
             identifier
              b
          )
          functionBody
           {
           }
         ,
         propertyAssignment
          *
          propertyName
           identifierName
            identifier
             quux
          (
          formalParameterList
           formalParameterArg
            assignable
             identifier
              x
           ,
           formalParameterArg
            assignable
             identifier
              y
          )
          functionBody
           {
           }
         }
     eos
      <EOF>
 <EOF>
