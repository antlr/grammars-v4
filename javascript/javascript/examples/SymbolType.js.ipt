program
 sourceElements
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       literal
        "use strict"
     eos
      ;
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Symbol
        arguments
         (
         argument
          singleExpression
           literal
            "foo"
         )
       !==
       singleExpression
        singleExpression
         identifier
          Symbol
        arguments
         (
         argument
          singleExpression
           literal
            "foo"
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       const
      variableDeclaration
       assignable
        identifier
         foo
       =
       singleExpression
        singleExpression
         identifier
          Symbol
        arguments
         (
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       const
      variableDeclaration
       assignable
        identifier
         bar
       =
       singleExpression
        singleExpression
         identifier
          Symbol
        arguments
         (
         )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        typeof
        singleExpression
         identifier
          foo
       ===
       singleExpression
        literal
         "symbol"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        typeof
        singleExpression
         identifier
          bar
       ===
       singleExpression
        literal
         "symbol"
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       let_
        let
      variableDeclaration
       assignable
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         }
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          obj
        [
        expressionSequence
         singleExpression
          identifier
           foo
        ]
       =
       singleExpression
        literal
         "foo"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          obj
        [
        expressionSequence
         singleExpression
          identifier
           bar
        ]
       =
       singleExpression
        literal
         "bar"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          JSON
        .
        identifierName
         identifier
          stringify
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          keys
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          getOwnPropertyNames
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          getOwnPropertySymbols
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          reservedWord
           keyword
            for
        arguments
         (
         argument
          singleExpression
           literal
            "app.foo"
         )
       ===
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          reservedWord
           keyword
            for
        arguments
         (
         argument
          singleExpression
           literal
            "app.foo"
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       const
      variableDeclaration
       assignable
        identifier
         foo
       =
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          reservedWord
           keyword
            for
        arguments
         (
         argument
          singleExpression
           literal
            "app.foo"
         )
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       const
      variableDeclaration
       assignable
        identifier
         bar
       =
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          reservedWord
           keyword
            for
        arguments
         (
         argument
          singleExpression
           literal
            "app.bar"
         )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          identifier
           keyFor
        arguments
         (
         argument
          singleExpression
           identifier
            foo
         )
       ===
       singleExpression
        literal
         "app.foo"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         singleExpression
          identifier
           Symbol
         .
         identifierName
          identifier
           keyFor
        arguments
         (
         argument
          singleExpression
           identifier
            bar
         )
       ===
       singleExpression
        literal
         "app.bar"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        typeof
        singleExpression
         identifier
          foo
       ===
       singleExpression
        literal
         "symbol"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        typeof
        singleExpression
         identifier
          bar
       ===
       singleExpression
        literal
         "symbol"
     eos
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      varModifier
       let_
        let
      variableDeclaration
       assignable
        identifier
         obj
       =
       singleExpression
        objectLiteral
         {
         }
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          obj
        [
        expressionSequence
         singleExpression
          identifier
           foo
        ]
       =
       singleExpression
        literal
         "foo"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          obj
        [
        expressionSequence
         singleExpression
          identifier
           bar
        ]
       =
       singleExpression
        literal
         "bar"
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          JSON
        .
        identifierName
         identifier
          stringify
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          keys
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          getOwnPropertyNames
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
  sourceElement
   statement
    expressionStatement
     expressionSequence
      singleExpression
       singleExpression
        singleExpression
         identifier
          Object
        .
        identifierName
         identifier
          getOwnPropertySymbols
       arguments
        (
        argument
         singleExpression
          identifier
           obj
        )
     eos
      <EOF>
 <EOF>
