program
 sourceElements
  sourceElement
   statement
    iterationStatement
     for
     (
     variableDeclarationList
      varModifier
       var
      variableDeclaration
       assignable
        identifier
         i
       =
       singleExpression
        literal
         numericLiteral
          0
     ;
     expressionSequence
      singleExpression
       singleExpression
        identifier
         i
       <
       singleExpression
        singleExpression
         arrayLiteral
          [
          elementList
          ]
        .
        identifierName
         identifier
          length
     ;
     expressionSequence
      singleExpression
       singleExpression
        identifier
         i
       ++
     )
     statement
      block
       {
       statementList
        statement
         variableStatement
          variableDeclarationList
           varModifier
            var
           variableDeclaration
            assignable
             identifier
              o
            =
            singleExpression
             objectLiteral
              {
              }
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
        statement
         ifStatement
          if
          (
          expressionSequence
           singleExpression
            literal
             false
          )
          statement
           continueStatement
            continue
            eos
        statement
         expressionStatement
          expressionSequence
           singleExpression
            singleExpression
             identifier
              o
            [
            expressionSequence
             singleExpression
              identifier
               test
            ]
          eos
       }
  sourceElement
   statement
    labelledStatement
     identifier
      mylabel
     :
     statement
      iterationStatement
       for
       (
       variableDeclarationList
        varModifier
         var
        variableDeclaration
         assignable
          identifier
           i
         =
         singleExpression
          literal
           numericLiteral
            0
       ;
       expressionSequence
        singleExpression
         singleExpression
          identifier
           i
         <
         singleExpression
          singleExpression
           arrayLiteral
            [
            elementList
            ]
          .
          identifierName
           identifier
            length
       ;
       expressionSequence
        singleExpression
         singleExpression
          identifier
           i
         ++
       )
       statement
        block
         {
         statementList
          statement
           ifStatement
            if
            (
            expressionSequence
             singleExpression
              literal
               true
            )
            statement
             continueStatement
              continue
              identifier
               mylabel
              eos
               ;
         }
 <EOF>
