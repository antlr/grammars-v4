program
 sourceElements
  sourceElement
   export
   statement
    variableStatement
     varModifier
      let
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         name1
      ,
      variableDeclaration
       identifierOrKeyWord
        identifier
         name2
     ;
  sourceElement
   export
   statement
    variableStatement
     varModifier
      const
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         name1
       =
       singleExpression
        literal
         numericLiteral
          1
      ,
      variableDeclaration
       identifierOrKeyWord
        identifier
         name2
       =
       singleExpression
        literal
         numericLiteral
          2
     ;
  sourceElement
   export
   statement
    functionDeclaration
     function
     identifier
      functionName
     callSignature
      (
      )
     {
     functionBody
     }
  sourceElement
   export
   statement
    classDeclaration
     class
     identifier
      ClassName
     classHeritage
     classTail
      {
      }
  sourceElement
   export
   statement
    functionDeclaration
     function
     *
     identifier
      generatorFunctionName
     callSignature
      (
      )
     {
     functionBody
     }
  sourceElement
   export
   statement
    variableStatement
     varModifier
      const
     variableDeclarationList
      variableDeclaration
       objectLiteral
        {
        propertyAssignment
         identifierOrKeyWord
          identifier
           name1
        ,
        propertyAssignment
         propertyName
          identifierName
           identifier
            name2
         :
         singleExpression
          identifierName
           identifier
            bar
        }
       =
       singleExpression
        identifierName
         identifier
          o
     ;
  sourceElement
   export
   statement
    variableStatement
     varModifier
      const
     variableDeclarationList
      variableDeclaration
       arrayLiteral
        [
        elementList
         arrayElement
          singleExpression
           identifierName
            identifier
             name1
         ,
         arrayElement
          singleExpression
           identifierName
            identifier
             name2
        ]
       =
       singleExpression
        identifierName
         identifier
          array
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            name1
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            nameN
     }
  sourceElement
   statement
    emptyStatement_
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            variable1
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             identifier
              name1
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            variable2
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             identifier
              name2
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            nameN
     }
  sourceElement
   statement
    emptyStatement_
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            variable1
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            literal
             "string name"
     }
  sourceElement
   statement
    emptyStatement_
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            name1
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             reservedWord
              keyword
               default
     }
  sourceElement
   statement
    emptyStatement_
     ;
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        identifierName
         identifier
          expression
     ;
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        anonymousFunction
         functionDeclaration
          function
          identifier
           functionName
          callSignature
           (
           )
          {
          functionBody
          }
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        class
        identifier
         ClassName
        classHeritage
        classTail
         {
         }
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        anonymousFunction
         functionDeclaration
          function
          *
          identifier
           generatorFunctionName
          callSignature
           (
           )
          {
          functionBody
          }
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        anonymousFunction
         function
         (
         )
         {
         functionBody
         }
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        class
        classHeritage
        classTail
         {
         }
  sourceElement
   export
   statement
    expressionStatement
     expressionSequence
      singleExpression
       identifierName
        reservedWord
         keyword
          default
       singleExpression
        anonymousFunction
         function
         *
         (
         )
         {
         functionBody
         }
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      importNamespace
       *
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   statement
    exportStatement
     export
     exportFromBlock
      importNamespace
       *
       as
       identifierName
        identifier
         name1
      importFrom
       from
       "module-name"
      eos
       ;
     eos
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            name1
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            nameN
     }
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         from
       singleExpression
        literal
         "module-name"
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       variableStatement
        variableDeclarationList
         variableDeclaration
          identifierOrKeyWord
           identifier
            import1
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             identifier
              name1
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            import2
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             identifier
              name2
         ,
         variableDeclaration
          identifierOrKeyWord
           identifier
            nameN
     }
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         from
       singleExpression
        literal
         "module-name"
     ;
  sourceElement
   export
   statement
    variableStatement
     variableDeclarationList
      variableDeclaration
       objectLiteral
        {
        propertyAssignment
         singleExpression
          identifierName
           reservedWord
            keyword
             default
        ,
        }
       singleExpression
        identifierName
         identifier
          from
        singleExpression
         literal
          "module-name"
     ;
  sourceElement
   export
   statement
    block
     {
     statementList
      statement
       expressionStatement
        expressionSequence
         singleExpression
          identifierName
           reservedWord
            keyword
             default
          singleExpression
           identifierName
            identifier
             as
           singleExpression
            identifierName
             identifier
              name1
     }
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         from
       singleExpression
        literal
         "module-name"
     ;
 <EOF>
