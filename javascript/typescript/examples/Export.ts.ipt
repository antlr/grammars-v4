program
 sourceElements
  sourceElement
   statement
    variableStatement
     variableDeclarationList
      variableDeclaration
       identifierOrKeyWord
        identifier
         namespace
       singleExpression
        identifierName
         identifier
          StringUtility
  sourceElement
   statement
    block
     {
     statementList
      statement
       functionDeclaration
        function
        identifier
         ToCapital
        callSignature
         (
         parameterList
          parameter
           requiredParameter
            identifierOrPattern
             identifierName
              identifier
               str
            typeAnnotation
             :
             type_
              unionOrIntersectionOrPrimaryType
               primaryType
                predefinedType
                 string
         )
         typeAnnotation
          :
          type_
           unionOrIntersectionOrPrimaryType
            primaryType
             predefinedType
              string
        {
        functionBody
         sourceElements
          sourceElement
           statement
            expressionStatement
             expressionSequence
              singleExpression
               identifierName
                reservedWord
                 keyword
                  return
               singleExpression
                singleExpression
                 singleExpression
                  identifierName
                   identifier
                    str
                 .
                 identifierName
                  identifier
                   toUpperCase
                arguments
                 (
                 )
             ;
        }
      statement
       functionDeclaration
        function
        identifier
         Nemw
        callSignature
         (
         parameterList
          parameter
           requiredParameter
            identifierOrPattern
             identifierName
              identifier
               str
            typeAnnotation
             :
             type_
              unionOrIntersectionOrPrimaryType
               primaryType
                predefinedType
                 string
          ,
          parameter
           optionalParameter
            identifierOrPattern
             identifierName
              identifier
               length
            typeAnnotation
             :
             type_
              unionOrIntersectionOrPrimaryType
               primaryType
                predefinedType
                 number
            initializer
             =
             singleExpression
              literal
               numericLiteral
                0
         )
         typeAnnotation
          :
          type_
           unionOrIntersectionOrPrimaryType
            primaryType
             predefinedType
              string
        {
        functionBody
         sourceElements
          sourceElement
           statement
            expressionStatement
             expressionSequence
              singleExpression
               identifierName
                reservedWord
                 keyword
                  return
               singleExpression
                singleExpression
                 singleExpression
                  identifierName
                   identifier
                    str
                 .
                 identifierName
                  identifier
                   toUpperCase
                arguments
                 (
                 )
             ;
        }
      statement
       exportStatement
        export
        declaration
         functionDeclaration
          function
          identifier
           Eported
          callSignature
           (
           parameterList
            parameter
             requiredParameter
              identifierOrPattern
               identifierName
                identifier
                 from
              typeAnnotation
               :
               type_
                unionOrIntersectionOrPrimaryType
                 primaryType
                  predefinedType
                   string
            ,
            parameter
             optionalParameter
              identifierOrPattern
               identifierName
                identifier
                 length
              typeAnnotation
               :
               type_
                unionOrIntersectionOrPrimaryType
                 primaryType
                  predefinedType
                   number
              initializer
               =
               singleExpression
                literal
                 numericLiteral
                  0
           )
           typeAnnotation
            :
            type_
             unionOrIntersectionOrPrimaryType
              primaryType
               predefinedType
                string
          {
          functionBody
           sourceElements
            sourceElement
             statement
              expressionStatement
               expressionSequence
                singleExpression
                 identifierName
                  reservedWord
                   keyword
                    return
                 singleExpression
                  singleExpression
                   singleExpression
                    identifierName
                     identifier
                      from
                   .
                   identifierName
                    identifier
                     toUpperCase
                  arguments
                   (
                   )
               ;
          }
        eos
      statement
       exportStatement
        export
        declaration
         functionDeclaration
          function
          identifier
           Eported2
          callSignature
           (
           parameterList
            parameter
             requiredParameter
              identifierOrPattern
               identifierName
                identifier
                 str
              typeAnnotation
               :
               type_
                unionOrIntersectionOrPrimaryType
                 primaryType
                  predefinedType
                   string
            ,
            parameter
             optionalParameter
              identifierOrPattern
               identifierName
                identifier
                 length
              typeAnnotation
               :
               type_
                unionOrIntersectionOrPrimaryType
                 primaryType
                  predefinedType
                   number
              initializer
               =
               singleExpression
                literal
                 numericLiteral
                  0
           )
           typeAnnotation
            :
            type_
             unionOrIntersectionOrPrimaryType
              primaryType
               predefinedType
                string
          {
          functionBody
           sourceElements
            sourceElement
             statement
              expressionStatement
               expressionSequence
                singleExpression
                 identifierName
                  reservedWord
                   keyword
                    return
                 singleExpression
                  singleExpression
                   singleExpression
                    identifierName
                     identifier
                      str
                   .
                   identifierName
                    identifier
                     toUpperCase
                  arguments
                   (
                   )
               ;
          }
        eos
     }
  sourceElement
   export
   statement
    typeAliasDeclaration
     type
     identifier
      MyType
     =
     type_
      unionOrIntersectionOrPrimaryType
       primaryType
        objectType
         {
         typeBody
          typeMemberList
           typeMember
            propertySignatur
             propertyName
              identifierName
               identifier
                field
             typeAnnotation
              :
              type_
               unionOrIntersectionOrPrimaryType
                primaryType
                 predefinedType
                  number
           ;
           typeMember
            propertySignatur
             propertyName
              identifierName
               identifier
                field2
             typeAnnotation
              :
              type_
               unionOrIntersectionOrPrimaryType
                primaryType
                 predefinedType
                  string
          ;
         }
     eos
      <EOF>
 <EOF>
