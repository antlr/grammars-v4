(program (sourceElements (sourceElement (statement (importStatement import (importFromBlock (importNamespace (identifierName (identifier React))) (importFrom from 'react') (eos ;))))) (sourceElement (statement (classDeclaration class (identifier SummaryContainer) (classTail extends (singleExpression (singleExpression (identifier React)) . (identifierName (identifier Component))) { (classElement (methodDefinition (propertyName (identifierName (identifier constructor))) ( (formalParameterList (formalParameterArg (assignable (identifier props)))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression super) (arguments ( (argument (singleExpression (identifier props))) )))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier state))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier subject))) : (singleExpression (literal 'Summary Container!!'))) })))) (eos ;)))))) })) (classElement (methodDefinition (propertyName (identifierName (identifier render))) ( ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression ( (expressionSequence (singleExpression (jsxElements (jsxElement (jsxOpeningElement (jsxElementBegin <) (jsxOpeningElementName ul) (jsxAttributes (jsxAttribute (jsxAttributeName id) = (jsxAttributeValue "js-outcome-summary-container-{$objectType}-{$objectId}")) (jsxAttributes (jsxAttribute (jsxAttributeName className) = (jsxAttributeValue "js-outcome-summary-container j-outcome-summary-container js-ed-{$objectType}-{$objectId}")) (jsxAttributes (jsxAttribute (jsxAttributeName data-object-type) = (jsxAttributeValue "{$objectType}")) (jsxAttributes (jsxAttribute (jsxAttributeName data-object-id) = (jsxAttributeValue "{$objectId}")) (jsxAttributes (jsxAttribute (jsxAttributeName aria-label) = (jsxAttributeValue "{i18nText('outcomes.summaryContainer.ariaLabel')}")) (jsxAttributes (jsxAttribute (jsxAttributeName role) = (jsxAttributeValue "group")))))))) >) (jsxChildren \n      ) (jsxClosingElement </ (jsxClosingElementName ul) >))))) ))) (eos ;)))))) })) })))) (sourceElement (statement (exportStatement export default (singleExpression (identifier SummaryContainer)) (eos ;))))) <EOF>)