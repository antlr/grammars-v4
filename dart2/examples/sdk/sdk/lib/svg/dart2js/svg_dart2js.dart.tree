(compilationUnit (libraryDeclaration (libraryName metadata library (dottedIdentifierList (identifier dart) . (identifier dom) . (identifier svg)) ;) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:async')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:collection')))) (combinator hide (identifierList (identifier LinkedList) , (identifier LinkedListEntry))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator show (identifierList (identifier FixedLengthListMixin))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:html')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:html_common')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_js_helper')))) (combinator show (identifierList (identifier Creates) , (identifier Returns) , (identifier JSName) , (identifier Native))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_foreign_helper')))) (combinator show (identifierList (identifier JS))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_interceptors')))) (combinator show (identifierList (identifier JavaScriptObject))) ;))) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier _SvgElementFactoryProvider) { metadata (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (identifier createSvgElement_tag) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier tag)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element)))))) (identifier temp)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier document)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createElementNS)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "http://www.w3.org/2000/svg"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier tag))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier temp)))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)))))))))))) ;)))) }))) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "a"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier AElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString))))) get (identifier target))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAngle"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Angle) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Angle) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ANGLETYPE_DEG) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ANGLETYPE_GRAD) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ANGLETYPE_RAD) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ANGLETYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ANGLETYPE_UNSPECIFIED) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier unitType))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier value))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier value) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier valueAsString))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier valueAsString) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier valueInSpecifiedUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier valueInSpecifiedUnits) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier convertToSpecifiedUnits) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier unitType)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier newValueSpecifiedUnits) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier unitType))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier valueInSpecifiedUnits)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimateElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimateElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimationElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "animate"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier AnimateElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animate'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animate'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimateMotionElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimateMotionElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimationElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateMotionElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateMotionElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "animateMotion"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateMotionElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier AnimateMotionElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animateMotion'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animateMotion'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateMotionElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimateTransformElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimateTransformElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimationElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateTransformElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimateTransformElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "animateTransform"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateTransformElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier AnimateTransformElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animateTransform'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'animateTransform'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimateTransformElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedAngle"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedAngle) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedAngle) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Angle)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Angle)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedBoolean"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedBoolean) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedBoolean) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))) get (identifier baseVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier baseVal) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedEnumeration"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedEnumeration) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedEnumeration) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier baseVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier baseVal) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedInteger"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedInteger) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedInteger) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier baseVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier baseVal) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedLength"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedLength) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedLength) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedLengthList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedLengthList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedLengthList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier LengthList)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier LengthList)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedNumber"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedNumber) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedNumber) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier baseVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier baseVal) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedNumberList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedNumberList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedNumberList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NumberList)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NumberList)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedPreserveAspectRatio"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedPreserveAspectRatio) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedPreserveAspectRatio) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PreserveAspectRatio)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PreserveAspectRatio)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedRect"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedRect) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedRect) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedString"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedString) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedString) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier baseVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier baseVal) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimatedTransformList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimatedTransformList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimatedTransformList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TransformList)) ?))) get (identifier animVal))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TransformList)) ?))) get (identifier baseVal))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGAnimationElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier AnimationElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Tests)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimationElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier AnimationElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "animation"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimationElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier AnimationElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))) get (identifier targetElement))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier beginElement) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier beginElementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier offset)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier endElement) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier endElementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier offset)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getCurrentTime) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getSimpleDuration) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getStartTime) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier requiredExtensions))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier systemLanguage))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGCircleElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier CircleElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier CircleElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier CircleElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "circle"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier CircleElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier CircleElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier r))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGClipPathElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier ClipPathElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ClipPathElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ClipPathElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "clipPath"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ClipPathElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier ClipPathElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier clipPathUnits))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGDefsElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier DefsElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier DefsElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier DefsElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "defs"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier DefsElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier DefsElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGDescElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier DescElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier DescElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier DescElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "desc"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier DescElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier DescElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGDiscardElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier DiscardElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier DiscardElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier DiscardElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGEllipseElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier EllipseElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier EllipseElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier EllipseElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "ellipse"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier EllipseElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier EllipseElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier rx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier ry))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEBlendElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEBlendElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEBlendElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEBlendElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feBlend"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEBlendElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEBlendElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feBlend'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feBlend'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEBlendElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_DARKEN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_LIGHTEN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 5))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_MULTIPLY) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_NORMAL) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_SCREEN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FEBLEND_MODE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier mode))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEColorMatrixElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEColorMatrixElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEColorMatrixElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEColorMatrixElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feColorMatrix"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEColorMatrixElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEColorMatrixElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feColorMatrix'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feColorMatrix'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEColorMatrixElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOLORMATRIX_TYPE_HUEROTATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOLORMATRIX_TYPE_MATRIX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOLORMATRIX_TYPE_SATURATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOLORMATRIX_TYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString))))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier type))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumberList)) ?))) get (identifier values))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEComponentTransferElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEComponentTransferElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEComponentTransferElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEComponentTransferElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feComponentTransfer"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEComponentTransferElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEComponentTransferElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feComponentTransfer'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feComponentTransfer'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEComponentTransferElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFECompositeElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FECompositeElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FECompositeElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FECompositeElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_ARITHMETIC) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 6))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_ATOP) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_IN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_OUT) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_OVER) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_FECOMPOSITE_OPERATOR_XOR) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 5))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier k1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier k2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier k3))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier k4))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier operator))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEConvolveMatrixElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEConvolveMatrixElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEConvolveMatrixElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEConvolveMatrixElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feConvolveMatrix"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEConvolveMatrixElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEConvolveMatrixElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feConvolveMatrix'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feConvolveMatrix'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEConvolveMatrixElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_EDGEMODE_DUPLICATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_EDGEMODE_NONE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_EDGEMODE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_EDGEMODE_WRAP) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier bias))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier divisor))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier edgeMode))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumberList)) ?))) get (identifier kernelMatrix))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedInteger)) ?))) get (identifier orderX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedInteger)) ?))) get (identifier orderY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedBoolean)) ?))) get (identifier preserveAlpha))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedInteger)) ?))) get (identifier targetX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedInteger)) ?))) get (identifier targetY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEDiffuseLightingElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEDiffuseLightingElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDiffuseLightingElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDiffuseLightingElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feDiffuseLighting"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDiffuseLightingElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEDiffuseLightingElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDiffuseLighting'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDiffuseLighting'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDiffuseLightingElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier diffuseConstant))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier surfaceScale))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEDisplacementMapElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEDisplacementMapElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDisplacementMapElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDisplacementMapElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feDisplacementMap"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDisplacementMapElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEDisplacementMapElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDisplacementMap'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDisplacementMap'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDisplacementMapElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_CHANNEL_A) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_CHANNEL_B) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_CHANNEL_G) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_CHANNEL_R) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_CHANNEL_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier scale))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier xChannelSelector))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier yChannelSelector))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEDistantLightElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEDistantLightElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDistantLightElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEDistantLightElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feDistantLight"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDistantLightElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEDistantLightElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDistantLight'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feDistantLight'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEDistantLightElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier azimuth))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier elevation))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEFloodElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEFloodElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFloodElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFloodElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feFlood"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFloodElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEFloodElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFlood'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFlood'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFloodElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEFuncAElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEFuncAElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _SVGComponentTransferFunctionElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncAElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncAElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feFuncA"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncAElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEFuncAElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncA'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncA'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncAElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEFuncBElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEFuncBElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _SVGComponentTransferFunctionElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncBElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncBElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feFuncB"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncBElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEFuncBElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncB'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncB'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncBElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEFuncGElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEFuncGElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _SVGComponentTransferFunctionElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncGElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncGElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feFuncG"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncGElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEFuncGElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncG'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncG'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncGElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEFuncRElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEFuncRElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _SVGComponentTransferFunctionElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncRElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEFuncRElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feFuncR"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncRElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEFuncRElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncR'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feFuncR'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEFuncRElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEGaussianBlurElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEGaussianBlurElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEGaussianBlurElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEGaussianBlurElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feGaussianBlur"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEGaussianBlurElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEGaussianBlurElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feGaussianBlur'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feGaussianBlur'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEGaussianBlurElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier stdDeviationX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier stdDeviationY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setStdDeviation) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier stdDeviationX))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier stdDeviationY)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEImageElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEImageElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEImageElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEImageElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feImage"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEImageElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEImageElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feImage'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feImage'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEImageElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEMergeElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEMergeElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEMergeElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEMergeElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feMerge"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEMergeElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEMergeElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feMerge'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feMerge'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEMergeElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEMergeNodeElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEMergeNodeElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEMergeNodeElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEMergeNodeElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feMergeNode"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEMergeNodeElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEMergeNodeElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feMergeNode'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feMergeNode'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEMergeNodeElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEMorphologyElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEMorphologyElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEMorphologyElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEMorphologyElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MORPHOLOGY_OPERATOR_DILATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MORPHOLOGY_OPERATOR_ERODE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MORPHOLOGY_OPERATOR_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier operator))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier radiusX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier radiusY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEOffsetElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEOffsetElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEOffsetElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEOffsetElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feOffset"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEOffsetElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEOffsetElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feOffset'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feOffset'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEOffsetElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier dx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier dy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEPointLightElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FEPointLightElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEPointLightElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FEPointLightElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "fePointLight"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEPointLightElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FEPointLightElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'fePointLight'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'fePointLight'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FEPointLightElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier z))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFESpecularLightingElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FESpecularLightingElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FESpecularLightingElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FESpecularLightingElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feSpecularLighting"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FESpecularLightingElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FESpecularLightingElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feSpecularLighting'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feSpecularLighting'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FESpecularLightingElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier kernelUnitLengthY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier specularConstant))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier specularExponent))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier surfaceScale))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFESpotLightElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FESpotLightElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FESpotLightElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FESpotLightElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feSpotLight"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FESpotLightElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FESpotLightElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feSpotLight'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feSpotLight'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FESpotLightElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier limitingConeAngle))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier pointsAtX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier pointsAtY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier pointsAtZ))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier specularExponent))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier z))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFETileElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FETileElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FETileElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FETileElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feTile"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FETileElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FETileElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feTile'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feTile'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FETileElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier in1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFETurbulenceElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FETurbulenceElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FETurbulenceElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FETurbulenceElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "feTurbulence"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FETurbulenceElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FETurbulenceElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feTurbulence'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'feTurbulence'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FETurbulenceElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_STITCHTYPE_NOSTITCH) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_STITCHTYPE_STITCH) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_STITCHTYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TURBULENCE_TYPE_FRACTALNOISE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TURBULENCE_TYPE_TURBULENCE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TURBULENCE_TYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier baseFrequencyX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier baseFrequencyY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedInteger)) ?))) get (identifier numOctaves))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier seed))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier stitchTiles))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier type))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier IE))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '10'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFilterElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier FilterElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FilterElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FilterElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "filter"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier FilterElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'filter'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'filter'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier filterUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier primitiveUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier FilterPrimitiveStandardAttributes) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FilterPrimitiveStandardAttributes) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier result))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier FitToViewBox) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier FitToViewBox) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGForeignObjectElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier ForeignObjectElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ForeignObjectElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ForeignObjectElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "foreignObject"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ForeignObjectElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier ForeignObjectElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'foreignObject'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'foreignObject'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ForeignObjectElement)))))))))))) ))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGGElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier GElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier GElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier GElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "g"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier GElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGGeometryElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier GeometryElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier GeometryElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier GeometryElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber)) ?))) get (identifier pathLength))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier getPointAtLength) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier distance)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getTotalLength) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier isPointInFill) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier point)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier isPointInStroke) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier point)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGGraphicsElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier GraphicsElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Tests)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier GraphicsElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier GraphicsElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))) get (identifier farthestViewportElement))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))) get (identifier nearestViewportElement))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedTransformList)) ?))) get (identifier transform))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))) (identifier getBBox) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'getCTM'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier getCtm) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'getScreenCTM'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier getScreenCtm) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier requiredExtensions))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier systemLanguage))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGImageElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier ImageElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ImageElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ImageElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "image"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ImageElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier ImageElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier async))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier async) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future))))) (identifier decode) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier promiseToFuture)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString ""))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "#.decode()"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGLength"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Length) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Length) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_CM) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 6))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_EMS) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_EXS) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_IN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 8))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_MM) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 7))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_NUMBER) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_PC) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 10))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_PERCENTAGE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_PT) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 9))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_PX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 5))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_LENGTHTYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier unitType))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier value))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier value) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier valueAsString))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier valueAsString) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier valueInSpecifiedUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier valueInSpecifiedUnits) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier convertToSpecifiedUnits) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier unitType)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier newValueSpecifiedUnits) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier unitType))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier valueInSpecifiedUnits)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGLengthList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier LengthList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject)))) (mixins with (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length)))))) >))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ImmutableListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length)))))) >)))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length)))))) >))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier LengthList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier length))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "int"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "#.length"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier numberOfItems))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) operator (operator [ ]) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "bool"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "# >>> 0 !== # || # >= #"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier length))))))))))))))))))) ))))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier RangeError) . (identifier index))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier getItem)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction void)) operator (operator [ ] =) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot assign element of immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier length) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot resize immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) get (identifier first))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Length'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) get (identifier last))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len)))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Length'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[#]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))) (additiveOperator -) (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) get (identifier single))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Length'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "More than one element"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier elementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) ])))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier __setter__) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier appendItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier clear) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier getItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier initialize) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier insertItemBefore) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier removeItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier replaceItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGLineElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier LineElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier LineElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier LineElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "line"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier LineElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier LineElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y2))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGLinearGradientElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier LinearGradientElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _GradientElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier LinearGradientElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier LinearGradientElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "linearGradient"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier LinearGradientElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier LinearGradientElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x2))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y1))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y2))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGMarkerElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier MarkerElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FitToViewBox)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier MarkerElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier MarkerElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "marker"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier MarkerElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier MarkerElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKERUNITS_STROKEWIDTH) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKERUNITS_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKERUNITS_USERSPACEONUSE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKER_ORIENT_ANGLE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKER_ORIENT_AUTO) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MARKER_ORIENT_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength))))) get (identifier markerHeight))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration))))) get (identifier markerUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength))))) get (identifier markerWidth))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedAngle)) ?))) get (identifier orientAngle))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier orientType))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength))))) get (identifier refX))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength))))) get (identifier refY))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setOrientToAngle) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Angle))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setOrientToAuto) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGMaskElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier MaskElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Tests)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier MaskElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier MaskElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "mask"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier MaskElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier MaskElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier maskContentUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier maskUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier requiredExtensions))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier systemLanguage))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGMatrix"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Matrix) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Matrix) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier a))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier a) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier b))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier b) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier c))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier c) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier d))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier d) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier e))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier e) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier f))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier f) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier flipX) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier flipY) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier inverse) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier multiply) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))))) (identifier secondMatrix)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier rotate) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier rotateFromVector) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier x))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier y)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier scale) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier scaleFactor)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier scaleNonUniform) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier scaleFactorX))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier scaleFactorY)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier skewX) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier skewY) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier translate) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier x))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier y)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGMetadataElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier MetadataElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier MetadataElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier MetadataElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGNumber"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Number) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Number) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier value))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier value) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGNumberList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier NumberList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject)))) (mixins with (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number)))))) >))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ImmutableListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number)))))) >)))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number)))))) >))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier NumberList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier length))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "int"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "#.length"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier numberOfItems))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) operator (operator [ ]) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "bool"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "# >>> 0 !== # || # >= #"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier length))))))))))))))))))) ))))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier RangeError) . (identifier index))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier getItem)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction void)) operator (operator [ ] =) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot assign element of immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier length) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot resize immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) get (identifier first))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Number'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) get (identifier last))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len)))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Number'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[#]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))) (additiveOperator -) (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) get (identifier single))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Number'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "More than one element"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier elementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) ])))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier __setter__) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier appendItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier clear) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier getItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier initialize) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier insertItemBefore) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier removeItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier replaceItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPathElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PathElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PathElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PathElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "path"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier PathElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier PathElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPatternElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PatternElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FitToViewBox)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Tests)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PatternElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PatternElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "pattern"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier PatternElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier PatternElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier patternContentUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedTransformList)) ?))) get (identifier patternTransform))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier patternUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier requiredExtensions))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier systemLanguage))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPoint"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Point) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Point) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier x) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier y) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier matrixTransform) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))))) (identifier matrix)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPointList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PointList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PointList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier length))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier numberOfItems))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier __setter__) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier appendItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier clear) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier getItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier initialize) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier insertItemBefore) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier removeItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier replaceItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPolygonElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PolygonElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PolygonElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PolygonElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "polygon"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier PolygonElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier PolygonElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PointList)) ?))) get (identifier animatedPoints))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PointList))))) get (identifier points))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPolylineElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PolylineElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PolylineElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PolylineElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "polyline"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier PolylineElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier PolylineElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PointList)) ?))) get (identifier animatedPoints))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier PointList))))) get (identifier points))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGPreserveAspectRatio"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier PreserveAspectRatio) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier PreserveAspectRatio) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MEETORSLICE_MEET) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MEETORSLICE_SLICE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_MEETORSLICE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_NONE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMAXYMAX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 10))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMAXYMID) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 7))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMAXYMIN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMIDYMAX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 9))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMIDYMID) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 6))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMIDYMIN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMINYMAX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 8))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMINYMID) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 5))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_PRESERVEASPECTRATIO_XMINYMIN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier align))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier align) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier meetOrSlice))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier meetOrSlice) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGRadialGradientElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier RadialGradientElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _GradientElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier RadialGradientElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier RadialGradientElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "radialGradient"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier RadialGradientElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier RadialGradientElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier cy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier fr))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier fx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier fy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier r))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGRect"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Rect) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Rect) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier height) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier width) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier x) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier y) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGRectElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier RectElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GeometryElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier RectElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier RectElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "rect"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier RectElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier RectElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier rx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier ry))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGScriptElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier ScriptElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ScriptElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ScriptElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "script"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ScriptElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier ScriptElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier type))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier type) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier CHROME))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier FIREFOX))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier SupportedBrowser)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SupportedBrowser)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier SAFARI))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGSetElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier SetElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimationElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SetElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SetElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "set"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SetElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier SetElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier supported))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier SvgElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isTagSupported)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'set'))))))))))))))))))))) )))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'set'))))))))))))))))))))) )))))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SetElement)))))))))))) ))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGStopElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier StopElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier StopElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier StopElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "stop"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier StopElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier StopElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'offset'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumber))))) get (identifier gradientOffset))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGStringList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier StringList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject)))) (mixins with (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ImmutableListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier StringList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier length))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "int"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "#.length"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier numberOfItems))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) operator (operator [ ]) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "bool"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "# >>> 0 !== # || # >= #"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier length))))))))))))))))))) ))))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier RangeError) . (identifier index))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier getItem)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction void)) operator (operator [ ] =) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot assign element of immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier length) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot resize immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier first))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'String'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier last))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len)))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'String'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[#]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))) (additiveOperator -) (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier single))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'String'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "More than one element"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier elementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) ])))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier __setter__) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier appendItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier clear) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier getItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier initialize) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier insertItemBefore) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier item))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier removeItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier replaceItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGStyleElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier StyleElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier StyleElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier StyleElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "style"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier StyleElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier StyleElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))) get (identifier disabled))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier disabled) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier media))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier media) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StyleSheet)) ?))) get (identifier sheet))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier type))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier type) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier AttributeClassSet) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier CssClassSetImpl))))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element))))) (initializedIdentifierList (initializedIdentifier (identifier _element)))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier AttributeClassSet) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _element))))) ))))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Set)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))) (identifier readClasses) (formalParameterPart (formalParameterList ( ))))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier classname)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _element)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier attributes)))) (selector (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'class'))))))))))))))))))) ]))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier classname)))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier classname)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier classname)))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)))))))))))) )) (selector (assignableSelector (unconditionalAssignableSelector . (identifier baseVal)))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Set)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))))) (identifier s)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeName (typeIdentifier LinkedHashSet)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)) (arguments ( )))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier classname))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier s))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (forStatement for ( (forLoopParts metadata (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier name)) in (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier classname)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier split)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString ' '))))))))))))))))))))) )))))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier trimmed)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier name)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier trim)))) (selector (argumentPart (arguments ( )))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (prefixOperator (negationOperator !)) (unaryExpression (postfixExpression (primary (identifier trimmed)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isEmpty)))))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier s)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier add)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier trimmed))))))))))))))))))) ))))))))))))))))))) ;)))) }))))))) })))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier s))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier writeClasses) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Set))))))) (identifier s)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _element)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier setAttribute)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'class'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier s)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier join)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString ' '))))))))))))))))))))) ))))))))))))))))))))) ))))))))))))))))))) ;)))) }))) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier SvgElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Element))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GlobalEventHandlers)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier NoncedElement)))))) { metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _START_TAG_REGEXP) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier RegExp)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '<(\\w+)'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SvgElement) . (identifier tag)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier tag)))))) )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier document)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createElementNS)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "http://www.w3.org/2000/svg"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier tag))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SvgElement) . (identifier svg)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier svg)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeValidator)) ?))))) (identifier validator))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeTreeSanitizer)) ?))))) (identifier treeSanitizer))))) })) )))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier validator))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier treeSanitizer))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier validator)) (assignmentOperator =) (expr (cascade (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier NodeValidatorBuilder) . (identifier common))) (arguments ( )))))))))))))))))) .. (cascadeSection (cascadeSelector (identifier allowSvg)) (cascadeSectionTail (selector (argumentPart (arguments ( ))))))))) ;)))) })))))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final) (identifier match)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _START_TAG_REGEXP)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier firstMatch)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier svg))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier parentElement))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier match))))))))))) (equalityOperator !=) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null))))))))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier match)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier group)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))))) )))) (selector !) (selector (assignableSelector (unconditionalAssignableSelector . (identifier toLowerCase)))) (selector (argumentPart (arguments ( ))))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'svg'))))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier parentElement)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier document)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier body)))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier parentElement)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier SvgSvgElement)) (arguments ( )))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier fragment)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier parentElement)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createFragment)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier svg)))))))))))))))))) , (namedArgument (label (identifier validator) :) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier validator)))))))))))))))))) , (namedArgument (label (identifier treeSanitizer) :) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier treeSanitizer))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier fragment)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier nodes)))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier where)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (functionExpression (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (identifier e))))) ))) (functionExpressionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier e)))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)))))))))))))))))))))))))))))))) )))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier single))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier CssClassSet))))) get (identifier classes))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier AttributeClassSet)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element)))))) >)))) get (identifier children))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier FilteredElementList)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier children) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element)))))) >)))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final) (identifier children)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier children)))))))))))))))))))) ;))) (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier children)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier clear)))) (selector (argumentPart (arguments ( ))))))))))))))))))) ;))) (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier children)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier addAll)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier value))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier outerHtml))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final) (identifier container)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier DivElement)) (arguments ( )))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)))))) (identifier cloned)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier clone)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral true)))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))))))))))) ;))) (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier container)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier children)))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier add)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier cloned))))))))))))))))))) ))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier container)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier innerHtml))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier innerHtml))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final) (identifier container)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier DivElement)) (arguments ( )))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)))))) (identifier cloned)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier clone)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral true)))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))))))))))) ;))) (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier container)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier children)))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier addAll)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier cloned)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier children))))))))))))))))))))) ))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier container)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier innerHtml))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier innerHtml) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier setInnerHtml)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier value))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier DocumentFragment))))) (identifier createFragment) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier svg)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeValidator)) ?))))) (identifier validator))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeTreeSanitizer)) ?))))) (identifier treeSanitizer))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier treeSanitizer))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier validator))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier validator)) (assignmentOperator =) (expr (cascade (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier NodeValidatorBuilder) . (identifier common))) (arguments ( )))))))))))))))))) .. (cascadeSection (cascadeSelector (identifier allowSvg)) (cascadeSectionTail (selector (argumentPart (arguments ( ))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier treeSanitizer)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier NodeTreeSanitizer)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier validator))))))))))))))))))) )))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier html)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '<svg version="1.1">$svg</svg>')))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier fragment)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier document)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier body)))) (selector !) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createFragment)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier html)))))))))))))))))) , (namedArgument (label (identifier treeSanitizer) :) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier treeSanitizer))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier svgFragment)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier DocumentFragment)) (arguments ( )))))))))))))))))))) ;))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier root)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier fragment)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier nodes)))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier single)))))))))))))))))))) ;))) (statement (nonLabelledStatement (whileStatement while ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier root)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier firstChild))))))))))))) (equalityOperator !=) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier svgFragment)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier append)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier root)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier firstChild)))) (selector !)))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier svgFragment))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier insertAdjacentText) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier where))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier text)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot invoke insertAdjacentText on SVG."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier insertAdjacentHtml) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier where))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier text)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeValidator)) ?))))) (identifier validator))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NodeTreeSanitizer)) ?))))) (identifier treeSanitizer))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot invoke insertAdjacentHtml on SVG."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element))))) (identifier insertAdjacentElement) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier where))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element))))))) (identifier element)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot invoke insertAdjacentElement on SVG."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier HtmlCollection))))) get (identifier _children))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot get _children on SVG."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier isContentEditable))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral false)))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier click) (formalParameterPart (formalParameterList ( ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot invoke click SVG."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier isTagSupported) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier tag)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier e)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier tag))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier e)))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))))) && (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (prefixOperator (negationOperator !)) (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier e)))))))))) (typeTest (isOperator is) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UnknownElement)))))))))))) )))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SvgElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier abortEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'abort'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier blurEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'blur'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier canPlayEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'canplay'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier canPlayThroughEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'canplaythrough'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier changeEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'change'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier clickEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'click'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier contextMenuEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'contextmenu'))))))))))))))))))))) )))))))))))))))))))))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier DomName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'SVGElement.dblclickEvent'))))))))))))))))))))) )))) (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier doubleClickEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dblclick'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'drag'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragEndEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dragend'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragEnterEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dragenter'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragLeaveEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dragleave'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragOverEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dragover'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dragStartEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'dragstart'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier dropEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'drop'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier durationChangeEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'durationchange'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier emptiedEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'emptied'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier endedEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'ended'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier errorEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'error'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier focusEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'focus'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier inputEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'input'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier invalidEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'invalid'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier keyDownEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'keydown'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier keyPressEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'keypress'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier keyUpEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'keyup'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier loadEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'load'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier loadedDataEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'loadeddata'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier loadedMetadataEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'loadedmetadata'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseDownEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mousedown'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseEnterEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mouseenter'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseLeaveEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mouseleave'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseMoveEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mousemove'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseOutEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mouseout'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseOverEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mouseover'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseUpEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mouseup'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier mouseWheelEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'mousewheel'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier pauseEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'pause'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier playEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'play'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier playingEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'playing'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier rateChangeEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'ratechange'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier resetEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'reset'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier resizeEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'resize'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier scrollEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'scroll'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier seekedEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'seeked'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier seekingEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'seeking'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier selectEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'select'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier stalledEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'stalled'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier submitEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'submit'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier suspendEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'suspend'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier timeUpdateEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'timeupdate'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier touchCancelEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'touchcancel'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier touchEndEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'touchend'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier touchMoveEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'touchmove'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier touchStartEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'touchstart'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier volumeChangeEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'volumechange'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier waitingEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'waiting'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)))) (staticFinalDeclarationList (staticFinalDeclaration (identifier wheelEvent) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeName (typeIdentifier EventStreamProvider)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'wheel'))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier SvgElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'className'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString))))) get (identifier _svgClassName))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'ownerSVGElement'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgSvgElement)) ?))) get (identifier ownerSvgElement))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))) get (identifier viewportElement))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier blur) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier focus) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier nonce))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier nonce) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onAbort))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier abortEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onBlur))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier blurEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onCanPlay))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier canPlayEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onCanPlayThrough))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier canPlayThroughEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onChange))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier changeEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onClick))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier clickEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onContextMenu))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier contextMenuEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier DomName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'SVGElement.ondblclick'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onDoubleClick))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier doubleClickEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDrag))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDragEnd))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragEndEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDragEnter))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragEnterEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDragLeave))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragLeaveEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDragOver))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragOverEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDragStart))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dragStartEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onDrop))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier dropEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onDurationChange))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier durationChangeEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onEmptied))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier emptiedEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onEnded))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier endedEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onError))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier errorEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onFocus))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier focusEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onInput))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier inputEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onInvalid))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier invalidEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) get (identifier onKeyDown))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier keyDownEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) get (identifier onKeyPress))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier keyPressEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier KeyboardEvent)))))) >)))) get (identifier onKeyUp))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier keyUpEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onLoad))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier loadEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onLoadedData))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier loadedDataEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onLoadedMetadata))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier loadedMetadataEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseDown))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseDownEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseEnter))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseEnterEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseLeave))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseLeaveEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseMove))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseMoveEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseOut))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseOutEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseOver))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseOverEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier MouseEvent)))))) >)))) get (identifier onMouseUp))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseUpEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)))) get (identifier onMouseWheel))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier mouseWheelEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onPause))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier pauseEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onPlay))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier playEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onPlaying))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier playingEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onRateChange))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier rateChangeEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onReset))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier resetEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onResize))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier resizeEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onScroll))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier scrollEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onSeeked))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier seekedEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onSeeking))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier seekingEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onSelect))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier selectEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onStalled))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier stalledEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onSubmit))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier submitEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onSuspend))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier suspendEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onTimeUpdate))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier timeUpdateEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) get (identifier onTouchCancel))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier touchCancelEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) get (identifier onTouchEnd))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier touchEndEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) get (identifier onTouchMove))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier touchMoveEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TouchEvent)))))) >)))) get (identifier onTouchStart))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier touchStartEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onVolumeChange))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier volumeChangeEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Event)))))) >)))) get (identifier onWaiting))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier waitingEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ElementStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WheelEvent)))))) >)))) get (identifier onWheel))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier wheelEvent)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forElement)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGSVGElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier SvgSvgElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FitToViewBox)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ZoomAndPan)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SvgSvgElement)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType final) (identifier el)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier SvgElement) . (identifier tag))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "svg"))))))))))))))))))))) )))))))))))))))))))) ;))) (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (primary (identifier el)) (assignableSelectorPart (selector (assignableSelector (unconditionalAssignableSelector . (identifier attributes)))) (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'version'))))))))))))))))))) ])))) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "1.1")))))))))))))))))))) ;))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier el)))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgSvgElement)))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SvgSvgElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier SvgSvgElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier currentScale))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier currentScale) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))))) (identifier value)))))) )))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point)) ?))) get (identifier currentTranslate))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier animationsPaused) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier checkEnclosure) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))))) (identifier element))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))))) (identifier rect)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (identifier checkIntersection) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))))) (identifier element))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))))) (identifier rect)))))) ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGAngle'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Angle))))) (identifier createSvgAngle) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGLength'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Length))))) (identifier createSvgLength) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGMatrix'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))) (identifier createSvgMatrix) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGNumber'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Number))))) (identifier createSvgNumber) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGPoint'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier createSvgPoint) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGRect'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))) (identifier createSvgRect) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGTransform'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier createSvgTransform) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGTransformFromMatrix'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier createSvgTransformFromMatrix) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))))) (identifier matrix)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier deselectAll) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier forceRedraw) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getCurrentTime) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Element))))) (identifier getElementById) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier elementId)))))) ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier Returns)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'NodeList'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Creates)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'NodeList'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Node)))))) >)))) (identifier getEnclosureList) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))))) (identifier rect))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))))) (identifier referenceElement)))))) ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier Returns)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'NodeList'))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier Creates)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'NodeList'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Node)))))) >)))) (identifier getIntersectionList) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))))) (identifier rect))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement)) ?))))) (identifier referenceElement)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier pauseAnimations) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setCurrentTime) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier seconds)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier suspendRedraw) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier maxWaitMilliseconds)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier unpauseAnimations) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier unsuspendRedraw) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier suspendHandleId)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier unsuspendRedrawAll) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier zoomAndPan))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier zoomAndPan) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGSwitchElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier SwitchElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SwitchElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SwitchElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "switch"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SwitchElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier SwitchElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGSymbolElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier SymbolElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FitToViewBox)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SymbolElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier SymbolElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "symbol"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SymbolElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier SymbolElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTSpanElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TSpanElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TextPositioningElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TSpanElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TSpanElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "tspan"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TSpanElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TSpanElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier Tests) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Tests) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier requiredExtensions))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StringList)) ?))) get (identifier systemLanguage))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTextContentElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TextContentElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TextContentElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TextContentElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier LENGTHADJUST_SPACING) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier LENGTHADJUST_SPACINGANDGLYPHS) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier LENGTHADJUST_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier lengthAdjust))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier textLength))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier getCharNumAtPosition) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))))) (identifier point)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getComputedTextLength) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier getEndPositionOfChar) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Rect))))) (identifier getExtentOfChar) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier getNumberOfChars) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getRotationOfChar) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Point))))) (identifier getStartPositionOfChar) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier getSubStringLength) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier nchars)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier selectSubString) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier charnum))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier nchars)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTextElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TextElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TextPositioningElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TextElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TextElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "text"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TextElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TextElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTextPathElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TextPathElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TextContentElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TextPathElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TextPathElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_METHODTYPE_ALIGN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_METHODTYPE_STRETCH) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_METHODTYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_SPACINGTYPE_AUTO) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_SPACINGTYPE_EXACT) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier TEXTPATH_SPACINGTYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier method))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier spacing))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier startOffset))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTextPositioningElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TextPositioningElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TextContentElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TextPositioningElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TextPositioningElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLengthList)) ?))) get (identifier dx))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLengthList)) ?))) get (identifier dy))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedNumberList)) ?))) get (identifier rotate))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLengthList)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLengthList)) ?))) get (identifier y))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTitleElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TitleElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TitleElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TitleElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "title"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TitleElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier TitleElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTransform"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier Transform) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Transform) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_MATRIX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_ROTATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 4))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_SCALE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_SKEWX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 5))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_SKEWY) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 6))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_TRANSLATE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_TRANSFORM_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num)) ?))) get (identifier angle))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix)) ?))) get (identifier matrix))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier type))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setMatrix) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))))) (identifier matrix)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setRotate) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier cx))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier cy)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setScale) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier sx))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier sy)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setSkewX) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setSkewY) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier angle)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setTranslate) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier tx))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier num))))))) (identifier ty)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGTransformList"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier TransformList) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject)))) (mixins with (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform)))))) >))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ImmutableListMixin)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform)))))) >)))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform)))))) >))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TransformList) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier length))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "int"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "#.length"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier numberOfItems))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) operator (operator [ ]) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "bool"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "# >>> 0 !== # || # >= #"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier length))))))))))))))))))) ))))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (qualifiedName (typeIdentifier RangeError) . (identifier index))) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier getItem)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (operatorSignature (type (typeNotFunction void)) operator (operator [ ] =) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot assign element of immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier length) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Cannot resize immutable List."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) get (identifier first))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Transform'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) get (identifier last))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len)))))))))) (relationalOperator >) (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Transform'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[#]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))) (additiveOperator -) (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) get (identifier single))) (functionBody (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier len)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier length)))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier JS)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'Transform'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '#[0]'))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)))) })))))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier len))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0)))))))))))))))))) ) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "No elements"))))))))))))))))))))) ))))))))))))))))))))) ;)))))) (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier StateError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "More than one element"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier elementAt) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this)) (selector (assignableSelector (unconditionalAssignableSelector [ (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier index))))))))))))))))) ])))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier __setter__) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier appendItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier clear) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform)) ?))) (identifier consolidate) (formalParameterPart (formalParameterList ( ))))) (functionBody native ;)) (metadata @ (metadatum (constructorDesignation (typeIdentifier JSName)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'createSVGTransformFromMatrix'))))))))))))))))))))) )))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier createSvgTransformFromMatrix) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Matrix))))))) (identifier matrix)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier getItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier initialize) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier newItem)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier insertItemBefore) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier removeItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))) (identifier replaceItem) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Transform))))))) (identifier newItem))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGUnitTypes"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier UnitTypes) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier UnitTypes) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_UNIT_TYPE_OBJECTBOUNDINGBOX) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_UNIT_TYPE_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_UNIT_TYPE_USERSPACEONUSE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier UriReference) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier UriReference) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGUseElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier UseElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier GraphicsElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier UseElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier UseElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "use"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UseElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier UseElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier height))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier width))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier x))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedLength)) ?))) get (identifier y))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGViewElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier ViewElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FitToViewBox)))) , (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ZoomAndPan)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ViewElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ViewElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "view"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ViewElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier ViewElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedPreserveAspectRatio)) ?))) get (identifier preserveAspectRatio))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedRect)) ?))) get (identifier viewBox))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier zoomAndPan))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier zoomAndPan) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier ZoomAndPan) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier JavaScriptObject))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ZoomAndPan) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ZOOMANDPAN_DISABLE) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ZOOMANDPAN_MAGNIFY) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_ZOOMANDPAN_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) get (identifier zoomAndPan))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (setterSignature set (identifier zoomAndPan) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))))) (identifier value)))))) )))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGGradientElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier _GradientElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier _GradientElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier _GradientElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_SPREADMETHOD_PAD) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 1))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_SPREADMETHOD_REFLECT) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 2))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_SPREADMETHOD_REPEAT) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 3))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static const (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier SVG_SPREADMETHOD_UNKNOWN) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (numericLiteral 0))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedTransformList)) ?))) get (identifier gradientTransform))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier gradientUnits))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedEnumeration)) ?))) get (identifier spreadMethod))) (functionBody native ;)) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier AnimatedString)) ?))) get (identifier href))) (functionBody native ;)) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Unstable)) (arguments ( ))) @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGComponentTransferFunctionElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _SVGComponentTransferFunctionElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier _SVGComponentTransferFunctionElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier _SVGComponentTransferFunctionElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGFEDropShadowElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _SVGFEDropShadowElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier FilterPrimitiveStandardAttributes)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier _SVGFEDropShadowElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier _SVGFEDropShadowElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier Native)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "SVGMPathElement"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _SVGMPathElement) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SvgElement))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier UriReference)))))) { metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier _SVGMPathElement) . (identifier _)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Not supported"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier _SVGMPathElement)) (formalParameterList ( )))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _SvgElementFactoryProvider)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier createSvgElement_tag)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "mpath"))))))))))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _SVGMPathElement)))))))))))) ;)) metadata (classMemberDeclaration (declaration (constructorSignature (constructorName (typeIdentifier _SVGMPathElement) . (identifier created)) (formalParameterList ( ))) (initializers : (initializerListEntry super . (identifier created) (arguments ( ))))) ;) }))) <EOF>)