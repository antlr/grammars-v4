(compilationUnit (libraryDeclaration (libraryName metadata library (dottedIdentifierList (identifier dart) . (identifier io)) ;) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:async')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator hide (identifierList (identifier Symbol))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:collection')))) (combinator show (identifierList (identifier HashMap) , (identifier HashSet) , (identifier Queue) , (identifier ListQueue) , (identifier MapBase) , (identifier UnmodifiableMapView))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:convert')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:developer')))) (combinator hide (identifierList (identifier log))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_http')))) (combinator show (identifierList (identifier HttpClient) , (identifier HttpProfiler))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:isolate')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:math')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:typed_data')))) ;))) (importOrExport (libraryExport metadata export (configurableUri (uri (stringLiteral (singleLineString 'dart:_http')))) (combinator hide (identifierList (identifier HttpProfiler))) ;)) (importOrExport (libraryExport (metadata @ (metadatum (constructorDesignation (typeIdentifier Deprecated)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Import BytesBuilder from dart:typed_data instead"))))))))))))))))))))) )))) export (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator show (identifierList (identifier BytesBuilder))) ;)) (importOrExport (libraryExport metadata export (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator show (identifierList (identifier HttpStatus))) ;)) (partDirective metadata part (uri (stringLiteral (singleLineString 'common.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'data_transformer.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'directory.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'directory_impl.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'embedder_config.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'eventhandler.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'file.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'file_impl.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'file_system_entity.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'io_resource_info.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'io_sink.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'io_service.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'link.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'namespace_impl.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'network_policy.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'network_profiling.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'overrides.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'platform.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'platform_impl.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'process.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'secure_server_socket.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'secure_socket.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'security_context.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'service_object.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'socket.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'stdio.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'string_transformer.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'sync_socket.dart'))) ;)) <EOF>)