(compilationUnit (partDeclaration (partHeader metadata part of (dottedIdentifierList (identifier dart) . (identifier io)) ;) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier Platform) { metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _numberOfProcessors) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier numberOfProcessors)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _pathSeparator) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier pathSeparator)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _operatingSystem) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier operatingSystem)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _operatingSystemVersion) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier operatingSystemVersion)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _localHostname) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier localHostname)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (staticFinalDeclarationList (staticFinalDeclaration (identifier _version) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier version)))))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier numberOfProcessors))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _numberOfProcessors))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier pathSeparator))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _pathSeparator))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier localeName))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier localeName)))) (selector (argumentPart (arguments ( ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier operatingSystem))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier operatingSystemVersion))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystemVersion))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier localHostname))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _localHostname))))))))))))))))) ;)) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isLinux) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "linux"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isMacOS) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "macos"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isWindows) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "windows"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isAndroid) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "android"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isIOS) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "ios"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration static final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) (staticFinalDeclarationList (staticFinalDeclaration (identifier isFuchsia) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _operatingSystem))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "fuchsia"))))))))))))))))))) )))))))))))))))))))) ;) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Map)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))) get (identifier environment))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier environment))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier executable))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier executable))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier resolvedExecutable))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier resolvedExecutable))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri))))) get (identifier script))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier script))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))) get (identifier executableArguments))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier executableArguments))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier packageConfig))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _Platform)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier packageConfig))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier version))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _version))))))))))))))))) ;)) }))) <EOF>)