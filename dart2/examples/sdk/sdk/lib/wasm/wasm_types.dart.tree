(compilationUnit (libraryDeclaration (libraryName metadata library (dottedIdentifierList (identifier dart) . (identifier wasm)) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _WasmBase) { })) metadata (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _WasmInt) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmBase))))) { })) metadata (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _WasmFloat) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmBase))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmAnyRef) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmBase))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmAnyRef) . (identifier fromObject)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))))) (identifier o)))))) )))) ;) metadata (classMemberDeclaration (declaration external (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier isObject))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))) (identifier toObject) (formalParameterPart (formalParameterList ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmFuncRef) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier WasmAnyRef))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmFuncRef) . (identifier fromWasmFunction)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmFunction)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)))))) >)))))) (identifier fun)))))) )))) ;) metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmFuncRef) . (identifier fromRef)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmAnyRef))))))) (identifier ref)))))) )))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmEqRef) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier WasmAnyRef))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmEqRef) . (identifier fromObject)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))))) (identifier o)))))) )))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmDataRef) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier WasmEqRef))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmDataRef) . (identifier fromObject)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))))) (identifier o)))))) )))) ;) })) metadata (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _WasmArray) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier WasmDataRef))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier _WasmArray) . (identifier _dummy)) (formalParameterList ( )))) ;) metadata (classMemberDeclaration (declaration external (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) get (identifier length))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmI8) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmInt))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmI16) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmInt))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmI32) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmInt))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmI32) . (identifier fromInt)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier toIntSigned) (formalParameterPart (formalParameterList ( ))))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier toIntUnsigned) (formalParameterPart (formalParameterList ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmI64) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmInt))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmI64) . (identifier fromInt)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier toInt) (formalParameterPart (formalParameterList ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmF32) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmFloat))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmF32) . (identifier fromDouble)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))))) (identifier value)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier toDouble) (formalParameterPart (formalParameterList ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmF64) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmFloat))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmF64) . (identifier fromDouble)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))))) (identifier value)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier toDouble) (formalParameterPart (formalParameterList ( ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmIntArray) (typeParameters < (typeParameter metadata (identifier T) extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmInt))))) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmArray))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmIntArray)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier length)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier readSigned) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier readUnsigned) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction void)) (identifier write) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier value)))))) ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmFloatArray) (typeParameters < (typeParameter metadata (identifier T) extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmFloat))))) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmArray))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmFloatArray)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier length)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) (identifier read) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction void)) (identifier write) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))))) (identifier value)))))) ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmObjectArray) (typeParameters < (typeParameter metadata (identifier T) extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Object)) ?))) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _WasmArray))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmObjectArray)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier length)))))) )))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))) (identifier read) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index)))))) ))))) ;) metadata (classMemberDeclaration (declaration external (functionSignature (type (typeNotFunction void)) (identifier write) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier index))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) (identifier value)))))) ))))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier WasmFunction) (typeParameters < (typeParameter metadata (identifier F) extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Function))))) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier WasmFuncRef))))) { metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmFunction) . (identifier fromFunction)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier F))))))) (identifier f)))))) )))) ;) metadata (classMemberDeclaration (declaration external (factoryConstructorSignature factory (constructorName (typeIdentifier WasmFunction) . (identifier fromRef)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmAnyRef))))))) (identifier ref)))))) )))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "wasm:entry-point"))))))))))))))))))))) )))) (classMemberDeclaration (declaration external (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier F))))) get (identifier call))) ;) })) metadata (topLevelDeclaration (extensionDeclaration extension (identifier IntToWasmInt) on (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) { metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmI32))))) (identifier toWasmI32) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier WasmI32)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier fromInt)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmI64))))) (identifier toWasmI64) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier WasmI64)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier fromInt)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) })) metadata (topLevelDeclaration (extensionDeclaration extension (identifier DoubleToWasmFloat) on (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier double))))) { metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmF32))))) (identifier toWasmF32) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier WasmF32)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier fromDouble)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier WasmF64))))) (identifier toWasmF64) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier WasmF64)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier fromDouble)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (thisExpression this))))))))))))))))))) ))))))))))))))))))) ;)) }))) <EOF>)