(compilationUnit (libraryDeclaration (libraryName metadata library (dottedIdentifierList (identifier nativewrappers)) ;) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier NativeFieldWrapperClass1) { })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier NativeFieldWrapperClass2) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier NativeFieldWrapperClass1))))) { })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier NativeFieldWrapperClass3) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier NativeFieldWrapperClass2))))) { })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier NativeFieldWrapperClass4) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier NativeFieldWrapperClass3))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:recognized"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "other"))))))))))))))))))))) ))) @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:external-name"))))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "FullyRecognizedMethod_NoNative"))))))))))))))))))))) )))) (topLevelDeclaration external (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier _getNativeField) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier NativeFieldWrapperClass1))))))) (identifier object)))))) )))) ;)) <EOF>)