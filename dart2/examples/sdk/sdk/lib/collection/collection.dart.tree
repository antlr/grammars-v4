(compilationUnit (libraryDeclaration (libraryName metadata library (dottedIdentifierList (identifier dart) . (identifier collection)) ;) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator hide (identifierList (identifier Symbol))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:math')))) (combinator show (identifierList (identifier Random))) ;))) (importOrExport (libraryExport metadata export (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) (combinator show (identifierList (identifier DoubleLinkedQueueEntry))) ;)) (partDirective metadata part (uri (stringLiteral (singleLineString 'collections.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'hash_map.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'hash_set.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'iterable.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'iterator.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'linked_hash_map.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'linked_hash_set.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'linked_list.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'list.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'maps.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'queue.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'set.dart'))) ;) (partDirective metadata part (uri (stringLiteral (singleLineString 'splay_tree.dart'))) ;)) <EOF>)