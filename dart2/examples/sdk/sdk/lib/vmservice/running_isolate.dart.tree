(compilationUnit (partDeclaration (partHeader metadata part of (dottedIdentifierList (identifier dart) . (identifier _vmservice)) ;) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier RunningIsolate) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier MessageRouter)))))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (initializedIdentifierList (initializedIdentifier (identifier portId)))) ;) metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))) (initializedIdentifierList (initializedIdentifier (identifier sendPort)))) ;) metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (initializedIdentifierList (initializedIdentifier (identifier name)))) ;) metadata (classMemberDeclaration (declaration final (initializedIdentifierList (initializedIdentifier (identifier pendingMessagesReceivePorts) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (listLiteral (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RawReceivePort)))))) >) [ ]))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier RunningIsolate) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier portId)))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier sendPort)))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier name))))) ))))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier onIsolateExit) (formalParameterPart (formalParameterList ( ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier pendingMessagesReceivePorts)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier forEach)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (functionExpression (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (identifier port))))) ))) (functionExpressionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier port)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier close)))) (selector (argumentPart (arguments ( ))))))))))))))))))) ;)))) }))))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) get (identifier serviceId))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'isolates/$portId'))))))))))))))))))) ;)) (metadata @ (metadatum (identifier override))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Response)))))) >)))) (identifier routeRequest) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier VMService))))))) (identifier service))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Message))))))) (identifier message)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier message)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier sendToIsolate)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier pendingMessagesReceivePorts))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier sendPort))))))))))))))))))) ))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier override))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier routeResponse) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Message))))))) (identifier message)))))) ))))) (functionBody (block { statements }))) }))) <EOF>)