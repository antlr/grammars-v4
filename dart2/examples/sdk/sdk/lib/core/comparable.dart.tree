(compilationUnit (partDeclaration (partHeader metadata part of (dottedIdentifierList (identifier dart) . (identifier core)) ;) metadata (topLevelDeclaration (typeAlias typedef (typeIdentifier Comparator) (typeParameters < (typeParameter metadata (identifier T)) >) = (type (functionType (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)))) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (typedIdentifier (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))) (identifier a))) , (normalParameterType metadata (typedIdentifier (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))) (identifier b)))) )))))) ;)) metadata (topLevelDeclaration (classDeclaration abstract class (typeIdentifier Comparable) (typeParameters < (typeParameter metadata (identifier T)) >) { metadata (classMemberDeclaration (declaration (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier compareTo) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) (identifier other)))))) ))))) ;) metadata (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (identifier compare) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Comparable))))))) (identifier a))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Comparable))))))) (identifier b)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier a)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier compareTo)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier b))))))))))))))))))) ))))))))))))))))))) ;)) }))) <EOF>)