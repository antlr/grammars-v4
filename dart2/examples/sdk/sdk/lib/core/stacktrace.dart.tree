(compilationUnit (partDeclaration (partHeader metadata part of (dottedIdentifierList (identifier dart) . (identifier core)) ;) metadata (topLevelDeclaration (classDeclaration abstract class (typeIdentifier StackTrace) { (metadata @ (metadatum (constructorDesignation (typeIdentifier Since)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "2.8"))))))))))))))))))))) )))) (classMemberDeclaration (declaration static const (staticFinalDeclarationList (staticFinalDeclaration (identifier empty) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (constObjectExpression const (constructorDesignation (typeIdentifier _StringStackTrace)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString ""))))))))))))))))))))) )))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier StackTrace) (formalParameterPart (formalParameterList ( ))))) ;) metadata (classMemberDeclaration (declaration (redirectingFactoryConstructorSignature factory (constructorName (typeIdentifier StackTrace) . (identifier fromString)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier stackTraceString)))))) )) = (constructorDesignation (typeIdentifier _StringStackTrace)))) ;) metadata (classMemberDeclaration (declaration external static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace))))) get (identifier current))) ;) metadata (classMemberDeclaration (declaration (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier toString) (formalParameterPart (formalParameterList ( ))))) ;) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier _StringStackTrace) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace)))))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (initializedIdentifierList (initializedIdentifier (identifier _stackTrace)))) ;) metadata (classMemberDeclaration (declaration (constantConstructorSignature const (constructorName (typeIdentifier _StringStackTrace)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _stackTrace))))) )))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) (identifier toString) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _stackTrace))))))))))))))))) ;)) }))) <EOF>)