(compilationUnit (partDeclaration (partHeader metadata part of (dottedIdentifierList (identifier dart) . (identifier _internal)) ;) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier CastStream) (typeParameters < (typeParameter metadata (identifier S)) , (typeParameter metadata (identifier T)) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T)))))) >)))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier S)))))) >)))) (initializedIdentifierList (initializedIdentifier (identifier _source)))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier CastStream) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _source))))) ))))) ;) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier isBroadcast))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isBroadcast))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StreamSubscription)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T)))))) >)))) (identifier listen) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (typedIdentifier (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))) (identifier data)))) ))))) ?))) (identifier onData)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)) ?))))) (identifier onError))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( ))))) ?))) (identifier onDone))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))))) (identifier cancelOnError))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (returnStatement return (expr (cascade (cascade (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeName (typeIdentifier CastStreamSubscription)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier S))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier listen)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null))))))))))))))))))) , (namedArgument (label (identifier onDone) :) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier onDone)))))))))))))))))) , (namedArgument (label (identifier cancelOnError) :) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier cancelOnError))))))))))))))))))) ))))))))))))))))))))) )))))))))))))))))) .. (cascadeSection (cascadeSelector (identifier onData)) (cascadeSectionTail (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier onData))))))))))))))))))) ))))))) .. (cascadeSection (cascadeSelector (identifier onError)) (cascadeSectionTail (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier onError))))))))))))))))))) )))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier R)))))) >)))) (identifier cast) (formalParameterPart (typeParameters < (typeParameter metadata (identifier R)) >) (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeName (typeIdentifier CastStream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier S))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier R)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source))))))))))))))))))) ))))))))))))))))))) ;)) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier CastStreamSubscription) (typeParameters < (typeParameter metadata (identifier S)) , (typeParameter metadata (identifier T)) >) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier StreamSubscription)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T)))))) >))))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StreamSubscription)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier S)))))) >)))) (initializedIdentifierList (initializedIdentifier (identifier _source)))) ;) metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Zone))))) (initializedIdentifierList (initializedIdentifier (identifier _zone) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier Zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier current)))))))))))))))))))))) ;) metadata (classMemberDeclaration (declaration (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) ))))) ?)) (initializedIdentifierList (initializedIdentifier (identifier _handleData)))) ;) metadata (classMemberDeclaration (declaration (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)) ?)))) (initializedIdentifierList (initializedIdentifier (identifier _handleError)))) ;) metadata (classMemberDeclaration (methodSignature (constructorSignature (constructorName (typeIdentifier CastStreamSubscription)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _source))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier onData)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _onData))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future))))) (identifier cancel) (formalParameterPart (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier cancel)))) (selector (argumentPart (arguments ( ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier onData) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (typedIdentifier (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))) (identifier data)))) ))))) ?))) (identifier handleData)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier _handleData)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleData))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))) ? (expressionWithoutCascade (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) : (expressionWithoutCascade (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier registerUnaryCallback)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier dynamic))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleData))))))))))))))))))) )))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier onError) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)) ?))))) (identifier handleError)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier onError)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))))))))))) ))))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier _handleError)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError)))))))))) (typeTest (isOperator is) (typeNotVoid (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)))))) , (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace))))))) )))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier _handleError)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier registerBinaryCallback)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier dynamic))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))))))))))) )))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError)))))))))) (typeTest (isOperator is) (typeNotVoid (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))))) )))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier _handleError)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier registerUnaryCallback)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier dynamic))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))))))))))) )))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier ArgumentError)) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "handleError callback must take either an Object ") (singleLineString "(the error), or both an Object (the error) and a StackTrace."))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))))))))))))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier onDone) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (functionFormalParameter (type (typeNotFunction void)) (identifier handleDone) (formalParameterPart (formalParameterList ( ))) ?)))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier onDone)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleDone))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier _onData) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier S))))))) (identifier data)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _handleData))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (returnStatement return ;)))))) (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) (identifier targetData))) ;))) (statement (nonLabelledStatement (tryStatement try (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (assignableExpression (identifier targetData)) (assignmentOperator =) (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier data)))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier T))))))))))))) ;)))) }) (onPart (catchPart catch ( (identifier error) , (identifier stack) )) (block { (statements (statement (nonLabelledStatement (localVariableDeclaration metadata (initializedVariableDeclaration (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier handleError)) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _handleError)))))))))))))))))) ;))) (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))) (equalityOperator ==) (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (nullLiteral null)))))))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier handleUncaughtError)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier error))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier stack))))))))))))))))))) ))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (ifStatement if ( (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError)))))))))) (typeTest (isOperator is) (typeNotVoid (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)))))) , (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace))))))) )))))))))))))) ) (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier runBinaryGuarded)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StackTrace)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier error))))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier stack))))))))))))))))))) ))))))))))))))))))) ;)))) }))) else (statement (nonLabelledStatement (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier runUnaryGuarded)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier handleError)))))))))) (typeCast (asOperator as) (typeNotVoid (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object))))))) )))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier error))))))))))))))))))) ))))))))))))))))))) ;)))) }))))))))) (statement (nonLabelledStatement (returnStatement return ;)))) }))))) (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _zone)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier runUnaryGuarded)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _handleData)) (selector !)))))))))))))))) , (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier targetData))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier pause) (formalParameterPart (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) ?))))) (identifier resumeSignal)))))) ])) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier pause)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier resumeSignal))))))))))))))))))) ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier resume) (formalParameterPart (formalParameterList ( ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier resume)))) (selector (argumentPart (arguments ( ))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))) get (identifier isPaused))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier isPaused))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier E)))))) >)))) (identifier asFuture) (formalParameterPart (typeParameters < (typeParameter metadata (identifier E)) >) (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier E)) ?))))) (identifier futureValue)))))) ])) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier asFuture)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier E)))))) >) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier futureValue))))))))))))))))))) ))))))))))))))))))) ;)) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier CastStreamTransformer) (typeParameters < (typeParameter metadata (identifier SS)) , (typeParameter metadata (identifier ST)) , (typeParameter metadata (identifier TS)) , (typeParameter metadata (identifier TT)) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier StreamTransformerBase)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >)))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StreamTransformer)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ST)))))) >)))) (initializedIdentifierList (initializedIdentifier (identifier _source)))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier CastStreamTransformer) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _source))))) ))))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StreamTransformer)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RT)))))) >)))) (identifier cast) (formalParameterPart (typeParameters < (typeParameter metadata (identifier RS)) , (typeParameter metadata (identifier RT)) >) (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeName (typeIdentifier CastStreamTransformer)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ST))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RT)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source))))))))))))))))))) ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >)))) (identifier bind) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TS)))))) >)))))) (identifier stream)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier bind)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier stream)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier cast)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS)))))) >) (arguments ( ))))))))))))))))))))) )))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier cast)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >) (arguments ( ))))))))))))))))))) ;)) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier CastConverter) (typeParameters < (typeParameter metadata (identifier SS)) , (typeParameter metadata (identifier ST)) , (typeParameter metadata (identifier TS)) , (typeParameter metadata (identifier TT)) >) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Converter)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >)))) { metadata (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Converter)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ST)))))) >)))) (initializedIdentifierList (initializedIdentifier (identifier _source)))) ;) metadata (classMemberDeclaration (declaration (functionSignature (identifier CastConverter) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier _source))))) ))))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT))))) (identifier convert) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TS))))))) (identifier input)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier convert)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier input)))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier SS)))))))))))))) )))))))))))) (typeCast (asOperator as) (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >)))) (identifier bind) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Stream)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TS)))))) >)))))) (identifier stream)))))) ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier bind)))) (selector (argumentPart (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier stream)) (selector (assignableSelector (unconditionalAssignableSelector . (identifier cast)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS)))))) >) (arguments ( ))))))))))))))))))))) )))) (selector (assignableSelector (unconditionalAssignableSelector . (identifier cast)))) (selector (argumentPart (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TT)))))) >) (arguments ( ))))))))))))))))))) ;)) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Converter)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RT)))))) >)))) (identifier cast) (formalParameterPart (typeParameters < (typeParameter metadata (identifier RS)) , (typeParameter metadata (identifier RT)) >) (formalParameterList ( ))))) (functionBody => (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeName (typeIdentifier CastConverter)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier ST))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RS))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RT)))))) >)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier _source))))))))))))))))))) ))))))))))))))))))) ;)) }))) <EOF>)