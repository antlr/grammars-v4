(compilationUnit (libraryDeclaration (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_internal')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:isolate')))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:typed_data')))) ;))) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier _Compound) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier NativeType))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier Struct) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _Compound))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier Union) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier _Compound))))) { })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier _FfiStructLayout) { (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)))))) >)))) (initializedIdentifierList (initializedIdentifier (identifier fieldTypes)))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int)) ?))) (initializedIdentifierList (initializedIdentifier (identifier packing)))) ;) metadata (classMemberDeclaration (declaration (constantConstructorSignature const (constructorName (typeIdentifier _FfiStructLayout)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier fieldTypes)))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier packing))))) )))) ;) })) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (topLevelDeclaration (classDeclaration class (typeIdentifier _FfiInlineArray) { (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Type))))) (initializedIdentifierList (initializedIdentifier (identifier elementType)))) ;) (metadata @ (metadatum (constructorDesignation (typeIdentifier pragma)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "vm:entry-point"))))))))))))))))))))) )))) (classMemberDeclaration (declaration final (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))) (initializedIdentifierList (initializedIdentifier (identifier length)))) ;) metadata (classMemberDeclaration (declaration (constantConstructorSignature const (constructorName (typeIdentifier _FfiInlineArray)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier elementType)))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (fieldFormalParameter this . (identifier length))))) )))) ;) }))) <EOF>)