(compilationUnit (libraryDeclaration (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString "dart:async")))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_foreign_helper')))) (combinator show (identifierList (identifier JS))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString 'dart:_js_helper')))) (combinator show (identifierList (identifier patch))) ;))) (importOrExport (libraryImport metadata (importSpecification import (configurableUri (uri (stringLiteral (singleLineString "dart:typed_data")))) (combinator show (identifierList (identifier TypedData))) ;))) (metadata @ (metadatum (identifier patch))) (topLevelDeclaration (classDeclaration class (typeIdentifier Isolate) { (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Isolate))))) get (identifier current))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.current"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))) get (identifier debugName))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.debugName"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri)) ?)))) >)))) get (identifier packageRoot))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.packageRoot"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri)) ?)))) >)))) get (identifier packageConfig))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.packageConfig"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri)) ?)))) >)))) (identifier resolvePackageUri) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri))))))) (identifier packageUri)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.resolvePackageUri"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Isolate)))))) >)))) (identifier spawn) (formalParameterPart (typeParameters < (typeParameter metadata (identifier T)) >) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (functionFormalParameter (type (typeNotFunction void)) (identifier entryPoint) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) (identifier message)))))) )))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier T))))))) (identifier message)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier paused)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral false))))))))))))))))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier errorsAreFatal)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral true))))))))))))))))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort)) ?))))) (identifier onExit))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort)) ?))))) (identifier onError))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier debugName))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.spawn"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Future)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Isolate)))))) >)))) (identifier spawnUri) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri))))))) (identifier uri))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >)))))) (identifier args))))) , (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType var)) (identifier message)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier paused)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral false))))))))))))))))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort)) ?))))) (identifier onExit))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort)) ?))))) (identifier onError))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier errorsAreFatal)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral true))))))))))))))))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))))) (identifier checked))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Map)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))) , (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)))))) >) ?))))) (identifier environment))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri)) ?))))) (identifier packageRoot))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Uri)) ?))))) (identifier packageConfig))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier automaticPackageResolution)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral false))))))))))))))))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String)) ?))))) (identifier debugName))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.spawnUri"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier _pause) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Capability))))))) (identifier resumeCapability)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate._pause"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier resume) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Capability))))))) (identifier resumeCapability)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.resume"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier addOnExitListener) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))))) (identifier responsePort)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)) ?))))) (identifier response))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.addOnExitListener"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier removeOnExitListener) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))))) (identifier responsePort)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.removeOnExitListener"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier setErrorsFatal) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool))))))) (identifier errorsAreFatal)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.setErrorsFatal"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier kill) (formalParameterPart (formalParameterList ( (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier priority)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier beforeNextEvent)))))))))))))))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.kill"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier ping) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))))) (identifier responsePort)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)) ?))))) (identifier response))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier int))))))) (identifier priority)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (identifier immediate)))))))))))))))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.ping"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier addErrorListener) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))))) (identifier port)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.addErrorListener"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier removeErrorListener) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))))) (identifier port)))))) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.removeErrorListener"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature static (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Never))))) (identifier exit) (formalParameterPart (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort)) ?))))) (identifier finalMessagePort)))))) , (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Object)) ?))))) (identifier message)))))) ])) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "Isolate.exit"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) })) (metadata @ (metadatum (identifier patch))) (topLevelDeclaration (classDeclaration class (typeIdentifier ReceivePort) { (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (declaration (redirectingFactoryConstructorSignature factory (constructorName (typeIdentifier ReceivePort)) (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier debugName)))))) ])) )) = (constructorDesignation (typeIdentifier _ReceivePortImpl)))) ;) (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier ReceivePort) . (identifier fromRawReceivePort)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier RawReceivePort))))))) (identifier rawPort)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'new ReceivePort.fromRawReceivePort'))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) })) metadata (topLevelDeclaration (classDeclaration class (typeIdentifier _ReceivePortImpl) (superclass extends (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier Stream))))) (interfaces implements (typeNotVoidList (typeNotVoid (typeNotVoidNotFunction (typeName (typeIdentifier ReceivePort)))))) { metadata (classMemberDeclaration (declaration (functionSignature (identifier _ReceivePortImpl) (formalParameterPart (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier debugName))))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '')))))))))))))))))))) ])) ))))) ;) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier StreamSubscription))))) (identifier listen) (formalParameterPart (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( (normalParameterTypes (normalParameterType metadata (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier dynamic))))))) ))))) ?))) (identifier onData)))))) , (optionalOrNamedFormalParameters (namedFormalParameters { (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)) ?))))) (identifier onError))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (functionType (typeNotFunction void) (functionTypeTails (functionTypeTail Function (parameterTypeList ( ))))) ?))) (identifier onDone))))) , (defaultNamedParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier bool)) ?))))) (identifier cancelOnError)))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (booleanLiteral true))))))))))))))))))) })) ))))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "ReceivePort.listen"))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) metadata (classMemberDeclaration (methodSignature (functionSignature (type (typeNotFunction void)) (identifier close) (formalParameterPart (formalParameterList ( ))))) (functionBody (block { statements }))) metadata (classMemberDeclaration (methodSignature (getterSignature (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier SendPort))))) get (identifier sendPort))) (functionBody => (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString "ReceivePort.sendPort"))))))))))))))))))))) ))))))))))))))))))))) ;)) })) (metadata @ (metadatum (identifier patch))) (topLevelDeclaration (classDeclaration class (typeIdentifier RawReceivePort) { (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier RawReceivePort)) (formalParameterList ( (optionalOrNamedFormalParameters (optionalPositionalFormalParameters [ (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier Function)) ?))))) (identifier handler)))))) , (defaultFormalParameter (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier String))))))) (identifier debugName))))) = (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString '')))))))))))))))))))) ])) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'new RawReceivePort'))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) })) (metadata @ (metadatum (identifier patch))) (topLevelDeclaration (classDeclaration class (typeIdentifier Capability) { (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier Capability)) (formalParameterList ( )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'new Capability'))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) })) (metadata @ (metadatum (identifier patch))) (topLevelDeclaration (classDeclaration abstract class (typeIdentifier TransferableTypedData) { (metadata @ (metadatum (identifier patch))) (classMemberDeclaration (methodSignature (factoryConstructorSignature factory (constructorName (typeIdentifier TransferableTypedData) . (identifier fromList)) (formalParameterList ( (normalFormalParameters (normalFormalParameter metadata (normalFormalParameterNoMetadata (simpleFormalParameter (declaredIdentifier (finalConstVarOrType (varOrType (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier List)) (typeArguments < (typeList (type (typeNotFunction (typeNotVoidNotFunction (typeName (typeIdentifier TypedData)))))) >)))))) (identifier list)))))) )))) (functionBody (block { (statements (statement (nonLabelledStatement (expressionStatement (expr (throwExpression throw (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (newExpression new (constructorDesignation (typeIdentifier UnsupportedError)) (arguments ( (argumentList (expressionList (expr (conditionalExpression (ifNullExpression (logicalOrExpression (logicalAndExpression (equalityExpression (relationalExpression (bitwiseOrExpression (bitwiseXorExpression (bitwiseAndExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (postfixExpression (primary (literal (stringLiteral (singleLineString 'TransferableTypedData.fromList'))))))))))))))))))))) ))))))))))))))))))))) ;)))) }))) }))) <EOF>)