phoenix_file
 batch
  sql_command
   ddl_command
    drop_table_command
     drop
     table
     table_ref
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_table_command
     drop
     table
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_table_command
     drop
     table
     table_ref
      table_name
       name
        t
     cascade
  ;
 batch
  sql_command
   ddl_command
    drop_table_command
     drop
     table
     if_exists
      if
      exists
     table_ref
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_table_command
     drop
     table
     if_exists
      if
      exists
     table_ref
      table_name
       name
        t
     cascade
  ;
 batch
  sql_command
   ddl_command
    drop_view_command
     drop
     view
     table_ref
      table_name
       name
        v
  ;
 batch
  sql_command
   ddl_command
    drop_view_command
     drop
     view
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        v
  ;
 batch
  sql_command
   ddl_command
    drop_view_command
     drop
     view
     table_ref
      table_name
       name
        v
     cascade
  ;
 batch
  sql_command
   ddl_command
    drop_view_command
     drop
     view
     if_exists
      if
      exists
     table_ref
      table_name
       name
        v
  ;
 batch
  sql_command
   ddl_command
    drop_function_command
     drop
     function
     func_name
      name
       f
  ;
 batch
  sql_command
   ddl_command
    drop_function_command
     drop
     function
     if_exists
      if
      exists
     func_name
      name
       f
  ;
 batch
  sql_command
   ddl_command
    drop_sequence_command
     drop
     sequence
     sequence_ref
      schema_name
       name
        s
      .
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    drop_sequence_command
     drop
     sequence
     sequence_ref
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    drop_sequence_command
     drop
     sequence
     if_exists
      if
      exists
     sequence_ref
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    drop_index_command
     drop
     index
     index_name
      name
       i
     on
     table_ref
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_index_command
     drop
     index
     if_exists
      if
      exists
     index_name
      name
       i
     on
     table_ref
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_index_command
     drop
     index
     if_exists
      if
      exists
     index_name
      name
       i
     on
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
  ;
 batch
  sql_command
   ddl_command
    drop_schema_command
     drop
     schema
     schema_name
      name
       s
  ;
 batch
  sql_command
   ddl_command
    drop_schema_command
     drop
     schema
     if_exists
      if
      exists
     schema_name
      name
       s
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     table_ref
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     )
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     table_ref
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     )
     table_options
      options_
       option
        name
         STORE_NULLS
        =
        literal
         true_false
          true
       ,
       option
        name
         DISABLE_WAL
        =
        literal
         true_false
          false
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     )
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
      ,
      column_def
       column_ref
        column_name
         name
          t
       data_type
        sql_data_type
         time
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     constraint
      constraint
      constraint_name
       name
        pk
      primary
      key
      (
      constraint_column_list
       constraint_column
        column_name
         name
          i
        asc_desc
         asc
       ,
       constraint_column
        column_name
         name
          t
        asc_desc
         desc
      )
     )
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     if_not_exists
      if
      not
      exists
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
       primary
       key
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     )
  ;
 batch
  sql_command
   ddl_command
    create_table_command
     create
     table
     if_not_exists
      if
      not
      exists
     table_ref
      schema_name
       name
        s
      .
      table_name
       name
        t
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
       primary
       key
      ,
      column_def
       column_ref
        column_name
         name
          c
       data_type
        sql_data_type
         char
         (
         precision_int
          integer
           1
         )
     )
     split
     on
     (
     split_point_list
      split_point
       literal
        numeric
         integer
          1
     )
  ;
 batch
  sql_command
   ddl_command
    create_function_command
     create
     function
     func_name
      name
       f
     (
     func_argument_list
      func_argument
       data_type
        sql_data_type
         integer
     )
     returns
     data_type
      sql_data_type
       integer
     as
     class_name
      string
       'org.apache.Dummy'
  ;
 batch
  sql_command
   ddl_command
    create_function_command
     create
     temporary
     function
     func_name
      name
       f
     (
     func_argument_list
      func_argument
       data_type
        sql_data_type
         integer
      ,
      func_argument
       data_type
        sql_data_type
         bigint
     )
     returns
     data_type
      sql_data_type
       integer
     as
     class_name
      string
       'org.apache.Dummy'
  ;
 batch
  sql_command
   ddl_command
    create_function_command
     create
     function
     func_name
      name
       f
     (
     func_argument_list
      func_argument
       data_type
        sql_data_type
         integer
     )
     returns
     data_type
      sql_data_type
       integer
     as
     class_name
      string
       'org.apache.Dummy'
     using
     jar
     jar_path
      string
       'dummy.jar'
  ;
 batch
  sql_command
   ddl_command
    create_view_command
     create
     view
     new_table_ref
      table_ref
       table_name
        name
         v
  ;
 batch
  sql_command
   ddl_command
    create_view_command
     create
     view
     new_table_ref
      table_ref
       table_name
        name
         v
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
       primary
       key
      ,
      column_def
       column_ref
        column_name
         name
          bi
       data_type
        sql_data_type
         bigint
     )
     as
     select
     *
     from
     existing_table_ref
      table_ref
       table_name
        name
         t
  ;
 batch
  sql_command
   ddl_command
    create_view_command
     create
     view
     new_table_ref
      table_ref
       table_name
        name
         v
     (
     column_def_list
      column_def
       column_ref
        column_name
         name
          i
       data_type
        sql_data_type
         integer
       primary
       key
      ,
      column_def
       column_ref
        column_name
         name
          bi
       data_type
        sql_data_type
         bigint
     )
     as
     select
     *
     from
     existing_table_ref
      table_ref
       table_name
        name
         t
     where
     expression
      expression
       column_name
        name
         c
      comp_op
       =
      expression
       literal
        numeric
         integer
          1
  ;
 batch
  sql_command
   ddl_command
    create_view_command
     create
     view
     if_not_exists
      if
      not
      exists
     new_table_ref
      table_ref
       schema_name
        name
         s
       .
       table_name
        name
         v
  ;
 batch
  sql_command
   ddl_command
    create_schema_command
     create
     schema
     schema_name
      name
       s
  ;
 batch
  sql_command
   ddl_command
    create_schema_command
     create
     schema
     if_not_exists
      if
      not
      exists
     schema_name
      name
       s
  ;
 batch
  sql_command
   ddl_command
    create_sequence_command
     create
     sequence
     sequence_ref
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    create_sequence_command
     create
     sequence
     sequence_ref
      schema_name
       name
        s
      .
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    create_sequence_command
     create
     sequence
     if_not_exists
      if
      not
      exists
     sequence_ref
      sequence_name
       name
        s
  ;
 batch
  sql_command
   ddl_command
    create_sequence_command
     create
     sequence
     if_not_exists
      if
      not
      exists
     sequence_ref
      sequence_name
       name
        s
     start
     with
     bind_parameter_number
      number
       1
     increment
     by
     bind_parameter_number
      number
       2
     cache
     bind_parameter_number
      number
       2
  ;
 batch
  sql_command
   ddl_command
    create_sequence_command
     create
     sequence
     if_not_exists
      if
      not
      exists
     sequence_ref
      sequence_name
       name
        s
     start
     with
     bind_parameter_number
      number
       1
     increment
     by
     bind_parameter_number
      number
       2
     minvalue
     bind_parameter_number
      number
       1
     maxvalue
     bind_parameter_number
      number
       10
     cycle
     cache
     bind_parameter_number
      number
       2
  ;
 batch
  sql_command
   other_command
    declare_cursor_command
     declare
     cursor
     cursor_name
      name
       c
     for
     select_statement
      select
      select_expression
       *
      from
      table_spec
       aliased_table_ref
        table_ref
         table_name
          name
           t
  ;
 batch
  sql_command
   other_command
    open_cursor_command
     open
     cursor
     cursor_name
      name
       c
  ;
 batch
  sql_command
   other_command
    fetch_next_command
     fetch
     next
     number
      1
     rows
     from
     cursor_name
      name
       c
  ;
 batch
  sql_command
   other_command
    fetch_next_command
     fetch
     next
     from
     cursor_name
      name
       c
  ;
 batch
  sql_command
   other_command
    close_command
     close
     cursor_name
      name
       c
  ;
 <EOF>
