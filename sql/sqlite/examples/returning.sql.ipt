parse
 sql_stmt_list
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t1
    (
    column_name
     any_name
      b
    ,
    column_name
     any_name
      c
    )
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        5
      ,
      expr
       literal_value
        99
      )
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t1
    (
    column_name
     any_name
      b
    ,
    column_name
     any_name
      c
    )
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        5
      ,
      expr
       literal_value
        99
      )
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         b
     ,
     result_column
      expr
       column_name
        any_name
         c
     ,
     result_column
      expr
       column_name
        any_name
         a
     ,
     result_column
      expr
       column_name
        any_name
         rowid
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t1
    DEFAULT
    VALUES
    returning_clause
     RETURNING
     result_column
      *
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t1
    select_stmt
     select_core
      SELECT
      result_column
       *
      FROM
      table_or_subquery
       table_name
        any_name
         t2
    returning_clause
     RETURNING
     result_column
      *
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t1
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        3
      )
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         a
     ,
     result_column
      expr
       (
       select_stmt
        select_core
         SELECT
         result_column
          expr
           column_name
            any_name
             c
         FROM
         table_or_subquery
          table_name
           any_name
            t2
         WHERE
         expr
          expr
           table_name
            any_name
             t1
           .
           column_name
            any_name
             a
          =
          expr
           table_name
            any_name
             t2
           .
           column_name
            any_name
             b
       )
      AS
      column_alias
       x
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t4
    (
    column_name
     any_name
      a
    ,
    column_name
     any_name
      b
    ,
    column_name
     any_name
      c
    )
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        1
      ,
      expr
       literal_value
        22
      ,
      expr
       literal_value
        33
      )
    upsert_clause
     ON
     CONFLICT
     (
     indexed_column
      column_name
       any_name
        a
     )
     DO
     UPDATE
     SET
     column_name
      any_name
       b
     =
     expr
      literal_value
       44
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t4
    (
    column_name
     any_name
      a
    ,
    column_name
     any_name
      b
    ,
    column_name
     any_name
      c
    )
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        1
      ,
      expr
       literal_value
        22
      ,
      expr
       literal_value
        33
      )
    upsert_clause
     ON
     CONFLICT
     (
     indexed_column
      column_name
       any_name
        a
     )
     DO
     UPDATE
     SET
     column_name
      any_name
       b
     =
     expr
      literal_value
       44
    returning_clause
     RETURNING
     result_column
      *
  ;
  sql_stmt
   insert_stmt
    INSERT
    INTO
    table_name
     any_name
      t4
    (
    column_name
     any_name
      a
    ,
    column_name
     any_name
      b
    ,
    column_name
     any_name
      c
    )
    values_clause
     VALUES
     value_row
      (
      expr
       literal_value
        2
      ,
      expr
       literal_value
        3
      ,
      expr
       literal_value
        4
      )
     ,
     value_row
      (
      expr
       literal_value
        4
      ,
      expr
       literal_value
        5
      ,
      expr
       literal_value
        6
      )
     ,
     value_row
      (
      expr
       literal_value
        5
      ,
      expr
       literal_value
        6
      ,
      expr
       literal_value
        7
      )
    upsert_clause
     ON
     CONFLICT
     (
     indexed_column
      column_name
       any_name
        a
     )
     DO
     UPDATE
     SET
     column_name
      any_name
       b
     =
     expr
      literal_value
       100
    returning_clause
     RETURNING
     result_column
      *
     ,
     result_column
      expr
       literal_value
        '|'
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t1
    SET
    column_name
     any_name
      c
    =
    expr
     literal_value
      'bellum'
    WHERE
    expr
     expr
      column_name
       any_name
        c
     =
     expr
      literal_value
       'pax'
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t1
    SET
    column_name
     any_name
      c
    =
    expr
     literal_value
      'bellum'
    WHERE
    expr
     expr
      column_name
       any_name
        c
     =
     expr
      literal_value
       'pax'
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         rowid
     ,
     result_column
      expr
       column_name
        any_name
         b
     ,
     result_column
      expr
       literal_value
        '|'
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t2
    SET
    column_name
     any_name
      b
    =
    expr
     literal_value
      '123'
    WHERE
    expr
     expr
      column_name
       any_name
        b
     =
     expr
      literal_value
       'abc'
    returning_clause
     RETURNING
     result_column
      expr
       (
       select_stmt
        select_core
         SELECT
         result_column
          expr
           column_name
            any_name
             b
         FROM
         table_or_subquery
          table_name
           any_name
            t1
       )
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t2
    SET
    column_name
     any_name
      b
    =
    expr
     literal_value
      '123'
    WHERE
    expr
     expr
      column_name
       any_name
        b
     =
     expr
      literal_value
       'abc'
    returning_clause
     RETURNING
     result_column
      expr
       (
       select_stmt
        select_core
         SELECT
         result_column
          expr
           column_name
            any_name
             b
         FROM
         table_or_subquery
          table_name
           any_name
            t1
       )
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t2
    SET
    column_name
     any_name
      b
    =
    expr
     literal_value
      '123'
    WHERE
    expr
     expr
      column_name
       any_name
        b
     =
     expr
      literal_value
       'abc'
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         b
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t1
    SET
    column_name
     any_name
      id
    =
    expr
     expr
      column_name
       any_name
        id
     +
     expr
      column_name
       any_name
        y
    FROM
    table_or_subquery
     table_name
      any_name
       t2
    WHERE
    expr
     expr
      table_name
       any_name
        t1
      .
      column_name
       any_name
        id
     =
     expr
      table_name
       any_name
        t2
      .
      column_name
       any_name
        x
    returning_clause
     RETURNING
     result_column
      *
     ,
     result_column
      expr
       literal_value
        '|'
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t1
    SET
    column_name
     any_name
      b
    =
    expr
     expr
      column_name
       any_name
        b
     +
     expr
      column_name
       any_name
        y
    FROM
    table_or_subquery
     table_name
      any_name
       t2
    WHERE
    expr
     expr
      table_name
       any_name
        t2
      .
      column_name
       any_name
        x
     =
     expr
      table_name
       any_name
        t1
      .
      column_name
       any_name
        a
    returning_clause
     RETURNING
     result_column
      expr
       table_name
        any_name
         t1
       .
       column_name
        any_name
         b
  ;
  sql_stmt
   update_stmt
    UPDATE
    qualified_table_name
     table_name
      any_name
       t1
     AS
     alias
      any_name
       alias
    SET
    column_name
     any_name
      b
    =
    expr
     expr
      table_name
       any_name
        alias
      .
      column_name
       any_name
        b
     +
     expr
      literal_value
       1000
    returning_clause
     RETURNING
     result_column
      expr
       table_name
        any_name
         t1
       .
       column_name
        any_name
         b
  ;
  sql_stmt
   delete_stmt
    DELETE
    FROM
    qualified_table_name
     table_name
      any_name
       t1
    WHERE
    expr
     expr
      column_name
       any_name
        c
     =
     expr
      literal_value
       'bellum'
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         rowid
     ,
     result_column
      *
     ,
     result_column
      expr
       literal_value
        '|'
  ;
  sql_stmt
   delete_stmt
    DELETE
    FROM
    qualified_table_name
     table_name
      any_name
       t1
    returning_clause
     RETURNING
     result_column
      *
  ;
  sql_stmt
   delete_stmt
    DELETE
    FROM
    qualified_table_name
     table_name
      any_name
       t3
    WHERE
    expr
     expr
      column_name
       any_name
        f
     >
     expr
      literal_value
       100
    returning_clause
     RETURNING
     result_column
      expr
       literal_value
        'D'
     ,
     result_column
      expr
       column_name
        any_name
         e
     ,
     result_column
      expr
       column_name
        any_name
         f
  ;
  sql_stmt
   delete_stmt
    DELETE
    FROM
    qualified_table_name
     table_name
      any_name
       t1
    returning_clause
     RETURNING
     result_column
      expr
       column_name
        any_name
         x
     ,
     result_column
      expr
       function_name
        any_name
         affinity
       (
       expr
        column_name
         any_name
          x
       )
  ;
 <EOF>
