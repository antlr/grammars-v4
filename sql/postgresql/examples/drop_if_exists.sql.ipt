root
 stmtblock
  stmtmulti
   stmt
    dropstmt
     DROP
     object_type_any_name
      TABLE
     any_name_list
      any_name
       colid
        identifier
         test_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TABLE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    createstmt
     CREATE
     opttemp
     TABLE
     qualified_name
      colid
       identifier
        test_exists
        opt_uescape
     (
     opttableelementlist
      tableelementlist
       tableelement
        columnDef
         colid
          identifier
           a
           opt_uescape
         typename
          simpletypename
           numeric
            int
          opt_array_bounds
         create_generic_options
         colquallist
       ,
       tableelement
        columnDef
         colid
          identifier
           b
           opt_uescape
         typename
          simpletypename
           generictype
            type_function_name
             unreserved_keyword
              text
            opt_type_modifiers
          opt_array_bounds
         create_generic_options
         colquallist
     )
     optinherit
     optpartitionspec
     table_access_method_clause
     optwith
     oncommitoption
     opttablespace
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      VIEW
     any_name_list
      any_name
       colid
        identifier
         test_view_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      VIEW
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_view_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    viewstmt
     CREATE
     opttemp
     VIEW
     qualified_name
      colid
       identifier
        test_view_exists
        opt_uescape
     opt_column_list
     opt_reloptions
     AS
     selectstmt
      select_no_parens
       select_clause
        simple_select_intersect
         simple_select_pramary
          select
          opt_all_clause
          into_clause
          opt_target_list
           target_list
            target_el
             *
          into_clause
          from_clause
           from
           from_list
            table_ref
             relation_expr
              qualified_name
               colid
                identifier
                 test_exists
                 opt_uescape
             opt_alias_clause
          where_clause
          group_clause
          having_clause
          window_clause
       opt_sort_clause
     opt_check_option
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      VIEW
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_view_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      VIEW
     any_name_list
      any_name
       colid
        identifier
         test_view_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      INDEX
     any_name_list
      any_name
       colid
        identifier
         test_index_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      INDEX
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_index_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    indexstmt
     CREATE
     opt_unique
     INDEX
     opt_concurrently
     opt_index_name
      name
       colid
        identifier
         test_index_exists
         opt_uescape
     on
     relation_expr
      qualified_name
       colid
        identifier
         test_exists
         opt_uescape
     access_method_clause
     (
     index_params
      index_elem
       colid
        identifier
         a
         opt_uescape
       index_elem_options
        opt_collate
        opt_class
        opt_asc_desc
        opt_nulls_order
     )
     opt_include
     opt_reloptions
     opttablespace
     where_clause
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      INDEX
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_index_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      INDEX
     any_name_list
      any_name
       colid
        identifier
         test_index_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      SEQUENCE
     any_name_list
      any_name
       colid
        identifier
         test_sequence_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      SEQUENCE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_sequence_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    createseqstmt
     CREATE
     opttemp
     SEQUENCE
     qualified_name
      colid
       identifier
        test_sequence_exists
        opt_uescape
     optseqoptlist
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      SEQUENCE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_sequence_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      SEQUENCE
     any_name_list
      any_name
       colid
        identifier
         test_sequence_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SCHEMA
     name_list
      name
       colid
        identifier
         test_schema_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SCHEMA
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_schema_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    createschemastmt
     CREATE
     SCHEMA
     colid
      identifier
       test_schema_exists
       opt_uescape
     optschemaeltlist
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SCHEMA
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_schema_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SCHEMA
     name_list
      name
       colid
        identifier
         test_schema_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     TYPE
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_type_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     TYPE
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_type_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    definestmt
     CREATE
     type
     any_name
      colid
       identifier
        test_type_exists
        opt_uescape
     as
     (
     opttablefuncelementlist
      tablefuncelementlist
       tablefuncelement
        colid
         identifier
          a
          opt_uescape
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        opt_collate_clause
       ,
       tablefuncelement
        colid
         identifier
          b
          opt_uescape
        typename
         simpletypename
          generictype
           type_function_name
            unreserved_keyword
             text
           opt_type_modifiers
         opt_array_bounds
        opt_collate_clause
     )
   ;
   stmt
    dropstmt
     DROP
     TYPE
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_type_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     TYPE
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_type_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     DOMAIN
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_domain_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     DOMAIN
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_domain_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    createdomainstmt
     CREATE
     domain
     any_name
      colid
       identifier
        test_domain_exists
        opt_uescape
     opt_as
      as
     typename
      simpletypename
       numeric
        int
      opt_array_bounds
     colquallist
      colconstraint
       colconstraintelem
        not
        null
      colconstraint
       colconstraintelem
        check
        (
        a_expr
         a_expr_qual
          a_expr_lessless
           a_expr_or
            a_expr_and
             a_expr_between
              a_expr_in
               a_expr_unary_not
                a_expr_isnull
                 a_expr_is_not
                  a_expr_compare
                   a_expr_like
                    a_expr_qual_op
                     a_expr_unary_qualop
                      a_expr_add
                       a_expr_mul
                        a_expr_caret
                         a_expr_unary_sign
                          a_expr_at_time_zone
                           a_expr_collate
                            a_expr_typecast
                             c_expr
                              columnref
                               colid
                                unreserved_keyword
                                 value
                   >
                   a_expr_like
                    a_expr_qual_op
                     a_expr_unary_qualop
                      a_expr_add
                       a_expr_mul
                        a_expr_caret
                         a_expr_unary_sign
                          a_expr_at_time_zone
                           a_expr_collate
                            a_expr_typecast
                             c_expr
                              aexprconst
                               iconst
                                0
        )
        opt_no_inherit
   ;
   stmt
    dropstmt
     DROP
     DOMAIN
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_domain_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     DOMAIN
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           test_domain_exists
           opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    createuserstmt
     CREATE
     USER
     roleid
      rolespec
       nonreservedword
        identifier
         regress_test_u1
         opt_uescape
     opt_with
     optrolelist
   ;
   stmt
    createrolestmt
     CREATE
     ROLE
     roleid
      rolespec
       nonreservedword
        identifier
         regress_test_r1
         opt_uescape
     opt_with
     optrolelist
   ;
   stmt
    creategroupstmt
     CREATE
     GROUP
     roleid
      rolespec
       nonreservedword
        identifier
         regress_test_g1
         opt_uescape
     opt_with
     optrolelist
   ;
   stmt
    droprolestmt
     DROP
     USER
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_u2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     USER
     IF
     EXISTS
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_u1
         opt_uescape
      ,
      rolespec
       nonreservedword
        identifier
         regress_test_u2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     USER
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_u1
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     ROLE
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_r2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     ROLE
     IF
     EXISTS
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_r1
         opt_uescape
      ,
      rolespec
       nonreservedword
        identifier
         regress_test_r2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     ROLE
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_r1
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     GROUP
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_g2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     GROUP
     IF
     EXISTS
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_g1
         opt_uescape
      ,
      rolespec
       nonreservedword
        identifier
         regress_test_g2
         opt_uescape
   ;
   stmt
    droprolestmt
     DROP
     GROUP
     role_list
      rolespec
       nonreservedword
        identifier
         regress_test_g1
         opt_uescape
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      COLLATION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_collation_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      CONVERSION
     any_name_list
      any_name
       colid
        identifier
         test_conversion_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      CONVERSION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_conversion_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    createconversionstmt
     CREATE
     opt_default
     CONVERSION
     any_name
      colid
       identifier
        test_conversion_exists
        opt_uescape
     FOR
     sconst
      anysconst
       'LATIN1'
      opt_uescape
     TO
     sconst
      anysconst
       'UTF8'
      opt_uescape
     FROM
     any_name
      colid
       identifier
        iso8859_1_to_utf8
        opt_uescape
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      CONVERSION
     any_name_list
      any_name
       colid
        identifier
         test_conversion_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      PARSER
     any_name_list
      any_name
       colid
        identifier
         test_tsparser_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      PARSER
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_tsparser_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      DICTIONARY
     any_name_list
      any_name
       colid
        identifier
         test_tsdict_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      DICTIONARY
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_tsdict_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    definestmt
     CREATE
     TEXT
     SEARCH
     DICTIONARY
     any_name
      colid
       identifier
        test_tsdict_exists
        opt_uescape
     definition
      (
      def_list
       def_elem
        collabel
         unreserved_keyword
          Template
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               ispell
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
       ,
       def_elem
        collabel
         identifier
          DictFile
          opt_uescape
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               ispell_sample
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
       ,
       def_elem
        collabel
         identifier
          AffFile
          opt_uescape
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               ispell_sample
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
      )
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      DICTIONARY
     any_name_list
      any_name
       colid
        identifier
         test_tsdict_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      TEMPLATE
     any_name_list
      any_name
       colid
        identifier
         test_tstemplate_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      TEMPLATE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_tstemplate_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      CONFIGURATION
     any_name_list
      any_name
       colid
        identifier
         test_tsconfig_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      CONFIGURATION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_tsconfig_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    definestmt
     CREATE
     TEXT
     SEARCH
     CONFIGURATION
     any_name
      colid
       identifier
        test_tsconfig_exists
        opt_uescape
     definition
      (
      def_list
       def_elem
        collabel
         unreserved_keyword
          COPY
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               english
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
      )
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      CONFIGURATION
     any_name_list
      any_name
       colid
        identifier
         test_tsconfig_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      EXTENSION
     name_list
      name
       colid
        identifier
         test_extension_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      EXTENSION
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_extension_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_function_exists
          opt_uescape
       func_args
        (
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_function_exists
          opt_uescape
       func_args
        (
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_function_exists
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
         ,
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               unreserved_keyword
                text
              opt_type_modifiers
            opt_array_bounds
         ,
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
             [
             ]
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_function_exists
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
         ,
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               unreserved_keyword
                text
              opt_type_modifiers
            opt_array_bounds
         ,
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
             [
             ]
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          test_aggregate_exists
          opt_uescape
       aggr_args
        (
        *
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     IF
     EXISTS
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          test_aggregate_exists
          opt_uescape
       aggr_args
        (
        *
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          test_aggregate_exists
          opt_uescape
       aggr_args
        (
        aggr_args_list
         aggr_arg
          func_arg
           func_type
            typename
             simpletypename
              numeric
               int
             opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     IF
     EXISTS
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          test_aggregate_exists
          opt_uescape
       aggr_args
        (
        aggr_args_list
         aggr_arg
          func_arg
           func_type
            typename
             simpletypename
              numeric
               int
             opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         @#@
       oper_argtypes
        (
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        ,
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     IF
     EXISTS
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         @#@
       oper_argtypes
        (
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        ,
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    definestmt
     CREATE
     OPERATOR
     any_operator
      all_op
       @#@
     definition
      (
      def_list
       def_elem
        collabel
         identifier
          leftarg
          opt_uescape
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               int8
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
       ,
       def_elem
        collabel
         identifier
          rightarg
          opt_uescape
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               int8
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
       ,
       def_elem
        collabel
         unreserved_keyword
          procedure
        =
        def_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              identifier
               int8xor
               opt_uescape
             opt_type_modifiers
           opt_array_bounds
      )
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         @#@
       oper_argtypes
        (
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             int8
             opt_uescape
           opt_type_modifiers
         opt_array_bounds
        ,
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             int8
             opt_uescape
           opt_type_modifiers
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      opt_procedural
      LANGUAGE
     name_list
      name
       colid
        identifier
         test_language_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      opt_procedural
      LANGUAGE
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_language_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
     (
     typename
      simpletypename
       generictype
        type_function_name
         unreserved_keyword
          text
        opt_type_modifiers
      opt_array_bounds
     AS
     typename
      simpletypename
       generictype
        type_function_name
         unreserved_keyword
          text
        opt_type_modifiers
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
      IF
      EXISTS
     (
     typename
      simpletypename
       generictype
        type_function_name
         unreserved_keyword
          text
        opt_type_modifiers
      opt_array_bounds
     AS
     typename
      simpletypename
       generictype
        type_function_name
         unreserved_keyword
          text
        opt_type_modifiers
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     IF
     EXISTS
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_table
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     IF
     EXISTS
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_table
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          no_such_table
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     IF
     EXISTS
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          no_such_table
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    createtrigstmt
     CREATE
     TRIGGER
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     triggeractiontime
      BEFORE
     triggerevents
      triggeroneevent
       UPDATE
     ON
     qualified_name
      colid
       identifier
        test_exists
        opt_uescape
     triggerreferencing
     triggerforspec
      FOR
      triggerforopteach
       EACH
      triggerfortype
       ROW
     triggerwhen
     EXECUTE
     function_or_procedure
      PROCEDURE
     func_name
      type_function_name
       identifier
        suppress_redundant_updates_trigger
        opt_uescape
     (
     triggerfuncargs
     )
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     name
      colid
       identifier
        test_trigger_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     IF
     EXISTS
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_table
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     IF
     EXISTS
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_table
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          no_such_table
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     IF
     EXISTS
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          no_such_table
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    rulestmt
     CREATE
     opt_or_replace
     RULE
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     AS
     ON
     event
      INSERT
     TO
     qualified_name
      colid
       identifier
        test_exists
        opt_uescape
     where_clause
     DO
     opt_instead
      INSTEAD
     ruleactionlist
      ruleactionstmt
       insertstmt
        opt_with_clause
        INSERT
        INTO
        insert_target
         qualified_name
          colid
           identifier
            test_exists
            opt_uescape
        insert_rest
         selectstmt
          select_no_parens
           select_clause
            simple_select_intersect
             simple_select_pramary
              values_clause
               VALUES
               (
               expr_list
                a_expr
                 a_expr_qual
                  a_expr_lessless
                   a_expr_or
                    a_expr_and
                     a_expr_between
                      a_expr_in
                       a_expr_unary_not
                        a_expr_isnull
                         a_expr_is_not
                          a_expr_compare
                           a_expr_like
                            a_expr_qual_op
                             a_expr_unary_qualop
                              a_expr_add
                               a_expr_mul
                                a_expr_caret
                                 a_expr_unary_sign
                                  a_expr_at_time_zone
                                   a_expr_collate
                                    a_expr_typecast
                                     c_expr
                                      columnref
                                       colid
                                        unreserved_keyword
                                         NEW
                                       indirection
                                        indirection_el
                                         .
                                         attr_name
                                          collabel
                                           identifier
                                            a
                                            opt_uescape
                ,
                a_expr
                 a_expr_qual
                  a_expr_lessless
                   a_expr_or
                    a_expr_and
                     a_expr_between
                      a_expr_in
                       a_expr_unary_not
                        a_expr_isnull
                         a_expr_is_not
                          a_expr_compare
                           a_expr_like
                            a_expr_qual_op
                             a_expr_unary_qualop
                              a_expr_add
                               a_expr_mul
                                a_expr_caret
                                 a_expr_unary_sign
                                  a_expr_at_time_zone
                                   a_expr_collate
                                    a_expr_typecast
                                     c_expr
                                      columnref
                                       colid
                                        unreserved_keyword
                                         NEW
                                       indirection
                                        indirection_el
                                         .
                                         attr_name
                                          collabel
                                           identifier
                                            b
                                            opt_uescape
                             qual_op
                              ||
                             a_expr_unary_qualop
                              a_expr_add
                               a_expr_mul
                                a_expr_caret
                                 a_expr_unary_sign
                                  a_expr_at_time_zone
                                   a_expr_collate
                                    a_expr_typecast
                                     c_expr
                                      columnref
                                       colid
                                        unreserved_keyword
                                         NEW
                                       indirection
                                        indirection_el
                                         .
                                         attr_name
                                          collabel
                                           identifier
                                            a
                                            opt_uescape
                                     ::
                                     typename
                                      simpletypename
                                       generictype
                                        type_function_name
                                         unreserved_keyword
                                          text
                                        opt_type_modifiers
                                      opt_array_bounds
               )
           opt_sort_clause
        opt_on_conflict
        returning_clause
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     name
      colid
       identifier
        test_rule_exists
        opt_uescape
     ON
     any_name
      colid
       identifier
        test_exists
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      FOREIGN
      DATA
      WRAPPER
     name_list
      name
       colid
        identifier
         test_fdw_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      FOREIGN
      DATA
      WRAPPER
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_fdw_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SERVER
     name_list
      name
       colid
        identifier
         test_server_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      SERVER
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         test_server_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopclassstmt
     DROP
     OPERATOR
     CLASS
     any_name
      colid
       identifier
        test_operator_class
        opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopclassstmt
     DROP
     OPERATOR
     CLASS
     IF
     EXISTS
     any_name
      colid
       identifier
        test_operator_class
        opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopclassstmt
     DROP
     OPERATOR
     CLASS
     any_name
      colid
       identifier
        test_operator_class
        opt_uescape
     USING
     name
      colid
       identifier
        no_such_am
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopclassstmt
     DROP
     OPERATOR
     CLASS
     IF
     EXISTS
     any_name
      colid
       identifier
        test_operator_class
        opt_uescape
     USING
     name
      colid
       identifier
        no_such_am
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopfamilystmt
     DROP
     OPERATOR
     FAMILY
     any_name
      colid
       identifier
        test_operator_family
        opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopfamilystmt
     DROP
     OPERATOR
     FAMILY
     IF
     EXISTS
     any_name
      colid
       identifier
        test_operator_family
        opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopfamilystmt
     DROP
     OPERATOR
     FAMILY
     any_name
      colid
       identifier
        test_operator_family
        opt_uescape
     USING
     name
      colid
       identifier
        no_such_am
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopfamilystmt
     DROP
     OPERATOR
     FAMILY
     IF
     EXISTS
     any_name
      colid
       identifier
        test_operator_family
        opt_uescape
     USING
     name
      colid
       identifier
        no_such_am
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      ACCESS
      METHOD
     name_list
      name
       colid
        identifier
         no_such_am
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     drop_type_name
      ACCESS
      METHOD
     IF
     EXISTS
     name_list
      name
       colid
        identifier
         no_such_am
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TABLE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         test_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TABLE
     any_name_list
      any_name
       colid
        identifier
         test_exists
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     IF
     EXISTS
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        colid
         identifier
          no_such_schema
          opt_uescape
        indirection
         indirection_el
          .
          attr_name
           collabel
            identifier
             foo
             opt_uescape
       aggr_args
        (
        aggr_args_list
         aggr_arg
          func_arg
           func_type
            typename
             simpletypename
              numeric
               int
             opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     IF
     EXISTS
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          foo
          opt_uescape
       aggr_args
        (
        aggr_args_list
         aggr_arg
          func_arg
           func_type
            typename
             simpletypename
              generictype
               type_function_name
                identifier
                 no_such_type
                 opt_uescape
               opt_type_modifiers
             opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeaggrstmt
     DROP
     AGGREGATE
     IF
     EXISTS
     aggregate_with_argtypes_list
      aggregate_with_argtypes
       func_name
        type_function_name
         identifier
          foo
          opt_uescape
       aggr_args
        (
        aggr_args_list
         aggr_arg
          func_arg
           func_type
            typename
             simpletypename
              generictype
               type_function_name
                identifier
                 no_such_schema
                 opt_uescape
               attrs
                .
                attr_name
                 collabel
                  identifier
                   no_such_type
                   opt_uescape
               opt_type_modifiers
             opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
      IF
      EXISTS
     (
     typename
      simpletypename
       numeric
        INTEGER
      opt_array_bounds
     AS
     typename
      simpletypename
       generictype
        type_function_name
         identifier
          no_such_type2
          opt_uescape
        opt_type_modifiers
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
      IF
      EXISTS
     (
     typename
      simpletypename
       generictype
        type_function_name
         identifier
          no_such_type1
          opt_uescape
        opt_type_modifiers
      opt_array_bounds
     AS
     typename
      simpletypename
       numeric
        INTEGER
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
      IF
      EXISTS
     (
     typename
      simpletypename
       numeric
        INTEGER
      opt_array_bounds
     AS
     typename
      simpletypename
       generictype
        type_function_name
         identifier
          no_such_schema
          opt_uescape
        attrs
         .
         attr_name
          collabel
           identifier
            bar
            opt_uescape
        opt_type_modifiers
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropcaststmt
     DROP
     CAST
     opt_if_exists
      IF
      EXISTS
     (
     typename
      simpletypename
       generictype
        type_function_name
         identifier
          no_such_schema
          opt_uescape
        attrs
         .
         attr_name
          collabel
           identifier
            foo
            opt_uescape
        opt_type_modifiers
      opt_array_bounds
     AS
     typename
      simpletypename
       numeric
        INTEGER
      opt_array_bounds
     )
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      COLLATION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      CONVERSION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     DOMAIN
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           no_such_schema
           opt_uescape
         attrs
          .
          attr_name
           collabel
            identifier
             foo
             opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      FOREIGN
      TABLE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       func_name
        colid
         identifier
          no_such_schema
          opt_uescape
        indirection
         indirection_el
          .
          attr_name
           collabel
            identifier
             foo
             opt_uescape
       func_args
        (
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          foo
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               identifier
                no_such_type
                opt_uescape
              opt_type_modifiers
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          foo
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               identifier
                no_such_schema
                opt_uescape
              attrs
               .
               attr_name
                collabel
                 identifier
                  no_such_type
                  opt_uescape
              opt_type_modifiers
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      INDEX
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      MATERIALIZED
      VIEW
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     IF
     EXISTS
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        colid
         identifier
          no_such_schema
          opt_uescape
        .
        all_op
         mathop
          +
       oper_argtypes
        (
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        ,
        typename
         simpletypename
          numeric
           int
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     IF
     EXISTS
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         mathop
          +
       oper_argtypes
        (
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             no_such_type
             opt_uescape
           opt_type_modifiers
         opt_array_bounds
        ,
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             no_such_type
             opt_uescape
           opt_type_modifiers
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     IF
     EXISTS
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         mathop
          +
       oper_argtypes
        (
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             no_such_schema
             opt_uescape
           attrs
            .
            attr_name
             collabel
              identifier
               no_such_type
               opt_uescape
           opt_type_modifiers
         opt_array_bounds
        ,
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             no_such_schema
             opt_uescape
           attrs
            .
            attr_name
             collabel
              identifier
               no_such_type
               opt_uescape
           opt_type_modifiers
         opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    dropopclassstmt
     DROP
     OPERATOR
     CLASS
     IF
     EXISTS
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          widget_ops
          opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropopfamilystmt
     DROP
     OPERATOR
     FAMILY
     IF
     EXISTS
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          float_ops
          opt_uescape
     USING
     name
      colid
       identifier
        btree
        opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      RULE
     IF
     EXISTS
     name
      colid
       identifier
        foo
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          bar
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      SEQUENCE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TABLE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      CONFIGURATION
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      DICTIONARY
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      PARSER
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      TEXT
      SEARCH
      TEMPLATE
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_name_on_any_name
      TRIGGER
     IF
     EXISTS
     name
      colid
       identifier
        foo
        opt_uescape
     ON
     any_name
      colid
       identifier
        no_such_schema
        opt_uescape
      attrs
       .
       attr_name
        collabel
         identifier
          bar
          opt_uescape
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     TYPE
     IF
     EXISTS
     type_name_list
      typename
       simpletypename
        generictype
         type_function_name
          identifier
           no_such_schema
           opt_uescape
         attrs
          .
          attr_name
           collabel
            identifier
             foo
             opt_uescape
         opt_type_modifiers
       opt_array_bounds
     opt_drop_behavior
   ;
   stmt
    dropstmt
     DROP
     object_type_any_name
      VIEW
     IF
     EXISTS
     any_name_list
      any_name
       colid
        identifier
         no_such_schema
         opt_uescape
       attrs
        .
        attr_name
         collabel
          identifier
           foo
           opt_uescape
     opt_drop_behavior
   ;
   stmt
    createfunctionstmt
     CREATE
     opt_or_replace
     FUNCTION
     func_name
      type_function_name
       identifier
        test_ambiguous_funcname
        opt_uescape
     func_args_with_defaults
      (
      func_args_with_defaults_list
       func_arg_with_default
        func_arg
         func_type
          typename
           simpletypename
            numeric
             int
           opt_array_bounds
      )
     returns
     func_return
      func_type
       typename
        simpletypename
         numeric
          int
        opt_array_bounds
     createfunc_opt_list
      createfunc_opt_item
       as
       func_as
        sconst
         anysconst
          $$
           select 
          $1; 
          $$
         opt_uescape
      createfunc_opt_item
       language
       nonreservedword_or_sconst
        nonreservedword
         unreserved_keyword
          sql
   ;
   stmt
    createfunctionstmt
     CREATE
     opt_or_replace
     FUNCTION
     func_name
      type_function_name
       identifier
        test_ambiguous_funcname
        opt_uescape
     func_args_with_defaults
      (
      func_args_with_defaults_list
       func_arg_with_default
        func_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              unreserved_keyword
               text
             opt_type_modifiers
           opt_array_bounds
      )
     returns
     func_return
      func_type
       typename
        simpletypename
         generictype
          type_function_name
           unreserved_keyword
            text
          opt_type_modifiers
        opt_array_bounds
     createfunc_opt_list
      createfunc_opt_item
       as
       func_as
        sconst
         anysconst
          $$
           select 
          $1; 
          $$
         opt_uescape
      createfunc_opt_item
       language
       nonreservedword_or_sconst
        nonreservedword
         unreserved_keyword
          sql
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     function_with_argtypes_list
      function_with_argtypes
       colid
        identifier
         test_ambiguous_funcname
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       colid
        identifier
         test_ambiguous_funcname
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_ambiguous_funcname
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     FUNCTION
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_ambiguous_funcname
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               unreserved_keyword
                text
              opt_type_modifiers
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    createfunctionstmt
     CREATE
     opt_or_replace
     PROCEDURE
     func_name
      type_function_name
       identifier
        test_ambiguous_procname
        opt_uescape
     func_args_with_defaults
      (
      func_args_with_defaults_list
       func_arg_with_default
        func_arg
         func_type
          typename
           simpletypename
            numeric
             int
           opt_array_bounds
      )
     createfunc_opt_list
      createfunc_opt_item
       as
       func_as
        sconst
         anysconst
          $$
           begin end; 
          $$
         opt_uescape
      createfunc_opt_item
       language
       nonreservedword_or_sconst
        nonreservedword
         identifier
          plpgsql
          opt_uescape
   ;
   stmt
    createfunctionstmt
     CREATE
     opt_or_replace
     PROCEDURE
     func_name
      type_function_name
       identifier
        test_ambiguous_procname
        opt_uescape
     func_args_with_defaults
      (
      func_args_with_defaults_list
       func_arg_with_default
        func_arg
         func_type
          typename
           simpletypename
            generictype
             type_function_name
              unreserved_keyword
               text
             opt_type_modifiers
           opt_array_bounds
      )
     createfunc_opt_list
      createfunc_opt_item
       as
       func_as
        sconst
         anysconst
          $$
           begin end; 
          $$
         opt_uescape
      createfunc_opt_item
       language
       nonreservedword_or_sconst
        nonreservedword
         identifier
          plpgsql
          opt_uescape
   ;
   stmt
    removefuncstmt
     DROP
     PROCEDURE
     function_with_argtypes_list
      function_with_argtypes
       colid
        identifier
         test_ambiguous_procname
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     PROCEDURE
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       colid
        identifier
         test_ambiguous_procname
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     ROUTINE
     IF
     EXISTS
     function_with_argtypes_list
      function_with_argtypes
       colid
        identifier
         test_ambiguous_procname
         opt_uescape
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     PROCEDURE
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_ambiguous_procname
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             numeric
              int
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    removefuncstmt
     DROP
     PROCEDURE
     function_with_argtypes_list
      function_with_argtypes
       func_name
        type_function_name
         identifier
          test_ambiguous_procname
          opt_uescape
       func_args
        (
        func_args_list
         func_arg
          func_type
           typename
            simpletypename
             generictype
              type_function_name
               unreserved_keyword
                text
              opt_type_modifiers
            opt_array_bounds
        )
     opt_drop_behavior
   ;
   stmt
    dropdbstmt
     drop
     database
     name
      colid
       identifier
        test_database_exists
        opt_uescape
     opt_with
     (
     drop_option_list
      drop_option
       force
     )
   ;
   stmt
    dropdbstmt
     drop
     database
     name
      colid
       identifier
        test_database_exists
        opt_uescape
     opt_with
      with
     (
     drop_option_list
      drop_option
       force
     )
   ;
   stmt
    dropdbstmt
     drop
     database
     if
     exists
     name
      colid
       identifier
        test_database_exists
        opt_uescape
     opt_with
     (
     drop_option_list
      drop_option
       force
     )
   ;
   stmt
    dropdbstmt
     drop
     database
     if
     exists
     name
      colid
       identifier
        test_database_exists
        opt_uescape
     opt_with
      with
     (
     drop_option_list
      drop_option
       force
     )
   ;
   stmt
    removeoperstmt
     DROP
     OPERATOR
     IF
     EXISTS
     operator_with_argtypes_list
      operator_with_argtypes
       any_operator
        all_op
         #
       oper_argtypes
        (
        NONE
        ,
        typename
         simpletypename
          generictype
           type_function_name
            identifier
             no_such_schema
             opt_uescape
           attrs
            .
            attr_name
             collabel
              identifier
               no_such_type
               opt_uescape
           opt_type_modifiers
         opt_array_bounds
        )
     opt_drop_behavior
   ;
 <EOF>
