tsql_file
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     DISTRIBUTED
     TRANSACTION
   ;
  sql_clauses
   dml_clause
    delete_statement
     DELETE
     delete_statement_from
      ddl_object
       full_table_name
        id_
         AdventureWorks2012
        .
        id_
         HumanResources
        .
        id_
         JobCandidate
     WHERE
     search_condition
      predicate
       expression
        full_column_name
         id_
          JobCandidateID
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          13
     ;
  sql_clauses
   dml_clause
    delete_statement
     DELETE
     delete_statement_from
      ddl_object
       full_table_name
        id_
         RemoteServer
        .
        id_
         AdventureWorks2012
        .
        id_
         HumanResources
        .
        id_
         JobCandidate
     WHERE
     search_condition
      predicate
       expression
        full_column_name
         id_
          JobCandidateID
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          13
     ;
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @TranName
     data_type
      id_
       keyword
        VARCHAR
      (
      20
      )
   ;
  sql_clauses
   dml_clause
    select_statement_standalone
     select_statement
      query_expression
       query_specification
        SELECT
        select_list
         select_list_elem
          @TranName
          =
          expression
           primitive_expression
            primitive_constant
             'MyTransaction'
      ;
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
     @TranName
   ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   dml_clause
    delete_statement
     DELETE
     FROM
     delete_statement_from
      ddl_object
       full_table_name
        id_
         AdventureWorks2012
        .
        id_
         HumanResources
        .
        id_
         JobCandidate
     WHERE
     search_condition
      predicate
       expression
        full_column_name
         id_
          JobCandidateID
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          13
     ;
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
     @TranName
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
     id_
      CandidateDelete
     WITH
     MARK
     N'Deleting a Job Candidate'
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   dml_clause
    delete_statement
     DELETE
     FROM
     delete_statement_from
      ddl_object
       full_table_name
        id_
         AdventureWorks2012
        .
        id_
         HumanResources
        .
        id_
         JobCandidate
     WHERE
     search_condition
      predicate
       expression
        full_column_name
         id_
          JobCandidateID
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          13
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
     id_
      CandidateDelete
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
   ;
  go_statement
   GO
 batch
  sql_clauses
   dml_clause
    delete_statement
     DELETE
     FROM
     delete_statement_from
      ddl_object
       full_table_name
        id_
         HumanResources
        .
        id_
         JobCandidate
     WHERE
     search_condition
      predicate
       expression
        full_column_name
         id_
          JobCandidateID
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          13
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        function_call
         built_in_functions
          OBJECT_ID
          (
          expression
           primitive_expression
            primitive_constant
             N'TestTran'
          ,
          expression
           primitive_expression
            primitive_constant
             N'U'
          )
       IS
       null_notnull
        NOT
        NULL
     sql_clauses
      ddl_clause
       drop_table
        DROP
        TABLE
        table_name
         id_
          TestTran
        ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    create_table
     CREATE
     TABLE
     table_name
      id_
       TestTran
     (
     column_def_table_constraints
      column_def_table_constraint
       column_definition
        id_
         Cola
        data_type
         id_
          keyword
           int
        column_definition_element
         column_constraint
          PRIMARY
          KEY
          primary_key_options
      ,
      column_def_table_constraint
       column_definition
        id_
         Colb
        data_type
         id_
          keyword
           char
         (
         3
         )
     )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
     id_
      OuterTran
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after BEGIN OuterTran = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   dml_clause
    insert_statement
     INSERT
     INTO
     ddl_object
      full_table_name
       id_
        TestTran
     insert_statement_value
      table_value_constructor
       VALUES
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           1
        ,
        expression
         primitive_expression
          primitive_constant
           'aaa'
       )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
     id_
      Inner1
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after BEGIN Inner1 = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   dml_clause
    insert_statement
     INSERT
     INTO
     ddl_object
      full_table_name
       id_
        TestTran
     insert_statement_value
      table_value_constructor
       VALUES
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           2
        ,
        expression
         primitive_expression
          primitive_constant
           'bbb'
       )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
     id_
      Inner2
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after BEGIN Inner2 = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   dml_clause
    insert_statement
     INSERT
     INTO
     ddl_object
      full_table_name
       id_
        TestTran
     insert_statement_value
      table_value_constructor
       VALUES
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           3
        ,
        expression
         primitive_expression
          primitive_constant
           'ccc'
       )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
     id_
      Inner2
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after COMMIT Inner2 = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
     id_
      Inner1
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after COMMIT Inner1 = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     COMMIT
     TRANSACTION
     id_
      OuterTran
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      expression
       primitive_expression
        primitive_constant
         N'Transaction count after COMMIT OuterTran = '
      +
      expression
       function_call
        built_in_functions
         CAST
         (
         expression
          primitive_expression
           @@TRANCOUNT
         AS
         data_type
          id_
           keyword
            nvarchar
          (
          10
          )
         )
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      tempdb
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    create_table
     CREATE
     TABLE
     table_name
      id_
       ValueTable
     (
     column_def_table_constraints
      column_def_table_constraint
       column_definition
        id_
         keyword
          [value]
        data_type
         id_
          keyword
           int
     )
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @TransactionName
      data_type
       id_
        keyword
         varchar
       (
       20
       )
      =
      expression
       primitive_expression
        primitive_constant
         'Transaction1'
   ;
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRAN
     @TransactionName
  sql_clauses
   dml_clause
    insert_statement
     INSERT
     INTO
     ddl_object
      full_table_name
       id_
        ValueTable
     insert_statement_value
      table_value_constructor
       VALUES
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           1
       )
       ,
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           2
       )
     ;
  sql_clauses
   another_statement
    transaction_statement
     ROLLBACK
     TRAN
     @TransactionName
   ;
  sql_clauses
   dml_clause
    insert_statement
     INSERT
     INTO
     ddl_object
      full_table_name
       id_
        ValueTable
     insert_statement_value
      table_value_constructor
       VALUES
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           3
       )
       ,
       (
       expression_list_
        expression
         primitive_expression
          primitive_constant
           4
       )
     ;
  sql_clauses
   dml_clause
    select_statement_standalone
     select_statement
      query_expression
       query_specification
        SELECT
        select_list
         select_list_elem
          expression_elem
           expression
            full_column_name
             id_
              keyword
               [value]
        FROM
        table_sources
         table_source
          table_source_item
           full_table_name
            id_
             ValueTable
      ;
  sql_clauses
   ddl_clause
    drop_table
     DROP
     TABLE
     table_name
      id_
       ValueTable
     ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       EXISTS
       (
       subquery
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               full_column_name
                id_
                 keyword
                  name
           FROM
           table_sources
            table_source
             table_source_item
              full_table_name
               id_
                sys
               .
               id_
                objects
           WHERE
           search_condition
            predicate
             expression
              full_column_name
               id_
                keyword
                 name
             comparison_operator
              =
             expression
              primitive_expression
               primitive_constant
                N'SaveTranExample'
       )
     sql_clauses
      ddl_clause
       drop_procedure
        DROP
        PROCEDURE
        func_proc_name_schema
         id_
          SaveTranExample
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_procedure
    CREATE
    PROCEDURE
    func_proc_name_schema
     id_
      SaveTranExample
    procedure_param
     @InputCandidateID
     data_type
      id_
       keyword
        INT
    AS
    sql_clauses
     another_statement
      declare_statement
       DECLARE
       @TranCounter
       data_type
        id_
         keyword
          INT
     ;
    sql_clauses
     another_statement
      set_statement
       SET
       @TranCounter
       =
       expression
        primitive_expression
         @@TRANCOUNT
     ;
    sql_clauses
     cfl_statement
      if_statement
       IF
       search_condition
        predicate
         expression
          primitive_expression
           @TranCounter
         comparison_operator
          >
         expression
          primitive_expression
           primitive_constant
            0
       sql_clauses
        another_statement
         transaction_statement
          SAVE
          TRANSACTION
          id_
           ProcedureSave
        ;
       ELSE
       sql_clauses
        another_statement
         transaction_statement
          BEGIN
          TRANSACTION
        ;
    sql_clauses
     cfl_statement
      try_catch_statement
       BEGIN
       TRY
       sql_clauses
        dml_clause
         delete_statement
          DELETE
          delete_statement_from
           ddl_object
            full_table_name
             id_
              HumanResources
             .
             id_
              JobCandidate
          WHERE
          search_condition
           predicate
            expression
             full_column_name
              id_
               JobCandidateID
            comparison_operator
             =
            expression
             primitive_expression
              @InputCandidateID
          ;
       sql_clauses
        cfl_statement
         if_statement
          IF
          search_condition
           predicate
            expression
             primitive_expression
              @TranCounter
            comparison_operator
             =
            expression
             primitive_expression
              primitive_constant
               0
          sql_clauses
           another_statement
            transaction_statement
             COMMIT
             TRANSACTION
           ;
       END
       TRY
       BEGIN
       CATCH
       sql_clauses
        cfl_statement
         if_statement
          IF
          search_condition
           predicate
            expression
             primitive_expression
              @TranCounter
            comparison_operator
             =
            expression
             primitive_expression
              primitive_constant
               0
          sql_clauses
           another_statement
            transaction_statement
             ROLLBACK
             TRANSACTION
           ;
          ELSE
          sql_clauses
           cfl_statement
            if_statement
             IF
             search_condition
              predicate
               expression
                function_call
                 built_in_functions
                  XACT_STATE
                  (
                  )
               comparison_operator
                <
                >
               expression
                unary_operator_expression
                 -
                 expression
                  primitive_expression
                   primitive_constant
                    1
             sql_clauses
              another_statement
               transaction_statement
                ROLLBACK
                TRANSACTION
                id_
                 ProcedureSave
              ;
       sql_clauses
        another_statement
         declare_statement
          DECLARE
          @ErrorMessage
          data_type
           id_
            keyword
             NVARCHAR
           (
           4000
           )
        ;
       sql_clauses
        another_statement
         declare_statement
          DECLARE
          @ErrorSeverity
          data_type
           id_
            keyword
             INT
        ;
       sql_clauses
        another_statement
         declare_statement
          DECLARE
          @ErrorState
          data_type
           id_
            keyword
             INT
        ;
       sql_clauses
        dml_clause
         select_statement_standalone
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               @ErrorMessage
               =
               expression
                function_call
                 built_in_functions
                  ERROR_MESSAGE
                  (
                  )
           ;
       sql_clauses
        dml_clause
         select_statement_standalone
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               @ErrorSeverity
               =
               expression
                function_call
                 built_in_functions
                  ERROR_SEVERITY
                  (
                  )
           ;
       sql_clauses
        dml_clause
         select_statement_standalone
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               @ErrorState
               =
               expression
                function_call
                 built_in_functions
                  ERROR_STATE
                  (
                  )
           ;
       sql_clauses
        cfl_statement
         raiseerror_statement
          RAISERROR
          (
          @ErrorMessage
          ,
          constant_LOCAL_ID
           @ErrorSeverity
          ,
          constant_LOCAL_ID
           @ErrorState
          )
          ;
       END
       CATCH
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    checkpoint_statement
     CHECKPOINT
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    checkpoint_statement
     CHECKPOINT
     100
   ;
  go_statement
   GO
 <EOF>
