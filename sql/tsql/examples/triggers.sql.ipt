tsql_file
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_dml_trigger
     CREATE
     TRIGGER
     simple_name
      id_
       reminder1
     ON
     table_name
      id_
       Sales
      .
      id_
       Customer
     AFTER
     dml_trigger_operation
      INSERT
     ,
     dml_trigger_operation
      UPDATE
     AS
     sql_clauses
      cfl_statement
       raiseerror_statement
        RAISERROR
        (
        'Notify Customer Relations'
        ,
        constant_LOCAL_ID
         constant
          16
        ,
        constant_LOCAL_ID
         constant
          10
        )
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_dml_trigger
     CREATE
     OR
     ALTER
     TRIGGER
     simple_name
      id_
       reminder2
     ON
     table_name
      id_
       Sales
      .
      id_
       Customer
     AFTER
     dml_trigger_operation
      INSERT
     ,
     dml_trigger_operation
      UPDATE
     ,
     dml_trigger_operation
      DELETE
     AS
     sql_clauses
      another_statement
       execute_statement
        EXEC
        execute_body
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           id_
            msdb
           .
           id_
            dbo
           .
           id_
            sp_send_dbmail
         execute_statement_arg
          execute_statement_arg_named
           @profile_name
           =
           execute_parameter
            constant
             'AdventureWorks2012 Administrator'
          ,
          execute_statement_arg_named
           @recipients
           =
           execute_parameter
            constant
             'danw@Adventure-Works.com'
          ,
          execute_statement_arg_named
           @body
           =
           execute_parameter
            constant
             'Don''t forget to print a report for the sales force.'
          ,
          execute_statement_arg_named
           @subject
           =
           execute_parameter
            constant
             'Reminder'
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_dml_trigger
     CREATE
     TRIGGER
     simple_name
      id_
       Purchasing
      .
      id_
       LowCredit
     ON
     table_name
      id_
       Purchasing
      .
      id_
       PurchaseOrderHeader
     AFTER
     dml_trigger_operation
      INSERT
     AS
     sql_clauses
      cfl_statement
       if_statement
        IF
        search_condition
         predicate
          EXISTS
          (
          subquery
           select_statement
            query_expression
             query_specification
              SELECT
              select_list
               select_list_elem
                asterisk
                 *
              FROM
              table_sources
               table_source
                table_source_item
                 full_table_name
                  id_
                   Purchasing
                  .
                  id_
                   PurchaseOrderHeader
                 as_table_alias
                  AS
                  table_alias
                   id_
                    p
                join_part
                 join_on
                  JOIN
                  table_source
                   table_source_item
                    full_table_name
                     id_
                      keyword
                       inserted
                    as_table_alias
                     AS
                     table_alias
                      id_
                       i
                  ON
                  search_condition
                   predicate
                    expression
                     full_column_name
                      full_table_name
                       id_
                        p
                      .
                      id_
                       PurchaseOrderID
                    comparison_operator
                     =
                    expression
                     full_column_name
                      full_table_name
                       id_
                        i
                      .
                      id_
                       PurchaseOrderID
                join_part
                 join_on
                  JOIN
                  table_source
                   table_source_item
                    full_table_name
                     id_
                      Purchasing
                     .
                     id_
                      Vendor
                    as_table_alias
                     AS
                     table_alias
                      id_
                       v
                  ON
                  search_condition
                   predicate
                    expression
                     full_column_name
                      full_table_name
                       id_
                        v
                      .
                      id_
                       BusinessEntityID
                    comparison_operator
                     =
                    expression
                     full_column_name
                      full_table_name
                       id_
                        p
                      .
                      id_
                       VendorID
              WHERE
              search_condition
               predicate
                expression
                 full_column_name
                  full_table_name
                   id_
                    v
                  .
                  id_
                   CreditRating
                comparison_operator
                 =
                expression
                 primitive_expression
                  primitive_constant
                   5
          )
        sql_clauses
         cfl_statement
          block_statement
           BEGIN
           sql_clauses
            cfl_statement
             raiseerror_statement
              RAISERROR
              (
              'A vendor''s credit rating is too low to accept new  \npurchase orders.'
              ,
              constant_LOCAL_ID
               constant
                16
              ,
              constant_LOCAL_ID
               constant
                1
              )
              ;
           sql_clauses
            another_statement
             transaction_statement
              ROLLBACK
              TRANSACTION
            ;
           sql_clauses
            cfl_statement
             return_statement
              RETURN
           END
           ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_ddl_trigger
     CREATE
     TRIGGER
     simple_name
      id_
       keyword
        safety
     ON
     DATABASE
     FOR
     ddl_trigger_operation
      simple_id
       DROP_SYNONYM
     AS
     sql_clauses
      cfl_statement
       raiseerror_statement
        RAISERROR
        (
        'You must disable Trigger "safety" to drop synonyms!'
        ,
        constant_LOCAL_ID
         constant
          10
        ,
        constant_LOCAL_ID
         constant
          1
        )
     sql_clauses
      another_statement
       transaction_statement
        ROLLBACK
        id_
         keyword
          GO
     sql_clauses
      ddl_clause
       drop_trigger
        drop_ddl_trigger
         DROP
         TRIGGER
         simple_name
          id_
           keyword
            safety
         ON
         DATABASE
         ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_ddl_trigger
     CREATE
     TRIGGER
     simple_name
      id_
       triggerOnDatabase
     ON
     DATABASE
     FOR
     ddl_trigger_operation
      simple_id
       create_procedure
     ,
     ddl_trigger_operation
      simple_id
       alter_procedure
     ,
     ddl_trigger_operation
      simple_id
       drop_procedure
     ,
     ddl_trigger_operation
      simple_id
       create_table
     ,
     ddl_trigger_operation
      simple_id
       alter_table
     ,
     ddl_trigger_operation
      simple_id
       drop_table
     ,
     ddl_trigger_operation
      simple_id
       create_trigger
     ,
     ddl_trigger_operation
      simple_id
       alter_trigger
     ,
     ddl_trigger_operation
      simple_id
       drop_trigger
     ,
     ddl_trigger_operation
      simple_id
       create_view
     ,
     ddl_trigger_operation
      simple_id
       alter_view
     ,
     ddl_trigger_operation
      simple_id
       drop_view
     ,
     ddl_trigger_operation
      simple_id
       create_function
     ,
     ddl_trigger_operation
      simple_id
       alter_function
     ,
     ddl_trigger_operation
      simple_id
       drop_function
     ,
     ddl_trigger_operation
      simple_id
       create_index
     ,
     ddl_trigger_operation
      simple_id
       alter_index
     ,
     ddl_trigger_operation
      simple_id
       drop_index
     AS
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         another_statement
          declare_statement
           declare
           @variable
           data_type
            id_
             keyword
              int
        END
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    drop_trigger
     drop_ddl_trigger
      DROP
      TRIGGER
      simple_name
       id_
        triggerOnDatabase
      ON
      DATABASE
      ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_trigger
    create_or_alter_ddl_trigger
     CREATE
     TRIGGER
     simple_name
      id_
       ddl_trig_database
     ON
     ALL
     SERVER
     FOR
     ddl_trigger_operation
      simple_id
       CREATE_DATABASE
     AS
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'Database Created.'
     sql_clauses
      dml_clause
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 xml_data_type_methods
                  value_method
                   EVENTDATA
                   (
                   )
                   .
                   value_call
                    value
                    (
                    '(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]'
                    ,
                    'nvarchar(max)'
                    )
              as_column_alias
               column_alias
                id_
                 keyword
                  GO
     sql_clauses
      ddl_clause
       drop_trigger
        drop_ddl_trigger
         DROP
         TRIGGER
         simple_name
          id_
           ddl_trig_database
         ON
         ALL
         SERVER
         ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    disable_trigger
     DISABLE
     TRIGGER
     id_
      Person
     .
     id_
      uAddress
     ON
     id_
      Person
     .
     id_
      keyword
       Address
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    enable_trigger
     ENABLE
     Trigger
     id_
      Person
     .
     id_
      uAddress
     ON
     id_
      Person
     .
     id_
      keyword
       Address
   ;
  sql_clauses
   ddl_clause
    disable_trigger
     DISABLE
     TRIGGER
     id_
      keyword
       safety
     ON
     DATABASE
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    enable_trigger
     ENABLE
     TRIGGER
     id_
      keyword
       safety
     ON
     DATABASE
   ;
  sql_clauses
   ddl_clause
    enable_trigger
     ENABLE
     Trigger
     ALL
     ON
     ALL
     SERVER
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    disable_trigger
     DISABLE
     TRIGGER
     id_
      Person
     .
     id_
      uAddress
     ON
     id_
      Person
     .
     id_
      keyword
       Address
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    disable_trigger
     DISABLE
     TRIGGER
     id_
      keyword
       safety
     ON
     DATABASE
   ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    disable_trigger
     DISABLE
     Trigger
     ALL
     ON
     ALL
     SERVER
   ;
  go_statement
   GO
 <EOF>
