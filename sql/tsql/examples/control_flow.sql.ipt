tsql_file
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        primitive_expression
         @@TRANCOUNT
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          0
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         dml_clause
          select_statement_standalone
           select_statement
            query_expression
             query_specification
              SELECT
              select_list
               select_list_elem
                expression_elem
                 expression
                  full_column_name
                   id_
                    FirstName
               ,
               select_list_elem
                expression_elem
                 expression
                  full_column_name
                   id_
                    MiddleName
              FROM
              table_sources
               table_source
                table_source_item
                 full_table_name
                  id_
                   Person
                  .
                  id_
                   Person
              WHERE
              search_condition
               predicate
                expression
                 full_column_name
                  id_
                   LastName
                comparison_operator
                 =
                expression
                 primitive_expression
                  primitive_constant
                   'Adams'
            ;
        sql_clauses
         another_statement
          transaction_statement
           ROLLBACK
           TRANSACTION
         ;
        sql_clauses
         cfl_statement
          print_statement
           PRINT
           expression
            primitive_expression
             primitive_constant
              N'Rolling back the transaction two times would cause an error.'
           ;
        END
        ;
  sql_clauses
   another_statement
    transaction_statement
     ROLLBACK
     TRANSACTION
   ;
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      primitive_expression
       primitive_constant
        N'Rolled back the transaction.'
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @Counter
     data_type
      id_
       keyword
        int
   ;
  sql_clauses
   another_statement
    set_statement
     SET
     @Counter
     =
     expression
      primitive_expression
       primitive_constant
        1
   ;
  sql_clauses
   cfl_statement
    while_statement
     WHILE
     search_condition
      predicate
       expression
        primitive_expression
         @Counter
       comparison_operator
        <
       expression
        primitive_expression
         primitive_constant
          10
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         dml_clause
          select_statement_standalone
           select_statement
            query_expression
             query_specification
              SELECT
              select_list
               select_list_elem
                expression_elem
                 expression
                  primitive_expression
                   @Counter
        sql_clauses
         another_statement
          set_statement
           SET
           @Counter
           =
           expression
            expression
             primitive_expression
              @Counter
            +
            expression
             primitive_expression
              primitive_constant
               1
        sql_clauses
         cfl_statement
          if_statement
           IF
           search_condition
            predicate
             expression
              primitive_expression
               @Counter
             comparison_operator
              =
             expression
              primitive_expression
               primitive_constant
                4
           sql_clauses
            cfl_statement
             goto_statement
              GOTO
              id_
               Branch_One
        sql_clauses
         cfl_statement
          if_statement
           IF
           search_condition
            predicate
             expression
              primitive_expression
               @Counter
             comparison_operator
              =
             expression
              primitive_expression
               primitive_constant
                5
           sql_clauses
            cfl_statement
             goto_statement
              GOTO
              id_
               Branch_Two
        END
  sql_clauses
   cfl_statement
    goto_statement
     id_
      Branch_One
     :
  sql_clauses
   dml_clause
    select_statement_standalone
     select_statement
      query_expression
       query_specification
        SELECT
        select_list
         select_list_elem
          expression_elem
           expression
            primitive_expression
             primitive_constant
              'Jumping To Branch One.'
  sql_clauses
   cfl_statement
    goto_statement
     GOTO
     id_
      Branch_Three
     ;
  sql_clauses
   cfl_statement
    goto_statement
     id_
      Branch_Two
     :
  sql_clauses
   dml_clause
    select_statement_standalone
     select_statement
      query_expression
       query_specification
        SELECT
        select_list
         select_list_elem
          expression_elem
           expression
            primitive_expression
             primitive_constant
              'Jumping To Branch Two.'
  sql_clauses
   cfl_statement
    goto_statement
     id_
      Branch_Three
     :
  sql_clauses
   dml_clause
    select_statement_standalone
     select_statement
      query_expression
       query_specification
        SELECT
        select_list
         select_list_elem
          expression_elem
           expression
            primitive_expression
             primitive_constant
              'Jumping To Branch Three.'
      ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @compareprice
      data_type
       id_
        money
     ,
     declare_local
      @cost
      data_type
       id_
        money
  sql_clauses
   another_statement
    execute_statement
     EXECUTE
     execute_body
      func_proc_name_server_database_schema
       func_proc_name_database_schema
        func_proc_name_schema
         id_
          Production
         .
         id_
          uspGetList
      execute_statement_arg
       execute_statement_arg_unnamed
        execute_parameter
         constant
          '%Bikes%'
       ,
       execute_statement_arg
        execute_statement_arg_unnamed
         execute_parameter
          constant
           700
        ,
        execute_statement_arg
         execute_statement_arg_unnamed
          execute_parameter
           @compareprice
           OUT
         ,
         execute_statement_arg
          execute_statement_arg_unnamed
           execute_parameter
            @cost
            OUTPUT
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        primitive_expression
         @cost
       comparison_operator
        <
        =
       expression
        primitive_expression
         @compareprice
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         cfl_statement
          print_statement
           PRINT
           expression
            expression
             expression
              primitive_expression
               primitive_constant
                'These products can be purchased for less than \n    $'
             +
             expression
              function_call
               built_in_functions
                RTRIM
                (
                expression
                 function_call
                  built_in_functions
                   CAST
                   (
                   expression
                    primitive_expression
                     @compareprice
                   AS
                   data_type
                    id_
                     keyword
                      varchar
                    (
                    20
                    )
                   )
                )
            +
            expression
             primitive_expression
              primitive_constant
               '.'
        END
     ELSE
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         expression
          expression
           primitive_expression
            primitive_constant
             'The prices for all products in this category exceed \n    $'
          +
          expression
           function_call
            built_in_functions
             RTRIM
             (
             expression
              function_call
               built_in_functions
                CAST
                (
                expression
                 primitive_expression
                  @compareprice
                AS
                data_type
                 id_
                  keyword
                   varchar
                 (
                 20
                 )
                )
             )
         +
         expression
          primitive_expression
           primitive_constant
            '.'
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        primitive_expression
         primitive_constant
          1
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          1
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'Boolean_expression is true.'
     ELSE
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'Boolean_expression is false.'
        ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        bracket_expression
         (
         subquery
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               expression_elem
                expression
                 function_call
                  aggregate_windowed_function
                   COUNT
                   (
                   *
                   )
             FROM
             table_sources
              table_source
               table_source_item
                full_table_name
                 id_
                  Production
                 .
                 id_
                  Product
             WHERE
             search_condition
              predicate
               expression
                full_column_name
                 id_
                  keyword
                   Name
               LIKE
               expression
                primitive_expression
                 primitive_constant
                  'Touring-3000%'
         )
       comparison_operator
        >
       expression
        primitive_expression
         primitive_constant
          5
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'There are more than 5 Touring-3000 bicycles.'
     ELSE
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'There are 5 or less Touring-3000 bicycles.'
        ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @AvgWeight
      data_type
       id_
        decimal
       (
       8
       ,
       2
       )
     ,
     declare_local
      @BikeCount
      data_type
       id_
        keyword
         int
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        bracket_expression
         (
         subquery
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               expression_elem
                expression
                 function_call
                  aggregate_windowed_function
                   COUNT
                   (
                   *
                   )
             FROM
             table_sources
              table_source
               table_source_item
                full_table_name
                 id_
                  Production
                 .
                 id_
                  Product
             WHERE
             search_condition
              predicate
               expression
                full_column_name
                 id_
                  keyword
                   Name
               LIKE
               expression
                primitive_expression
                 primitive_constant
                  'Touring-3000%'
         )
       comparison_operator
        >
       expression
        primitive_expression
         primitive_constant
          5
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         another_statement
          set_statement
           SET
           @BikeCount
           =
           expression
            bracket_expression
             (
             subquery
              select_statement
               query_expression
                query_specification
                 SELECT
                 select_list
                  select_list_elem
                   expression_elem
                    expression
                     function_call
                      aggregate_windowed_function
                       COUNT
                       (
                       *
                       )
                 FROM
                 table_sources
                  table_source
                   table_source_item
                    full_table_name
                     id_
                      Production
                     .
                     id_
                      Product
                 WHERE
                 search_condition
                  predicate
                   expression
                    full_column_name
                     id_
                      keyword
                       Name
                   LIKE
                   expression
                    primitive_expression
                     primitive_constant
                      'Touring-3000%'
             )
         ;
        sql_clauses
         another_statement
          set_statement
           SET
           @AvgWeight
           =
           expression
            bracket_expression
             (
             subquery
              select_statement
               query_expression
                query_specification
                 SELECT
                 select_list
                  select_list_elem
                   expression_elem
                    expression
                     function_call
                      aggregate_windowed_function
                       AVG
                       (
                       all_distinct_expression
                        expression
                         full_column_name
                          id_
                           Weight
                       )
                 FROM
                 table_sources
                  table_source
                   table_source_item
                    full_table_name
                     id_
                      Production
                     .
                     id_
                      Product
                 WHERE
                 search_condition
                  predicate
                   expression
                    full_column_name
                     id_
                      keyword
                       Name
                   LIKE
                   expression
                    primitive_expression
                     primitive_constant
                      'Touring-3000%'
             )
         ;
        sql_clauses
         cfl_statement
          print_statement
           PRINT
           expression
            expression
             expression
              primitive_expression
               primitive_constant
                'There are '
             +
             expression
              function_call
               built_in_functions
                CAST
                (
                expression
                 primitive_expression
                  @BikeCount
                AS
                data_type
                 id_
                  keyword
                   varchar
                 (
                 3
                 )
                )
            +
            expression
             primitive_expression
              primitive_constant
               ' Touring-3000 bikes.'
        sql_clauses
         cfl_statement
          print_statement
           PRINT
           expression
            expression
             expression
              primitive_expression
               primitive_constant
                'The average weight of the top 5 Touring-3000 bikes is '
             +
             expression
              function_call
               built_in_functions
                CAST
                (
                expression
                 primitive_expression
                  @AvgWeight
                AS
                data_type
                 id_
                  keyword
                   varchar
                 (
                 8
                 )
                )
            +
            expression
             primitive_expression
              primitive_constant
               '.'
           ;
        END
     ELSE
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         another_statement
          set_statement
           SET
           @AvgWeight
           =
           expression
            bracket_expression
             (
             subquery
              select_statement
               query_expression
                query_specification
                 SELECT
                 select_list
                  select_list_elem
                   expression_elem
                    expression
                     function_call
                      aggregate_windowed_function
                       AVG
                       (
                       all_distinct_expression
                        expression
                         full_column_name
                          id_
                           Weight
                       )
                 FROM
                 table_sources
                  table_source
                   table_source_item
                    full_table_name
                     id_
                      Production
                     .
                     id_
                      Product
                 WHERE
                 search_condition
                  predicate
                   expression
                    full_column_name
                     id_
                      keyword
                       Name
                   LIKE
                   expression
                    primitive_expression
                     primitive_constant
                      'Touring-3000%'
             )
         ;
        sql_clauses
         cfl_statement
          print_statement
           PRINT
           expression
            expression
             expression
              primitive_expression
               primitive_constant
                'Average weight of the Touring-3000 bikes is '
             +
             expression
              function_call
               built_in_functions
                CAST
                (
                expression
                 primitive_expression
                  @AvgWeight
                AS
                data_type
                 id_
                  keyword
                   varchar
                 (
                 8
                 )
                )
            +
            expression
             primitive_expression
              primitive_constant
               '.'
           ;
        END
        ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @Number
     data_type
      id_
       keyword
        int
   ;
  sql_clauses
   another_statement
    set_statement
     SET
     @Number
     =
     expression
      primitive_expression
       primitive_constant
        50
   ;
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        primitive_expression
         @Number
       comparison_operator
        >
       expression
        primitive_expression
         primitive_constant
          100
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'The number is large.'
        ;
     ELSE
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         cfl_statement
          if_statement
           IF
           search_condition
            predicate
             expression
              primitive_expression
               @Number
             comparison_operator
              <
             expression
              primitive_expression
               primitive_constant
                10
           sql_clauses
            cfl_statement
             print_statement
              PRINT
              expression
               primitive_expression
                primitive_constant
                 'The number is small.'
              ;
           ELSE
           sql_clauses
            cfl_statement
             print_statement
              PRINT
              expression
               primitive_expression
                primitive_constant
                 'The number is medium.'
              ;
        END
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_procedure
    CREATE
    PROCEDURE
    func_proc_name_schema
     id_
      findjobs
    procedure_param
     @nm
     data_type
      id_
       sysname
     =
     procedure_param_default_value
      NULL
    AS
    sql_clauses
     cfl_statement
      if_statement
       IF
       search_condition
        predicate
         expression
          primitive_expression
           @nm
         IS
         null_notnull
          NULL
       sql_clauses
        cfl_statement
         block_statement
          BEGIN
          sql_clauses
           cfl_statement
            print_statement
             PRINT
             expression
              primitive_expression
               primitive_constant
                'You must give a user name'
          sql_clauses
           cfl_statement
            return_statement
             RETURN
          END
       ELSE
       sql_clauses
        cfl_statement
         block_statement
          BEGIN
          sql_clauses
           dml_clause
            select_statement_standalone
             select_statement
              query_expression
               query_specification
                SELECT
                select_list
                 select_list_elem
                  expression_elem
                   expression
                    full_column_name
                     full_table_name
                      id_
                       o
                     .
                     id_
                      keyword
                       name
                 ,
                 select_list_elem
                  expression_elem
                   expression
                    full_column_name
                     full_table_name
                      id_
                       o
                     .
                     id_
                      id
                 ,
                 select_list_elem
                  expression_elem
                   expression
                    full_column_name
                     full_table_name
                      id_
                       o
                     .
                     id_
                      uid
                FROM
                table_sources
                 table_source
                  table_source_item
                   full_table_name
                    id_
                     sysobjects
                   as_table_alias
                    table_alias
                     id_
                      o
                  join_part
                   join_on
                    INNER
                    JOIN
                    table_source
                     table_source_item
                      full_table_name
                       id_
                        keyword
                         master
                       .
                       .
                       id_
                        syslogins
                      as_table_alias
                       table_alias
                        id_
                         l
                    ON
                    search_condition
                     predicate
                      expression
                       full_column_name
                        full_table_name
                         id_
                          o
                        .
                        id_
                         uid
                      comparison_operator
                       =
                      expression
                       full_column_name
                        full_table_name
                         id_
                          l
                        .
                        id_
                         keyword
                          sid
                WHERE
                search_condition
                 predicate
                  expression
                   full_column_name
                    full_table_name
                     id_
                      l
                    .
                    id_
                     keyword
                      name
                  comparison_operator
                   =
                  expression
                   primitive_expression
                    @nm
          END
          ;
    sql_clauses
     cfl_statement
      throw_statement
       THROW
       throw_error_number
        51000
       ,
       throw_message
        'The record does not exist.'
       ,
       throw_state
        1
       ;
    sql_clauses
     another_statement
      use_statement
       USE
       id_
        tempdb
     ;
  go_statement
   GO
 batch
  sql_clauses
   ddl_clause
    create_table
     CREATE
     TABLE
     table_name
      id_
       dbo
      .
      id_
       TestRethrow
     (
     column_def_table_constraints
      column_def_table_constraint
       column_definition
        id_
         ID
        data_type
         id_
          keyword
           INT
        column_definition_element
         column_constraint
          PRIMARY
          KEY
          primary_key_options
     )
     ;
  sql_clauses
   cfl_statement
    try_catch_statement
     BEGIN
     TRY
     sql_clauses
      dml_clause
       insert_statement
        INSERT
        ddl_object
         full_table_name
          id_
           dbo
          .
          id_
           TestRethrow
        (
        insert_column_name_list
         insert_column_id
          id_
           ID
        )
        insert_statement_value
         table_value_constructor
          VALUES
          (
          expression_list_
           expression
            primitive_expression
             primitive_constant
              1
          )
        ;
     sql_clauses
      dml_clause
       insert_statement
        INSERT
        ddl_object
         full_table_name
          id_
           dbo
          .
          id_
           TestRethrow
        (
        insert_column_name_list
         insert_column_id
          id_
           ID
        )
        insert_statement_value
         table_value_constructor
          VALUES
          (
          expression_list_
           expression
            primitive_expression
             primitive_constant
              1
          )
        ;
     END
     TRY
     BEGIN
     CATCH
     sql_clauses
      cfl_statement
       print_statement
        PRINT
        expression
         primitive_expression
          primitive_constant
           'In catch block.'
        ;
     sql_clauses
      cfl_statement
       throw_statement
        THROW
        ;
     END
     CATCH
     ;
  sql_clauses
   another_statement
    execute_statement
     EXEC
     execute_body
      func_proc_name_server_database_schema
       func_proc_name_database_schema
        func_proc_name_schema
         id_
          sys
         .
         id_
          sp_addmessage
      execute_statement_arg
       execute_statement_arg_named
        @msgnum
        =
        execute_parameter
         constant
          60000
       ,
       execute_statement_arg_named
        @severity
        =
        execute_parameter
         constant
          16
       ,
       execute_statement_arg_named
        @msgtext
        =
        execute_parameter
         constant
          N'This is a test message with one numeric parameter (%d), one string parameter (%s), and another string parameter (%s).'
       ,
       execute_statement_arg_named
        @lang
        =
        execute_parameter
         constant
          'us_english'
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @msg
      data_type
       id_
        keyword
         NVARCHAR
       (
       2048
       )
      =
      expression
       function_call
        built_in_functions
         FORMATMESSAGE
         (
         60000
         ,
         expression
          primitive_expression
           primitive_constant
            500
         ,
         expression
          primitive_expression
           primitive_constant
            N'First string'
         ,
         expression
          primitive_expression
           primitive_constant
            N'second string'
         )
   ;
  sql_clauses
   cfl_statement
    throw_statement
     THROW
     throw_error_number
      60000
     ,
     throw_message
      @msg
     ,
     throw_state
      1
     ;
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        function_call
         built_in_functions
          OBJECT_ID
          (
          expression
           primitive_expression
            primitive_constant
             'usp_GetErrorInfo'
          ,
          expression
           primitive_expression
            primitive_constant
             'P'
          )
       IS
       null_notnull
        NOT
        NULL
     sql_clauses
      ddl_clause
       drop_procedure
        DROP
        PROCEDURE
        func_proc_name_schema
         id_
          usp_GetErrorInfo
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_procedure
    CREATE
    PROCEDURE
    func_proc_name_schema
     id_
      usp_GetErrorInfo
    AS
    sql_clauses
     dml_clause
      select_statement_standalone
       select_statement
        query_expression
         query_specification
          SELECT
          select_list
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_NUMBER
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorNumber
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_SEVERITY
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorSeverity
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_STATE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorState
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_PROCEDURE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorProcedure
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_LINE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorLine
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_MESSAGE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorMessage
        ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    try_catch_statement
     BEGIN
     TRY
     sql_clauses
      dml_clause
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               expression
                primitive_expression
                 primitive_constant
                  1
               /
               expression
                primitive_expression
                 primitive_constant
                  0
         ;
     END
     TRY
     BEGIN
     CATCH
     sql_clauses
      another_statement
       execute_statement
        EXECUTE
        execute_body
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           func_proc_name_schema
            id_
             usp_GetErrorInfo
        ;
     END
     CATCH
     ;
  sql_clauses
   cfl_statement
    try_catch_statement
     BEGIN
     TRY
     sql_clauses
      dml_clause
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               expression
                primitive_expression
                 primitive_constant
                  1
               /
               expression
                primitive_expression
                 primitive_constant
                  0
         ;
     END
     TRY
     BEGIN
     CATCH
     sql_clauses
      dml_clause
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_NUMBER
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorNumber
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_SEVERITY
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorSeverity
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_STATE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorState
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_PROCEDURE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorProcedure
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_LINE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorLine
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_MESSAGE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorMessage
         ;
     END
     CATCH
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
   ;
  sql_clauses
   cfl_statement
    try_catch_statement
     BEGIN
     TRY
     sql_clauses
      dml_clause
       delete_statement
        DELETE
        FROM
        delete_statement_from
         ddl_object
          full_table_name
           id_
            Production
           .
           id_
            Product
        WHERE
        search_condition
         predicate
          expression
           full_column_name
            id_
             ProductID
          comparison_operator
           =
          expression
           primitive_expression
            primitive_constant
             980
        ;
     END
     TRY
     BEGIN
     CATCH
     sql_clauses
      dml_clause
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_NUMBER
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorNumber
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_SEVERITY
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorSeverity
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_STATE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorState
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_PROCEDURE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorProcedure
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_LINE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorLine
            ,
            select_list_elem
             expression_elem
              expression
               function_call
                built_in_functions
                 ERROR_MESSAGE
                 (
                 )
              as_column_alias
               AS
               column_alias
                id_
                 ErrorMessage
         ;
     sql_clauses
      cfl_statement
       if_statement
        IF
        search_condition
         predicate
          expression
           primitive_expression
            @@TRANCOUNT
          comparison_operator
           >
          expression
           primitive_expression
            primitive_constant
             0
        sql_clauses
         another_statement
          transaction_statement
           ROLLBACK
           TRANSACTION
         ;
     END
     CATCH
     ;
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        primitive_expression
         @@TRANCOUNT
       comparison_operator
        >
       expression
        primitive_expression
         primitive_constant
          0
     sql_clauses
      another_statement
       transaction_statement
        COMMIT
        TRANSACTION
      ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        function_call
         built_in_functions
          OBJECT_ID
          (
          expression
           primitive_expression
            primitive_constant
             N'usp_GetErrorInfo'
          ,
          expression
           primitive_expression
            primitive_constant
             N'P'
          )
       IS
       null_notnull
        NOT
        NULL
     sql_clauses
      ddl_clause
       drop_procedure
        DROP
        PROCEDURE
        func_proc_name_schema
         id_
          usp_GetErrorInfo
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_procedure
    CREATE
    PROCEDURE
    func_proc_name_schema
     id_
      usp_GetErrorInfo
    AS
    sql_clauses
     dml_clause
      select_statement_standalone
       select_statement
        query_expression
         query_specification
          SELECT
          select_list
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_NUMBER
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorNumber
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_SEVERITY
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorSeverity
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_STATE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorState
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_LINE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorLine
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_PROCEDURE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorProcedure
           ,
           select_list_elem
            expression_elem
             expression
              function_call
               built_in_functions
                ERROR_MESSAGE
                (
                )
             as_column_alias
              AS
              column_alias
               id_
                ErrorMessage
        ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    set_statement
     set_special
      SET
      id_
       keyword
        XACT_ABORT
      on_off
       ON
      ;
  sql_clauses
   cfl_statement
    try_catch_statement
     BEGIN
     TRY
     sql_clauses
      another_statement
       transaction_statement
        BEGIN
        TRANSACTION
      ;
     sql_clauses
      dml_clause
       delete_statement
        DELETE
        FROM
        delete_statement_from
         ddl_object
          full_table_name
           id_
            Production
           .
           id_
            Product
        WHERE
        search_condition
         predicate
          expression
           full_column_name
            id_
             ProductID
          comparison_operator
           =
          expression
           primitive_expression
            primitive_constant
             980
        ;
     sql_clauses
      another_statement
       transaction_statement
        COMMIT
        TRANSACTION
      ;
     END
     TRY
     BEGIN
     CATCH
     sql_clauses
      another_statement
       execute_statement
        EXECUTE
        execute_body
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           func_proc_name_schema
            id_
             usp_GetErrorInfo
        ;
     sql_clauses
      cfl_statement
       if_statement
        IF
        search_condition
         predicate
          expression
           bracket_expression
            (
            expression
             function_call
              built_in_functions
               XACT_STATE
               (
               )
            )
          comparison_operator
           =
          expression
           unary_operator_expression
            -
            expression
             primitive_expression
              primitive_constant
               1
        sql_clauses
         cfl_statement
          block_statement
           BEGIN
           sql_clauses
            cfl_statement
             print_statement
              PRINT
              expression
               expression
                primitive_expression
                 primitive_constant
                  N'The transaction is in an uncommittable state.'
               +
               expression
                primitive_expression
                 primitive_constant
                  'Rolling back transaction.'
           sql_clauses
            another_statement
             transaction_statement
              ROLLBACK
              TRANSACTION
            ;
           END
           ;
     sql_clauses
      cfl_statement
       if_statement
        IF
        search_condition
         predicate
          expression
           bracket_expression
            (
            expression
             function_call
              built_in_functions
               XACT_STATE
               (
               )
            )
          comparison_operator
           =
          expression
           primitive_expression
            primitive_constant
             1
        sql_clauses
         cfl_statement
          block_statement
           BEGIN
           sql_clauses
            cfl_statement
             print_statement
              PRINT
              expression
               expression
                primitive_expression
                 primitive_constant
                  N'The transaction is committable.'
               +
               expression
                primitive_expression
                 primitive_constant
                  'Committing transaction.'
           sql_clauses
            another_statement
             transaction_statement
              COMMIT
              TRANSACTION
            ;
           END
           ;
     END
     CATCH
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    execute_statement
     EXECUTE
     execute_body
      func_proc_name_server_database_schema
       func_proc_name_database_schema
        func_proc_name_schema
         id_
          sp_add_job
      execute_statement_arg
       execute_statement_arg_named
        @job_name
        =
        execute_parameter
         constant
          'TestJob'
     ;
  sql_clauses
   cfl_statement
    block_statement
     BEGIN
     sql_clauses
      cfl_statement
       waitfor_statement
        WAITFOR
        TIME
        time
         constant
          '22:20'
        ;
     sql_clauses
      another_statement
       execute_statement
        EXECUTE
        execute_body
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           func_proc_name_schema
            id_
             sp_update_job
         execute_statement_arg
          execute_statement_arg_named
           @job_name
           =
           execute_parameter
            constant
             'TestJob'
          ,
          execute_statement_arg_named
           @new_name
           =
           execute_parameter
            constant
             'UpdatedJob'
        ;
     END
     ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    block_statement
     BEGIN
     sql_clauses
      cfl_statement
       waitfor_statement
        WAITFOR
        DELAY
        time
         constant
          '02:00'
        ;
     sql_clauses
      another_statement
       execute_statement
        EXECUTE
        execute_body
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           func_proc_name_schema
            id_
             sp_helpdb
        ;
     END
     ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      predicate
       expression
        function_call
         built_in_functions
          OBJECT_ID
          (
          expression
           primitive_expression
            primitive_constant
             'dbo.TimeDelay_hh_mm_ss'
          ,
          expression
           primitive_expression
            primitive_constant
             'P'
          )
       IS
       null_notnull
        NOT
        NULL
     sql_clauses
      ddl_clause
       drop_procedure
        DROP
        PROCEDURE
        func_proc_name_schema
         id_
          dbo
         .
         id_
          TimeDelay_hh_mm_ss
        ;
  go_statement
   GO
 batch
  batch_level_statement
   create_or_alter_procedure
    CREATE
    PROCEDURE
    func_proc_name_schema
     id_
      dbo
     .
     id_
      TimeDelay_hh_mm_ss
    (
    procedure_param
     @DelayLength
     data_type
      id_
       keyword
        char
      (
      8
      )
     =
     procedure_param_default_value
      constant
       '00:00:00'
    )
    AS
    sql_clauses
     another_statement
      declare_statement
       DECLARE
       @ReturnInfo
       data_type
        id_
         keyword
          varchar
        (
        255
        )
    sql_clauses
     cfl_statement
      if_statement
       IF
       search_condition
        predicate
         expression
          function_call
           built_in_functions
            ISDATE
            (
            expression
             expression
              expression
               primitive_expression
                primitive_constant
                 '2000-01-01 '
              +
              expression
               primitive_expression
                @DelayLength
             +
             expression
              primitive_expression
               primitive_constant
                '.000'
            )
         comparison_operator
          =
         expression
          primitive_expression
           primitive_constant
            0
       sql_clauses
        cfl_statement
         block_statement
          BEGIN
          sql_clauses
           dml_clause
            select_statement_standalone
             select_statement
              query_expression
               query_specification
                SELECT
                select_list
                 select_list_elem
                  @ReturnInfo
                  =
                  expression
                   expression
                    expression
                     primitive_expression
                      primitive_constant
                       'Invalid time '
                    +
                    expression
                     primitive_expression
                      @DelayLength
                   +
                   expression
                    primitive_expression
                     primitive_constant
                      ',hh:mm:ss, submitted.'
              ;
          sql_clauses
           cfl_statement
            print_statement
             PRINT
             expression
              primitive_expression
               @ReturnInfo
          sql_clauses
           cfl_statement
            return_statement
             RETURN
             expression
              bracket_expression
               (
               expression
                primitive_expression
                 primitive_constant
                  1
               )
          END
    sql_clauses
     cfl_statement
      block_statement
       BEGIN
       sql_clauses
        cfl_statement
         waitfor_statement
          WAITFOR
          DELAY
          time
           @DelayLength
       sql_clauses
        dml_clause
         select_statement_standalone
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               @ReturnInfo
               =
               expression
                expression
                 expression
                  primitive_expression
                   primitive_constant
                    'A total time of '
                 +
                 expression
                  primitive_expression
                   @DelayLength
                +
                expression
                 primitive_expression
                  primitive_constant
                   ', \n        hh:mm:ss, has elapsed! Your time is up.'
       sql_clauses
        cfl_statement
         print_statement
          PRINT
          expression
           primitive_expression
            @ReturnInfo
          ;
       END
       ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    execute_statement
     EXEC
     execute_body
      func_proc_name_server_database_schema
       func_proc_name_database_schema
        func_proc_name_schema
         id_
          TimeDelay_hh_mm_ss
      execute_statement_arg
       execute_statement_arg_unnamed
        execute_parameter
         constant
          '00:00:10'
     ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    waitfor_statement
     WAITFOR
     receive_statement
      (
      RECEIVE
      *
      FROM
      full_table_name
       id_
        ExpenseQueue
      )
     ;
  sql_clauses
   cfl_statement
    waitfor_statement
     WAITFOR
     receive_statement
      (
      RECEIVE
      *
      FROM
      full_table_name
       id_
        ExpenseQueue
      )
     ,
     TIMEOUT
     time
      constant
       60000
     ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @ConversationHandle
     data_type
      id_
       uniqueidentifier
   ;
  sql_clauses
   cfl_statement
    waitfor_statement
     WAITFOR
     receive_statement
      (
      RECEIVE
      top_clause
       TOP
       top_count
        (
        expression
         primitive_expression
          primitive_constant
           1
        )
      @ConversationHandle
      =
      expression
       full_column_name
        id_
         conversation_handle
      FROM
      full_table_name
       id_
        dbo
       .
       id_
        ReplicationInboundQueue
      )
     ,
     TIMEOUT
     time
      constant
       3000
     ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  go_statement
   GO
 batch
  sql_clauses
   cfl_statement
    while_statement
     WHILE
     search_condition
      predicate
       expression
        bracket_expression
         (
         subquery
          select_statement
           query_expression
            query_specification
             SELECT
             select_list
              select_list_elem
               expression_elem
                expression
                 function_call
                  aggregate_windowed_function
                   AVG
                   (
                   all_distinct_expression
                    expression
                     full_column_name
                      id_
                       ListPrice
                   )
             FROM
             table_sources
              table_source
               table_source_item
                full_table_name
                 id_
                  Production
                 .
                 id_
                  Product
         )
       comparison_operator
        <
       expression
        primitive_expression
         primitive_constant
          $
          300
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         dml_clause
          update_statement
           UPDATE
           ddl_object
            full_table_name
             id_
              Production
             .
             id_
              Product
           SET
           update_elem
            full_column_name
             id_
              ListPrice
            =
            expression
             expression
              full_column_name
               id_
                ListPrice
             *
             expression
              primitive_expression
               primitive_constant
                2
        sql_clauses
         dml_clause
          select_statement_standalone
           select_statement
            query_expression
             query_specification
              SELECT
              select_list
               select_list_elem
                expression_elem
                 expression
                  function_call
                   aggregate_windowed_function
                    MAX
                    (
                    all_distinct_expression
                     expression
                      full_column_name
                       id_
                        ListPrice
                    )
              FROM
              table_sources
               table_source
                table_source_item
                 full_table_name
                  id_
                   Production
                  .
                  id_
                   Product
        sql_clauses
         cfl_statement
          if_statement
           IF
           search_condition
            predicate
             expression
              bracket_expression
               (
               subquery
                select_statement
                 query_expression
                  query_specification
                   SELECT
                   select_list
                    select_list_elem
                     expression_elem
                      expression
                       function_call
                        aggregate_windowed_function
                         MAX
                         (
                         all_distinct_expression
                          expression
                           full_column_name
                            id_
                             ListPrice
                         )
                   FROM
                   table_sources
                    table_source
                     table_source_item
                      full_table_name
                       id_
                        Production
                       .
                       id_
                        Product
               )
             comparison_operator
              >
             expression
              primitive_expression
               primitive_constant
                $
                500
           sql_clauses
            cfl_statement
             break_statement
              BREAK
           ELSE
           sql_clauses
            cfl_statement
             continue_statement
              CONTINUE
        END
  sql_clauses
   cfl_statement
    print_statement
     PRINT
     expression
      primitive_expression
       primitive_constant
        'Too much for the market to bear'
     ;
  sql_clauses
   another_statement
    cursor_statement
     declare_cursor
      DECLARE
      cursor_name
       id_
        Employee_Cursor
      CURSOR
      declare_set_cursor_common
       FOR
       select_statement_standalone
        select_statement
         query_expression
          query_specification
           SELECT
           select_list
            select_list_elem
             expression_elem
              expression
               full_column_name
                id_
                 EmployeeID
            ,
            select_list_elem
             expression_elem
              expression
               full_column_name
                id_
                 Title
           FROM
           table_sources
            table_source
             table_source_item
              full_table_name
               id_
                AdventureWorks2012
               .
               id_
                HumanResources
               .
               id_
                Employee
           WHERE
           search_condition
            predicate
             expression
              full_column_name
               id_
                JobTitle
             comparison_operator
              =
             expression
              primitive_expression
               primitive_constant
                'Marketing Specialist'
         ;
  sql_clauses
   another_statement
    cursor_statement
     OPEN
     cursor_name
      id_
       Employee_Cursor
     ;
  sql_clauses
   another_statement
    cursor_statement
     fetch_cursor
      FETCH
      NEXT
      FROM
      cursor_name
       id_
        Employee_Cursor
      ;
  sql_clauses
   cfl_statement
    while_statement
     WHILE
     search_condition
      predicate
       expression
        function_call
         built_in_functions
          @@FETCH_STATUS
       comparison_operator
        =
       expression
        primitive_expression
         primitive_constant
          0
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         another_statement
          cursor_statement
           fetch_cursor
            FETCH
            NEXT
            FROM
            cursor_name
             id_
              Employee_Cursor
            ;
        END
        ;
  sql_clauses
   another_statement
    cursor_statement
     CLOSE
     cursor_name
      id_
       Employee_Cursor
     ;
  sql_clauses
   another_statement
    cursor_statement
     DEALLOCATE
     cursor_name
      id_
       Employee_Cursor
     ;
  go_statement
   GO
 <EOF>
