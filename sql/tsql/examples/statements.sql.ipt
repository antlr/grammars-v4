tsql_file
 batch
  sql_clauses
   another_statement
    security_statement
     GRANT
     ALL
     TO
     principal_id
      id_
       pax_writer
     ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       TestProc
     TO
     principal_id
      id_
       TesterRole
     WITH
     GRANT
     OPTION
     ;
  sql_clauses
   another_statement
    execute_statement
     EXEC
     execute_body
      func_proc_name_server_database_schema
       func_proc_name_database_schema
        func_proc_name_schema
         id_
          sp_addrolemember
      execute_statement_arg
       execute_statement_arg_unnamed
        execute_parameter
         id_
          TesterRole
       ,
       execute_statement_arg
        execute_statement_arg_unnamed
         execute_parameter
          id_
           User1
     ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       TestMe
     TO
     principal_id
      id_
       User2
     ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       TestMe
     TO
     principal_id
      id_
       User2
     AS
     principal_id
      id_
       TesterRole
     ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      CREATE
      TABLE
     TO
     principal_id
      id_
       MelanieK
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      SHOWPLAN
     TO
     principal_id
      id_
       AuditMonitor
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      CREATE
      VIEW
     TO
     principal_id
      id_
       CarmineEs
     WITH
     GRANT
     OPTION
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      SELECT
     ON
     table_name
      id_
       Person
      .
      id_
       keyword
        Address
     TO
     principal_id
      id_
       RosaQdM
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      SELECT
     ON
     table_name
      id_
       Person
      .
      id_
       keyword
        Address
     TO
     principal_id
      id_
       [AdventureWorks2012\RosaQdM]
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       dbo
      .
      id_
       uspGetBillOfMaterials
     TO
     principal_id
      id_
       newrole
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      keyword
       master
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      CONTROL
      SERVER
     TO
     principal_id
      id_
       TerryEminhizer
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      keyword
       master
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      ALTER
      ANY
      DATABASE
     TO
     principal_id
      id_
       ITDevAdmin
     WITH
     GRANT
     OPTION
     ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      ALTER
      ANY
      DATABASE
     TO
     principal_id
      id_
       ITDevelopers
     AS
     principal_id
      id_
       ITDevAdmin
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      SELECT
     ON
     table_name
      id_
       sys
      .
      id_
       sql_logins
     TO
     principal_id
      id_
       Sylvester1
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       xp_readmail
     TO
     principal_id
      id_
       Sylvester1
     ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    security_statement
     GRANT
     grant_permission
      EXECUTE
     ON
     table_name
      id_
       [dbo]
      .
      id_
       [closeLead]
     to
     principal_id
      Public
     ,
     principal_id
      id_
       XYZPublic
     ;
   ;
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @x
     xml_type_definition
      xml
      (
      xml_schema_collection
       Sales
       .
       StoreSurveySchemaCollection
      )
  sql_clauses
   another_statement
    security_statement
     open_key
      OPEN
      SYMMETRIC
      KEY
      id_
       SomeKeyName
      DECRYPTION
      BY
      decryption_mechanism
       CERTIFICATE
       id_
        SomeCertificateName
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     close_key
      CLOSE
      SYMMETRIC
      KEY
      id_
       SomeKeyName
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     close_key
      CLOSE
      ALL
      SYMMETRIC
      KEYS
   ;
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_timer
      BEGIN
      CONVERSATION
      TIMER
      (
      @dialog_handle
      )
      TIMEOUT
      =
      time
       constant
        120
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      WITH
      LIFETIME
      =
      60
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ,
      'a326e034-d4cf-4e8b-8d98-4d7e1926c904'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @conversation_group_id
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      WITH
      RELATED_CONVERSATION_GROUP
      =
      @conversation_group_id
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @existing_conversation_handle
     data_type
      id_
       UNIQUEIDENTIFIER
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      WITH
      RELATED_CONVERSATION
      =
      @existing_conversation_handle
      LIFETIME
      =
      600
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @dialog_handle
     data_type
      id_
       UNIQUEIDENTIFIER
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      CONVERSATION
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseSubmission]
      WITH
      ENCRYPTION
      =
      on_off
       OFF
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    conversation_statement
     end_conversation
      END
      CONVERSATION
      @dialog_handle
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @dialog_handle
      data_type
       id_
        UNIQUEIDENTIFIER
     ,
     declare_local
      @ErrorSave
      data_type
       id_
        keyword
         INT
     ,
     declare_local
      @ErrorDesc
      data_type
       id_
        keyword
         NVARCHAR
       (
       100
       )
   ;
  sql_clauses
   another_statement
    transaction_statement
     BEGIN
     TRANSACTION
   ;
  sql_clauses
   another_statement
    set_statement
     SET
     @ErrorSave
     =
     expression
      primitive_expression
       @@ERROR
   ;
  sql_clauses
   cfl_statement
    if_statement
     IF
     search_condition
      (
      search_condition
       predicate
        expression
         primitive_expression
          @ErrorSave
        comparison_operator
         <
         >
        expression
         primitive_expression
          primitive_constant
           0
      )
     sql_clauses
      cfl_statement
       block_statement
        BEGIN
        sql_clauses
         another_statement
          transaction_statement
           ROLLBACK
           TRANSACTION
         ;
        sql_clauses
         another_statement
          set_statement
           SET
           @ErrorDesc
           =
           expression
            primitive_expression
             primitive_constant
              N'An error has occurred.'
         ;
        sql_clauses
         another_statement
          conversation_statement
           end_conversation
            END
            CONVERSATION
            @dialog_handle
            WITH
            ERROR
            =
            @ErrorSave
            DESCRIPTION
            =
            @ErrorDesc
         ;
        END
     ELSE
     sql_clauses
      another_statement
       transaction_statement
        COMMIT
        TRANSACTION
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    conversation_statement
     end_conversation
      END
      CONVERSATION
      @dialog_handle
      WITH
      CLEANUP
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @conversation_group_id
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   cfl_statement
    waitfor_statement
     WAITFOR
  sql_clauses
   another_statement
    conversation_statement
     waitfor_conversation
      (
      get_conversation
       GET
       CONVERSATION
       GROUP
       @conversation_group_id
       FROM
       queue_id
        id_
         ExpenseQueue
      )
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @conversation_group_id
     data_type
      id_
       UNIQUEIDENTIFIER
  sql_clauses
   cfl_statement
    waitfor_statement
     WAITFOR
  sql_clauses
   another_statement
    conversation_statement
     waitfor_conversation
      (
      get_conversation
       GET
       CONVERSATION
       GROUP
       @conversation_group_id
       FROM
       queue_id
        id_
         ExpenseQueue
      )
      ,
      TIMEOUT
      time
       constant
        60000
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @conversation_group_id
     data_type
      id_
       UNIQUEIDENTIFIER
   ;
  sql_clauses
   another_statement
    conversation_statement
     get_conversation
      GET
      CONVERSATION
      GROUP
      @conversation_group_id
      FROM
      queue_id
       id_
        AdventureWorks
       .
       id_
        dbo
       .
       id_
        ExpenseQueue
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @dialog_handle
      data_type
       id_
        UNIQUEIDENTIFIER
     ,
     declare_local
      @ExpenseReport
      data_type
       id_
        keyword
         XML
   ;
  sql_clauses
   another_statement
    set_statement
     SET
     @ExpenseReport
     =
     expression
      primitive_expression
       primitive_constant
        '<document/>'
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      @dialog_handle
      FROM
      SERVICE
      service_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseClient]
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         primitive_constant
          '//Adventure-Works.com/Expenses'
      ON
      CONTRACT
      contract_name
       id_
        [//Adventure-Works.com/Expenses/ExpenseProcessing]
      ;
  sql_clauses
   another_statement
    conversation_statement
     send_conversation
      SEND
      ON
      CONVERSATION
      @dialog_handle
      MESSAGE
      TYPE
      expression
       function_call
        scalar_function_name
         func_proc_name_server_database_schema
          func_proc_name_database_schema
           func_proc_name_schema
            id_
             [//Adventure-Works.com/Expenses/SubmitExpense]
        (
        expression_list_
         expression
          primitive_expression
           @ExpenseReport
        )
      ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     declare_local
      @dialog_handle
      data_type
       id_
        UNIQUEIDENTIFIER
     ,
     declare_local
      @ExpenseReport
      data_type
       id_
        keyword
         XML
   ;
  sql_clauses
   another_statement
    set_statement
     SET
     @ExpenseReport
     =
     expression
      primitive_expression
       primitive_constant
        '<document/>'
   ;
  sql_clauses
   another_statement
    conversation_statement
     begin_conversation_dialog
      BEGIN
      DIALOG
      @dialog_handle
      FROM
      SERVICE
      service_name
       expression
        primitive_expression
         @from_service
      TO
      SERVICE
      service_name
       expression
        primitive_expression
         @to_service
      ON
      CONTRACT
      contract_name
       expression
        primitive_expression
         @contract
      ;
  sql_clauses
   another_statement
    conversation_statement
     send_conversation
      SEND
      ON
      CONVERSATION
      @dialog_handle
      MESSAGE
      TYPE
      expression
       primitive_expression
        @MessageType
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     create_key
      CREATE
      MASTER
      KEY
      ENCRYPTION
      BY
      PASSWORD
      =
      'password'
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     open_key
      OPEN
      MASTER
      KEY
      DECRYPTION
      BY
      PASSWORD
      =
      'password'
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     close_key
      CLOSE
      MASTER
      KEY
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     create_certificate
      CREATE
      CERTIFICATE
      id_
       Shipping04
      generate_new_keys
       ENCRYPTION
       BY
       PASSWORD
       =
       'pGFD4bb925DGvbd2439587y'
       WITH
       SUBJECT
       =
       'Sammamish Shipping Records'
       ,
       date_options
        EXPIRY_DATE
        =
        '20201031'
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     create_certificate
      CREATE
      CERTIFICATE
      id_
       Shipping11
      FROM
      existing_keys
       FILE
       =
       'c:\Shipping\Certs\Shipping11.cer'
       WITH
       PRIVATE
       KEY
       (
       private_key_options
        FILE
        =
        'c:\Shipping\Certs\Shipping11.pvk'
        ,
        DECRYPTION
        BY
        PASSWORD
        =
        'sldkflk34et6gs%53#v00'
       )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    use_statement
     USE
     id_
      AdventureWorks2012
   ;
  sql_clauses
   another_statement
    security_statement
     create_certificate
      CREATE
      CERTIFICATE
      id_
       Shipping19
      FROM
      existing_keys
       EXECUTABLE
       FILE
       =
       'c:\Shipping\Certs\Shipping19.dll'
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     create_key
      CREATE
      SYMMETRIC
      KEY
      id_
       JanainaKey09
      WITH
      key_options
       ALGORITHM
       =
       algorithm
        AES_256
      ENCRYPTION
      BY
      encryption_mechanism
       CERTIFICATE
       id_
        Shipping04
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     create_key
      CREATE
      SYMMETRIC
      KEY
      id_
       #MarketingXXV
      WITH
      key_options
       ALGORITHM
       =
       algorithm
        AES_128
      ,
      key_options
       KEY_SOURCE
       =
       'The square of the hypotenuse is equal to the sum of the squares of the sides'
      ,
      key_options
       IDENTITY_VALUE
       =
       'Pythagoras'
      ENCRYPTION
      BY
      encryption_mechanism
       CERTIFICATE
       id_
        Marketing25
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    security_statement
     create_key
      CREATE
      SYMMETRIC
      KEY
      id_
       MySymKey
      AUTHORIZATION
      id_
       User1
      FROM
      PROVIDER
      id_
       EKMProvider
      WITH
      key_options
       PROVIDER_KEY_NAME
       =
       'KeyForSensitiveData'
      ,
      key_options
       CREATION_DISPOSITION
       =
       OPEN_EXISTING
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    message_statement
     CREATE
     MESSAGE
     TYPE
     id_
      [//Adventure-Works.com/Expenses/SubmitExpense]
     VALIDATION
     =
     EMPTY
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    message_statement
     CREATE
     MESSAGE
     TYPE
     id_
      [//Adventure-Works.com/Expenses/ReceiptImage]
     VALIDATION
     =
     NONE
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    message_statement
     CREATE
     MESSAGE
     TYPE
     id_
      [//Adventure-Works.com/Expenses/SubmitExpense]
     VALIDATION
     =
     WELL_FORMED_XML
   ;
  sql_clauses
   another_statement
    message_statement
     CREATE
     MESSAGE
     TYPE
     id_
      [//Adventure-Works.com/Expenses/ExpenseApprovedOrDenied]
     VALIDATION
     =
     WELL_FORMED_XML
   ;
  sql_clauses
   another_statement
    message_statement
     CREATE
     MESSAGE
     TYPE
     id_
      [//Adventure-Works.com/Expenses/ExpenseReimbursed]
     VALIDATION
     =
     WELL_FORMED_XML
   ;
  sql_clauses
   another_statement
    create_contract
     CREATE
     CONTRACT
     contract_name
      id_
       [//Adventure-Works.com/Expenses/ExpenseSubmission]
     (
     id_
      [//Adventure-Works.com/Expenses/SubmitExpense]
     SENT
     BY
     INITIATOR
     ,
     id_
      [//Adventure-Works.com/Expenses/ExpenseApprovedOrDenied]
     SENT
     BY
     TARGET
     ,
     id_
      [//Adventure-Works.com/Expenses/ExpenseReimbursed]
     SENT
     BY
     TARGET
     )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    create_queue
     CREATE
     QUEUE
     full_table_name
      id_
       ExpenseQueue
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    create_queue
     CREATE
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      STATUS
      =
      on_off
       OFF
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    create_queue
     CREATE
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      STATUS
      =
      on_off
       ON
      ,
      ACTIVATION
      (
      PROCEDURE_NAME
      =
      func_proc_name_database_schema
       func_proc_name_schema
        id_
         expense_procedure
      ,
      MAX_QUEUE_READERS
      =
      5
      ,
      EXECUTE
      AS
      'ExpenseUser'
      )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    create_queue
     CREATE
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     ON
     id_
      ExpenseWorkFileGroup
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    create_queue
     CREATE
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      STATUS
      =
      on_off
       OFF
      ,
      RETENTION
      =
      on_off
       ON
      ,
      ACTIVATION
      (
      PROCEDURE_NAME
      =
      func_proc_name_database_schema
       id_
        AdventureWorks2012
       .
       id_
        dbo
       .
       id_
        expense_procedure
      ,
      MAX_QUEUE_READERS
      =
      10
      ,
      EXECUTE
      AS
      SELF
      )
     ON
     id_
      [DEFAULT]
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      STATUS
      =
      on_off
       OFF
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      ACTIVATION
      (
      PROCEDURE_NAME
      =
      func_proc_name_database_schema
       func_proc_name_schema
        id_
         new_stored_proc
      ,
      EXECUTE
      AS
      SELF
      )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      ACTIVATION
      (
      MAX_QUEUE_READERS
      =
      7
      )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      ACTIVATION
      (
      PROCEDURE_NAME
      =
      func_proc_name_database_schema
       id_
        AdventureWorks2012
       .
       id_
        dbo
       .
       id_
        new_stored_proc
      ,
      EXECUTE
      AS
      'SecurityAccount'
      )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      RETENTION
      =
      on_off
       ON
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_settings
      WITH
      ACTIVATION
      (
      DROP
      )
   ;
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_action
      REBUILD
      WITH
      (
      queue_rebuild_options
       MAXDOP
       =
       2
      )
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_action
      REORGANIZE
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    alter_queue
     ALTER
     QUEUE
     full_table_name
      id_
       ExpenseQueue
     queue_action
      MOVE
      TO
      id_
       [NewFilegroup]
  go_statement
   GO
 batch
  sql_clauses
   ;
  sql_clauses
   another_statement
    declare_statement
     DECLARE
     @var
     AS
     table_name
      id_
       dbo
      .
      id_
       tableType
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    execute_statement
     EXECUTE
     execute_body
      (
      execute_var_string
       'Operation'
      ,
      execute_var_string
       @var
       OUTPUT
      )
      AT
      id_
       linkedServerName
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    execute_statement
     exec
     execute_body
      (
      execute_var_string
       'selectSELECT * FROM '
       +
       @SCHEMA
       +
       execute_var_string
        '.'
        +
        @TABLE
        +
        execute_var_string
         ' where ID = '
         +
         @ID
      )
  go_statement
   GO
 batch
  sql_clauses
   another_statement
    execute_statement
     EXEC
     execute_body
      (
      execute_var_string
       @sql
       +
       @where
      )
  go_statement
   GO
 <EOF>
