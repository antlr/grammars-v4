snowflake_file
 batch
  sql_command
   ddl_command
    create_command
     create_table
      create
      table
      object_name
       id_
        tj
      create_table_clause
       column_decl_item_list_paren
        (
        column_decl_item_list
         column_decl_item
          full_col_decl
           col_decl
            column_name
             id_
              c
            data_type
             int
        )
  ;
  sql_command
   dml_command
    update_statement
     update
     object_name
      id_
       tj
     as_alias
      as
      alias
       id_
        t
     set
     column_name
      id_
       c
     =
     expr
      primitive_expression
       literal
        1
  ;
  sql_command
   dml_command
    delete_statement
     delete
     from
     object_name
      id_
       tj
     as_alias
      as
      alias
       id_
        t
  ;
  sql_command
   dml_command
    merge_statement
     MERGE
     INTO
     object_name
      id_
       sch
      .
      id_
       dst
     as_alias
      as
      alias
       id_
        d
     USING
     table_source
      table_source_item_joined
       object_ref
        (
        subquery
         query_statement
          select_statement
           select_clause
            SELECT
            select_list_no_top
             select_list
              select_list_elem
               expression_elem
                expr
                 primitive_expression
                  literal
                   1
               as_alias
                as
                alias
                 id_
                  c
              ,
              select_list_elem
               expression_elem
                expr
                 primitive_expression
                  literal
                   2
               as_alias
                as
                alias
                 id_
                  c2
              ,
              select_list_elem
               expression_elem
                expr
                 primitive_expression
                  literal
                   3
               as_alias
                as
                alias
                 id_
                  c3
           select_optional_clauses
        )
        as_alias
         as
         alias
          id_
           s
     ON
     search_condition
      predicate
       expr
        expr
         primitive_expression
          id_
           d
          .
          id_
           c
        comparison_operator
         =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c
     merge_matches
      merge_cond
       WHEN
       MATCHED
       AND
       search_condition
        predicate
         expr
          expr
           expr
            primitive_expression
             id_
              s
             .
             id_
              c
           comparison_operator
            =
           expr
            primitive_expression
             literal
              1
          AND
          expr
           expr
            primitive_expression
             id_
              s
             .
             id_
              c2
           comparison_operator
            =
           expr
            primitive_expression
             literal
              1
       THEN
       merge_update_delete
        UPDATE
        SET
        column_name
         id_
          d
         .
         id_
          c
        =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c
        ,
        column_name
         id_
          d
         .
         id_
          c2
        =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c2
       WHEN
       MATCHED
       AND
       search_condition
        predicate
         expr
          expr
           expr
            primitive_expression
             id_
              s
             .
             id_
              c
           comparison_operator
            !=
           expr
            primitive_expression
             literal
              1
          AND
          expr
           expr
            primitive_expression
             id_
              s
             .
             id_
              c2
           comparison_operator
            !=
           expr
            primitive_expression
             literal
              1
       THEN
       merge_update_delete
        UPDATE
        SET
        column_name
         id_
          d
         .
         id_
          c
        =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c
        ,
        column_name
         id_
          d
         .
         id_
          c2
        =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c2
        ,
        column_name
         id_
          d
         .
         id_
          c3
        =
        expr
         primitive_expression
          id_
           s
          .
          id_
           c3
      merge_cond
       WHEN
       NOT
       MATCHED
       THEN
       merge_insert
        INSERT
        (
        column_list
         column_name
          id_
           c
         ,
         column_name
          id_
           c2
         ,
         column_name
          id_
           c3
        )
        VALUES
        (
        expr_list
         expr
          primitive_expression
           id_
            s
           .
           id_
            c
         ,
         expr
          primitive_expression
           id_
            s
           .
           id_
            c2
         ,
         expr
          primitive_expression
           id_
            s
           .
           id_
            c3
        )
  ;
  sql_command
   dml_command
    insert_statement
     insert
     into
     object_name
      id_
       t
     column_list_in_parentheses
      (
      column_list
       column_name
        id_
         a
       ,
       column_name
        id_
         b
      )
     query_statement
      select_statement
       select_clause
        select
        select_list_no_top
         select_list
          select_list_elem
           expression_elem
            expr
             primitive_expression
              literal
               1
          ,
          select_list_elem
           expression_elem
            expr
             primitive_expression
              literal
               2
       select_optional_clauses
      set_operators
       union
       select_statement
        select_clause
         select
         select_list_no_top
          select_list
           select_list_elem
            expression_elem
             expr
              primitive_expression
               literal
                3
           ,
           select_list_elem
            expression_elem
             expr
              primitive_expression
               literal
                4
        select_optional_clauses
  ;
  sql_command
   dml_command
    query_statement
     select_statement
      select_clause
       SELECT
       select_list_no_top
        select_list
         select_list_elem
          column_elem_star
           *
      select_optional_clauses
       from_clause
        FROM
        table_sources
         table_source
          table_source_item_joined
           object_ref
            object_name
             id_
              t
         ,
         table_source
          table_source_item_joined
           object_ref
            TABLE
            (
            function_call
             object_name
              id_
               keyword
                flatten
             (
             param_assoc_list
              param_assoc
               id_
                non_reserved_words
                 INPUT
               =>
               expr
                primitive_expression
                 id_
                  t
                 .
                 id_
                  c
              ,
              param_assoc
               id_
                non_reserved_words
                 PATH
               =>
               expr
                primitive_expression
                 literal
                  ''
              ,
              param_assoc
               id_
                keyword
                 OUTER
               =>
               expr
                primitive_expression
                 literal
                  true_false
                   true
              ,
              param_assoc
               id_
                keyword
                 RECURSIVE
               =>
               expr
                primitive_expression
                 literal
                  true_false
                   true
              ,
              param_assoc
               id_
                keyword
                 MODE
               =>
               expr
                primitive_expression
                 'both'
             )
            )
  ;
 <EOF>
