sql_script
 unit_statement
  create_package_body
   create
   or
   replace
   package
   body
   package_name
    identifier
     id_expression
      regular_id
       pack
   as
   package_obj_body
    procedure_body
     procedure
     identifier
      id_expression
       regular_id
        non_reserved_keywords_pre12c
         test
     (
     parameter
      parameter_name
       identifier
        id_expression
         regular_id
          inId
      type_spec
       datatype
        native_datatype_element
         number
     )
     as
     seq_of_declare_specs
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           vSum
        type_spec
         datatype
          native_datatype_element
           number
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           vPaymentsDate
        type_spec
         datatype
          native_datatype_element
           number
        ;
     body
      begin
      seq_of_statements
       statement
        assignment_statement
         general_element
          general_element_part
           id_expression
            regular_id
             vSum
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  standard_function
                   string_function
                    nvl
                    (
                    expression
                     logical_expression
                      unary_logical_expression
                       multiset_expression
                        relational_expression
                         compound_expression
                          concatenation
                           model_expression
                            unary_expression
                             atom
                              general_element
                               general_element
                                general_element_part
                                 id_expression
                                  regular_id
                                   pack_1
                               .
                               general_element_part
                                id_expression
                                 regular_id
                                  getSum
                                @
                                link_name
                                 database
                                  id_expression
                                   regular_id
                                    dblink
                                function_argument
                                 (
                                 argument
                                  identifier
                                   id_expression
                                    regular_id
                                     inId
                                  =
                                  >
                                  expression
                                   logical_expression
                                    unary_logical_expression
                                     multiset_expression
                                      relational_expression
                                       compound_expression
                                        concatenation
                                         model_expression
                                          unary_expression
                                           atom
                                            general_element
                                             general_element_part
                                              id_expression
                                               regular_id
                                                inId
                                 ,
                                 argument
                                  identifier
                                   id_expression
                                    regular_id
                                     vPaymentsDate
                                  =
                                  >
                                  expression
                                   logical_expression
                                    unary_logical_expression
                                     multiset_expression
                                      relational_expression
                                       compound_expression
                                        concatenation
                                         model_expression
                                          unary_expression
                                           atom
                                            general_element
                                             general_element
                                              general_element_part
                                               id_expression
                                                regular_id
                                                 pack_2
                                             .
                                             general_element_part
                                              id_expression
                                               regular_id
                                                getLastDay
                                              function_argument
                                               (
                                               argument
                                                expression
                                                 logical_expression
                                                  unary_logical_expression
                                                   multiset_expression
                                                    relational_expression
                                                     compound_expression
                                                      concatenation
                                                       model_expression
                                                        unary_expression
                                                         atom
                                                          constant
                                                           numeric
                                                            4
                                               ,
                                               argument
                                                expression
                                                 logical_expression
                                                  unary_logical_expression
                                                   multiset_expression
                                                    relational_expression
                                                     compound_expression
                                                      concatenation
                                                       model_expression
                                                        unary_expression
                                                         atom
                                                          constant
                                                           numeric
                                                            3
                                               )
                                 )
                    ,
                    expression
                     logical_expression
                      unary_logical_expression
                       multiset_expression
                        relational_expression
                         compound_expression
                          concatenation
                           model_expression
                            unary_expression
                             atom
                              constant
                               numeric
                                0
                    )
       ;
      end
     ;
   end
 ;
 <EOF>
