sql_script
 unit_statement
  create_package
   create
   or
   replace
   package
   package_name
    identifier
     id_expression
      regular_id
       pkgtest
   is
   package_obj_spec
    cursor_declaration
     cursor
     identifier
      id_expression
       regular_id
        cuData
     is
     select_statement
      select_only_statement
       subquery
        subquery_basic_elements
         query_block
          select
          selected_list
           *
          from_clause
           from
           table_ref_list
            table_ref
             table_ref_aux
              table_ref_aux_internal
               dml_table_expression_clause
                tableview_name
                 identifier
                  id_expression
                   regular_id
                    dual
     ;
   package_obj_spec
    procedure_spec
     procedure
     identifier
      id_expression
       regular_id
        non_reserved_keywords_pre12c
         main
     ;
   end
 ;
 /
 unit_statement
  create_package_body
   create
   or
   replace
   package
   body
   package_name
    identifier
     id_expression
      regular_id
       pkgtest
   is
   package_obj_body
    procedure_body
     procedure
     identifier
      id_expression
       regular_id
        non_reserved_keywords_pre12c
         main
     is
     seq_of_declare_specs
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           sbData
        type_spec
         datatype
          native_datatype_element
           varchar2
          precision_part
           (
           numeric
            100
           )
        ;
     body
      begin
      seq_of_statements
       statement
        sql_statement
         cursor_manipulation_statements
          open_statement
           open
           cursor_name
            general_element
             general_element
              general_element_part
               id_expression
                regular_id
                 pkgtest
             .
             general_element_part
              id_expression
               regular_id
                cuData
       ;
       statement
        sql_statement
         cursor_manipulation_statements
          fetch_statement
           fetch
           cursor_name
            general_element
             general_element_part
              id_expression
               regular_id
                cuData
           into
           variable_or_collection
            variable_name
             id_expression
              regular_id
               sbData
       ;
       statement
        sql_statement
         cursor_manipulation_statements
          close_statement
           close
           cursor_name
            general_element
             general_element_part
              id_expression
               regular_id
                cuData
       ;
       statement
        if_statement
         if
         condition
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               compound_expression
                concatenation
                 model_expression
                  unary_expression
                   standard_function
                    other_function
                     cursor_name
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          cuData
                     %isopen
         then
         seq_of_statements
          statement
           call_statement
            routine_name
             identifier
              id_expression
               regular_id
                dbms_output
             .
             id_expression
              regular_id
               put_line
            function_argument
             (
             argument
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          'should work'
             )
          ;
         end
         if
       ;
       statement
        if_statement
         if
         condition
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               relational_expression
                compound_expression
                 concatenation
                  model_expression
                   unary_expression
                    standard_function
                     other_function
                      cursor_name
                       general_element
                        general_element_part
                         id_expression
                          regular_id
                           non_reserved_keywords_pre12c
                            sql
                      %rowcount
               relational_operator
                >
               relational_expression
                compound_expression
                 concatenation
                  model_expression
                   unary_expression
                    atom
                     constant
                      numeric
                       0
         then
         seq_of_statements
          statement
           call_statement
            routine_name
             identifier
              id_expression
               regular_id
                dbms_output
             .
             id_expression
              regular_id
               put_line
            function_argument
             (
             argument
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          'should work too'
             )
          ;
         end
         if
       ;
      end
     ;
   package_obj_body
    function_body
     function
     identifier
      id_expression
       regular_id
        GETPOS_TEMPLATE_DEF_ID
     return
     type_spec
      datatype
       native_datatype_element
        VARCHAR2
     is
     seq_of_declare_specs
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           LVS_ID
        type_spec
         datatype
          native_datatype_element
           VARCHAR2
          precision_part
           (
           numeric
            4000
           CHAR
           )
        ;
     body
      BEGIN
      seq_of_statements
       statement
        assignment_statement
         general_element
          general_element_part
           id_expression
            regular_id
             LVS_ID
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  standard_function
                   string_function
                    TRIM
                    (
                    BOTH
                    expression
                     logical_expression
                      unary_logical_expression
                       multiset_expression
                        relational_expression
                         compound_expression
                          concatenation
                           model_expression
                            unary_expression
                             atom
                              general_element
                               general_element
                                general_element_part
                                 id_expression
                                  regular_id
                                   SF_FORM_EXT_CONSTANTS
                               .
                               general_element_part
                                id_expression
                                 regular_id
                                  GETSOMETHING
                    FROM
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            LVS_ID
                    )
       ;
       statement
        return_statement
         return
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       LVS_ID
       ;
      end
      label_name
       id_expression
        regular_id
         GETPOS_TEMPLATE_DEF_ID
     ;
   end
 ;
 /
 <EOF>
