sql_script
 unit_statement
  create_package_body
   create
   or
   replace
   package
   body
   package_name
    identifier
     id_expression
      regular_id
       green_tools
   is
   package_obj_body
    procedure_body
     procedure
     identifier
      id_expression
       regular_id
        no_params_procedure
     is
     body
      begin
      seq_of_statements
       statement
        call_statement
         routine_name
          identifier
           id_expression
            regular_id
             dbms_output
          .
          id_expression
           regular_id
            put_line
         function_argument
          (
          argument
           expression
            logical_expression
             unary_logical_expression
              multiset_expression
               relational_expression
                compound_expression
                 concatenation
                  model_expression
                   unary_expression
                    atom
                     constant
                      quoted_string
                       'no_params_procedure : begin'
          )
       ;
      end
      label_name
       id_expression
        regular_id
         no_params_procedure
     ;
   package_obj_body
    function_body
     function
     identifier
      id_expression
       regular_id
        add_brackets
     (
     parameter
      parameter_name
       identifier
        id_expression
         regular_id
          p_string
      in
      type_spec
       datatype
        native_datatype_element
         varchar2
     )
     return
     type_spec
      datatype
       native_datatype_element
        varchar2
     as
     body
      begin
      seq_of_statements
       statement
        return_statement
         return
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                concatenation
                 concatenation
                  model_expression
                   unary_expression
                    atom
                     constant
                      quoted_string
                       '['
                 |
                 |
                 concatenation
                  model_expression
                   unary_expression
                    atom
                     general_element
                      general_element_part
                       id_expression
                        regular_id
                         p_string
                |
                |
                concatenation
                 model_expression
                  unary_expression
                   atom
                    constant
                     quoted_string
                      ']'
       ;
      end
      label_name
       id_expression
        regular_id
         add_brackets
     ;
   package_obj_body
    procedure_body
     procedure
     identifier
      id_expression
       regular_id
        print_green_info
     (
     parameter
      parameter_name
       identifier
        id_expression
         regular_id
          p_with_brackets
      in
      type_spec
       datatype
        native_datatype_element
         boolean
     )
     is
     body
      begin
      seq_of_statements
       statement
        loop_statement
         for
         cursor_loop_param
          record_name
           identifier
            id_expression
             regular_id
              r
          in
          (
          select_statement
           select_only_statement
            subquery
             subquery_basic_elements
              query_block
               select
               selected_list
                select_list_elements
                 expression
                  logical_expression
                   unary_logical_expression
                    multiset_expression
                     relational_expression
                      compound_expression
                       concatenation
                        model_expression
                         unary_expression
                          atom
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               green_col_two
               from_clause
                from
                table_ref_list
                 table_ref
                  table_ref_aux
                   table_ref_aux_internal
                    dml_table_expression_clause
                     tableview_name
                      identifier
                       id_expression
                        regular_id
                         green_table
          )
         loop
         seq_of_statements
          statement
           if_statement
            if
            condition
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       general_element
                        general_element_part
                         id_expression
                          regular_id
                           p_with_brackets
            then
            seq_of_statements
             statement
              call_statement
               routine_name
                identifier
                 id_expression
                  regular_id
                   dbms_output
                .
                id_expression
                 regular_id
                  put_line
               function_argument
                (
                argument
                 expression
                  logical_expression
                   unary_logical_expression
                    multiset_expression
                     relational_expression
                      compound_expression
                       concatenation
                        concatenation
                         model_expression
                          unary_expression
                           atom
                            constant
                             quoted_string
                              'print_green_info : with brackets : '
                        |
                        |
                        concatenation
                         model_expression
                          unary_expression
                           atom
                            general_element
                             general_element_part
                              id_expression
                               regular_id
                                add_brackets
                              function_argument
                               (
                               argument
                                expression
                                 logical_expression
                                  unary_logical_expression
                                   multiset_expression
                                    relational_expression
                                     compound_expression
                                      concatenation
                                       model_expression
                                        unary_expression
                                         atom
                                          general_element
                                           general_element
                                            general_element_part
                                             id_expression
                                              regular_id
                                               r
                                           .
                                           general_element_part
                                            id_expression
                                             regular_id
                                              green_col_two
                               )
                )
             ;
            else_part
             else
             seq_of_statements
              statement
               call_statement
                routine_name
                 identifier
                  id_expression
                   regular_id
                    dbms_output
                 .
                 id_expression
                  regular_id
                   put_line
                function_argument
                 (
                 argument
                  expression
                   logical_expression
                    unary_logical_expression
                     multiset_expression
                      relational_expression
                       compound_expression
                        concatenation
                         concatenation
                          model_expression
                           unary_expression
                            atom
                             constant
                              quoted_string
                               'print_green_info : no brackets : '
                         |
                         |
                         concatenation
                          model_expression
                           unary_expression
                            atom
                             general_element
                              general_element
                               general_element_part
                                id_expression
                                 regular_id
                                  r
                              .
                              general_element_part
                               id_expression
                                regular_id
                                 green_col_two
                 )
              ;
            end
            if
          ;
         end
         loop
       ;
      end
      label_name
       id_expression
        regular_id
         print_green_info
     ;
   end
   package_name
    identifier
     id_expression
      regular_id
       green_tools
 ;
 /
 <EOF>
