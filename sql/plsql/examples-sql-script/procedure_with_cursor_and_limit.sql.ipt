sql_script
 unit_statement
  create_procedure_body
   CREATE
   OR
   REPLACE
   PROCEDURE
   procedure_name
    identifier
     id_expression
      regular_id
       SF_JOB_CLEANUP_SHOWCASES_START
   (
   parameter
    parameter_name
     identifier
      id_expression
       regular_id
        FPN_ANZ_ZUM_VERARBEITEN
    type_spec
     datatype
      native_datatype_element
       NUMBER
    default_value_part
     DEFAULT
     expression
      logical_expression
       unary_logical_expression
        multiset_expression
         relational_expression
          compound_expression
           concatenation
            model_expression
             unary_expression
              atom
               constant
                numeric
                 10000
   ,
   parameter
    parameter_name
     identifier
      id_expression
       regular_id
        FPN_BULK_LIMIT
    type_spec
     datatype
      native_datatype_element
       NUMBER
    default_value_part
     DEFAULT
     expression
      logical_expression
       unary_logical_expression
        multiset_expression
         relational_expression
          compound_expression
           concatenation
            model_expression
             unary_expression
              atom
               constant
                numeric
                 5000
   )
   AS
   seq_of_declare_specs
    declare_spec
     type_declaration
      TYPE
      identifier
       id_expression
        regular_id
         T_BULK_TAB
      IS
      record_type_def
       RECORD
       (
       field_spec
        column_name
         identifier
          id_expression
           regular_id
            SC_ID
        type_spec
         type_name
          id_expression
           regular_id
            SALESFRONT
          .
          id_expression
           regular_id
            SF_SHOWCASE
          .
          id_expression
           regular_id
            non_reserved_keywords_pre12c
             ID
         %TYPE
       ,
       field_spec
        column_name
         identifier
          id_expression
           regular_id
            JOBLIST_ID
        type_spec
         type_name
          id_expression
           regular_id
            SF_JOB_CLEANUP_SHOWCASES_SCLIST
          .
          id_expression
           regular_id
            non_reserved_keywords_pre12c
             ID
         %TYPE
       )
      ;
    declare_spec
     type_declaration
      TYPE
      identifier
       id_expression
        regular_id
         T_BULK_COLLECT_TAB
      IS
      table_type_def
       TABLE
       OF
       type_spec
        type_name
         id_expression
          regular_id
           T_BULK_TAB
      ;
    declare_spec
     variable_declaration
      identifier
       id_expression
        regular_id
         LNC_ID_LIST
      type_spec
       type_name
        id_expression
         regular_id
          T_BULK_COLLECT_TAB
      ;
    declare_spec
     variable_declaration
      identifier
       id_expression
        regular_id
         COUNTER
      type_spec
       datatype
        native_datatype_element
         PLS_INTEGER
      default_value_part
       :=
       expression
        logical_expression
         unary_logical_expression
          multiset_expression
           relational_expression
            compound_expression
             concatenation
              model_expression
               unary_expression
                atom
                 constant
                  numeric
                   0
      ;
    declare_spec
     variable_declaration
      identifier
       id_expression
        regular_id
         LVNEXISTS
      type_spec
       datatype
        native_datatype_element
         PLS_INTEGER
      default_value_part
       :=
       expression
        logical_expression
         unary_logical_expression
          multiset_expression
           relational_expression
            compound_expression
             concatenation
              model_expression
               unary_expression
                atom
                 constant
                  numeric
                   0
      ;
    declare_spec
     variable_declaration
      identifier
       id_expression
        regular_id
         LVSERRORMSG
      type_spec
       datatype
        native_datatype_element
         VARCHAR2
        precision_part
         (
         numeric
          4000
         )
      ;
    declare_spec
     cursor_declaration
      CURSOR
      identifier
       id_expression
        regular_id
         C_DEL_SC
      (
      parameter_spec
       parameter_name
        identifier
         id_expression
          regular_id
           C_MAX_ROW
       type_spec
        datatype
         native_datatype_element
          NUMBER
      )
      IS
      select_statement
       select_only_statement
        subquery
         subquery_basic_elements
          query_block
           SELECT
           selected_list
            select_list_elements
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       general_element
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            SC
                        .
                        general_element_part
                         id_expression
                          regular_id
                           non_reserved_keywords_pre12c
                            ID
             column_alias
              identifier
               id_expression
                regular_id
                 SC_ID
            ,
            select_list_elements
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       general_element
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            SL
                        .
                        general_element_part
                         id_expression
                          regular_id
                           non_reserved_keywords_pre12c
                            ID
             column_alias
              identifier
               id_expression
                regular_id
                 JOBLIST_ID
           from_clause
            FROM
            table_ref_list
             table_ref
              table_ref_aux
               table_ref_aux_internal
                dml_table_expression_clause
                 tableview_name
                  identifier
                   id_expression
                    regular_id
                     SF_JOB_CLEANUP_SHOWCASES_SCLIST
               table_alias
                identifier
                 id_expression
                  regular_id
                   SL
              join_clause
               INNER
               JOIN
               table_ref_aux
                table_ref_aux_internal
                 dml_table_expression_clause
                  tableview_name
                   identifier
                    id_expression
                     regular_id
                      SALESFRONT
                   .
                   id_expression
                    regular_id
                     SF_SHOWCASE
                table_alias
                 identifier
                  id_expression
                   regular_id
                    SC
               join_on_part
                ON
                condition
                 expression
                  logical_expression
                   unary_logical_expression
                    multiset_expression
                     relational_expression
                      relational_expression
                       compound_expression
                        concatenation
                         model_expression
                          unary_expression
                           atom
                            general_element
                             general_element
                              general_element_part
                               id_expression
                                regular_id
                                 SC
                             .
                             general_element_part
                              id_expression
                               regular_id
                                non_reserved_keywords_pre12c
                                 ID
                      relational_operator
                       =
                      relational_expression
                       compound_expression
                        concatenation
                         model_expression
                          unary_expression
                           atom
                            general_element
                             general_element
                              general_element_part
                               id_expression
                                regular_id
                                 SL
                             .
                             general_element_part
                              id_expression
                               regular_id
                                SF_SHOWCASE_ID
           where_clause
            WHERE
            condition
             expression
              logical_expression
               logical_expression
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    relational_expression
                     compound_expression
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          general_element
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               SL
                           .
                           general_element_part
                            id_expression
                             regular_id
                              VERARBEITEN
                    relational_operator
                     =
                    relational_expression
                     compound_expression
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          constant
                           numeric
                            1
                AND
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             VERARBEITET_AM
                  unary_logical_operation
                   IS
                   logical_operation
                    NULL
               AND
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             non_reserved_keywords_pre12c
                              ROWNUM
                   relational_operator
                    <
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             C_MAX_ROW
      ;
   body
    BEGIN
    seq_of_statements
     statement
      sql_statement
       execute_immediate
        EXECUTE
        IMMEDIATE
        expression
         logical_expression
          unary_logical_expression
           multiset_expression
            relational_expression
             compound_expression
              concatenation
               model_expression
                unary_expression
                 atom
                  constant
                   quoted_string
                    'SELECT COUNT(*) FROM USER_SCHEDULER_JOBS JO WHERE JOB_NAME=''SF_START_TOURENEXPORT'' AND JO.STATE = ''RUNNING'''
        into_clause
         INTO
         general_element
          general_element_part
           id_expression
            regular_id
             LVNEXISTS
     ;
     statement
      if_statement
       IF
       condition
        expression
         logical_expression
          unary_logical_expression
           multiset_expression
            relational_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       LVNEXISTS
             relational_operator
              =
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    numeric
                     0
       THEN
       seq_of_statements
        statement
         sql_statement
          cursor_manipulation_statements
           open_statement
            OPEN
            cursor_name
             general_element
              general_element_part
               id_expression
                regular_id
                 C_DEL_SC
               function_argument
                (
                argument
                 expression
                  logical_expression
                   unary_logical_expression
                    multiset_expression
                     relational_expression
                      compound_expression
                       concatenation
                        model_expression
                         unary_expression
                          atom
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               FPN_ANZ_ZUM_VERARBEITEN
                )
        ;
        statement
         loop_statement
          LOOP
          seq_of_statements
           statement
            sql_statement
             cursor_manipulation_statements
              fetch_statement
               FETCH
               cursor_name
                general_element
                 general_element_part
                  id_expression
                   regular_id
                    C_DEL_SC
               BULK
               COLLECT
               INTO
               variable_or_collection
                variable_name
                 id_expression
                  regular_id
                   LNC_ID_LIST
               LIMIT
               variable_or_collection
                variable_name
                 id_expression
                  regular_id
                   FPN_BULK_LIMIT
           ;
           statement
            assignment_statement
             general_element
              general_element_part
               id_expression
                regular_id
                 COUNTER
             :=
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            COUNTER
                    +
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             LNC_ID_LIST
                         .
                         general_element_part
                          id_expression
                           regular_id
                            non_reserved_keywords_pre12c
                             COUNT
           ;
           statement
            exit_statement
             EXIT
             WHEN
             condition
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       standard_function
                        other_function
                         cursor_name
                          general_element
                           general_element_part
                            id_expression
                             regular_id
                              C_DEL_SC
                         %NOTFOUND
           ;
           statement
            sql_statement
             transaction_control_statements
              commit_statement
               COMMIT
           ;
          END
          LOOP
        ;
        statement
         sql_statement
          cursor_manipulation_statements
           close_statement
            CLOSE
            cursor_name
             general_element
              general_element_part
               id_expression
                regular_id
                 C_DEL_SC
        ;
       END
       IF
     ;
    EXCEPTION
    exception_handler
     WHEN
     exception_name
      identifier
       id_expression
        regular_id
         OTHERS
     THEN
     seq_of_statements
      statement
       assignment_statement
        general_element
         general_element_part
          id_expression
           regular_id
            LVSERRORMSG
        :=
        expression
         logical_expression
          unary_logical_expression
           multiset_expression
            relational_expression
             compound_expression
              concatenation
               concatenation
                concatenation
                 model_expression
                  unary_expression
                   atom
                    general_element
                     general_element_part
                      id_expression
                       regular_id
                        SQLERRM
                |
                |
                concatenation
                 model_expression
                  unary_expression
                   atom
                    constant
                     quoted_string
                      ' BACKTRACE: '
               |
               |
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element
                     general_element_part
                      id_expression
                       regular_id
                        DBMS_UTILITY
                    .
                    general_element_part
                     id_expression
                      regular_id
                       FORMAT_ERROR_BACKTRACE
      ;
      statement
       sql_statement
        transaction_control_statements
         rollback_statement
          ROLLBACK
      ;
    END
 ;
 <EOF>
