sql_script
 unit_statement
  create_package_body
   create
   or
   replace
   package
   body
   package_name
    identifier
     id_expression
      regular_id
       pipe_row_test
   as
   package_obj_body
    function_body
     function
     identifier
      id_expression
       regular_id
        fun
     return
     type_spec
      type_name
       id_expression
        regular_id
         t_tab
     pipelined
     as
     seq_of_declare_specs
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           vRow
        type_spec
         type_name
          id_expression
           regular_id
            t_tab_row
        ;
     body
      begin
      seq_of_statements
       statement
        loop_statement
         for
         cursor_loop_param
          record_name
           identifier
            id_expression
             regular_id
              rec
          in
          (
          select_statement
           select_only_statement
            subquery
             subquery_basic_elements
              query_block
               select
               selected_list
                select_list_elements
                 expression
                  logical_expression
                   unary_logical_expression
                    multiset_expression
                     relational_expression
                      compound_expression
                       concatenation
                        model_expression
                         unary_expression
                          atom
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               non_reserved_keywords_pre12c
                                Id
               from_clause
                from
                table_ref_list
                 table_ref
                  table_ref_aux
                   table_ref_aux_internal
                    dml_table_expression_clause
                     tableview_name
                      identifier
                       id_expression
                        regular_id
                         tbl
          )
         loop
         seq_of_statements
          statement
           assignment_statement
            general_element
             general_element
              general_element_part
               id_expression
                regular_id
                 vrow
             .
             general_element_part
              id_expression
               regular_id
                non_reserved_keywords_pre12c
                 Id
            :=
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element
                        general_element_part
                         id_expression
                          regular_id
                           rec
                       .
                       general_element_part
                        id_expression
                         regular_id
                          non_reserved_keywords_pre12c
                           Id
          ;
          statement
           pipe_row_statement
            pipe
            row
            (
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          vrow
            )
          ;
         end
         loop
       ;
      end
     ;
   package_obj_body
    function_body
     function
     identifier
      id_expression
       regular_id
        prodfunc
     (
     parameter
      parameter_name
       identifier
        id_expression
         regular_id
          n
      type_spec
       datatype
        native_datatype_element
         number
     )
     return
     type_spec
      type_name
       id_expression
        regular_id
         mytabletype
     pipelined
     is
     body
      begin
      seq_of_statements
       statement
        loop_statement
         label_declaration
          <
          <
          label_name
           id_expression
            regular_id
             pipes
          >
          >
         for
         cursor_loop_param
          index_name
           identifier
            id_expression
             regular_id
              i
          in
          lower_bound
           concatenation
            model_expression
             unary_expression
              atom
               constant
                numeric
                 1
          ..
          upper_bound
           concatenation
            model_expression
             unary_expression
              atom
               constant
                numeric
                 5
         loop
         seq_of_statements
          statement
           pipe_row_statement
            pipe
            row
            (
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          myobjectformat
                        function_argument
                         (
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 model_expression
                                  unary_expression
                                   atom
                                    general_element
                                     general_element_part
                                      id_expression
                                       regular_id
                                        n
                         ,
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     general_element
                                      general_element_part
                                       id_expression
                                        regular_id
                                         non_reserved_keywords_pre12c
                                          sysdate
                                 +
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     general_element
                                      general_element_part
                                       id_expression
                                        regular_id
                                         i
                         ,
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     constant
                                      quoted_string
                                       'row '
                                 |
                                 |
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     general_element
                                      general_element_part
                                       id_expression
                                        regular_id
                                         i
                         )
            )
          ;
         end
         loop
         label_name
          id_expression
           regular_id
            pipes
       ;
       statement
        return_statement
         return
       ;
      end
     ;
   end
 ;
 <EOF>
