sql_script
 unit_statement
  create_package
   CREATE
   OR
   REPLACE
   PACKAGE
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_spec
    procedure_spec
     PROCEDURE
     identifier
      id_expression
       regular_id
        varray_def_test
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 unit_statement
  create_package_body
   CREATE
   OR
   REPLACE
   PACKAGE
   BODY
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_body
    procedure_body
     PROCEDURE
     identifier
      id_expression
       regular_id
        varray_def_test
     IS
     seq_of_declare_specs
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           type_array1
        IS
        varray_type_def
         VARRAY
         (
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    numeric
                     5
         )
         OF
         type_spec
          datatype
           native_datatype_element
            PLS_INTEGER
        ;
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           type_array2
        IS
        varray_type_def
         VARYING
         ARRAY
         (
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    numeric
                     5
         )
         OF
         type_spec
          datatype
           native_datatype_element
            PLS_INTEGER
        ;
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           type_array3
        IS
        varray_type_def
         VARRAY
         (
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    numeric
                     5
         )
         OF
         type_spec
          datatype
           native_datatype_element
            PLS_INTEGER
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           array1
        type_spec
         type_name
          id_expression
           regular_id
            type_array1
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           array2
        type_spec
         type_name
          id_expression
           regular_id
            type_array2
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           array3
        type_spec
         type_name
          id_expression
           regular_id
            type_array3
        ;
     body
      BEGIN
      seq_of_statements
       statement
        assignment_statement
         general_element
          general_element_part
           id_expression
            regular_id
             array1
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       type_array1
                     function_argument
                      (
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   1
                      )
       ;
       statement
        assignment_statement
         general_element
          general_element_part
           id_expression
            regular_id
             array2
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       type_array2
                     function_argument
                      (
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   2
                      )
       ;
       statement
        assignment_statement
         general_element
          general_element_part
           id_expression
            regular_id
             array3
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       type_array3
                     function_argument
                      (
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   3
                      )
       ;
       statement
        call_statement
         routine_name
          identifier
           id_expression
            regular_id
             dbms_output
          .
          id_expression
           regular_id
            put_line
         function_argument
          (
          argument
           expression
            logical_expression
             unary_logical_expression
              multiset_expression
               relational_expression
                compound_expression
                 concatenation
                  concatenation
                   concatenation
                    concatenation
                     concatenation
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          constant
                           quoted_string
                            'v1='
                      |
                      |
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          general_element
                           general_element_part
                            id_expression
                             regular_id
                              array1
                            function_argument
                             (
                             argument
                              expression
                               logical_expression
                                unary_logical_expression
                                 multiset_expression
                                  relational_expression
                                   compound_expression
                                    concatenation
                                     model_expression
                                      unary_expression
                                       atom
                                        constant
                                         numeric
                                          1
                             )
                     |
                     |
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         constant
                          quoted_string
                           ', v2='
                    |
                    |
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            array2
                          function_argument
                           (
                           argument
                            expression
                             logical_expression
                              unary_logical_expression
                               multiset_expression
                                relational_expression
                                 compound_expression
                                  concatenation
                                   model_expression
                                    unary_expression
                                     atom
                                      constant
                                       numeric
                                        1
                           )
                   |
                   |
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       constant
                        quoted_string
                         ', v3='
                  |
                  |
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          array3
                        function_argument
                         (
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 model_expression
                                  unary_expression
                                   atom
                                    constant
                                     numeric
                                      1
                         )
          )
       ;
      END
      label_name
       id_expression
        regular_id
         varray_def_test
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 <EOF>
