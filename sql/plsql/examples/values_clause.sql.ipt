sql_script
 unit_statement
  create_package
   CREATE
   OR
   REPLACE
   PACKAGE
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_spec
    procedure_spec
     PROCEDURE
     identifier
      id_expression
       regular_id
        values_test
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 unit_statement
  create_package_body
   CREATE
   OR
   REPLACE
   PACKAGE
   BODY
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_body
    procedure_body
     PROCEDURE
     identifier
      id_expression
       regular_id
        values_test
     IS
     seq_of_declare_specs
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           value_type
        IS
        record_type_def
         RECORD
         (
         field_spec
          column_name
           identifier
            id_expression
             regular_id
              non_reserved_keywords_pre12c
               ID
          type_spec
           datatype
            native_datatype_element
             PLS_INTEGER
         ,
         field_spec
          column_name
           identifier
            id_expression
             regular_id
              non_reserved_keywords_pre12c
               VALUE
          type_spec
           datatype
            native_datatype_element
             VARCHAR2
            precision_part
             (
             numeric
              100
             )
         )
        ;
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           non_reserved_keywords_pre12c
            list
        IS
        table_type_def
         TABLE
         OF
         type_spec
          type_name
           id_expression
            regular_id
             value_type
         table_indexed_by_part
          INDEX
          BY
          type_spec
           datatype
            native_datatype_element
             PLS_INTEGER
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           tmp_list
        type_spec
         type_name
          id_expression
           regular_id
            non_reserved_keywords_pre12c
             list
        ;
     body
      BEGIN
      seq_of_statements
       statement
        assignment_statement
         general_element
          general_element
           general_element_part
            id_expression
             regular_id
              tmp_list
            function_argument
             (
             argument
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          0
             )
          .
          general_element_part
           id_expression
            regular_id
             non_reserved_keywords_pre12c
              ID
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    numeric
                     1
       ;
       statement
        assignment_statement
         general_element
          general_element
           general_element_part
            id_expression
             regular_id
              tmp_list
            function_argument
             (
             argument
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          0
             )
          .
          general_element_part
           id_expression
            regular_id
             non_reserved_keywords_pre12c
              VALUE
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   constant
                    quoted_string
                     'test_value'
       ;
       statement
        sql_statement
         data_manipulation_language_statements
          insert_statement
           INSERT
           single_table_insert
            insert_into_clause
             INTO
             general_table_ref
              dml_table_expression_clause
               tableview_name
                identifier
                 id_expression
                  regular_id
                   TEST_TB
            values_clause
             VALUES
             collection_expression
              collation_name
               identifier
                id_expression
                 regular_id
                  tmp_list
              (
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          0
              )
       ;
      END
      label_name
       id_expression
        regular_id
         values_test
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 <EOF>
