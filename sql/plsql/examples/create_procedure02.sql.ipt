sql_script
 unit_statement
  create_procedure_body
   CREATE
   OR
   REPLACE
   PROCEDURE
   procedure_name
    identifier
     id_expression
      regular_id
       prc_calendar_data
   (
   parameter
    parameter_name
     identifier
      id_expression
       regular_id
        cal_cv
    IN
    OUT
    type_spec
     type_name
      id_expression
       regular_id
        calendar_data
      .
      id_expression
       regular_id
        calcurtyp
   ,
   parameter
    parameter_name
     identifier
      id_expression
       regular_id
        year_id
    type_spec
     datatype
      native_datatype_element
       INT
   )
   PARALLEL_ENABLE
   AS
   body
    BEGIN
    seq_of_statements
     statement
      sql_statement
       cursor_manipulation_statements
        open_for_statement
         OPEN
         variable_name
          id_expression
           regular_id
            cal_cv
         FOR
         select_statement
          select_only_statement
           subquery
            subquery_basic_elements
             query_block
              SELECT
              selected_list
               *
              from_clause
               FROM
               table_ref_list
                table_ref
                 table_ref_aux
                  table_ref_aux_internal
                   dml_table_expression_clause
                    tableview_name
                     identifier
                      id_expression
                       regular_id
                        d_months
              where_clause
               WHERE
               condition
                expression
                 logical_expression
                  unary_logical_expression
                   multiset_expression
                    relational_expression
                     relational_expression
                      compound_expression
                       concatenation
                        model_expression
                         unary_expression
                          atom
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               year_id
                     relational_operator
                      =
                     relational_expression
                      compound_expression
                       concatenation
                        model_expression
                         unary_expression
                          atom
                           general_element
                            general_element_part
                             id_expression
                              regular_id
                               year_id
     ;
    EXCEPTION
    exception_handler
     WHEN
     exception_name
      identifier
       id_expression
        regular_id
         OTHERS
     THEN
     seq_of_statements
      statement
       call_statement
        routine_name
         identifier
          id_expression
           regular_id
            raise_application_error
        function_argument
         (
         argument
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               compound_expression
                concatenation
                 model_expression
                  unary_expression
                   -
                   unary_expression
                    atom
                     constant
                      numeric
                       20001
         ,
         argument
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               compound_expression
                concatenation
                 model_expression
                  unary_expression
                   atom
                    constant
                     quoted_string
                      'Error!'
         )
      ;
    END
 ;
 <EOF>
