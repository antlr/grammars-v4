sql_script
 unit_statement
  create_type
   CREATE
   OR
   REPLACE
   TYPE
   type_definition
    type_name
     id_expression
      regular_id
       DUMMY_TAB
    object_type_def
     object_as_part
      AS
      nested_table_type_def
       TABLE
       OF
       type_spec
        datatype
         native_datatype_element
          INTEGER
 ;
 unit_statement
  create_function_body
   CREATE
   OR
   REPLACE
   FUNCTION
   function_name
    identifier
     id_expression
      regular_id
       fun_pipelined
   (
   parameter
    parameter_name
     identifier
      id_expression
       regular_id
        i
    type_spec
     datatype
      native_datatype_element
       INTEGER
   )
   RETURN
   type_spec
    type_name
     id_expression
      regular_id
       dummy_tab
   PIPELINED
   parallel_enable_clause
    PARALLEL_ENABLE
   AS
   body
    BEGIN
    seq_of_statements
     statement
      loop_statement
       FOR
       cursor_loop_param
        record_name
         identifier
          id_expression
           regular_id
            rec1
        in
        (
        select_statement
         select_only_statement
          subquery
           subquery_basic_elements
            query_block
             SELECT
             selected_list
              select_list_elements
               expression
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             i
               column_alias
                AS
                identifier
                 id_expression
                  regular_id
                   outrec
             from_clause
              from
              table_ref_list
               table_ref
                table_ref_aux
                 table_ref_aux_internal
                  dml_table_expression_clause
                   tableview_name
                    identifier
                     id_expression
                      regular_id
                       dual
        )
       LOOP
       seq_of_statements
        statement
         pipe_row_statement
          PIPE
          ROW
          (
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               compound_expression
                concatenation
                 model_expression
                  unary_expression
                   atom
                    general_element
                     general_element
                      general_element_part
                       id_expression
                        regular_id
                         rec1
                     .
                     general_element_part
                      id_expression
                       regular_id
                        outrec
          )
        ;
       END
       LOOP
     ;
     statement
      return_statement
       RETURN
     ;
    END
 ;
 <EOF>
