sql_script
 unit_statement
  create_package
   CREATE
   OR
   REPLACE
   PACKAGE
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_spec
    procedure_spec
     PROCEDURE
     identifier
      id_expression
       regular_id
        forall_and_exception_after_forall
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 unit_statement
  create_package_body
   CREATE
   OR
   REPLACE
   PACKAGE
   BODY
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
   AS
   package_obj_body
    procedure_body
     PROCEDURE
     identifier
      id_expression
       regular_id
        forall_and_exception_after_forall
     IS
     seq_of_declare_specs
      declare_spec
       type_declaration
        TYPE
        identifier
         id_expression
          regular_id
           IdList
        IS
        table_type_def
         TABLE
         OF
         type_spec
          datatype
           native_datatype_element
            NUMBER
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           ids
        type_spec
         type_name
          id_expression
           regular_id
            IdList
        default_value_part
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       IdList
                     function_argument
                      (
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   10
                      ,
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   20
                      ,
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 constant
                                  numeric
                                   30
                      )
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           error_message
        type_spec
         datatype
          native_datatype_element
           VARCHAR2
          precision_part
           (
           numeric
            100
           )
        ;
      declare_spec
       variable_declaration
        identifier
         id_expression
          regular_id
           bad_stmt_no
        type_spec
         datatype
          native_datatype_element
           PLS_INTEGER
        ;
      declare_spec
       exception_declaration
        identifier
         id_expression
          regular_id
           dml_errors
        EXCEPTION
        ;
      declare_spec
       pragma_declaration
        PRAGMA
        EXCEPTION_INIT
        (
        exception_name
         identifier
          id_expression
           regular_id
            dml_errors
        ,
        numeric_negative
         -
         numeric
          24381
        )
        ;
     body
      BEGIN
      seq_of_statements
       statement
        sql_statement
         data_manipulation_language_statements
          insert_statement
           INSERT
           single_table_insert
            insert_into_clause
             INTO
             general_table_ref
              dml_table_expression_clause
               tableview_name
                identifier
                 id_expression
                  regular_id
                   TEST_TB
             paren_column_list
              (
              column_list
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    id
               ,
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    value
              )
            values_clause
             VALUES
             (
             expressions
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          10
              ,
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          'v_10'
             )
       ;
       statement
        sql_statement
         data_manipulation_language_statements
          insert_statement
           INSERT
           single_table_insert
            insert_into_clause
             INTO
             general_table_ref
              dml_table_expression_clause
               tableview_name
                identifier
                 id_expression
                  regular_id
                   TEST_TB
             paren_column_list
              (
              column_list
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    id
               ,
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    value
              )
            values_clause
             VALUES
             (
             expressions
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          20
              ,
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          'value_20'
             )
       ;
       statement
        sql_statement
         data_manipulation_language_statements
          insert_statement
           INSERT
           single_table_insert
            insert_into_clause
             INTO
             general_table_ref
              dml_table_expression_clause
               tableview_name
                identifier
                 id_expression
                  regular_id
                   TEST_TB
             paren_column_list
              (
              column_list
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    id
               ,
               column_name
                identifier
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    value
              )
            values_clause
             VALUES
             (
             expressions
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         numeric
                          30
              ,
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          'v_30'
             )
       ;
       statement
        sql_statement
         transaction_control_statements
          commit_statement
           COMMIT
       ;
       statement
        forall_statement
         FORALL
         index_name
          identifier
           id_expression
            regular_id
             j
         IN
         bounds_clause
          lower_bound
           concatenation
            model_expression
             unary_expression
              atom
               general_element
                general_element
                 general_element_part
                  id_expression
                   regular_id
                    ids
                .
                general_element_part
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    FIRST
          ..
          upper_bound
           concatenation
            model_expression
             unary_expression
              atom
               general_element
                general_element
                 general_element_part
                  id_expression
                   regular_id
                    ids
                .
                general_element_part
                 id_expression
                  regular_id
                   non_reserved_keywords_pre12c
                    LAST
         SAVE
         EXCEPTIONS
         data_manipulation_language_statements
          update_statement
           UPDATE
           general_table_ref
            dml_table_expression_clause
             tableview_name
              identifier
               id_expression
                regular_id
                 TEST_TB
           update_set_clause
            SET
            column_based_update_set_clause
             column_name
              identifier
               id_expression
                regular_id
                 non_reserved_keywords_pre12c
                  value
             =
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            non_reserved_keywords_pre12c
                             value
                    |
                    |
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        constant
                         quoted_string
                          '. add'
           where_clause
            WHERE
            condition
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            non_reserved_keywords_pre12c
                             id
                  relational_operator
                   =
                  relational_expression
                   compound_expression
                    concatenation
                     model_expression
                      unary_expression
                       atom
                        general_element
                         general_element_part
                          id_expression
                           regular_id
                            ids
                          function_argument
                           (
                           argument
                            expression
                             logical_expression
                              unary_logical_expression
                               multiset_expression
                                relational_expression
                                 compound_expression
                                  concatenation
                                   model_expression
                                    unary_expression
                                     atom
                                      general_element
                                       general_element_part
                                        id_expression
                                         regular_id
                                          j
                           )
       ;
      EXCEPTION
      exception_handler
       WHEN
       exception_name
        identifier
         id_expression
          regular_id
           dml_errors
       THEN
       seq_of_statements
        statement
         loop_statement
          FOR
          cursor_loop_param
           index_name
            identifier
             id_expression
              regular_id
               i
           IN
           lower_bound
            concatenation
             model_expression
              unary_expression
               atom
                constant
                 numeric
                  1
           ..
           upper_bound
            concatenation
             model_expression
              unary_expression
               implicit_cursor_expression
                SQL
                %BULK_EXCEPTIONS
                .
                COUNT
          LOOP
          seq_of_statements
           statement
            assignment_statement
             general_element
              general_element_part
               id_expression
                regular_id
                 error_message
             :=
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       general_element
                        general_element_part
                         id_expression
                          regular_id
                           SQLERRM
                         function_argument
                          (
                          argument
                           expression
                            logical_expression
                             unary_logical_expression
                              multiset_expression
                               relational_expression
                                compound_expression
                                 concatenation
                                  model_expression
                                   unary_expression
                                    -
                                    unary_expression
                                     atom
                                      (
                                      expressions
                                       expression
                                        logical_expression
                                         unary_logical_expression
                                          multiset_expression
                                           relational_expression
                                            compound_expression
                                             concatenation
                                              model_expression
                                               unary_expression
                                                implicit_cursor_expression
                                                 SQL
                                                 %BULK_EXCEPTIONS
                                                 (
                                                 expression
                                                  logical_expression
                                                   unary_logical_expression
                                                    multiset_expression
                                                     relational_expression
                                                      compound_expression
                                                       concatenation
                                                        model_expression
                                                         unary_expression
                                                          atom
                                                           general_element
                                                            general_element_part
                                                             id_expression
                                                              regular_id
                                                               i
                                                 )
                                                 .
                                                 ERROR_CODE
                                      )
                          )
           ;
           statement
            call_statement
             routine_name
              identifier
               id_expression
                regular_id
                 DBMS_OUTPUT
              .
              id_expression
               regular_id
                PUT_LINE
             function_argument
              (
              argument
               expression
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             error_message
              )
           ;
           statement
            assignment_statement
             general_element
              general_element_part
               id_expression
                regular_id
                 bad_stmt_no
             :=
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      implicit_cursor_expression
                       SQL
                       %BULK_EXCEPTIONS
                       (
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              model_expression
                               unary_expression
                                atom
                                 general_element
                                  general_element_part
                                   id_expression
                                    regular_id
                                     i
                       )
                       .
                       ERROR_INDEX
           ;
           statement
            call_statement
             routine_name
              identifier
               id_expression
                regular_id
                 DBMS_OUTPUT
              .
              id_expression
               regular_id
                PUT_LINE
             function_argument
              (
              argument
               expression
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    compound_expression
                     concatenation
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          constant
                           quoted_string
                            'Bad statement #: '
                      |
                      |
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          general_element
                           general_element_part
                            id_expression
                             regular_id
                              bad_stmt_no
              )
           ;
          END
          LOOP
        ;
        statement
         sql_statement
          transaction_control_statements
           commit_statement
            COMMIT
        ;
      exception_handler
       WHEN
       exception_name
        identifier
         id_expression
          regular_id
           OTHERS
       THEN
       seq_of_statements
        statement
         call_statement
          routine_name
           identifier
            id_expression
             regular_id
              DBMS_OUTPUT
           .
           id_expression
            regular_id
             PUT_LINE
          function_argument
           (
           argument
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      constant
                       quoted_string
                        'Unrecognized error.'
           )
        ;
        statement
         raise_statement
          RAISE
        ;
      END
      label_name
       id_expression
        regular_id
         forall_and_exception_after_forall
     ;
   END
   package_name
    identifier
     id_expression
      regular_id
       TEST_PKG_LXD
 ;
 <EOF>
