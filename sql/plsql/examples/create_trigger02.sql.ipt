sql_script
 unit_statement
  create_trigger
   create
   or
   replace
   trigger
   trigger_name
    identifier
     id_expression
      regular_id
       my_trg
   simple_dml_trigger
    before
    dml_event_clause
     dml_event_element
      insert
     on
     tableview_name
      identifier
       id_expression
        regular_id
         my_schema
      .
      id_expression
       regular_id
        tgt_table
    referencing_clause
     references
    for_each_row
     for
     each
     row
   trigger_body
    trigger_block
     declare
     declare_spec
      variable_declaration
       identifier
        id_expression
         regular_id
          l_id
       type_spec
        datatype
         native_datatype_element
          integer
       ;
     declare_spec
      variable_declaration
       identifier
        id_expression
         regular_id
          l_rqsttype_id
       type_spec
        datatype
         native_datatype_element
          integer
       ;
     declare_spec
      variable_declaration
       identifier
        id_expression
         regular_id
          l_rest_date
       type_spec
        datatype
         native_datatype_element
          date
       ;
     declare_spec
      variable_declaration
       identifier
        id_expression
         regular_id
          v_cnt
       type_spec
        datatype
         native_datatype_element
          number
         precision_part
          (
          numeric
           1
          )
       ;
     body
      begin
      seq_of_statements
       statement
        if_statement
         if
         condition
          expression
           logical_expression
            unary_logical_expression
             multiset_expression
              relational_expression
               compound_expression
                concatenation
                 model_expression
                  unary_expression
                   atom
                    bind_variable
                     :new
                     .
                     general_element_part
                      id_expression
                       regular_id
                        non_reserved_keywords_pre12c
                         id
             unary_logical_operation
              is
              logical_operation
               null
         then
         seq_of_statements
          statement
           assignment_statement
            bind_variable
             :new
             .
             general_element_part
              id_expression
               regular_id
                non_reserved_keywords_pre12c
                 id
            :=
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          gen_id
                        function_argument
                         (
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 model_expression
                                  unary_expression
                                   atom
                                    constant
                                     quoted_string
                                      'seq'
                         ,
                         argument
                          expression
                           logical_expression
                            unary_logical_expression
                             multiset_expression
                              relational_expression
                               compound_expression
                                concatenation
                                 model_expression
                                  unary_expression
                                   atom
                                    constant
                                     numeric
                                      1
                         )
          ;
         else_part
          else
          seq_of_statements
           statement
            assignment_statement
             general_element
              general_element_part
               id_expression
                regular_id
                 l_id
             :=
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       general_element
                        general_element_part
                         id_expression
                          regular_id
                           gen_id
                         function_argument
                          (
                          argument
                           expression
                            logical_expression
                             unary_logical_expression
                              multiset_expression
                               relational_expression
                                compound_expression
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     constant
                                      quoted_string
                                       'seq'
                          ,
                          argument
                           expression
                            logical_expression
                             unary_logical_expression
                              multiset_expression
                               relational_expression
                                compound_expression
                                 concatenation
                                  model_expression
                                   unary_expression
                                    atom
                                     constant
                                      numeric
                                       0
                          )
           ;
           statement
            if_statement
             if
             condition
              expression
               logical_expression
                unary_logical_expression
                 multiset_expression
                  relational_expression
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         bind_variable
                          :new
                          .
                          general_element_part
                           id_expression
                            regular_id
                             non_reserved_keywords_pre12c
                              id
                   relational_operator
                    >
                   relational_expression
                    compound_expression
                     concatenation
                      model_expression
                       unary_expression
                        atom
                         general_element
                          general_element_part
                           id_expression
                            regular_id
                             l_id
             then
             seq_of_statements
              statement
               assignment_statement
                bind_variable
                 :new
                 .
                 general_element_part
                  id_expression
                   regular_id
                    non_reserved_keywords_pre12c
                     id
                :=
                expression
                 logical_expression
                  unary_logical_expression
                   multiset_expression
                    relational_expression
                     compound_expression
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          general_element
                           general_element_part
                            id_expression
                             regular_id
                              gen_id
                            function_argument
                             (
                             argument
                              expression
                               logical_expression
                                unary_logical_expression
                                 multiset_expression
                                  relational_expression
                                   compound_expression
                                    concatenation
                                     model_expression
                                      unary_expression
                                       atom
                                        constant
                                         quoted_string
                                          'seq'
                             ,
                             argument
                              expression
                               logical_expression
                                unary_logical_expression
                                 multiset_expression
                                  relational_expression
                                   compound_expression
                                    concatenation
                                     concatenation
                                      model_expression
                                       unary_expression
                                        atom
                                         bind_variable
                                          :new
                                          .
                                          general_element_part
                                           id_expression
                                            regular_id
                                             non_reserved_keywords_pre12c
                                              id
                                     -
                                     concatenation
                                      model_expression
                                       unary_expression
                                        atom
                                         general_element
                                          general_element_part
                                           id_expression
                                            regular_id
                                             l_id
                             )
              ;
             end
             if
           ;
         end
         if
       ;
       statement
        assignment_statement
         bind_variable
          :new
          .
          general_element_part
           id_expression
            regular_id
             date_load
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       non_reserved_keywords_pre12c
                        sysdate
       ;
       statement
        assignment_statement
         bind_variable
          :new
          .
          general_element_part
           id_expression
            regular_id
             mi_part
         :=
         expression
          logical_expression
           unary_logical_expression
            multiset_expression
             relational_expression
              compound_expression
               concatenation
                model_expression
                 unary_expression
                  atom
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       non_reserved_keywords_pre12c
                        floor
                     function_argument
                      (
                      argument
                       expression
                        logical_expression
                         unary_logical_expression
                          multiset_expression
                           relational_expression
                            compound_expression
                             concatenation
                              concatenation
                               model_expression
                                unary_expression
                                 standard_function
                                  string_function
                                   to_char
                                   (
                                   table_element
                                    id_expression
                                     regular_id
                                      non_reserved_keywords_pre12c
                                       sysdate
                                   ,
                                   quoted_string
                                    'mi'
                                   )
                              /
                              concatenation
                               model_expression
                                unary_expression
                                 atom
                                  constant
                                   numeric
                                    10
                      )
       ;
       statement
        body
         begin
         seq_of_statements
          statement
           sql_statement
            data_manipulation_language_statements
             select_statement
              select_only_statement
               subquery
                subquery_basic_elements
                 query_block
                  select
                  selected_list
                   select_list_elements
                    expression
                     logical_expression
                      unary_logical_expression
                       multiset_expression
                        relational_expression
                         compound_expression
                          concatenation
                           model_expression
                            unary_expression
                             standard_function
                              numeric_function_wrapper
                               numeric_function
                                count
                                (
                                concatenation
                                 model_expression
                                  unary_expression
                                   atom
                                    constant
                                     numeric
                                      1
                                )
                  into_clause
                   into
                   general_element
                    general_element_part
                     id_expression
                      regular_id
                       v_cnt
                  from_clause
                   from
                   table_ref_list
                    table_ref
                     table_ref_aux
                      table_ref_aux_internal
                       dml_table_expression_clause
                        tableview_name
                         identifier
                          id_expression
                           regular_id
                            my_schema
                         .
                         id_expression
                          regular_id
                           nem_tbl
                      table_alias
                       identifier
                        id_expression
                         regular_id
                          rt
                  where_clause
                   where
                   condition
                    expression
                     logical_expression
                      unary_logical_expression
                       multiset_expression
                        relational_expression
                         relational_expression
                          compound_expression
                           concatenation
                            model_expression
                             unary_expression
                              atom
                               general_element
                                general_element
                                 general_element_part
                                  id_expression
                                   regular_id
                                    rt
                                .
                                general_element_part
                                 id_expression
                                  regular_id
                                   rqsttypeid
                         relational_operator
                          =
                         relational_expression
                          compound_expression
                           concatenation
                            model_expression
                             unary_expression
                              atom
                               general_element
                                general_element_part
                                 id_expression
                                  regular_id
                                   l_rqsttype_id
          ;
          statement
           if_statement
            if
            condition
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       (
                       expressions
                        expression
                         logical_expression
                          unary_logical_expression
                           multiset_expression
                            relational_expression
                             relational_expression
                              compound_expression
                               concatenation
                                model_expression
                                 unary_expression
                                  atom
                                   general_element
                                    general_element_part
                                     id_expression
                                      regular_id
                                       v_cnt
                             relational_operator
                              =
                             relational_expression
                              compound_expression
                               concatenation
                                model_expression
                                 unary_expression
                                  atom
                                   constant
                                    numeric
                                     0
                       )
            then
            seq_of_statements
             statement
              assignment_statement
               general_element
                general_element_part
                 id_expression
                  regular_id
                   l_rest_date
               :=
               expression
                logical_expression
                 unary_logical_expression
                  multiset_expression
                   relational_expression
                    compound_expression
                     concatenation
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          general_element
                           general_element_part
                            id_expression
                             regular_id
                              non_reserved_keywords_pre12c
                               add_months
                            function_argument
                             (
                             argument
                              expression
                               logical_expression
                                unary_logical_expression
                                 multiset_expression
                                  relational_expression
                                   compound_expression
                                    concatenation
                                     model_expression
                                      unary_expression
                                       atom
                                        general_element
                                         general_element_part
                                          id_expression
                                           regular_id
                                            non_reserved_keywords_pre12c
                                             trunc
                                          function_argument
                                           (
                                           argument
                                            expression
                                             logical_expression
                                              unary_logical_expression
                                               multiset_expression
                                                relational_expression
                                                 compound_expression
                                                  concatenation
                                                   model_expression
                                                    unary_expression
                                                     atom
                                                      general_element
                                                       general_element_part
                                                        id_expression
                                                         regular_id
                                                          l_rest_date
                                           ,
                                           argument
                                            expression
                                             logical_expression
                                              unary_logical_expression
                                               multiset_expression
                                                relational_expression
                                                 compound_expression
                                                  concatenation
                                                   model_expression
                                                    unary_expression
                                                     atom
                                                      constant
                                                       quoted_string
                                                        'mm'
                                           )
                             ,
                             argument
                              expression
                               logical_expression
                                unary_logical_expression
                                 multiset_expression
                                  relational_expression
                                   compound_expression
                                    concatenation
                                     model_expression
                                      unary_expression
                                       atom
                                        constant
                                         numeric
                                          1
                             )
                      -
                      concatenation
                       model_expression
                        unary_expression
                         atom
                          constant
                           numeric
                            1
             ;
            end
            if
          ;
          statement
           assignment_statement
            bind_variable
             :new
             .
             general_element_part
              id_expression
               regular_id
                date_rest
            :=
            expression
             logical_expression
              unary_logical_expression
               multiset_expression
                relational_expression
                 compound_expression
                  concatenation
                   model_expression
                    unary_expression
                     atom
                      general_element
                       general_element_part
                        id_expression
                         regular_id
                          l_rest_date
          ;
         exception
         exception_handler
          when
          exception_name
           identifier
            id_expression
             regular_id
              others
          then
          seq_of_statements
           statement
            assignment_statement
             bind_variable
              :new
              .
              general_element_part
               id_expression
                regular_id
                 date_rest
             :=
             expression
              logical_expression
               unary_logical_expression
                multiset_expression
                 relational_expression
                  compound_expression
                   concatenation
                    model_expression
                     unary_expression
                      atom
                       constant
                        null
           ;
         end
       ;
      end
 ;
 <EOF>
