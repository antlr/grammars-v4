program
 statement
  \n
 statement
  \n
 statement
  \n\n
 statement
  outputDecl
   output
   identifier
    hostname
   identifier
    string
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           memberExpression
            memberExpression
             memberExpression
              primaryExpression
               literalValue
                identifier
                 publicIP
             .
             identifier
              properties
            .
            identifier
             dnsSettings
           .
           identifier
            fqdn
   \n\n
 statement
  outputDecl
   output
   identifier
    stringOutput
   identifier
    string
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           memberExpression
            primaryExpression
             functionCall
              identifier
               deployment
              (
              )
           .
           identifier
            name
   \n
 statement
  outputDecl
   output
   identifier
    integerOutput
   identifier
    int
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           primaryExpression
            functionCall
             identifier
              length
             (
             argumentList
              expression
               binaryExpression
                equalityExpression
                 relationalExpression
                  additiveExpression
                   multiplicativeExpression
                    unaryExpression
                     memberExpression
                      memberExpression
                       memberExpression
                        primaryExpression
                         functionCall
                          identifier
                           environment
                          (
                          )
                       .
                       identifier
                        authentication
                      .
                      identifier
                       audiences
             )
   \n
 statement
  outputDecl
   output
   identifier
    booleanOutput
   identifier
    bool
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           primaryExpression
            functionCall
             identifier
              contains
             (
             argumentList
              expression
               binaryExpression
                equalityExpression
                 relationalExpression
                  additiveExpression
                   multiplicativeExpression
                    unaryExpression
                     memberExpression
                      memberExpression
                       primaryExpression
                        functionCall
                         identifier
                          deployment
                         (
                         )
                      .
                      identifier
                       name
              ,
              expression
               binaryExpression
                equalityExpression
                 relationalExpression
                  additiveExpression
                   multiplicativeExpression
                    unaryExpression
                     memberExpression
                      primaryExpression
                       interpString
                        'demo'
             )
   \n
 statement
  outputDecl
   output
   identifier
    arrayOutput
   identifier
    array
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           memberExpression
            memberExpression
             primaryExpression
              functionCall
               identifier
                environment
               (
               )
            .
            identifier
             authentication
           .
           identifier
            audiences
   \n
 statement
  outputDecl
   output
   identifier
    objectOutput
   identifier
    object
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           primaryExpression
            functionCall
             identifier
              subscription
             (
             )
   \n\n
 statement
  outputDecl
   output
   identifier
    stringOutput
   identifier
    string
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           memberExpression
            primaryExpression
             literalValue
              identifier
               user
           [
           expression
            binaryExpression
             equalityExpression
              relationalExpression
               additiveExpression
                multiplicativeExpression
                 unaryExpression
                  memberExpression
                   primaryExpression
                    interpString
                     'user-name'
           ]
   \n\n
 statement
  outputDecl
   output
   identifier
    endpoint
   identifier
    string
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           primaryExpression
            literalValue
             identifier
              deployStorage
    ?
    expression
     binaryExpression
      equalityExpression
       relationalExpression
        additiveExpression
         multiplicativeExpression
          unaryExpression
           memberExpression
            memberExpression
             memberExpression
              memberExpression
               primaryExpression
                literalValue
                 identifier
                  myStorageAccount
              .
              identifier
               properties
             .
             identifier
              primaryEndpoints
            .
            identifier
             blob
    :
    expression
     binaryExpression
      equalityExpression
       relationalExpression
        additiveExpression
         multiplicativeExpression
          unaryExpression
           memberExpression
            primaryExpression
             interpString
              ''
   \n\n
 statement
  outputDecl
   output
   identifier
    deployedNSGs
   identifier
    array
   =
   expression
    binaryExpression
     equalityExpression
      relationalExpression
       additiveExpression
        multiplicativeExpression
         unaryExpression
          memberExpression
           primaryExpression
            forExpression
             [
             for
             forVariableBlock
              (
              identifier
               name
              ,
              identifier
               i
              )
             in
             expression
              binaryExpression
               equalityExpression
                relationalExpression
                 additiveExpression
                  multiplicativeExpression
                   unaryExpression
                    memberExpression
                     primaryExpression
                      literalValue
                       identifier
                        orgNames
             :
             forBody
              expression
               binaryExpression
                equalityExpression
                 relationalExpression
                  additiveExpression
                   multiplicativeExpression
                    unaryExpression
                     memberExpression
                      primaryExpression
                       object
                        {
                        \n
                        objectProperty
                         identifier
                          orgName
                         :
                         expression
                          binaryExpression
                           equalityExpression
                            relationalExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                memberExpression
                                 primaryExpression
                                  literalValue
                                   identifier
                                    name
                        \n
                        objectProperty
                         identifier
                          nsgName
                         :
                         expression
                          binaryExpression
                           equalityExpression
                            relationalExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                memberExpression
                                 memberExpression
                                  memberExpression
                                   primaryExpression
                                    literalValue
                                     identifier
                                      nsg
                                  [
                                  expression
                                   binaryExpression
                                    equalityExpression
                                     relationalExpression
                                      additiveExpression
                                       multiplicativeExpression
                                        unaryExpression
                                         memberExpression
                                          primaryExpression
                                           literalValue
                                            identifier
                                             i
                                  ]
                                 .
                                 identifier
                                  name
                        \n
                        objectProperty
                         identifier
                          resourceId
                         :
                         expression
                          binaryExpression
                           equalityExpression
                            relationalExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                memberExpression
                                 memberExpression
                                  memberExpression
                                   primaryExpression
                                    literalValue
                                     identifier
                                      nsg
                                  [
                                  expression
                                   binaryExpression
                                    equalityExpression
                                     relationalExpression
                                      additiveExpression
                                       multiplicativeExpression
                                        unaryExpression
                                         memberExpression
                                          primaryExpression
                                           literalValue
                                            identifier
                                             i
                                  ]
                                 .
                                 identifier
                                  id
                        \n
                        }
             ]
   \n
 <EOF>
