program
 statement
  \n\n
 statement
  importDecl
   import
   interpString
    'something'
   \n\n
 statement
  importDecl
   import
   interpString
    'something'
   importWithClause
    with
    object
     {
     \n
     objectProperty
      identifier
       Q
      :
      expression
       binaryExpression
        equalityExpression
         relationalExpression
          additiveExpression
           multiplicativeExpression
            unaryExpression
             memberExpression
              primaryExpression
               literalValue
                42
     \n
     objectProperty
      identifier
       Fu
      :
      expression
       binaryExpression
        equalityExpression
         relationalExpression
          additiveExpression
           multiplicativeExpression
            unaryExpression
             memberExpression
              primaryExpression
               interpString
                'BAR'
     \n
     }
   \n\n
 statement
  importDecl
   import
   interpString
    'something'
   importWithClause
    with
    object
     {
     \n
     objectProperty
      identifier
       Q
      :
      expression
       binaryExpression
        equalityExpression
         relationalExpression
          additiveExpression
           multiplicativeExpression
            unaryExpression
             memberExpression
              primaryExpression
               literalValue
                42
     \n
     }
   importAsClause
    as
    identifier
     X
   \n\n
 statement
  importDecl
   decorator
    @
    decoratorExpression
     functionCall
      identifier
       decorator
      (
      argumentList
       expression
        binaryExpression
         equalityExpression
          relationalExpression
           additiveExpression
            multiplicativeExpression
             unaryExpression
              memberExpression
               primaryExpression
                literalValue
                 identifier
                  var
      )
    \n
   import
   interpString
    'something.${
    expression
     binaryExpression
      equalityExpression
       relationalExpression
        additiveExpression
         additiveExpression
          multiplicativeExpression
           unaryExpression
            memberExpression
             primaryExpression
              literalValue
               1
         +
         multiplicativeExpression
          unaryExpression
           memberExpression
            primaryExpression
             literalValue
              2
    }'
   importWithClause
    with
    object
     {
     \n
     objectProperty
      identifier
       Q
      :
      expression
       binaryExpression
        equalityExpression
         relationalExpression
          additiveExpression
           multiplicativeExpression
            unaryExpression
             memberExpression
              primaryExpression
               literalValue
                42
     \n
     objectProperty
      identifier
       Fu
      :
      expression
       binaryExpression
        equalityExpression
         relationalExpression
          additiveExpression
           multiplicativeExpression
            unaryExpression
             memberExpression
              primaryExpression
               interpString
                'BAR'
     \n
     }
   importAsClause
    as
    identifier
     X
   \n
 <EOF>
