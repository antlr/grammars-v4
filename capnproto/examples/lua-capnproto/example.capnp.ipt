document
 file_identifier
  @0xa0d78d3689d48a0b
  ;
 using_import
  using
  import
  "enums.capnp"
  .
  EnumType2
  ;
 using_import
  using
  import
  "struct.capnp"
  .
  S1
  ;
 using_import
  using
  Lua
  =
  import
  "lua.capnp"
  ;
 document_content
  const_def
   const
   pi
   :
   type_
    Float32
   =
   const_value
    3.14159
   ;
 document_content
  struct_def
   struct
   type_
    T1
   {
   struct_content
    struct_def
     struct
     type_
      T2
     {
     struct_content
      field_def
       f0
       @0
       :
       type_
        Float32
       ;
     struct_content
      field_def
       f1
       @1
       :
       type_
        Float64
       ;
     struct_content
      field_def
       sd0
       @2
       :
       type_
        Data
       ;
     }
   struct_content
    field_def
     i0
     @0
     :
     type_
      UInt32
     ;
   struct_content
    field_def
     i1
     @1
     :
     type_
      UInt16
     ;
   struct_content
    field_def
     i2
     @3
     :
     type_
      Int8
     ;
   struct_content
    field_def
     b0
     @2
     :
     type_
      Bool
     ;
   struct_content
    field_def
     b1
     @4
     :
     type_
      Bool
     ;
   struct_content
    field_def
     i3
     @5
     :
     type_
      Int32
     ;
   struct_content
    field_def
     s0
     @6
     :
     type_
      T2
     ;
   struct_content
    field_def
     e0
     @7
     :
     type_
      EnumType1
     ;
   struct_content
    field_def
     l0
     @8
     :
     type_
      List
      inner_type
       (
       type_
        Int8
       )
     ;
   struct_content
    field_def
     t0
     @9
     :
     type_
      Text
     ;
   struct_content
    field_def
     d0
     @11
     :
     type_
      Data
     ;
   struct_content
    field_def
     e1
     @10
     :
     type_
      EnumType2
     ;
   struct_content
    enum_def
     enum
     EnumType1
     annotation_reference
      $
      type_
       Lua
       .
       type_
        naming
      (
      "lower_underscore"
      )
     {
     enum_content
      enum1
      @0
      ;
     enum_content
      enum2
      @1
      ;
     enum_content
      enum3
      @2
      ;
     enum_content
      enum4
      @3
      annotation_reference
       $
       type_
        Lua
        .
        type_
         literal
       (
       "wEirdENum4"
       )
      ;
     enum_content
      upperDash
      @4
      annotation_reference
       $
       type_
        Lua
        .
        type_
         naming
       (
       "upper_dash"
       )
      ;
     }
   struct_content
    unnamed_union_def
     union
     {
     union_content
      field_def
       ui0
       @12
       :
       type_
        Int32
       ;
     union_content
      field_def
       ui1
       @13
       :
       type_
        Int32
       ;
     union_content
      field_def
       uv0
       @14
       :
       type_
        Void
       ;
     }
   struct_content
    group_def
     g0
     :group
     {
     group_content
      field_def
       ui2
       @15
       :
       type_
        UInt32
       ;
     }
   struct_content
    named_union_def
     u0
     :union
     {
     union_content
      field_def
       ui3
       @16
       :
       type_
        UInt16
       ;
     union_content
      field_def
       uv1
       @17
       :
       type_
        Void
       ;
     union_content
      group_def
       ug0
       :group
       {
       group_content
        field_def
         ugv0
         @18
         :
         type_
          Void
         ;
       group_content
        field_def
         ugu0
         @19
         :
         type_
          UInt32
         ;
       }
     union_content
      field_def
       ut0
       @26
       :
       type_
        Text
       ;
     }
   struct_content
    field_def
     ls0
     @20
     :
     type_
      List
      inner_type
       (
       type_
        T2
       )
     ;
   struct_content
    field_def
     du0
     @21
     :
     type_
      UInt32
     =
     const_value
      65535
     ;
   struct_content
    field_def
     db0
     @22
     :
     type_
      Bool
     =
     const_value
      true
     ;
   struct_content
    field_def
     end
     @23
     :
     type_
      Bool
     ;
   struct_content
    field_def
     o0
     @24
     :
     type_
      AnyPointer
     ;
   struct_content
    field_def
     lt0
     @25
     :
     type_
      List
      inner_type
       (
       type_
        Text
       )
     ;
   struct_content
    named_union_def
     u1
     :union
     {
     union_content
      group_def
       g1
       :group
       {
       group_content
        field_def
         v1
         @17
         :
         type_
          Void
         ;
       group_content
        field_def
         ui4
         @18
         :
         type_
          UInt32
         ;
       }
     union_content
      group_def
       g2
       :group
       {
       group_content
        field_def
         b2
         @19
         :
         type_
          Bool
         ;
       }
     }
   struct_content
    const_def
     const
     welcomeText
     :
     type_
      Text
     =
     const_value
      "Hello"
     ;
   struct_content
    const_def
     const
     constT2
     :
     type_
      T2
     =
     const_value
      literal_union
       (
       f0
       =
       union_mapping
        const_value
         12345.67
       ,
       f1
       =
       union_mapping
        const_value
         9876.54
       ,
       sd0
       =
       union_mapping
        const_value
         "\0\1\2\3"
       )
     ;
   struct_content
    field_def
     u64
     @27
     :
     type_
      UInt64
     ;
   }
 document_content
  struct_def
   struct
   type_
    T3
   {
   struct_content
    field_def
     lsU16
     @0
     :
     type_
      List
      inner_type
       (
       type_
        UInt16
       )
     ;
   struct_content
    field_def
     lsU32
     @1
     :
     type_
      List
      inner_type
       (
       type_
        UInt32
       )
     ;
   struct_content
    field_def
     lsU64
     @2
     :
     type_
      List
      inner_type
       (
       type_
        UInt64
       )
     ;
   struct_content
    field_def
     lsI16
     @3
     :
     type_
      List
      inner_type
       (
       type_
        Int16
       )
     ;
   struct_content
    field_def
     lsI32
     @4
     :
     type_
      List
      inner_type
       (
       type_
        Int32
       )
     ;
   struct_content
    field_def
     lsI64
     @5
     :
     type_
      List
      inner_type
       (
       type_
        Int64
       )
     ;
   }
 document_content
  struct_def
   struct
   type_
    T4
   {
   }
 <EOF>
