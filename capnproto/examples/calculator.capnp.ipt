document
 file_identifier
  @0x85150b117366d14b
  ;
 document_content
  interface_def
   interface
   type_
    Calculator
   {
   interface_content
    function_def
     evaluate
     @0
     function_parameters
      (
      expression
      :
      type_
       Expression
      )
     ->
     function_parameters
      (
      value
      :
      type_
       Value
      )
     ;
   interface_content
    struct_def
     struct
     type_
      Expression
     {
     struct_content
      unnamed_union_def
       union
       {
       union_content
        field_def
         literal
         @0
         :
         type_
          Float64
         ;
       union_content
        field_def
         previousResult
         @1
         :
         type_
          Value
         ;
       union_content
        field_def
         parameter
         @2
         :
         type_
          UInt32
         ;
       union_content
        group_def
         call
         :group
         {
         group_content
          field_def
           function
           @3
           :
           type_
            Function
           ;
         group_content
          field_def
           params
           @4
           :
           type_
            List
            inner_type
             (
             type_
              Expression
             )
           ;
         }
       }
     }
   interface_content
    interface_def
     interface
     type_
      Value
     {
     interface_content
      function_def
       read
       @0
       function_parameters
        (
        )
       ->
       function_parameters
        (
        value
        :
        type_
         Float64
        )
       ;
     }
   interface_content
    function_def
     defFunction
     @1
     function_parameters
      (
      paramCount
      :
      type_
       Int32
      ,
      body
      :
      type_
       Expression
      )
     ->
     function_parameters
      (
      func
      :
      type_
       Function
      )
     ;
   interface_content
    interface_def
     interface
     type_
      Function
     {
     interface_content
      function_def
       call
       @0
       function_parameters
        (
        params
        :
        type_
         List
         inner_type
          (
          type_
           Float64
          )
        )
       ->
       function_parameters
        (
        value
        :
        type_
         Float64
        )
       ;
     }
   interface_content
    function_def
     getOperator
     @2
     function_parameters
      (
      op
      :
      type_
       Operator
      )
     ->
     function_parameters
      (
      func
      :
      type_
       Function
      )
     ;
   interface_content
    enum_def
     enum
     Operator
     {
     enum_content
      add
      @0
      ;
     enum_content
      subtract
      @1
      ;
     enum_content
      multiply
      @2
      ;
     enum_content
      divide
      @3
      ;
     }
   }
 <EOF>
