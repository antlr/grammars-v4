design_file
 design_unit
  context_clause
   context_item
    use_clause
     use
     selected_name
      identifier
       STD
      .
      suffix
       identifier
        textio
      .
      suffix
       all
     ;
   context_item
    library_clause
     library
     logical_name_list
      logical_name
       identifier
        IEEE
     ;
   context_item
    use_clause
     use
     selected_name
      identifier
       IEEE
      .
      suffix
       identifier
        std_logic_1164
      .
      suffix
       all
     ;
  library_unit
   primary_unit
    package_declaration
     package
     identifier
      STD_LOGIC_TEXTIO
     is
     package_declarative_part
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        ;
      package_declarative_item
       subprogram_declaration
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        ;
     end
     identifier
      STD_LOGIC_TEXTIO
     ;
 design_unit
  context_clause
  library_unit
   secondary_unit
    package_body
     package
     body
     identifier
      STD_LOGIC_TEXTIO
     is
     package_body_declarative_part
      package_body_declarative_item
       type_declaration
        type
        identifier
         MVL9plus
        is
        type_definition
         scalar_type_definition
          enumeration_type_definition
           (
           enumeration_literal
            'U'
           ,
           enumeration_literal
            'X'
           ,
           enumeration_literal
            '0'
           ,
           enumeration_literal
            '1'
           ,
           enumeration_literal
            'Z'
           ,
           enumeration_literal
            'W'
           ,
           enumeration_literal
            'L'
           ,
           enumeration_literal
            'H'
           ,
           enumeration_literal
            '-'
           ,
           enumeration_literal
            identifier
             ERROR
           )
        ;
      package_body_declarative_item
       type_declaration
        type
        identifier
         char_indexed_by_MVL9
        is
        type_definition
         composite_type_definition
          array_type_definition
           constrained_array_definition
            array
            index_constraint
             (
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       STD_ULOGIC
             )
            of
            subtype_indication
             selected_name
              identifier
               character
        ;
      package_body_declarative_item
       type_declaration
        type
        identifier
         MVL9_indexed_by_char
        is
        type_definition
         composite_type_definition
          array_type_definition
           constrained_array_definition
            array
            index_constraint
             (
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       character
             )
            of
            subtype_indication
             selected_name
              identifier
               STD_ULOGIC
        ;
      package_body_declarative_item
       type_declaration
        type
        identifier
         MVL9plus_indexed_by_char
        is
        type_definition
         composite_type_definition
          array_type_definition
           constrained_array_definition
            array
            index_constraint
             (
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       character
             )
            of
            subtype_indication
             selected_name
              identifier
               MVL9plus
        ;
      package_body_declarative_item
       constant_declaration
        constant
        identifier_list
         identifier
          MVL9_to_char
        :
        subtype_indication
         selected_name
          identifier
           char_indexed_by_MVL9
        :=
        expression
         relation
          shift_expression
           simple_expression
            term
             factor
              primary
               literal
                "UX01ZWLH-"
        ;
      package_body_declarative_item
       constant_declaration
        constant
        identifier_list
         identifier
          char_to_MVL9
        :
        subtype_indication
         selected_name
          identifier
           MVL9_indexed_by_char
        :=
        expression
         relation
          shift_expression
           simple_expression
            term
             factor
              primary
               aggregate
                (
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'U'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'U'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'X'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'X'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '0'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '0'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '1'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '1'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'Z'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'Z'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'W'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'W'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'L'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'L'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'H'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'H'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '-'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '-'
                ,
                element_association
                 choices
                  choice
                   others
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'U'
                )
        ;
      package_body_declarative_item
       constant_declaration
        constant
        identifier_list
         identifier
          char_to_MVL9plus
        :
        subtype_indication
         selected_name
          identifier
           MVL9plus_indexed_by_char
        :=
        expression
         relation
          shift_expression
           simple_expression
            term
             factor
              primary
               aggregate
                (
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'U'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'U'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'X'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'X'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '0'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '0'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '1'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '1'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'Z'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'Z'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'W'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'W'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'L'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'L'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            'H'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          'H'
                ,
                element_association
                 choices
                  choice
                   discrete_range
                    range_decl
                     explicit_range
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            '-'
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          '-'
                ,
                element_association
                 choices
                  choice
                   others
                 =>
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ERROR
                )
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
        begin
        subprogram_statement_part
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   (
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          name
                           identifier
                            char_to_MVL9plus
                           name_part
                            function_call_or_indexed_name_part
                             (
                             actual_parameter_part
                              association_list
                               association_element
                                actual_part
                                 actual_designator
                                  expression
                                   relation
                                    shift_expression
                                     simple_expression
                                      term
                                       factor
                                        primary
                                         literal
                                          enumeration_literal
                                           identifier
                                            c
                             )
                     relational_operator
                      =
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             ERROR
                   )
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'U'
              ;
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
           else
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       char_to_MVL9
                      name_part
                       function_call_or_indexed_name_part
                        (
                        actual_parameter_part
                         association_list
                          association_element
                           actual_part
                            actual_designator
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                        )
              ;
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        TRUE
              ;
           end
           if
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             m
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             mv
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   (
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          name
                           identifier
                            char_to_MVL9plus
                           name_part
                            function_call_or_indexed_name_part
                             (
                             actual_parameter_part
                              association_list
                               association_element
                                actual_part
                                 actual_designator
                                  expression
                                   relation
                                    shift_expression
                                     simple_expression
                                      term
                                       factor
                                        primary
                                         literal
                                          enumeration_literal
                                           identifier
                                            c
                             )
                     relational_operator
                      =
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             ERROR
                   )
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
                name_part
                 function_call_or_indexed_name_part
                  (
                  actual_parameter_part
                   association_list
                    association_element
                     actual_part
                      actual_designator
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              name
                               identifier
                                value
                               name_part
                                attribute_name_part
                                 '
                                 attribute_designator
                                  range
                  )
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     aggregate
                      (
                      element_association
                       choices
                        choice
                         others
                       =>
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              literal
                               enumeration_literal
                                'U'
                      )
              ;
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           l
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
            )
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    name
                     identifier
                      value
                     name_part
                      attribute_name_part
                       '
                       attribute_designator
                        identifier
                         length
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             name
                              identifier
                               char_to_MVL9plus
                              name_part
                               function_call_or_indexed_name_part
                                (
                                actual_parameter_part
                                 association_list
                                  association_element
                                   actual_part
                                    name
                                     identifier
                                      s
                                    (
                                    actual_designator
                                     expression
                                      relation
                                       shift_expression
                                        simple_expression
                                         term
                                          factor
                                           primary
                                            literal
                                             enumeration_literal
                                              identifier
                                               i
                                    )
                                )
                        relational_operator
                         =
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             literal
                              enumeration_literal
                               identifier
                                ERROR
                      )
              then
              sequence_of_statements
               sequential_statement
                variable_assignment_statement
                 target
                  name
                   identifier
                    value
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 name
                                  identifier
                                   value
                                  name_part
                                   attribute_name_part
                                    '
                                    attribute_designator
                                     range
                     )
                 :=
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        aggregate
                         (
                         element_association
                          choices
                           choice
                            others
                          =>
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   'U'
                         )
                 ;
               sequential_statement
                variable_assignment_statement
                 target
                  name
                   identifier
                    good
                 :=
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FALSE
                 ;
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              mv
             name_part
              function_call_or_indexed_name_part
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            numeric_literal
                             abstract_literal
                              0
               )
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    char_to_MVL9
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    c
                     )
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    name
                     identifier
                      value
                     name_part
                      attribute_name_part
                       '
                       attribute_designator
                        identifier
                         length
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 mv
                name_part
                 function_call_or_indexed_name_part
                  (
                  actual_parameter_part
                   association_list
                    association_element
                     actual_part
                      actual_designator
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              literal
                               enumeration_literal
                                identifier
                                 i
                  )
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       char_to_MVL9
                      name_part
                       function_call_or_indexed_name_part
                        (
                        actual_parameter_part
                         association_list
                          association_element
                           actual_part
                            name
                             identifier
                              s
                            (
                            actual_designator
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       i
                            )
                        )
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     mv
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              good
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     TRUE
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
        begin
        subprogram_statement_part
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   (
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          name
                           identifier
                            char_to_MVL9plus
                           name_part
                            function_call_or_indexed_name_part
                             (
                             actual_parameter_part
                              association_list
                               association_element
                                actual_part
                                 actual_designator
                                  expression
                                   relation
                                    shift_expression
                                     simple_expression
                                      term
                                       factor
                                        primary
                                         literal
                                          enumeration_literal
                                           identifier
                                            c
                             )
                     relational_operator
                      =
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             ERROR
                   )
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'U'
              ;
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "READ(STD_ULOGIC) Error: Character '"
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         c
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "' read, expected STD_ULOGIC literal."
              ;
           else
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       char_to_MVL9
                      name_part
                       function_call_or_indexed_name_part
                        (
                        actual_parameter_part
                         association_list
                          association_element
                           actual_part
                            actual_designator
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                        )
              ;
           end
           if
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             m
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             mv
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   (
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          name
                           identifier
                            char_to_MVL9plus
                           name_part
                            function_call_or_indexed_name_part
                             (
                             actual_parameter_part
                              association_list
                               association_element
                                actual_part
                                 actual_designator
                                  expression
                                   relation
                                    shift_expression
                                     simple_expression
                                      term
                                       factor
                                        primary
                                         literal
                                          enumeration_literal
                                           identifier
                                            c
                             )
                     relational_operator
                      =
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             ERROR
                   )
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 value
                name_part
                 function_call_or_indexed_name_part
                  (
                  actual_parameter_part
                   association_list
                    association_element
                     actual_part
                      actual_designator
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              name
                               identifier
                                value
                               name_part
                                attribute_name_part
                                 '
                                 attribute_designator
                                  range
                  )
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     aggregate
                      (
                      element_association
                       choices
                        choice
                         others
                       =>
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              literal
                               enumeration_literal
                                'U'
                      )
              ;
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "READ(STD_ULOGIC_VECTOR) Error: Character '"
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         c
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "' read, expected STD_ULOGIC literal."
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           l
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
            )
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    name
                     identifier
                      value
                     name_part
                      attribute_name_part
                       '
                       attribute_designator
                        identifier
                         length
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             name
                              identifier
                               char_to_MVL9plus
                              name_part
                               function_call_or_indexed_name_part
                                (
                                actual_parameter_part
                                 association_list
                                  association_element
                                   actual_part
                                    name
                                     identifier
                                      s
                                    (
                                    actual_designator
                                     expression
                                      relation
                                       shift_expression
                                        simple_expression
                                         term
                                          factor
                                           primary
                                            literal
                                             enumeration_literal
                                              identifier
                                               i
                                    )
                                )
                        relational_operator
                         =
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             literal
                              enumeration_literal
                               identifier
                                ERROR
                      )
              then
              sequence_of_statements
               sequential_statement
                variable_assignment_statement
                 target
                  name
                   identifier
                    value
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 name
                                  identifier
                                   value
                                  name_part
                                   attribute_name_part
                                    '
                                    attribute_designator
                                     range
                     )
                 :=
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        aggregate
                         (
                         element_association
                          choices
                           choice
                            others
                          =>
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   'U'
                         )
                 ;
               sequential_statement
                assertion_statement
                 assertion
                  assert
                  condition
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             FALSE
                  report
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          "READ(STD_ULOGIC_VECTOR) Error: Character '"
                      adding_operator
                       &
                      term
                       factor
                        primary
                         name
                          identifier
                           s
                          name_part
                           function_call_or_indexed_name_part
                            (
                            actual_parameter_part
                             association_list
                              association_element
                               actual_part
                                actual_designator
                                 expression
                                  relation
                                   shift_expression
                                    simple_expression
                                     term
                                      factor
                                       primary
                                        literal
                                         enumeration_literal
                                          identifier
                                           i
                            )
                      adding_operator
                       &
                      term
                       factor
                        primary
                         literal
                          "' read, expected STD_ULOGIC literal."
                 ;
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              mv
             name_part
              function_call_or_indexed_name_part
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            numeric_literal
                             abstract_literal
                              0
               )
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    char_to_MVL9
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    c
                     )
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    name
                     identifier
                      value
                     name_part
                      attribute_name_part
                       '
                       attribute_designator
                        identifier
                         length
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 mv
                name_part
                 function_call_or_indexed_name_part
                  (
                  actual_parameter_part
                   association_list
                    association_element
                     actual_part
                      actual_designator
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              literal
                               enumeration_literal
                                identifier
                                 i
                  )
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       char_to_MVL9
                      name_part
                       function_call_or_indexed_name_part
                        (
                        actual_parameter_part
                         association_list
                          association_element
                           actual_part
                            name
                             identifier
                              s
                            (
                            actual_designator
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       i
                            )
                        )
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     mv
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              write
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           l
              ,
              association_element
               actual_part
                name
                 identifier
                  MVL9_to_char
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           value
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           justified
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           field
            )
           ;
        end
        designator
         identifier
          WRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             m
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
              )
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     value
           ;
        begin
        subprogram_statement_part
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    name
                     identifier
                      value
                     name_part
                      attribute_name_part
                       '
                       attribute_designator
                        identifier
                         length
           loop
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 s
                name_part
                 function_call_or_indexed_name_part
                  (
                  actual_parameter_part
                   association_list
                    association_element
                     actual_part
                      actual_designator
                       expression
                        relation
                         shift_expression
                          simple_expression
                           term
                            factor
                             primary
                              literal
                               enumeration_literal
                                identifier
                                 i
                  )
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       MVL9_to_char
                      name_part
                       function_call_or_indexed_name_part
                        (
                        actual_parameter_part
                         association_list
                          association_element
                           actual_part
                            name
                             identifier
                              m
                            (
                            actual_designator
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       i
                            )
                        )
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              write
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           l
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           justified
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           field
            )
           ;
        end
        designator
         identifier
          WRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              READ
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            READ
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              READ
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           GOOD
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          READ
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            WRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              WRITE
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                name
                 identifier
                  STD_ULOGIC_VECTOR
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           VALUE
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          WRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            Char2QuadBits
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 C
               :
               subtype_indication
                selected_name
                 identifier
                  Character
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 RESULT
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  Bit_Vector
                constraint
                 index_constraint
                  (
                  discrete_range
                   range_decl
                    explicit_range
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          numeric_literal
                           abstract_literal
                            3
                     direction
                      downto
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          numeric_literal
                           abstract_literal
                            0
                  )
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  Boolean
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 ISSUE_ERROR
               :
               in
               subtype_indication
                selected_name
                 identifier
                  Boolean
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          case_statement
           case
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     c
           is
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '0'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"0"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '1'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"1"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '2'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"2"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '3'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"3"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '4'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"4"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '5'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"5"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '6'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"6"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '7'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"7"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '8'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"8"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '9'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"9"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'A'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"A"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'B'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"B"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'C'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"C"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'D'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"D"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'E'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"E"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'F'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"F"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'a'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"A"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'b'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"B"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'c'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"C"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'd'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"D"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'e'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"E"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       'f'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       x"F"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              others
            =>
            sequence_of_statements
             sequential_statement
              if_statement
               if
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          ISSUE_ERROR
               then
               sequence_of_statements
                sequential_statement
                 assertion_statement
                  assertion
                   assert
                   condition
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              FALSE
                   report
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           "HREAD Error: Read a '"
                       adding_operator
                        &
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             c
                       adding_operator
                        &
                       term
                        factor
                         primary
                          literal
                           "', expected a Hex character (0-F)."
                  ;
               end
               if
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         FALSE
               ;
           end
           case
           ;
        end
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             ok
           :
           subtype_indication
            selected_name
             identifier
              boolean
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     4
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      4
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "HREAD Error: Trying to read vector "
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "with an odd (non multiple of 4) length"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              Char2QuadBits
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           c
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        name
                         identifier
                          bv
                         name_part
                          slice_name_part
                           (
                           discrete_range
                            range_decl
                             explicit_range
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     0
                              direction
                               to
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     3
                           )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           TRUE
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "HREAD Error: Failed to read the STRING"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 Char2QuadBits
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   name
                    identifier
                     s
                   (
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              i
                   )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           name
                            identifier
                             bv
                            name_part
                             slice_name_part
                              (
                              discrete_range
                               range_decl
                                explicit_range
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        4
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                 direction
                                  to
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        4
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                  adding_operator
                                   +
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                              )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              ok
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              TRUE
               )
              ;
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     not
                     primary
                      literal
                       enumeration_literal
                        identifier
                         ok
              then
              sequence_of_statements
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     bv
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             ok
           :
           subtype_indication
            selected_name
             identifier
              boolean
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     4
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      4
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              Char2QuadBits
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           c
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        name
                         identifier
                          bv
                         name_part
                          slice_name_part
                           (
                           discrete_range
                            range_decl
                             explicit_range
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     0
                              direction
                               to
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     3
                           )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FALSE
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 Char2QuadBits
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   name
                    identifier
                     s
                   (
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              i
                   )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           name
                            identifier
                             bv
                            name_part
                             slice_name_part
                              (
                              discrete_range
                               range_decl
                                explicit_range
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        4
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                 direction
                                  to
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        4
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                  adding_operator
                                   +
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                              )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              ok
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              FALSE
               )
              ;
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     not
                     primary
                      literal
                       enumeration_literal
                        identifier
                         ok
              then
              sequence_of_statements
               sequential_statement
                variable_assignment_statement
                 target
                  name
                   identifier
                    good
                 :=
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FALSE
                 ;
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              good
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     TRUE
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     bv
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             quad
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        3
              )
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     4
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     value
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      4
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "HREAD Error: Trying to read vector "
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "with an odd (non multiple of 4) length"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       0
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 quad
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       bv
                      name_part
                       slice_name_part
                        (
                        discrete_range
                         range_decl
                          explicit_range
                           simple_expression
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  4
                             multiplying_operator
                              *
                             factor
                              primary
                               literal
                                enumeration_literal
                                 identifier
                                  i
                           direction
                            to
                           simple_expression
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  4
                             multiplying_operator
                              *
                             factor
                              primary
                               literal
                                enumeration_literal
                                 identifier
                                  i
                            adding_operator
                             +
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  3
                        )
              ;
            sequential_statement
             case_statement
              case
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        quad
              is
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"0"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '0'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"1"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '1'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"2"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '2'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"3"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '3'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"4"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '4'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"5"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '5'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"6"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '6'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"7"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '7'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"8"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '8'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"9"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '9'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"A"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'A'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"B"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'B'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"C"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'C'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"D"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'D'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"E"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'E'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         x"F"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           'F'
                  ;
              end
              case
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              write
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          HWRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            Char2TriBits
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 C
               :
               subtype_indication
                selected_name
                 identifier
                  Character
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 RESULT
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  bit_vector
                constraint
                 index_constraint
                  (
                  discrete_range
                   range_decl
                    explicit_range
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          numeric_literal
                           abstract_literal
                            2
                     direction
                      downto
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          numeric_literal
                           abstract_literal
                            0
                  )
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  Boolean
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 ISSUE_ERROR
               :
               in
               subtype_indication
                selected_name
                 identifier
                  Boolean
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          case_statement
           case
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     c
           is
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '0'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"0"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '1'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"1"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '2'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"2"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '3'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"3"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '4'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"4"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '5'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"5"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '6'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"6"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       '7'
            =>
            sequence_of_statements
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  result
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       o"7"
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         TRUE
               ;
           case_statement_alternative
            when
            choices
             choice
              others
            =>
            sequence_of_statements
             sequential_statement
              if_statement
               if
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          ISSUE_ERROR
               then
               sequence_of_statements
                sequential_statement
                 assertion_statement
                  assertion
                   assert
                   condition
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              FALSE
                   report
                   expression
                    relation
                     shift_expression
                      simple_expression
                       term
                        factor
                         primary
                          literal
                           "OREAD Error: Read a '"
                       adding_operator
                        &
                       term
                        factor
                         primary
                          literal
                           enumeration_literal
                            identifier
                             c
                       adding_operator
                        &
                       term
                        factor
                         primary
                          literal
                           "', expected an Octal character (0-7)."
                  ;
               end
               if
               ;
             sequential_statement
              variable_assignment_statement
               target
                name
                 identifier
                  good
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         FALSE
               ;
           end
           case
           ;
        end
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             ok
           :
           subtype_indication
            selected_name
             identifier
              boolean
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     3
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      3
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "OREAD Error: Trying to read vector "
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "with an odd (non multiple of 3) length"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              Char2TriBits
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           c
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        name
                         identifier
                          bv
                         name_part
                          slice_name_part
                           (
                           discrete_range
                            range_decl
                             explicit_range
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     0
                              direction
                               to
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     2
                           )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           TRUE
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "OREAD Error: Failed to read the STRING"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 Char2TriBits
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   name
                    identifier
                     s
                   (
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              i
                   )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           name
                            identifier
                             bv
                            name_part
                             slice_name_part
                              (
                              discrete_range
                               range_decl
                                explicit_range
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                 direction
                                  to
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                  adding_operator
                                   +
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        2
                              )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              ok
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              TRUE
               )
              ;
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     not
                     primary
                      literal
                       enumeration_literal
                        identifier
                         ok
              then
              sequence_of_statements
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     bv
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             ok
           :
           subtype_indication
            selected_name
             identifier
              boolean
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             c
           :
           subtype_indication
            selected_name
             identifier
              character
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     3
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      3
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 read
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              l
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              c
               )
              ;
            sequential_statement
             exit_statement
              exit
              when
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      (
                      expression
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      ' '
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       CR
                             )
                       logical_operator
                        and
                       relation
                        shift_expression
                         simple_expression
                          term
                           factor
                            primary
                             (
                             expression
                              relation
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       c
                               relational_operator
                                /=
                               shift_expression
                                simple_expression
                                 term
                                  factor
                                   primary
                                    literal
                                     enumeration_literal
                                      identifier
                                       HT
                             )
                      )
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              Char2TriBits
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           c
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        name
                         identifier
                          bv
                         name_part
                          slice_name_part
                           (
                           discrete_range
                            range_decl
                             explicit_range
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     0
                              direction
                               to
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     2
                           )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FALSE
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              read
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           ok
            )
           ;
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  not
                  primary
                   literal
                    enumeration_literal
                     identifier
                      ok
           then
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 good
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        FALSE
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             procedure_call_statement
              procedure_call
               selected_name
                identifier
                 Char2TriBits
               (
               actual_parameter_part
                association_list
                 association_element
                  actual_part
                   name
                    identifier
                     s
                   (
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              i
                   )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           name
                            identifier
                             bv
                            name_part
                             slice_name_part
                              (
                              discrete_range
                               range_decl
                                explicit_range
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                 direction
                                  to
                                 simple_expression
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        3
                                   multiplying_operator
                                    *
                                   factor
                                    primary
                                     literal
                                      enumeration_literal
                                       identifier
                                        i
                                  adding_operator
                                   +
                                  term
                                   factor
                                    primary
                                     literal
                                      numeric_literal
                                       abstract_literal
                                        2
                              )
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              ok
                 ,
                 association_element
                  actual_part
                   actual_designator
                    expression
                     relation
                      shift_expression
                       simple_expression
                        term
                         factor
                          primary
                           literal
                            enumeration_literal
                             identifier
                              FALSE
               )
              ;
            sequential_statement
             if_statement
              if
              condition
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     not
                     primary
                      literal
                       enumeration_literal
                        identifier
                         ok
              then
              sequence_of_statements
               sequential_statement
                variable_assignment_statement
                 target
                  name
                   identifier
                    good
                 :=
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FALSE
                 ;
               sequential_statement
                return_statement
                 return
                 ;
              end
              if
              ;
           end
           loop
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              good
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     TRUE
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              value
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     bv
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  BIT_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tri
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        2
              )
           ;
         subprogram_declarative_item
          constant_declaration
           constant
           identifier_list
            identifier
             ne
           :
           subtype_indication
            selected_name
             identifier
              integer
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    value
                   name_part
                    attribute_name_part
                     '
                     attribute_designator
                      identifier
                       length
                multiplying_operator
                 /
                factor
                 primary
                  literal
                   numeric_literal
                    abstract_literal
                     3
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             bv
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       value
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
              )
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  literal
                   enumeration_literal
                    identifier
                     value
           ;
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             s
           :
           subtype_indication
            selected_name
             identifier
              string
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  to
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        ne
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          if_statement
           if
           condition
            expression
             relation
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   name
                    identifier
                     value
                    name_part
                     attribute_name_part
                      '
                      attribute_designator
                       identifier
                        length
                 multiplying_operator
                  mod
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      3
              relational_operator
               /=
              shift_expression
               simple_expression
                term
                 factor
                  primary
                   literal
                    numeric_literal
                     abstract_literal
                      0
           then
           sequence_of_statements
            sequential_statement
             assertion_statement
              assertion
               assert
               condition
                expression
                 relation
                  shift_expression
                   simple_expression
                    term
                     factor
                      primary
                       literal
                        enumeration_literal
                         identifier
                          FALSE
               report
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       "OREAD Error: Trying to read vector "
                   adding_operator
                    &
                   term
                    factor
                     primary
                      literal
                       "with an odd (non multiple of 3) length"
              ;
            sequential_statement
             return_statement
              return
              ;
           end
           if
           ;
         sequential_statement
          loop_statement
           iteration_scheme
            for
            parameter_specification
             identifier
              i
             in
             discrete_range
              range_decl
               explicit_range
                simple_expression
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       0
                direction
                 to
                simple_expression
                 term
                  factor
                   primary
                    literal
                     enumeration_literal
                      identifier
                       ne
                 adding_operator
                  -
                 term
                  factor
                   primary
                    literal
                     numeric_literal
                      abstract_literal
                       1
           loop
           sequence_of_statements
            sequential_statement
             variable_assignment_statement
              target
               name
                identifier
                 tri
              :=
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       bv
                      name_part
                       slice_name_part
                        (
                        discrete_range
                         range_decl
                          explicit_range
                           simple_expression
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  3
                             multiplying_operator
                              *
                             factor
                              primary
                               literal
                                enumeration_literal
                                 identifier
                                  i
                           direction
                            to
                           simple_expression
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  3
                             multiplying_operator
                              *
                             factor
                              primary
                               literal
                                enumeration_literal
                                 identifier
                                  i
                            adding_operator
                             +
                            term
                             factor
                              primary
                               literal
                                numeric_literal
                                 abstract_literal
                                  2
                        )
              ;
            sequential_statement
             case_statement
              case
              expression
               relation
                shift_expression
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      enumeration_literal
                       identifier
                        tri
              is
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"0"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '0'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"1"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '1'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"2"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '2'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"3"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '3'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"4"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '4'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"5"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '5'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"6"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '6'
                  ;
              case_statement_alternative
               when
               choices
                choice
                 discrete_range
                  range_decl
                   explicit_range
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         o"7"
               =>
               sequence_of_statements
                sequential_statement
                 variable_assignment_statement
                  target
                   name
                    identifier
                     s
                    name_part
                     function_call_or_indexed_name_part
                      (
                      actual_parameter_part
                       association_list
                        association_element
                         actual_part
                          actual_designator
                           expression
                            relation
                             shift_expression
                              simple_expression
                               term
                                factor
                                 primary
                                  literal
                                   enumeration_literal
                                    identifier
                                     i
                               adding_operator
                                +
                               term
                                factor
                                 primary
                                  literal
                                   numeric_literal
                                    abstract_literal
                                     1
                      )
                  :=
                  expression
                   relation
                    shift_expression
                     simple_expression
                      term
                       factor
                        primary
                         literal
                          enumeration_literal
                           '7'
                  ;
              end
              case
              ;
           end
           loop
           ;
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              write
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           s
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          OWRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           GOOD
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    To_X01
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    To_X01
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HWRITE
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                name
                 identifier
                  To_bitvector
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           VALUE
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          HWRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           GOOD
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          HREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            HWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              HWRITE
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                name
                 identifier
                  To_bitvector
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           VALUE
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          HWRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           GOOD
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    To_X01
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              bit_vector
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    To_X01
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_ULOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OWRITE
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                name
                 identifier
                  To_bitvector
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           VALUE
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          OWRITE
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OREAD
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 VALUE
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 GOOD
               :
               signal_mode
                out
               subtype_indication
                selected_name
                 identifier
                  BOOLEAN
          )
        is
        subprogram_declarative_part
         subprogram_declarative_item
          variable_declaration
           variable
           identifier_list
            identifier
             tmp
           :
           subtype_indication
            selected_name
             identifier
              STD_ULOGIC_VECTOR
            constraint
             index_constraint
              (
              discrete_range
               range_decl
                explicit_range
                 simple_expression
                  term
                   factor
                    primary
                     name
                      identifier
                       VALUE
                      name_part
                       attribute_name_part
                        '
                        attribute_designator
                         identifier
                          length
                  adding_operator
                   -
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        1
                 direction
                  downto
                 simple_expression
                  term
                   factor
                    primary
                     literal
                      numeric_literal
                       abstract_literal
                        0
              )
           ;
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OREAD
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           tmp
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           GOOD
            )
           ;
         sequential_statement
          variable_assignment_statement
           target
            name
             identifier
              VALUE
           :=
           expression
            relation
             shift_expression
              simple_expression
               term
                factor
                 primary
                  name
                   identifier
                    STD_LOGIC_VECTOR
                   name_part
                    function_call_or_indexed_name_part
                     (
                     actual_parameter_part
                      association_list
                       association_element
                        actual_part
                         actual_designator
                          expression
                           relation
                            shift_expression
                             simple_expression
                              term
                               factor
                                primary
                                 literal
                                  enumeration_literal
                                   identifier
                                    tmp
                     )
           ;
        end
        designator
         identifier
          OREAD
        ;
      package_body_declarative_item
       subprogram_body
        subprogram_specification
         procedure_specification
          procedure
          designator
           identifier
            OWRITE
          (
          formal_parameter_list
           interface_list
            interface_element
             interface_declaration
              interface_variable_declaration
               identifier_list
                identifier
                 L
               :
               signal_mode
                inout
               subtype_indication
                selected_name
                 identifier
                  LINE
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 VALUE
               :
               in
               subtype_indication
                selected_name
                 identifier
                  STD_LOGIC_VECTOR
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 JUSTIFIED
               :
               in
               subtype_indication
                selected_name
                 identifier
                  SIDE
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       enumeration_literal
                        identifier
                         RIGHT
            ;
            interface_element
             interface_declaration
              interface_constant_declaration
               identifier_list
                identifier
                 FIELD
               :
               in
               subtype_indication
                selected_name
                 identifier
                  WIDTH
               :=
               expression
                relation
                 shift_expression
                  simple_expression
                   term
                    factor
                     primary
                      literal
                       numeric_literal
                        abstract_literal
                         0
          )
        is
        subprogram_declarative_part
        begin
        subprogram_statement_part
         sequential_statement
          procedure_call_statement
           procedure_call
            selected_name
             identifier
              OWRITE
            (
            actual_parameter_part
             association_list
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           L
              ,
              association_element
               actual_part
                name
                 identifier
                  STD_ULOGIC_VECTOR
                (
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           VALUE
                )
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           JUSTIFIED
              ,
              association_element
               actual_part
                actual_designator
                 expression
                  relation
                   shift_expression
                    simple_expression
                     term
                      factor
                       primary
                        literal
                         enumeration_literal
                          identifier
                           FIELD
            )
           ;
        end
        designator
         identifier
          OWRITE
        ;
     end
     identifier
      STD_LOGIC_TEXTIO
     ;
 <EOF>
