program
 stmtList
  stmt
   varDeclaration
    Component
    varType
     boolean
    varDeclarator
     &fl_Error
  ;
  stmt
   varDeclaration
    Component
    varType
     Rowset
    varDeclarator
     &rs_msg
  ;
  stmt
   varDeclaration
    Component
    varType
     integer
    varDeclarator
     &msg_cnt
  ;
  stmt
   varDeclaration
    Component
    varType
     integer
    varDeclarator
     &msgset
    ,
    varDeclarator
     &msgnbr
  ;
  stmt
   varDeclaration
    Component
    varType
     string
    varDeclarator
     &msgsev
  ;
  stmt
   varDeclaration
    Local
    varType
     integer
    varDeclarator
     &pos1
    ,
    varDeclarator
     &pos2
    ,
    varDeclarator
     &newline
  ;
  stmt
   varDeclaration
    Local
    varType
     string
    varDeclarator
     &msgparm1
    ,
    varDeclarator
     &msgparm2
    ,
    varDeclarator
     &msgparm3
  ;
  stmt
   funcImpl
    funcSignature
     Function
     SetupMsgArea
    stmtList
     stmt
      expr
       id_
        &rs_msg
      =
      expr
       expr
        expr
         expr
          expr
           id_
            GetLevel0
          (
          )
         (
         exprList
          expr
           literal
            1
         )
        .
        id_
         GetRowset
       (
       exprList
        expr
         expr
          id_
           Scroll
         .
         id_
          SSR_DUMMY_REC
       )
     ;
     stmt
      expr
       expr
        expr
         id_
          &rs_msg
        .
        id_
         Flush
       (
       )
     ;
     stmt
      expr
       id_
        &msg_cnt
      =
      expr
       literal
        0
     ;
     stmt
      expr
       id_
        &fl_Error
      =
      expr
       literal
        False
     ;
     stmt
      expr
       expr
        expr
         expr
          expr
           expr
            id_
             GetLevel0
           (
           )
          (
          exprList
           expr
            literal
             1
          )
         .
         id_
          DERIVED_SASSMSG
        .
        id_
         GROUP1
       .
       id_
        Visible
      =
      expr
       literal
        False
     ;
    End-Function
  ;
  stmt
   funcImpl
    funcSignature
     Function
     InsertMsg
     formalParamList
      (
      param
       &msgsev
      ,
      param
       &msgset
      ,
      param
       &msgnbr
      ,
      param
       &msgparms
      ,
      param
       &msgdisptype
      )
     ;
    stmtList
     stmt
      varDeclaration
       Local
       varType
        string
       varDeclarator
        &parm_string
       ,
       varDeclarator
        &temp_parm
     ;
     stmt
      varDeclaration
       Local
       varType
        integer
       varDeclarator
        &parm_len
       ,
       varDeclarator
        &next_idx
       ,
       varDeclarator
        &pos
     ;
     stmt
      varDeclaration
       Local
       varType
        string
       varDeclarator
        &parm1
       ,
       varDeclarator
        &parm2
       ,
       varDeclarator
        &parm3
       ,
       varDeclarator
        &parm4
       ,
       varDeclarator
        &parm5
     ;
     stmt
      varDeclaration
       Local
       varType
        boolean
       varDeclarator
        &parm_found
     ;
     stmt
      expr
       id_
        &parm1
      =
      expr
       literal
        ""
     ;
     stmt
      expr
       id_
        &parm2
      =
      expr
       literal
        ""
     ;
     stmt
      expr
       id_
        &parm3
      =
      expr
       literal
        ""
     ;
     stmt
      expr
       id_
        &parm4
      =
      expr
       literal
        ""
     ;
     stmt
      expr
       id_
        &parm5
      =
      expr
       literal
        ""
     ;
     stmt
      ifStmt
       If
       expr
        expr
         id_
          All
        (
        exprList
         expr
          id_
           &msgparms
        )
       Then
       stmtList
        stmt
         expr
          id_
           &parm_string
         =
         expr
          id_
           &msgparms
        ;
        stmt
         expr
          id_
           &parm_len
         =
         expr
          expr
           id_
            Len
          (
          exprList
           expr
            id_
             &msgparms
          )
        ;
        stmt
         expr
          id_
           &next_idx
         =
         expr
          literal
           0
        ;
        stmt
         expr
          id_
           &parm_found
         =
         expr
          literal
           True
        ;
        stmt
         whileStmt
          While
          expr
           expr
            id_
             &parm_found
           =
           expr
            literal
             True
          ;
          stmtList
           stmt
            expr
             id_
              &next_idx
            =
            expr
             expr
              id_
               &next_idx
             +
             expr
              literal
               1
           ;
           stmt
            expr
             id_
              &temp_parm
            =
            expr
             literal
              ""
           ;
           stmt
            expr
             id_
              &pos
            =
            expr
             expr
              id_
               Find
             (
             exprList
              expr
               literal
                ";"
              ,
              expr
               id_
                &parm_string
             )
           ;
           stmt
            ifStmt
             If
             expr
              expr
               id_
                &pos
              >
              expr
               literal
                0
             Then
             stmtList
              stmt
               expr
                id_
                 &temp_parm
               =
               expr
                expr
                 id_
                  Substring
                (
                exprList
                 expr
                  id_
                   &parm_string
                 ,
                 expr
                  literal
                   1
                 ,
                 expr
                  expr
                   id_
                    &pos
                  -
                  expr
                   literal
                    1
                )
              ;
              stmt
               expr
                id_
                 &parm_string
               =
               expr
                expr
                 id_
                  Substring
                (
                exprList
                 expr
                  id_
                   &parm_string
                 ,
                 expr
                  expr
                   id_
                    &pos
                  +
                  expr
                   literal
                    1
                 ,
                 expr
                  expr
                   id_
                    &parm_len
                  -
                  expr
                   id_
                    &pos
                )
              ;
             Else
             stmtList
              stmt
               expr
                id_
                 &parm_found
               =
               expr
                literal
                 False
              ;
              stmt
               expr
                id_
                 &temp_parm
               =
               expr
                id_
                 &parm_string
              ;
             End-If
           ;
           stmt
            evaluateStmt
             Evaluate
             expr
              id_
               &next_idx
             whenBranch
              When
              expr
               literal
                1
              stmtList
               stmt
                expr
                 id_
                  &parm1
                =
                expr
                 id_
                  &temp_parm
               ;
             whenBranch
              When
              expr
               literal
                2
              stmtList
               stmt
                expr
                 id_
                  &parm2
                =
                expr
                 id_
                  &temp_parm
               ;
             whenBranch
              When
              expr
               literal
                3
              stmtList
               stmt
                expr
                 id_
                  &parm3
                =
                expr
                 id_
                  &temp_parm
               ;
             whenBranch
              When
              expr
               literal
                4
              stmtList
               stmt
                expr
                 id_
                  &parm4
                =
                expr
                 id_
                  &temp_parm
               ;
             whenBranch
              When
              expr
               literal
                5
              stmtList
               stmt
                expr
                 id_
                  &parm5
                =
                expr
                 id_
                  &temp_parm
               ;
             End-Evaluate
           ;
          End-While
        ;
       End-If
     ;
     stmt
      expr
       id_
        &rs_msg
      =
      expr
       expr
        expr
         expr
          expr
           id_
            GetLevel0
          (
          )
         (
         exprList
          expr
           literal
            1
         )
        .
        id_
         GetRowset
       (
       exprList
        expr
         expr
          id_
           Scroll
         .
         id_
          SSR_DUMMY_REC
       )
     ;
     stmt
      expr
       id_
        &msg_cnt
      =
      expr
       expr
        id_
         &rs_msg
       .
       id_
        ActiveRowCount
     ;
     stmt
      expr
       expr
        expr
         id_
          &rs_msg
        .
        id_
         InsertRow
       (
       exprList
        expr
         id_
          &msg_cnt
       )
     ;
     stmt
      expr
       id_
        &newline
      =
      expr
       expr
        id_
         &msg_cnt
       +
       expr
        literal
         1
     ;
     stmt
      evaluateStmt
       Evaluate
       expr
        id_
         &msgdisptype
       whenBranch
        When
        expr
         literal
          "T"
        stmtList
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Value
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             id_
              &msgset
            ,
            expr
             id_
              &msgnbr
            ,
            expr
             literal
              "Message not found."
            ,
            expr
             id_
              &parm1
            ,
            expr
             id_
              &parm2
            ,
            expr
             id_
              &parm3
            ,
            expr
             id_
              &parm4
            ,
            expr
             id_
              &parm5
           )
         ;
       whenBranch
        When
        expr
         literal
          "E"
        stmtList
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Value
          =
          expr
           expr
            id_
             MsgGetExplainText
           (
           exprList
            expr
             id_
              &msgset
            ,
            expr
             id_
              &msgnbr
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenBranch
        When
        expr
         literal
          "B"
        stmtList
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Value
          =
          expr
           expr
            expr
             expr
              id_
               MsgGetText
             (
             exprList
              expr
               id_
                &msgset
              ,
              expr
               id_
                &msgnbr
              ,
              expr
               literal
                "Message not found."
              ,
              expr
               id_
                &parm1
              ,
              expr
               id_
                &parm2
              ,
              expr
               id_
                &parm3
              ,
              expr
               id_
                &parm4
              ,
              expr
               id_
                &parm5
             )
            |
            expr
             literal
              " "
           |
           expr
            expr
             id_
              MsgGetExplainText
            (
            exprList
             expr
              id_
               &msgset
             ,
             expr
              id_
               &msgnbr
             ,
             expr
              literal
               "Message not found."
            )
         ;
       End-Evaluate
     ;
     stmt
      evaluateStmt
       Evaluate
       expr
        id_
         &msgsev
       whenBranch
        When
        expr
         literal
          "C"
        stmtList
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             GROUP1
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGSUCCESSFRAME"
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             SSR_MSG_PB
           .
           id_
            LabelImage
          =
          expr
           expr
            id_
             Image
           .
           id_
            PS_CS_MESSAGE_CONFIRM_ICN
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGSUCCESSTEXT"
         ;
         stmt
          Break
         ;
       whenBranch
        When
        expr
         literal
          "I"
        stmtList
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             GROUP1
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGINFOFRAME"
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             SSR_MSG_PB
           .
           id_
            LabelImage
          =
          expr
           expr
            id_
             Image
           .
           id_
            PS_CS_MESSAGE_INFO_ICN
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGINFOTEXT"
         ;
         stmt
          Break
         ;
       whenBranch
        When
        expr
         literal
          "E"
        stmtList
         stmt
          expr
           id_
            &fl_Error
          =
          expr
           literal
            True
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             GROUP1
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGWARNINGFRAME"
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             SSR_MSG_PB
           .
           id_
            LabelImage
          =
          expr
           expr
            id_
             Image
           .
           id_
            PS_CS_MESSAGE_WARNING_ICN
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGWARNINGTEXT"
         ;
         stmt
          Break
         ;
       whenBranch
        When
        expr
         literal
          "S"
        stmtList
         stmt
          expr
           id_
            &fl_Error
          =
          expr
           literal
            True
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             GROUP1
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGALERTFRAME"
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             SSR_MSG_PB
           .
           id_
            LabelImage
          =
          expr
           expr
            id_
             Image
           .
           id_
            PS_CS_MESSAGE_ALERT_ICN
         ;
         stmt
          expr
           expr
            expr
             expr
              expr
               id_
                &rs_msg
              (
              exprList
               expr
                id_
                 &newline
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             ERROR_TEXT
           .
           id_
            Style
          =
          expr
           literal
            "SSSMSGALERTTEXT"
         ;
       End-Evaluate
     ;
     stmt
      expr
       expr
        expr
         expr
          expr
           expr
            id_
             GetLevel0
           (
           )
          (
          exprList
           expr
            literal
             1
          )
         .
         id_
          DERIVED_SASSMSG
        .
        id_
         HTMLAREA
       .
       id_
        Visible
      =
      expr
       literal
        False
     ;
    End-Function
  ;
  stmt
   funcImpl
    funcSignature
     Function
     WriteMsg
    stmtList
     stmt
      expr
       id_
        &rs_msg
      =
      expr
       expr
        expr
         expr
          expr
           id_
            GetLevel0
          (
          )
         (
         exprList
          expr
           literal
            1
         )
        .
        id_
         GetRowset
       (
       exprList
        expr
         expr
          id_
           Scroll
         .
         id_
          SSR_DUMMY_REC
       )
     ;
     stmt
      ifStmt
       If
       expr
        id_
         &fl_Error
       Then
       stmtList
        stmt
         expr
          expr
           expr
            id_
             &rs_msg
           .
           id_
            DeleteRow
          (
          exprList
           expr
            literal
             1
          )
        ;
        stmt
         expr
          expr
           expr
            id_
             &rs_msg
           .
           id_
            ShowAllRows
          (
          )
        ;
        stmt
         expr
          expr
           expr
            expr
             expr
              expr
               id_
                GetLevel0
              (
              )
             (
             exprList
              expr
               literal
                1
             )
            .
            id_
             DERIVED_SASSMSG
           .
           id_
            GROUP1
          .
          id_
           Visible
         =
         expr
          literal
           True
        ;
        stmt
         expr
          expr
           expr
            expr
             expr
              expr
               expr
                id_
                 GetLevel0
               (
               )
              (
              exprList
               expr
                literal
                 1
              )
             .
             id_
              DERIVED_SASSMSG
            .
            id_
             SSR_MSG_PB
           .
           id_
            SetCursorPos
          (
          exprList
           expr
            id_
             %Page
          )
        ;
       Else
       stmtList
        stmt
         expr
          expr
           expr
            id_
             &rs_msg
           .
           id_
            HideAllRows
          (
          )
        ;
        stmt
         expr
          expr
           expr
            expr
             expr
              expr
               id_
                GetLevel0
              (
              )
             (
             exprList
              expr
               literal
                1
             )
            .
            id_
             DERIVED_SASSMSG
           .
           id_
            GROUP1
          .
          id_
           Visible
         =
         expr
          literal
           False
        ;
       End-If
     ;
    End-Function
  ;
 <EOF>
