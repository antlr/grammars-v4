program
 stmtList
  stmt
   varDeclaration
    Component
    varType
     boolean
    varDeclarator
     &boo_InvData
  ;
  stmt
   ifStmt
    If
    expr
     id_
      &boo_InvData
    Then
    stmtList
     stmt
      expr
       expr
        id_
         DERIVED_REGFRM1
       .
       id_
        SS_MESSAGE_LONG
      =
      expr
       expr
        id_
         MsgGetText
       (
       exprList
        expr
         literal
          14690
        ,
        expr
         literal
          2090
        ,
        expr
         literal
          "Message not found."
       )
     ;
    Else
    stmtList
     stmt
      evaluateStmt
       Evaluate
       expr
        id_
         %Component
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_ADD
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_DROP
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_EDIT
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_SWAP
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_APPT
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_CART
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14690
            ,
            expr
             literal
              531
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_LIST
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14690
            ,
            expr
             literal
              620
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSR_SSENRL_EXAM_L
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14690
            ,
            expr
             literal
              2034
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SAA_SS_DPR_ADB
        stmtList
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SAA_SS_DPR_AAL
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14510
            ,
            expr
             literal
              129
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenBranch
        When
        expr
         expr
          id_
           Component
         .
         id_
          SSS_MY_PLANNER
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14510
            ,
            expr
             literal
              132
            ,
            expr
             literal
              "Message not found."
           )
         ;
       whenOtherBranch
        When-Other
        stmtList
         stmt
          expr
           expr
            id_
             DERIVED_REGFRM1
           .
           id_
            SS_MESSAGE_LONG
          =
          expr
           expr
            id_
             MsgGetText
           (
           exprList
            expr
             literal
              14690
            ,
            expr
             literal
              265
            ,
            expr
             literal
              "Message not found."
           )
         ;
       End-Evaluate
     ;
    End-If
  ;
  stmt
   expr
    expr
     expr
      id_
       DERIVED_REGFRM1
     .
     id_
      STEP1
    .
    id_
     Visible
   =
   expr
    literal
     False
  ;
  stmt
   ifStmt
    If
    expr
     expr
      id_
       %Menu
     =
     expr
      expr
       id_
        MenuName
      .
      id_
       SSR_ADVISEE_OVRD
    Then
    stmtList
    Else
    stmtList
     stmt
      expr
       expr
        expr
         id_
          DERIVED_REGFRM1
        .
        id_
         TITLE1
       .
       id_
        Visible
      =
      expr
       literal
        False
     ;
    End-If
  ;
 <EOF>
