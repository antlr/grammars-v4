stylesheet
 statement
  mixinDeclaration
   @mixin
   identifier
    reset-list
   block
    {
    statement
     propertyDeclaration
      identifier
       margin
      :
      propertyValue
       value
        number
         0
      ;
    statement
     propertyDeclaration
      identifier
       padding
      :
      propertyValue
       value
        number
         0
      ;
    statement
     propertyDeclaration
      identifier
       list-style
      :
      propertyValue
       value
        identifier
         none
      ;
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    horizontal-list
   block
    {
    statement
     includeDeclaration
      @include
      identifier
       reset-list
      ;
    statement
     ruleset
      selectorGroup
       selector
        selectorSequence
         typeSelector
          identifier
           li
      block
       {
       statement
        propertyDeclaration
         identifier
          display
         :
         propertyValue
          value
           identifier
            inline-block
         ;
       statement
        propertyDeclaration
         identifier
          margin
         :
         propertyValue
          value
           block
            {
            statement
             propertyDeclaration
              identifier
               left
              :
              propertyValue
               value
                unit
                 length
                  plusMinus
                   -
                  2
                  px
              ;
            statement
             propertyDeclaration
              identifier
               right
              :
              propertyValue
               value
                unit
                 length
                  2
                  em
              ;
            }
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      typeSelector
       identifier
        nav
      typeSelector
       identifier
        ul
   block
    {
    statement
     includeDeclaration
      @include
      identifier
       horizontal-list
      ;
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    rtl
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        property
    ,
    parameter
     value
      variableName
       $
       identifier
        ltr-value
    ,
    parameter
     value
      variableName
       $
       identifier
        rtl-value
   )
   block
    {
    statement
     interpolationDeclaration
      interpolation
       #
       {
       value
        variableName
         $
         identifier
          property
       }
      :
      propertyValue
       value
        variableName
         $
         identifier
          ltr-value
      ;
    statement
     ruleset
      selectorGroup
       selector
        selectorSequence
         attrib
          [
          identifier
           dir
          =
          identifier
           rtl
          ]
         parentRef
          &
      block
       {
       statement
        interpolationDeclaration
         interpolation
          #
          {
          value
           variableName
            $
            identifier
             property
          }
         :
         propertyValue
          value
           variableName
            $
            identifier
             rtl-value
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        sidebar
   block
    {
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        rtl
       (
       parameters
        parameter
         value
          identifier
           float
        ,
        parameter
         value
          identifier
           left
        ,
        parameter
         value
          identifier
           right
       )
      ;
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    replace-text
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        image
    ,
    parameter
     variableDeclaration
      variableName
       $
       identifier
        x
      :
      variableValue
       value
        unit
         percentage
          50
          %
    ,
    parameter
     variableDeclaration
      variableName
       $
       identifier
        y
      :
      variableValue
       value
        unit
         percentage
          50
          %
   )
   block
    {
    statement
     propertyDeclaration
      identifier
       text-indent
      :
      propertyValue
       value
        unit
         length
          plusMinus
           -
          99999
          em
      ;
    statement
     propertyDeclaration
      identifier
       overflow
      :
      propertyValue
       value
        identifier
         hidden
      ;
    statement
     propertyDeclaration
      identifier
       text-align
      :
      propertyValue
       value
        identifier
         left
      ;
    statement
     propertyDeclaration
      identifier
       background
      :
      propertyValue
       value
        block
         {
         statement
          propertyDeclaration
           identifier
            image
           :
           propertyValue
            value
             variableName
              $
              identifier
               image
           ;
         statement
          propertyDeclaration
           identifier
            repeat
           :
           propertyValue
            value
             identifier
              no-repeat
           ;
         statement
          propertyDeclaration
           identifier
            position
           :
           propertyValue
            listSpaceSeparated
             listElement
              value
               variableName
                $
                identifier
                 x
              value
               variableName
                $
                identifier
                 y
           ;
         }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        mail-icon
   block
    {
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        replace-text
       (
       parameters
        parameter
         value
          uri
           url("/images/mail.svg")
        ,
        parameter
         value
          number
           0
       )
      ;
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    square
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        size
    ,
    parameter
     variableDeclaration
      variableName
       $
       identifier
        radius
      :
      variableValue
       value
        number
         0
   )
   block
    {
    statement
     propertyDeclaration
      identifier
       width
      :
      propertyValue
       value
        variableName
         $
         identifier
          size
      ;
    statement
     propertyDeclaration
      identifier
       height
      :
      propertyValue
       value
        variableName
         $
         identifier
          size
      ;
    statement
     ifDeclaration
      @if
      expression
       expressionPart
        variableName
         $
         identifier
          radius
       operator_
        !=
       expressionPart
        number
         0
      block
       {
       statement
        propertyDeclaration
         identifier
          border-radius
         :
         propertyValue
          value
           variableName
            $
            identifier
             radius
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        avatar
   block
    {
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        square
       (
       parameters
        parameter
         value
          unit
           length
            100
            px
        ,
        parameter
         variableDeclaration
          variableName
           $
           identifier
            radius
          :
          variableValue
           value
            unit
             length
              4
              px
       )
      ;
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    order
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        height
    ,
    parameter
     value
      variableName
       $
       identifier
        selectors
     arglist
      .
      .
      .
   )
   block
    {
    statement
     forDeclaration
      @for
      variableName
       $
       identifier
        i
      from
      0
      to
      through
       functionCall
        identifier
         length
        (
        parameters
         parameter
          value
           variableName
            $
            identifier
             selectors
        )
      block
       {
       statement
        ruleset
         selectorGroup
          selector
           selectorSequence
            interpolation
             #
             {
             value
              functionCall
               identifier
                nth
               (
               parameters
                parameter
                 value
                  variableName
                   $
                   identifier
                    selectors
                ,
                parameter
                 value
                  expression
                   expressionPart
                    variableName
                     $
                     identifier
                      i
                   operator_
                    +
                   expressionPart
                    number
                     1
               )
             }
         block
          {
          statement
           propertyDeclaration
            identifier
             position
            :
            propertyValue
             value
              identifier
               absolute
            ;
          statement
           propertyDeclaration
            identifier
             height
            :
            propertyValue
             value
              variableName
               $
               identifier
                height
            ;
          statement
           propertyDeclaration
            identifier
             margin-top
            :
            propertyValue
             value
              expression
               expressionPart
                variableName
                 $
                 identifier
                  i
               operator_
                *
               expressionPart
                variableName
                 $
                 identifier
                  height
            ;
          }
       }
    }
 statement
  includeDeclaration
   @include
   functionCall
    identifier
     order
    (
    parameters
     parameter
      value
       unit
        length
         150
         px
     ,
     parameter
      value
       "input.name"
     ,
     parameter
      value
       "input.address"
     ,
     parameter
      value
       "input.zip"
    )
   ;
 statement
  mixinDeclaration
   @mixin
   identifier
    syntax-colors
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        args
     arglist
      .
      .
      .
   )
   block
    {
    statement
     eachDeclaration
      @each
      variableName
       $
       identifier
        name
      ,
      variableName
       $
       identifier
        color
      in
      eachValueList
       listDeclaration
        listCommaSeparated
         listElement
          value
           functionCall
            identifier
             keywords
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 args
            )
      block
       {
       statement
        ruleset
         selectorGroup
          selector
           selectorSequence
            typeSelector
             identifier
              pre
            typeSelector
             identifier
              span
            className
             .
             identifier
              stx-
             interpolation
              #
              {
              value
               variableName
                $
                identifier
                 name
              }
         block
          {
          statement
           propertyDeclaration
            identifier
             color
            :
            propertyValue
             value
              variableName
               $
               identifier
                color
            ;
          }
       }
    }
 statement
  includeDeclaration
   @include
   functionCall
    identifier
     syntax-colors
    (
    parameters
     parameter
      variableDeclaration
       variableName
        $
        identifier
         string
       :
       variableValue
        value
         hexcolor
          #
          color
           080
     ,
     parameter
      variableDeclaration
       variableName
        $
        identifier
         comment
       :
       variableValue
        value
         hexcolor
          #
          color
           800
     ,
     parameter
      variableDeclaration
       variableName
        $
        identifier
         variable
       :
       variableValue
        listDeclaration
         listCommaSeparated
          listElement
           value
            hexcolor
             #
             color
              60
              b
           ,
    )
 statement
  variableDeclaration
   variableName
    $
    identifier
     form-selectors
   :
   variableValue
    listDeclaration
     listCommaSeparated
      listElement
       value
        "input.name"
       ,
       value
        "input.address"
       ,
       value
        "input.zip"
       value
        expression
         expressionPart
          prio
           !default
   ;
 statement
  includeDeclaration
   @include
   functionCall
    identifier
     order
    (
    parameters
     parameter
      value
       unit
        length
         150
         px
     ,
     parameter
      value
       variableName
        $
        identifier
         form-selectors
      arglist
       .
       .
       .
    )
   ;
 statement
  mixinDeclaration
   @mixin
   identifier
    hover
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        selectorSequence
         parentRef
          &
         negation
          :not(
          negationArg
           attrib
            [
            identifier
             disabled
            ]
          )
         pseudo
          :
          identifier
           hover
      block
       {
       statement
        contentDeclaration
         @content
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        button
   block
    {
    statement
     propertyDeclaration
      identifier
       border
      :
      propertyValue
       listSpaceSeparated
        listElement
         value
          unit
           length
            1
            px
         value
          identifier
           solid
         value
          identifier
           black
      ;
    statement
     includeDeclaration
      @include
      identifier
       hover
      block
       {
       statement
        propertyDeclaration
         identifier
          border-width
         :
         propertyValue
          value
           unit
            length
             2
             px
         ;
       }
    }
 statement
  mixinDeclaration
   @mixin
   identifier
    media
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        types
     arglist
      .
      .
      .
   )
   block
    {
    statement
     eachDeclaration
      @each
      variableName
       $
       identifier
        type
      in
      eachValueList
       listDeclaration
        listCommaSeparated
         listElement
          value
           variableName
            $
            identifier
             types
      block
       {
       statement
        mediaDeclaration
         @media
         mediaQueryList
          mediaQuery
           value
            interpolation
             #
             {
             value
              variableName
               $
               identifier
                type
             }
         block
          {
          statement
           contentDeclaration
            @content
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 type
            )
            ;
          }
       }
    }
 statement
  includeDeclaration
   @include
   functionCall
    identifier
     media
    (
    parameters
     parameter
      value
       identifier
        screen
     ,
     parameter
      value
       identifier
        print
    )
   using
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        type
   )
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        selectorSequence
         typeSelector
          identifier
           h1
      block
       {
       statement
        propertyDeclaration
         identifier
          font-size
         :
         propertyValue
          value
           unit
            length
             40
             px
         ;
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           variableName
            $
            identifier
             type
          operator_
           =
           =
          expressionPart
           identifier
            print
         block
          {
          statement
           propertyDeclaration
            identifier
             font-family
            :
            propertyValue
             value
              identifier
               Calluna
            ;
          }
       }
    }
 <EOF>
