stylesheet
 statement
  mixinDeclaration
   @mixin
   identifier
    generate-utility
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        utility
    ,
    parameter
     value
      variableName
       $
       identifier
        infix
    ,
    parameter
     variableDeclaration
      variableName
       $
       identifier
        is-rfs-media-query
      :
      variableValue
       value
        boolean
         false
   )
   block
    {
    statement
     variableDeclaration
      variableName
       $
       identifier
        values
      :
      variableValue
       value
        functionCall
         identifier
          map-get
         (
         parameters
          parameter
           value
            variableName
             $
             identifier
              utility
          ,
          parameter
           value
            identifier
             values
         )
      ;
    statement
     ifDeclaration
      @if
      expression
       expressionPart
        functionCall
         identifier
          type-of
         (
         parameters
          parameter
           value
            variableName
             $
             identifier
              values
         )
       operator_
        =
        =
       expressionPart
        "string"
       operator_
        or
       expressionPart
        functionCall
         identifier
          type-of
         (
         parameters
          parameter
           value
            functionCall
             identifier
              nth
             (
             parameters
              parameter
               value
                variableName
                 $
                 identifier
                  values
              ,
              parameter
               value
                number
                 1
             )
         )
       operator_
        !=
       expressionPart
        "list"
      block
       {
       statement
        variableDeclaration
         variableName
          $
          identifier
           values
         :
         variableValue
          value
           functionCall
            identifier
             zip
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 values
             ,
             parameter
              value
               variableName
                $
                identifier
                 values
            )
         ;
       }
    statement
     eachDeclaration
      @each
      variableName
       $
       identifier
        key
      ,
      variableName
       $
       identifier
        value
      in
      eachValueList
       listDeclaration
        listCommaSeparated
         listElement
          value
           variableName
            $
            identifier
             values
      block
       {
       statement
        variableDeclaration
         variableName
          $
          identifier
           properties
         :
         variableValue
          value
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                property
            )
         ;
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           functionCall
            identifier
             type-of
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 properties
            )
          operator_
           =
           =
          expressionPart
           "string"
         block
          {
          statement
           variableDeclaration
            variableName
             $
             identifier
              properties
            :
            variableValue
             value
              functionCall
               identifier
                append
               (
               parameters
                parameter
                 value
                  expression
                   expressionPart
                    (
                    )
                ,
                parameter
                 value
                  variableName
                   $
                   identifier
                    properties
               )
            ;
          }
       statement
        variableDeclaration
         variableName
          $
          identifier
           property-class
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                functionCall
                 identifier
                  map-has-key
                 (
                 parameters
                  parameter
                   value
                    variableName
                     $
                     identifier
                      utility
                  ,
                  parameter
                   value
                    identifier
                     class
                 )
              ,
              value
               functionCall
                identifier
                 map-get
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     utility
                 ,
                 parameter
                  value
                   identifier
                    class
                )
              ,
              value
               functionCall
                identifier
                 nth
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     properties
                 ,
                 parameter
                  value
                   number
                    1
                )
              )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           property-class
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                variableName
                 $
                 identifier
                  property-class
               operator_
                =
                =
               expressionPart
                identifier
                 null
              ,
              value
               ""
              ,
              value
               variableName
                $
                identifier
                 property-class
              )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           css-variable-name
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                functionCall
                 identifier
                  map-has-key
                 (
                 parameters
                  parameter
                   value
                    variableName
                     $
                     identifier
                      utility
                  ,
                  parameter
                   value
                    identifier
                     css-variable-name
                 )
              ,
              value
               functionCall
                identifier
                 map-get
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     utility
                 ,
                 parameter
                  value
                   identifier
                    css-variable-name
                )
              ,
              value
               functionCall
                identifier
                 map-get
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     utility
                 ,
                 parameter
                  value
                   identifier
                    class
                )
              )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           state
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                functionCall
                 identifier
                  map-has-key
                 (
                 parameters
                  parameter
                   value
                    variableName
                     $
                     identifier
                      utility
                  ,
                  parameter
                   value
                    identifier
                     state
                 )
              ,
              value
               functionCall
                identifier
                 map-get
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     utility
                 ,
                 parameter
                  value
                   identifier
                    state
                )
              ,
              value
               expression
                expressionPart
                 (
                 )
              )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           infix
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                variableName
                 $
                 identifier
                  property-class
               operator_
                =
                =
               expressionPart
                ""
               operator_
                and
               expressionPart
                functionCall
                 identifier
                  str-slice
                 (
                 parameters
                  parameter
                   value
                    variableName
                     $
                     identifier
                      infix
                  ,
                  parameter
                   value
                    number
                     1
                  ,
                  parameter
                   value
                    number
                     1
                 )
               operator_
                =
                =
               expressionPart
                "-"
              ,
              value
               functionCall
                identifier
                 str-slice
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     infix
                 ,
                 parameter
                  value
                   number
                    2
                )
              ,
              value
               variableName
                $
                identifier
                 infix
              )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           property-class-modifier
         :
         variableValue
          value
           expression
            expressionPart
             ifExpression
              if
              (
              expression
               expressionPart
                variableName
                 $
                 identifier
                  key
              ,
              value
               expression
                expressionPart
                 ifExpression
                  if
                  (
                  expression
                   expressionPart
                    variableName
                     $
                     identifier
                      property-class
                   operator_
                    =
                    =
                   expressionPart
                    ""
                   operator_
                    and
                   expressionPart
                    variableName
                     $
                     identifier
                      infix
                   operator_
                    =
                    =
                   expressionPart
                    ""
                  ,
                  value
                   ""
                  ,
                  value
                   "-"
                  )
                operator_
                 +
                expressionPart
                 variableName
                  $
                  identifier
                   key
              ,
              value
               ""
              )
         ;
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                rfs
            )
         block
          {
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                is-rfs-media-query
            block
             {
             statement
              variableDeclaration
               variableName
                $
                identifier
                 val
               :
               variableValue
                value
                 functionCall
                  identifier
                   rfs-value
                  (
                  parameters
                   parameter
                    value
                     variableName
                      $
                      identifier
                       value
                  )
               ;
             statement
              variableDeclaration
               variableName
                $
                identifier
                 value
               :
               variableValue
                value
                 expression
                  expressionPart
                   ifExpression
                    if
                    (
                    expression
                     expressionPart
                      variableName
                       $
                       identifier
                        val
                     operator_
                      =
                      =
                     expressionPart
                      functionCall
                       identifier
                        rfs-fluid-value
                       (
                       parameters
                        parameter
                         value
                          variableName
                           $
                           identifier
                            value
                       )
                    ,
                    value
                     identifier
                      null
                    ,
                    value
                     variableName
                      $
                      identifier
                       val
                    )
               ;
             }
            elseStatement
             @else
             block
              {
              statement
               variableDeclaration
                variableName
                 $
                 identifier
                  value
                :
                variableValue
                 value
                  functionCall
                   identifier
                    rfs-fluid-value
                   (
                   parameters
                    parameter
                     value
                      variableName
                       $
                       identifier
                        value
                   )
                ;
              }
          }
       statement
        variableDeclaration
         variableName
          $
          identifier
           is-css-var
         :
         variableValue
          value
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                css-var
            )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           is-local-vars
         :
         variableValue
          value
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                local-vars
            )
         ;
       statement
        variableDeclaration
         variableName
          $
          identifier
           is-rtl
         :
         variableValue
          value
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                rtl
            )
         ;
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           variableName
            $
            identifier
             value
          operator_
           !=
          expressionPart
           identifier
            null
         block
          {
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                is-rtl
             operator_
              =
              =
             expressionPart
              boolean
               false
            block
             {
             }
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                is-css-var
            block
             {
             statement
              ruleset
               selectorGroup
                selector
                 selectorSequence
                  className
                   .
                   interpolation
                    #
                    {
                    value
                     expression
                      expressionPart
                       variableName
                        $
                        identifier
                         property-class
                      operator_
                       +
                      expressionPart
                       variableName
                        $
                        identifier
                         infix
                      operator_
                       +
                      expressionPart
                       variableName
                        $
                        identifier
                         property-class-modifier
                    }
               block
                {
                statement
                 variableDeclaration
                  variableName
                   --#{$prefix}#{$css-variable-name}
                  :
                  variableValue
                   value
                    interpolation
                     #
                     {
                     value
                      variableName
                       $
                       identifier
                        value
                     }
                  ;
                }
             statement
              eachDeclaration
               @each
               variableName
                $
                identifier
                 pseudo
               in
               eachValueList
                listDeclaration
                 listCommaSeparated
                  listElement
                   value
                    variableName
                     $
                     identifier
                      state
               block
                {
                statement
                 ruleset
                  selectorGroup
                   selector
                    selectorSequence
                     className
                      .
                      interpolation
                       #
                       {
                       value
                        expression
                         expressionPart
                          variableName
                           $
                           identifier
                            property-class
                         operator_
                          +
                         expressionPart
                          variableName
                           $
                           identifier
                            infix
                         operator_
                          +
                         expressionPart
                          variableName
                           $
                           identifier
                            property-class-modifier
                       }
                      -
                      interpolation
                       #
                       {
                       value
                        variableName
                         $
                         identifier
                          pseudo
                       }
                     pseudo
                      :
                      interpolation
                       #
                       {
                       value
                        variableName
                         $
                         identifier
                          pseudo
                       }
                  block
                   {
                   statement
                    variableDeclaration
                     variableName
                      --#{$prefix}#{$css-variable-name}
                     :
                     variableValue
                      value
                       interpolation
                        #
                        {
                        value
                         variableName
                          $
                          identifier
                           value
                        }
                     ;
                   }
                }
             }
            elseStatement
             @else
             block
              {
              statement
               ruleset
                selectorGroup
                 selector
                  selectorSequence
                   className
                    .
                    interpolation
                     #
                     {
                     value
                      expression
                       expressionPart
                        variableName
                         $
                         identifier
                          property-class
                       operator_
                        +
                       expressionPart
                        variableName
                         $
                         identifier
                          infix
                       operator_
                        +
                       expressionPart
                        variableName
                         $
                         identifier
                          property-class-modifier
                     }
                block
                 {
                 statement
                  eachDeclaration
                   @each
                   variableName
                    $
                    identifier
                     property
                   in
                   eachValueList
                    listDeclaration
                     listCommaSeparated
                      listElement
                       value
                        variableName
                         $
                         identifier
                          properties
                   block
                    {
                    statement
                     ifDeclaration
                      @if
                      expression
                       expressionPart
                        variableName
                         $
                         identifier
                          is-local-vars
                      block
                       {
                       statement
                        eachDeclaration
                         @each
                         variableName
                          $
                          identifier
                           local-var
                         ,
                         variableName
                          $
                          identifier
                           variable
                         in
                         eachValueList
                          listDeclaration
                           listCommaSeparated
                            listElement
                             value
                              variableName
                               $
                               identifier
                                is-local-vars
                         block
                          {
                          statement
                           variableDeclaration
                            variableName
                             --#{$prefix}#{$local-var}
                            :
                            variableValue
                             value
                              interpolation
                               #
                               {
                               value
                                variableName
                                 $
                                 identifier
                                  variable
                               }
                            ;
                          }
                       }
                    statement
                     interpolationDeclaration
                      interpolation
                       #
                       {
                       value
                        variableName
                         $
                         identifier
                          property
                       }
                      :
                      propertyValue
                       listSpaceSeparated
                        listElement
                         value
                          variableName
                           $
                           identifier
                            value
                         value
                          expression
                           expressionPart
                            ifExpression
                             if
                             (
                             expression
                              expressionPart
                               variableName
                                $
                                identifier
                                 enable-important-utilities
                             ,
                             value
                              expression
                               expressionPart
                                prio
                                 !important
                             ,
                             value
                              identifier
                               null
                             )
                      ;
                    }
                 }
              statement
               eachDeclaration
                @each
                variableName
                 $
                 identifier
                  pseudo
                in
                eachValueList
                 listDeclaration
                  listCommaSeparated
                   listElement
                    value
                     variableName
                      $
                      identifier
                       state
                block
                 {
                 statement
                  ruleset
                   selectorGroup
                    selector
                     selectorSequence
                      className
                       .
                       interpolation
                        #
                        {
                        value
                         expression
                          expressionPart
                           variableName
                            $
                            identifier
                             property-class
                          operator_
                           +
                          expressionPart
                           variableName
                            $
                            identifier
                             infix
                          operator_
                           +
                          expressionPart
                           variableName
                            $
                            identifier
                             property-class-modifier
                        }
                       -
                       interpolation
                        #
                        {
                        value
                         variableName
                          $
                          identifier
                           pseudo
                        }
                      pseudo
                       :
                       interpolation
                        #
                        {
                        value
                         variableName
                          $
                          identifier
                           pseudo
                        }
                   block
                    {
                    statement
                     eachDeclaration
                      @each
                      variableName
                       $
                       identifier
                        property
                      in
                      eachValueList
                       listDeclaration
                        listCommaSeparated
                         listElement
                          value
                           variableName
                            $
                            identifier
                             properties
                      block
                       {
                       statement
                        ifDeclaration
                         @if
                         expression
                          expressionPart
                           variableName
                            $
                            identifier
                             is-local-vars
                         block
                          {
                          statement
                           eachDeclaration
                            @each
                            variableName
                             $
                             identifier
                              local-var
                            ,
                            variableName
                             $
                             identifier
                              variable
                            in
                            eachValueList
                             listDeclaration
                              listCommaSeparated
                               listElement
                                value
                                 variableName
                                  $
                                  identifier
                                   is-local-vars
                            block
                             {
                             statement
                              variableDeclaration
                               variableName
                                --#{$prefix}#{$local-var}
                               :
                               variableValue
                                value
                                 interpolation
                                  #
                                  {
                                  value
                                   variableName
                                    $
                                    identifier
                                     variable
                                  }
                               ;
                             }
                          }
                       statement
                        interpolationDeclaration
                         interpolation
                          #
                          {
                          value
                           variableName
                            $
                            identifier
                             property
                          }
                         :
                         propertyValue
                          listSpaceSeparated
                           listElement
                            value
                             variableName
                              $
                              identifier
                               value
                            value
                             expression
                              expressionPart
                               ifExpression
                                if
                                (
                                expression
                                 expressionPart
                                  variableName
                                   $
                                   identifier
                                    enable-important-utilities
                                ,
                                value
                                 expression
                                  expressionPart
                                   prio
                                    !important
                                ,
                                value
                                 identifier
                                  null
                                )
                         ;
                       }
                    }
                 }
              }
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                is-rtl
             operator_
              =
              =
             expressionPart
              boolean
               false
            block
             {
             }
          }
       }
    }
 <EOF>
