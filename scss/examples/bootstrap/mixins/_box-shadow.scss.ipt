stylesheet
 statement
  mixinDeclaration
   @mixin
   identifier
    box-shadow
   (
   parameters
    parameter
     value
      variableName
       $
       identifier
        shadow
     arglist
      .
      .
      .
   )
   block
    {
    statement
     ifDeclaration
      @if
      expression
       expressionPart
        variableName
         $
         identifier
          enable-shadows
      block
       {
       statement
        variableDeclaration
         variableName
          $
          identifier
           result
         :
         variableValue
          value
           expression
            expressionPart
             (
             )
         ;
       statement
        eachDeclaration
         @each
         variableName
          $
          identifier
           value
         in
         eachValueList
          listDeclaration
           listCommaSeparated
            listElement
             value
              variableName
               $
               identifier
                shadow
         block
          {
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                value
             operator_
              !=
             expressionPart
              identifier
               null
            block
             {
             statement
              variableDeclaration
               variableName
                $
                identifier
                 result
               :
               variableValue
                value
                 functionCall
                  identifier
                   append
                  (
                  parameters
                   parameter
                    value
                     variableName
                      $
                      identifier
                       result
                   ,
                   parameter
                    value
                     variableName
                      $
                      identifier
                       value
                   ,
                   parameter
                    value
                     "comma"
                  )
               ;
             }
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              variableName
               $
               identifier
                value
             operator_
              =
              =
             expressionPart
              identifier
               none
             operator_
              and
             expressionPart
              functionCall
               identifier
                length
               (
               parameters
                parameter
                 value
                  variableName
                   $
                   identifier
                    shadow
               )
             operator_
              >
             expressionPart
              number
               1
            block
             {
             statement
              warndingDeclaration
               @warn
               "The keyword 'none' must be used as a single argument."
               ;
             }
          }
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           (
           expression
            expressionPart
             functionCall
              identifier
               length
              (
              parameters
               parameter
                value
                 variableName
                  $
                  identifier
                   result
              )
            operator_
             >
            expressionPart
             number
              0
           )
         block
          {
          statement
           propertyDeclaration
            identifier
             box-shadow
            :
            propertyValue
             value
              variableName
               $
               identifier
                result
            ;
          }
       }
    }
 <EOF>
