stylesheet
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table
   block
    {
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-color
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-color
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-bg
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-bg
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-border-color
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-border-color
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-accent-bg
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-accent-bg
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-striped-color
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-striped-color
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-striped-bg
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-striped-bg
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-active-color
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-active-color
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-active-bg
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-active-bg
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-hover-color
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-hover-color
         }
      ;
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-hover-bg
      :
      variableValue
       value
        interpolation
         #
         {
         value
          variableName
           $
           identifier
            table-hover-bg
         }
      ;
    statement
     propertyDeclaration
      identifier
       width
      :
      propertyValue
       value
        unit
         percentage
          100
          %
      ;
    statement
     propertyDeclaration
      identifier
       margin-bottom
      :
      propertyValue
       value
        variableName
         $
         identifier
          spacer
      ;
    statement
     propertyDeclaration
      identifier
       color
      :
      propertyValue
       value
        var_
         var(
         --#{$prefix}table-color
         )
      ;
    statement
     propertyDeclaration
      identifier
       vertical-align
      :
      propertyValue
       value
        variableName
         $
         identifier
          table-cell-vertical-align
      ;
    statement
     propertyDeclaration
      identifier
       border-color
      :
      propertyValue
       value
        var_
         var(
         --#{$prefix}table-border-color
         )
      ;
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           typeSelector
            identifier
             caption
          )
        combinator
         >
        selectorSequence
         universal
          *
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        propertyDeclaration
         identifier
          padding
         :
         propertyValue
          listSpaceSeparated
           listElement
            value
             variableName
              $
              identifier
               table-cell-padding-y
            value
             variableName
              $
              identifier
               table-cell-padding-x
         ;
       statement
        propertyDeclaration
         identifier
          background-color
         :
         propertyValue
          value
           var_
            var(
            --#{$prefix}table-bg
            )
         ;
       statement
        propertyDeclaration
         identifier
          border-bottom-width
         :
         propertyValue
          value
           variableName
            $
            identifier
             table-border-width
         ;
       statement
        propertyDeclaration
         identifier
          box-shadow
         :
         propertyValue
          listSpaceSeparated
           listElement
            value
             identifier
              inset
            value
             number
              0
            value
             number
              0
            value
             number
              0
            value
             unit
              length
               9999
               px
            value
             var_
              var(
              --#{$prefix}table-accent-bg
              )
         ;
       }
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tbody
      block
       {
       statement
        propertyDeclaration
         identifier
          vertical-align
         :
         propertyValue
          value
           identifier
            inherit
         ;
       }
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           thead
      block
       {
       statement
        propertyDeclaration
         identifier
          vertical-align
         :
         propertyValue
          value
           identifier
            bottom
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-group-divider
   block
    {
    statement
     propertyDeclaration
      identifier
       border-top
      :
      propertyValue
       listSpaceSeparated
        listElement
         (
         value
          expression
           expressionPart
            variableName
             $
             identifier
              table-border-width
           operator_
            *
           expressionPart
            number
             2
         )
        listElement
         value
          identifier
           solid
         value
          variableName
           $
           identifier
            table-group-separator-color
      ;
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        caption-top
   block
    {
    statement
     propertyDeclaration
      identifier
       caption-side
      :
      propertyValue
       value
        identifier
         top
      ;
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-sm
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           typeSelector
            identifier
             caption
          )
        combinator
         >
        selectorSequence
         universal
          *
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        propertyDeclaration
         identifier
          padding
         :
         propertyValue
          listSpaceSeparated
           listElement
            value
             variableName
              $
              identifier
               table-cell-padding-y-sm
            value
             variableName
              $
              identifier
               table-cell-padding-x-sm
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-bordered
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           typeSelector
            identifier
             caption
          )
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        propertyDeclaration
         identifier
          border-width
         :
         propertyValue
          listSpaceSeparated
           listElement
            value
             variableName
              $
              identifier
               table-border-width
            value
             number
              0
         ;
       statement
        ruleset
         selectorGroup
          selector
           combinator
            >
           selectorSequence
            universal
             *
         block
          {
          statement
           propertyDeclaration
            identifier
             border-width
            :
            propertyValue
             listSpaceSeparated
              listElement
               value
                number
                 0
               value
                variableName
                 $
                 identifier
                  table-border-width
            ;
          }
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-borderless
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           typeSelector
            identifier
             caption
          )
        combinator
         >
        selectorSequence
         universal
          *
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        propertyDeclaration
         identifier
          border-bottom-width
         :
         propertyValue
          value
           number
            0
         ;
       }
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           pseudo
            :
            identifier
             first-child
          )
      block
       {
       statement
        propertyDeclaration
         identifier
          border-top-width
         :
         propertyValue
          value
           number
            0
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-striped
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tbody
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tr
         pseudo
          :
          functionalPseudo
           nth-of-type
           (
           pseudoParameter
            value
             interpolation
              #
              {
              value
               variableName
                $
                identifier
                 table-striped-order
              }
           )
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        variableDeclaration
         variableName
          --#{$prefix}table-accent-bg
         :
         variableValue
          value
           var_
            var(
            --#{$prefix}table-striped-bg
            )
         ;
       statement
        propertyDeclaration
         identifier
          color
         :
         propertyValue
          value
           var_
            var(
            --#{$prefix}table-striped-color
            )
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-striped-columns
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         negation
          :not(
          negationArg
           typeSelector
            identifier
             caption
          )
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tr
        combinator
         >
        selectorSequence
         pseudo
          :
          functionalPseudo
           nth-child
           (
           pseudoParameter
            value
             interpolation
              #
              {
              value
               variableName
                $
                identifier
                 table-striped-columns-order
              }
           )
      block
       {
       statement
        variableDeclaration
         variableName
          --#{$prefix}table-accent-bg
         :
         variableValue
          value
           var_
            var(
            --#{$prefix}table-striped-bg
            )
         ;
       statement
        propertyDeclaration
         identifier
          color
         :
         propertyValue
          value
           var_
            var(
            --#{$prefix}table-striped-color
            )
         ;
       }
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-active
   block
    {
    statement
     variableDeclaration
      variableName
       --#{$prefix}table-accent-bg
      :
      variableValue
       value
        var_
         var(
         --#{$prefix}table-active-bg
         )
      ;
    statement
     propertyDeclaration
      identifier
       color
      :
      propertyValue
       value
        var_
         var(
         --#{$prefix}table-active-color
         )
      ;
    }
 statement
  ruleset
   selectorGroup
    selector
     selectorSequence
      className
       .
       identifier
        table-hover
   block
    {
    statement
     ruleset
      selectorGroup
       selector
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tbody
        combinator
         >
        selectorSequence
         typeSelector
          identifier
           tr
         pseudo
          :
          identifier
           hover
        combinator
         >
        selectorSequence
         universal
          *
      block
       {
       statement
        variableDeclaration
         variableName
          --#{$prefix}table-accent-bg
         :
         variableValue
          value
           var_
            var(
            --#{$prefix}table-hover-bg
            )
         ;
       statement
        propertyDeclaration
         identifier
          color
         :
         propertyValue
          value
           var_
            var(
            --#{$prefix}table-hover-color
            )
         ;
       }
    }
 statement
  eachDeclaration
   @each
   variableName
    $
    identifier
     color
   ,
   variableName
    $
    identifier
     value
   in
   eachValueList
    listDeclaration
     listCommaSeparated
      listElement
       value
        variableName
         $
         identifier
          table-variants
   block
    {
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        table-variant
       (
       parameters
        parameter
         value
          variableName
           $
           identifier
            color
        ,
        parameter
         value
          variableName
           $
           identifier
            value
       )
      ;
    }
 statement
  eachDeclaration
   @each
   variableName
    $
    identifier
     breakpoint
   in
   eachValueList
    listDeclaration
     listCommaSeparated
      listElement
       value
        functionCall
         identifier
          map-keys
         (
         parameters
          parameter
           value
            variableName
             $
             identifier
              grid-breakpoints
         )
   block
    {
    statement
     variableDeclaration
      variableName
       $
       identifier
        infix
      :
      variableValue
       value
        functionCall
         identifier
          breakpoint-infix
         (
         parameters
          parameter
           value
            variableName
             $
             identifier
              breakpoint
          ,
          parameter
           value
            variableName
             $
             identifier
              grid-breakpoints
         )
      ;
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        media-breakpoint-down
       (
       parameters
        parameter
         value
          variableName
           $
           identifier
            breakpoint
       )
      block
       {
       statement
        ruleset
         selectorGroup
          selector
           selectorSequence
            className
             .
             identifier
              table-responsive
             interpolation
              #
              {
              value
               variableName
                $
                identifier
                 infix
              }
         block
          {
          statement
           propertyDeclaration
            identifier
             overflow-x
            :
            propertyValue
             value
              identifier
               auto
            ;
          statement
           propertyDeclaration
            identifier
             -webkit-
             overflow-scrolling
            :
            propertyValue
             value
              identifier
               touch
            ;
          }
       }
    }
 <EOF>
