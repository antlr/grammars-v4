stylesheet
 statement
  eachDeclaration
   @each
   variableName
    $
    identifier
     breakpoint
   in
   eachValueList
    listDeclaration
     listCommaSeparated
      listElement
       value
        functionCall
         identifier
          map-keys
         (
         parameters
          parameter
           value
            variableName
             $
             identifier
              grid-breakpoints
         )
   block
    {
    statement
     includeDeclaration
      @include
      functionCall
       identifier
        media-breakpoint-up
       (
       parameters
        parameter
         value
          variableName
           $
           identifier
            breakpoint
       )
      block
       {
       statement
        variableDeclaration
         variableName
          $
          identifier
           infix
         :
         variableValue
          value
           functionCall
            identifier
             breakpoint-infix
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 breakpoint
             ,
             parameter
              value
               variableName
                $
                identifier
                 grid-breakpoints
            )
         ;
       statement
        eachDeclaration
         @each
         variableName
          $
          identifier
           key
         ,
         variableName
          $
          identifier
           utility
         in
         eachValueList
          listDeclaration
           listCommaSeparated
            listElement
             value
              variableName
               $
               identifier
                utilities
         block
          {
          statement
           ifDeclaration
            @if
            expression
             expressionPart
              functionCall
               identifier
                type-of
               (
               parameters
                parameter
                 value
                  variableName
                   $
                   identifier
                    utility
               )
             operator_
              =
              =
             expressionPart
              "map"
             operator_
              and
             expressionPart
              (
              expression
               expressionPart
                functionCall
                 identifier
                  map-get
                 (
                 parameters
                  parameter
                   value
                    variableName
                     $
                     identifier
                      utility
                  ,
                  parameter
                   value
                    identifier
                     responsive
                 )
               operator_
                or
               expressionPart
                variableName
                 $
                 identifier
                  infix
               operator_
                =
                =
               expressionPart
                ""
              )
            block
             {
             statement
              includeDeclaration
               @include
               functionCall
                identifier
                 generate-utility
                (
                parameters
                 parameter
                  value
                   variableName
                    $
                    identifier
                     utility
                 ,
                 parameter
                  value
                   variableName
                    $
                    identifier
                     infix
                )
               ;
             }
          }
       }
    }
 statement
  mediaDeclaration
   @media
   mediaQueryList
    mediaQuery
     mediaExpression
      (
      identifier
       min-width
      :
      value
       variableName
        $
        identifier
         rfs-mq-value
      )
   block
    {
    statement
     eachDeclaration
      @each
      variableName
       $
       identifier
        breakpoint
      in
      eachValueList
       listDeclaration
        listCommaSeparated
         listElement
          value
           functionCall
            identifier
             map-keys
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 grid-breakpoints
            )
      block
       {
       statement
        variableDeclaration
         variableName
          $
          identifier
           infix
         :
         variableValue
          value
           functionCall
            identifier
             breakpoint-infix
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 breakpoint
             ,
             parameter
              value
               variableName
                $
                identifier
                 grid-breakpoints
            )
         ;
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           (
           expression
            expressionPart
             functionCall
              identifier
               map-get
              (
              parameters
               parameter
                value
                 variableName
                  $
                  identifier
                   grid-breakpoints
               ,
               parameter
                value
                 variableName
                  $
                  identifier
                   breakpoint
              )
            operator_
             <
            expressionPart
             variableName
              $
              identifier
               rfs-breakpoint
           )
         block
          {
          statement
           eachDeclaration
            @each
            variableName
             $
             identifier
              key
            ,
            variableName
             $
             identifier
              utility
            in
            eachValueList
             listDeclaration
              listCommaSeparated
               listElement
                value
                 variableName
                  $
                  identifier
                   utilities
            block
             {
             statement
              ifDeclaration
               @if
               expression
                expressionPart
                 functionCall
                  identifier
                   type-of
                  (
                  parameters
                   parameter
                    value
                     variableName
                      $
                      identifier
                       utility
                  )
                operator_
                 =
                 =
                expressionPart
                 "map"
                operator_
                 and
                expressionPart
                 functionCall
                  identifier
                   map-get
                  (
                  parameters
                   parameter
                    value
                     variableName
                      $
                      identifier
                       utility
                   ,
                   parameter
                    value
                     identifier
                      rfs
                  )
                operator_
                 and
                expressionPart
                 (
                 expression
                  expressionPart
                   functionCall
                    identifier
                     map-get
                    (
                    parameters
                     parameter
                      value
                       variableName
                        $
                        identifier
                         utility
                     ,
                     parameter
                      value
                       identifier
                        responsive
                    )
                  operator_
                   or
                  expressionPart
                   variableName
                    $
                    identifier
                     infix
                  operator_
                   =
                   =
                  expressionPart
                   ""
                 )
               block
                {
                statement
                 includeDeclaration
                  @include
                  functionCall
                   identifier
                    generate-utility
                   (
                   parameters
                    parameter
                     value
                      variableName
                       $
                       identifier
                        utility
                    ,
                    parameter
                     value
                      variableName
                       $
                       identifier
                        infix
                    ,
                    parameter
                     value
                      boolean
                       true
                   )
                  ;
                }
             }
          }
       }
    }
 statement
  mediaDeclaration
   @media
   mediaQueryList
    mediaQuery
     identifier
      print
   block
    {
    statement
     eachDeclaration
      @each
      variableName
       $
       identifier
        key
      ,
      variableName
       $
       identifier
        utility
      in
      eachValueList
       listDeclaration
        listCommaSeparated
         listElement
          value
           variableName
            $
            identifier
             utilities
      block
       {
       statement
        ifDeclaration
         @if
         expression
          expressionPart
           functionCall
            identifier
             type-of
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
            )
          operator_
           =
           =
          expressionPart
           "map"
          operator_
           and
          expressionPart
           functionCall
            identifier
             map-get
            (
            parameters
             parameter
              value
               variableName
                $
                identifier
                 utility
             ,
             parameter
              value
               identifier
                print
            )
          operator_
           =
           =
          expressionPart
           boolean
            true
         block
          {
          statement
           includeDeclaration
            @include
            functionCall
             identifier
              generate-utility
             (
             parameters
              parameter
               value
                variableName
                 $
                 identifier
                  utility
              ,
              parameter
               value
                "-print"
             )
            ;
          }
       }
    }
 <EOF>
