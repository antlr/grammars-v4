prog
 line
  linenumber
   100
  amprstmt
   REM ****************************
 line
  linenumber
   110
  amprstmt
   REM MAIN TEST
 line
  linenumber
   120
  amprstmt
   REM ****************************
 line
  linenumber
   121
  amprstmt
   REM
 line
  linenumber
   122
  amprstmt
   REM
 line
  linenumber
   125
  amprstmt
   REM *********** CLEAR *********
 line
  linenumber
   130
  amprstmt
   statement
    CLEAR
 line
  linenumber
   135
  amprstmt
   REM *********** RETURN *********
 line
  linenumber
   140
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   145
  amprstmt
   REM *********** LIST *********
 line
  linenumber
   150
  amprstmt
   statement
    liststmt
     LIST
 line
  linenumber
   155
  amprstmt
   REM *********** RUN *********
 line
  linenumber
   160
  amprstmt
   statement
    RUN
 line
  linenumber
   165
  amprstmt
   REM *********** END *********
 line
  linenumber
   170
  amprstmt
   statement
    endstmt
     END
 line
  linenumber
   175
  amprstmt
   REM *********** GOTO *********
 line
  linenumber
   180
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      100
 line
  linenumber
   185
  amprstmt
   REM *********** GOSUB *********
 line
  linenumber
   190
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        100
 line
  linenumber
   195
  amprstmt
   REM *********** LET *********
 line
  linenumber
   180
  amprstmt
   statement
    letstmt
     LET
     variableassignment
      vardecl
       var_
        varname
         x
      =
      exprlist
       expression
        func_
         number
          12
 line
  linenumber
   185
  amprstmt
   REM *********** INPUT *********
 line
  linenumber
   200
  amprstmt
   statement
    inputstmt
     INPUT
     "sdsdsd"
     ;
     varlist
      vardecl
       var_
        varname
         y
 line
  linenumber
   225
  amprstmt
   REM *********** IF *********
 line
  linenumber
   220
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               x
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             13
     THEN
     statement
      printstmt1
       PRINT
       printlist
        expression
         func_
          "xx"
 line
  linenumber
   230
  amprstmt
   REM *********** IF with assign *********
 line
  linenumber
   240
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               x
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             13
     THEN
     statement
      letstmt
       LET
       variableassignment
        vardecl
         var_
          varname
           y
        =
        exprlist
         expression
          func_
           number
            12
 line
  linenumber
   245
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               x
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             13
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           y
        =
        exprlist
         expression
          func_
           number
            12
 line
  linenumber
   245
  amprstmt
   REM *********** PRINT *********
 line
  linenumber
   250
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "xx"
 line
  linenumber
   260
  amprstmt
   REM *********** FOR *********
 line
  linenumber
   270
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        i
     =
     expression
      func_
       number
        10
     TO
     expression
      func_
       number
        15
     STEP
     expression
      func_
       number
        20
 line
  linenumber
   275
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        i
     =
     expression
      func_
       number
        10
     TO
     expression
      func_
       number
        15
 line
  linenumber
   260
  amprstmt
   REM *********** NEXT *********
 line
  linenumber
   261
  amprstmt
   statement
    nextstmt
     NEXT
     vardecl
      var_
       varname
        i
 line
  linenumber
   300
  amprstmt
   REM *********** DIM *********
 line
  linenumber
   310
  amprstmt
   statement
    dimstmt
     DIM
     varlist
      vardecl
       var_
        varname
         j
       (
       exprlist
        expression
         func_
          number
           14
       )
 line
  linenumber
   400
  amprstmt
   REM *********** SQR *********
 line
  linenumber
   410
  amprstmt
   statement
    letstmt
     LET
     variableassignment
      vardecl
       var_
        varname
         h
      =
      exprlist
       expression
        func_
         sqrfunc
          SQR
          (
          expression
           func_
            number
             12
          )
 line
  linenumber
   420
  amprstmt
   REM *********** CHR *********
 line
  linenumber
   430
  amprstmt
   statement
    letstmt
     LET
     variableassignment
      vardecl
       var_
        varname
         h
      =
      exprlist
       expression
        func_
         chrfunc
          CHR$
          (
          expression
           func_
            number
             12
          )
 line
  linenumber
   440
  amprstmt
   REM *********** COLON TWO STATEMENTS *********
 line
  linenumber
   450
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "1"
  :
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "2"
 line
  linenumber
   460
  amprstmt
   REM *********** COLON COMMENT *********
 line
  linenumber
   470
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "1"
  :
  amprstmt
   REM
 line
  linenumber
   480
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "1"
  :
  amprstmt
   REM 44
 line
  linenumber
   490
  amprstmt
   REM *********** NAKED ASSIGN *********
 line
  linenumber
   500
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         j
      =
      exprlist
       expression
        func_
         number
          77
 line
  linenumber
   490
  amprstmt
   REM *********** PRINT EXPRESSION *********
 line
  linenumber
   510
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        chrfunc
         CHR$
         (
         expression
          func_
           number
            7
         )
 line
  linenumber
   1000
  amprstmt
   statement
    TEXT
 line
  linenumber
   1010
  amprstmt
   statement
    HGR
 line
  linenumber
   490
  amprstmt
   REM *********** LEN *********
 line
  linenumber
   520
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         ll
      =
      exprlist
       expression
        func_
         lenfunc
          LEN
          (
          expression
           func_
            "abc"
          )
 line
  linenumber
   490
  amprstmt
   REM *********** CALL *********
 line
  linenumber
   11
  amprstmt
   statement
    callstmt
     CALL
     exprlist
      expression
       func_
        number
         5010
 line
  linenumber
   490
  amprstmt
   REM *********** ASC *********
 line
  linenumber
   520
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         ll
      =
      exprlist
       expression
        func_
         ascfunc
          ASC
          (
          expression
           func_
            "a"
          )
 line
  linenumber
   490
  amprstmt
   REM *********** MID *********
 line
  linenumber
   520
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         ll
      =
      exprlist
       expression
        func_
         midfunc
          MID$
          (
          expression
           func_
            "abc"
          ,
          expression
           func_
            number
             1
          ,
          expression
           func_
            number
             2
          )
 line
  linenumber
   490
  amprstmt
   REM *********** STRING VAR *********
 line
  linenumber
   520
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         d
        varsuffix
         $
      =
      exprlist
       expression
        func_
         "sdsd"
 line
  linenumber
   490
  amprstmt
   REM *********** PLOT *********
 line
  linenumber
   550
  amprstmt
   statement
    hplotstmt
     HPLOT
     expression
      func_
       number
        0
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
     TO
     expression
      func_
       number
        279
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
 line
  linenumber
   550
  amprstmt
   statement
    vplotstmt
     VPLOT
     expression
      func_
       number
        0
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
     TO
     expression
      func_
       number
        279
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
 line
  linenumber
   560
  amprstmt
   statement
    vplotstmt
     VPLOT
     expression
      func_
       number
        0
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
     TO
     expression
      func_
       number
        279
     ,
     expression
      func_
       vardecl
        var_
         varname
          YS
 line
  linenumber
   490
  amprstmt
   REM *********** PR *********
 line
  linenumber
   1000
  amprstmt
   statement
    prstmt
     PR#
     1
 line
  linenumber
   1001
  amprstmt
   statement
    prstmt
     PR#
     2
 line
  linenumber
   490
  amprstmt
   REM *********** FLOATS *********
 line
  linenumber
   20
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         XC
      =
      exprlist
       expression
        func_
         number
          -
          0.5
  :
  amprstmt
   REM CENTER COORD X
 line
  linenumber
   30
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         YC
      =
      exprlist
       expression
        func_
         number
          0
  :
  amprstmt
   REM   "      "   Y
 line
  linenumber
   40
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         S
      =
      exprlist
       expression
        func_
         number
          2
  :
  amprstmt
   REM SCALE
 line
  linenumber
   490
  amprstmt
   REM *********** NEQ *********
 line
  linenumber
   40
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               N
       relop
        neq
         <
         >
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     statement
      gotostmt
       GOTO
       linenumber
        80
 line
  linenumber
   490
  amprstmt
   REM *********** TAB *********
 line
  linenumber
   10
  amprstmt
   statement
    vtabstmnt
     VTAB
     expression
      func_
       number
        6
  :
  amprstmt
   statement
    htabstmnt
     HTAB
     expression
      func_
       number
        3
 <EOF>
