prog
 line
  linenumber
   10
  amprstmt
   REM Lunar Lander
 line
  linenumber
   20
  amprstmt
   REM By Diomidis Spinellis
 line
  linenumber
   25
  amprstmt
   REM Chipmunk Basic version
 line
  linenumber
   30
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "You aboard the Lunar Lander about to leave the spacecraft."
 line
  linenumber
   60
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        4000
 line
  linenumber
   70
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        1000
 line
  linenumber
   80
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        2000
 line
  linenumber
   90
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        3000
 line
  linenumber
   100
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         H
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 H
          -
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 V
                 110
                 V
         relop
          =
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              (
              expression
               relationalExpression
                addingExpression
                 multiplyingExpression
                  exponentExpression
                   signExpression
                    func_
                     (
                     expression
                      relationalExpression
                       addingExpression
                        multiplyingExpression
                         exponentExpression
                          signExpression
                           func_
                            vardecl
                             var_
                              varname
                               V
                        +
                        multiplyingExpression
                         exponentExpression
                          signExpression
                           func_
                            vardecl
                             var_
                              varname
                               G
                     )
                  *
                  exponentExpression
                   signExpression
                    func_
                     number
                      10
                 -
                 multiplyingExpression
                  exponentExpression
                   signExpression
                    func_
                     vardecl
                      var_
                       varname
                        U
                  *
                  exponentExpression
                   signExpression
                    func_
                     number
                      2
              )
           /
           exponentExpression
            signExpression
             func_
              number
               10
 line
  linenumber
   120
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         F
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 F
          -
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 U
 line
  linenumber
   130
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               H
       relop
        >
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      80
 line
  linenumber
   135
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         H
      =
      exprlist
       expression
        func_
         number
          0
 line
  linenumber
   140
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        2000
 line
  linenumber
   150
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               V
       relop
        >
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             5
     THEN
     linenumber
      200
 line
  linenumber
   160
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Congratulations!  This was a very good landing."
 line
  linenumber
   170
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        5000
 line
  linenumber
   180
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      10
 line
  linenumber
   200
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "You have crashed."
 line
  linenumber
   210
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      170
 line
  linenumber
   1000
  amprstmt
   REM Initialise
 line
  linenumber
   1010
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         V
      =
      exprlist
       expression
        func_
         number
          70
 line
  linenumber
   1020
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         F
      =
      exprlist
       expression
        func_
         number
          500
 line
  linenumber
   1030
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         H
      =
      exprlist
       expression
        func_
         number
          1000
 line
  linenumber
   1040
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         G
      =
      exprlist
       expression
        func_
         number
          2
 line
  linenumber
   1050
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   2000
  amprstmt
   REM Print values
 line
  linenumber
   2010
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "        Meter readings"
 line
  linenumber
   2015
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "        --------------"
 line
  linenumber
   2020
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Fuel (gal):"
 line
  linenumber
   2030
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        vardecl
         var_
          varname
           F
 line
  linenumber
   2040
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             2100
        +
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             100
         *
         exponentExpression
          signExpression
           func_
            (
            expression
             relationalExpression
              addingExpression
               multiplyingExpression
                exponentExpression
                 signExpression
                  func_
                   vardecl
                    var_
                     varname
                      H
              relop
               neq
                <
                >
              addingExpression
               multiplyingExpression
                exponentExpression
                 signExpression
                  func_
                   number
                    0
            )
 line
  linenumber
   2050
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        vardecl
         var_
          varname
           V
 line
  linenumber
   2060
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Height (m):"
 line
  linenumber
   2070
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        vardecl
         var_
          varname
           H
 line
  linenumber
   2080
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   2100
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Landing velocity (m/sec):"
 line
  linenumber
   2110
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   2200
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Velocity (m/sec):"
 line
  linenumber
   2210
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   3000
  amprstmt
   REM User input
 line
  linenumber
   3005
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               F
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      3070
 line
  linenumber
   3010
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "How much fuel will you use?"
 line
  linenumber
   3020
  amprstmt
   statement
    inputstmt
     INPUT
     varlist
      vardecl
       var_
        varname
         U
 line
  linenumber
   3025
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               U
       relop
        <
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      3090
 line
  linenumber
   3030
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               U
       relop
        <
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               F
     THEN
     linenumber
      3060
 line
  linenumber
   3040
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Sorry, you have not got that much fuel!"
 line
  linenumber
   3045
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        vardecl
         var_
          varname
           F
 line
  linenumber
   3050
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      3010
 line
  linenumber
   3060
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   3070
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         U
      =
      exprlist
       expression
        func_
         number
          0
 line
  linenumber
   3080
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   3090
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "No cheating please!  Fuel must be >= 0."
 line
  linenumber
   3100
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      3010
 line
  linenumber
   4000
  amprstmt
   REM Detachment
 line
  linenumber
   4005
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Ready for detachment"
 line
  linenumber
   4007
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "-- COUNTDOWN --"
 line
  linenumber
   4010
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        I
     =
     expression
      func_
       number
        1
     TO
     expression
      func_
       number
        11
 line
  linenumber
   4020
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       relationalExpression
        addingExpression
         multiplyingExpression
          exponentExpression
           signExpression
            func_
             number
              11
         -
         multiplyingExpression
          exponentExpression
           signExpression
            func_
             vardecl
              var_
               varname
                I
 line
  linenumber
   4025
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        4500
 line
  linenumber
   4030
  amprstmt
   statement
    nextstmt
     NEXT
     vardecl
      var_
       varname
        I
 line
  linenumber
   4035
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "You have left the spacecraft."
 line
  linenumber
   4037
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Try to land with velocity less than 5 m/sec."
 line
  linenumber
   4040
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   4500
  amprstmt
   REM Delay
 line
  linenumber
   4510
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        J
     =
     expression
      func_
       number
        1
     TO
     expression
      func_
       number
        500
 line
  linenumber
   4520
  amprstmt
   statement
    nextstmt
     NEXT
     vardecl
      var_
       varname
        J
 line
  linenumber
   4530
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   5000
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Do you want to play again? (0 = no, 1 = yes)"
 line
  linenumber
   5010
  amprstmt
   statement
    inputstmt
     INPUT
     varlist
      vardecl
       var_
        varname
         Y
 line
  linenumber
   5020
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               Y
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      5040
 line
  linenumber
   5030
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   5040
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "Have a nice day."
 line
  linenumber
   5050
  amprstmt
   statement
    endstmt
     END
 line
  linenumber
   9992
  amprstmt
   rem --- End of source code ---
 line
  linenumber
   9993
  amprstmt
   rem I know it stinks as a game, but see it as a relic from old times.
 line
  linenumber
   9994
  amprstmt
   rem Ingemar Ragnemalm, PhD
 line
  linenumber
   9995
  amprstmt
   rem Image processing, Mac shareware games
 line
  linenumber
   9996
  amprstmt
   rem E-mail address: ingemar@isy.liu.se or ingemar@lysator.liu.se
 <EOF>
