prog
 line
  linenumber
   10
  amprstmt
   REM SIMPLE PAINT PROGRAM
 line
  linenumber
   20
  amprstmt
   REM BY VECTRONIC
 line
  linenumber
   100
  amprstmt
   statement
    HOME
  :
  amprstmt
   statement
    GR
 line
  linenumber
   110
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         X
      =
      exprlist
       expression
        func_
         number
          20
  :
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         Y
      =
      exprlist
       expression
        func_
         number
          20
  :
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         C
      =
      exprlist
       expression
        func_
         number
          9
  :
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         K
      =
      exprlist
       expression
        func_
         number
          160
 line
  linenumber
   120
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       vardecl
        var_
         varname
          C
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   130
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        2000
 line
  linenumber
   150
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         XP
        varsuffix
         %
      =
      exprlist
       expression
        func_
         pdlfunc
          PDL
          (
          expression
           func_
            number
             0
          )
  :
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        PX
     =
     expression
      func_
       number
        1
     TO
     expression
      func_
       number
        10
  :
  amprstmt
   statement
    nextstmt
     NEXT
  :
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         YP
        varsuffix
         %
      =
      exprlist
       expression
        func_
         pdlfunc
          PDL
          (
          expression
           func_
            number
             1
          )
  :
  amprstmt
   statement
    forstmt1
     FOR
     vardecl
      var_
       varname
        PY
     =
     expression
      func_
       number
        1
     TO
     expression
      func_
       number
        10
  :
  amprstmt
   statement
    nextstmt
     NEXT
 line
  linenumber
   160
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         K
      =
      exprlist
       expression
        func_
         peekfunc
          PEEK
          (
          expression
           func_
            number
             -
             16384
          )
 line
  linenumber
   170
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               XP
              varsuffix
               %
       relop
        >
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             130
     THEN
     linenumber
      300
 line
  linenumber
   180
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               XP
              varsuffix
               %
       relop
        <
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             120
     THEN
     linenumber
      400
 line
  linenumber
   190
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               YP
              varsuffix
               %
       relop
        >
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             130
     THEN
     linenumber
      500
 line
  linenumber
   200
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               YP
              varsuffix
               %
       relop
        <
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             120
     THEN
     linenumber
      600
 line
  linenumber
   210
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             155
     THEN
     statement
      gosubstmt
       GOSUB
       expression
        func_
         number
          3000
 line
  linenumber
   220
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      150
 line
  linenumber
   299
  amprstmt
   REM PLOT X MOVING LEFT
 line
  linenumber
   300
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        1000
 line
  linenumber
   310
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               X
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             39
     THEN
     linenumber
      150
 line
  linenumber
   320
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         X
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 X
          +
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              number
               1
  :
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       vardecl
        var_
         varname
          C
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               X
        -
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             1
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   330
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       number
        9
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   340
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      150
 line
  linenumber
   399
  amprstmt
   REM PLOT X MOVING RIGHT
 line
  linenumber
   400
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        1000
 line
  linenumber
   410
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               X
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      150
 line
  linenumber
   420
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         X
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 X
          -
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              number
               1
  :
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       vardecl
        var_
         varname
          C
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               X
        +
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             1
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   430
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       number
        9
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   440
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      150
 line
  linenumber
   499
  amprstmt
   REM PLOT Y MOVING DOWN
 line
  linenumber
   500
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        1000
 line
  linenumber
   510
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               Y
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             39
     THEN
     linenumber
      150
 line
  linenumber
   520
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         Y
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 Y
          +
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              number
               1
  :
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       vardecl
        var_
         varname
          C
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               Y
        -
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             1
 line
  linenumber
   530
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       number
        9
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   540
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      150
 line
  linenumber
   599
  amprstmt
   REM PLOT Y MOVING UP
 line
  linenumber
   600
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        1000
 line
  linenumber
   610
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               Y
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             0
     THEN
     linenumber
      150
 line
  linenumber
   620
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         Y
      =
      exprlist
       expression
        relationalExpression
         addingExpression
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              vardecl
               var_
                varname
                 Y
          -
          multiplyingExpression
           exponentExpression
            signExpression
             func_
              number
               1
  :
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       vardecl
        var_
         varname
          C
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               Y
        +
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             1
 line
  linenumber
   630
  amprstmt
   statement
    colorstmt
     COLOR
     =
     expression
      func_
       number
        9
  :
  amprstmt
   statement
    plotstmt
     PLOT
     expression
      func_
       vardecl
        var_
         varname
          X
     ,
     expression
      func_
       vardecl
        var_
         varname
          Y
 line
  linenumber
   640
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      150
 line
  linenumber
   999
  amprstmt
   statement
    endstmt
     END
 line
  linenumber
   1000
  amprstmt
   REM COLOR PICKER
 line
  linenumber
   1100
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             177
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            1
 line
  linenumber
   1110
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             178
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            2
 line
  linenumber
   1120
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             179
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            3
 line
  linenumber
   1130
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             180
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            4
 line
  linenumber
   1140
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             181
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            5
 line
  linenumber
   1150
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             182
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            6
 line
  linenumber
   1160
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             183
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            7
 line
  linenumber
   1170
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             184
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            8
 line
  linenumber
   1180
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             185
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            9
 line
  linenumber
   1200
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             209
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            11
 line
  linenumber
   1210
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             215
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            12
 line
  linenumber
   1220
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             197
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            13
 line
  linenumber
   1230
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             210
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            14
 line
  linenumber
   1240
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             212
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            15
 line
  linenumber
   1250
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               K
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            number
             160
     THEN
     statement
      letstmt
       variableassignment
        vardecl
         var_
          varname
           C
        =
        exprlist
         expression
          func_
           number
            0
 line
  linenumber
   1260
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   2000
  amprstmt
   REM MENU OPTIONS
 line
  linenumber
   2100
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "1=PRD 2=DBL 3=PRL 4=DGR 5=GR 6=MBL 7=LBL 8=BN 9=OR Q=PK W=GR E=YW R=AQ T=WT SBR=BK ESC=QUIT"
 line
  linenumber
   2200
  amprstmt
   statement
    letstmt
     variableassignment
      vardecl
       var_
        varname
         K
      =
      exprlist
       expression
        func_
         peekfunc
          PEEK
          (
          expression
           func_
            number
             -
             16368
          )
 line
  linenumber
   2999
  amprstmt
   statement
    returnstmt
     RETURN
 line
  linenumber
   3000
  amprstmt
   REM QUIT
 line
  linenumber
   3100
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "ARE YOU SURE YOU WANT TO QUIT? "
 line
  linenumber
   3110
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "TYPE 'Y' OR 'N'"
 line
  linenumber
   3200
  amprstmt
   statement
    inputstmt
     INPUT
     varlist
      vardecl
       var_
        varname
         N
        varsuffix
         $
 line
  linenumber
   3300
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               N
              varsuffix
               $
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            "Y"
     THEN
     linenumber
      3700
 line
  linenumber
   3400
  amprstmt
   statement
    ifstmt
     IF
     expression
      relationalExpression
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            vardecl
             var_
              varname
               N
              varsuffix
               $
       relop
        =
       addingExpression
        multiplyingExpression
         exponentExpression
          signExpression
           func_
            "N"
     THEN
     linenumber
      3800
 line
  linenumber
   3500
  amprstmt
   statement
    printstmt1
     PRINT
     printlist
      expression
       func_
        "PLEASE ENTER A 'Y' OR 'N'"
 line
  linenumber
   3600
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      3100
 line
  linenumber
   3700
  amprstmt
   statement
    TEXT
  :
  amprstmt
   statement
    HOME
  :
  amprstmt
   statement
    gotostmt
     GOTO
     linenumber
      999
 line
  linenumber
   3800
  amprstmt
   statement
    gosubstmt
     GOSUB
     expression
      func_
       number
        2000
 line
  linenumber
   3900
  amprstmt
   statement
    returnstmt
     RETURN
 <EOF>
