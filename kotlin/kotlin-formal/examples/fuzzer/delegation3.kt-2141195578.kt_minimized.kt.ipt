kotlinFile
 packageHeader
 importList
 topLevelObject
  declaration
   classDeclaration
    interface
    simpleIdentifier
     One
    classBody
     {
     \n
     classMemberDeclarations
      classMemberDeclaration
       declaration
        functionDeclaration
         modifiers
          modifier
           visibilityModifier
            public
          modifier
           inheritanceModifier
            open
          modifier
           functionModifier
            suspend
         fun
         simpleIdentifier
          foo
         functionValueParameters
          (
          )
         :
         type_
          typeReference
           userType
            simpleUserType
             simpleIdentifier
              Int
      semis
       \n
     }
  semis
   \n
 topLevelObject
  declaration
   classDeclaration
    interface
    simpleIdentifier
     Two
    classBody
     {
     \n
     classMemberDeclarations
      classMemberDeclaration
       declaration
        functionDeclaration
         modifiers
          modifier
           visibilityModifier
            public
          modifier
           inheritanceModifier
            open
         fun
         simpleIdentifier
          foo
         functionValueParameters
          (
          )
         :
         type_
          typeReference
           userType
            simpleUserType
             simpleIdentifier
              Int
      semis
       \n
     }
  semis
   \n
 topLevelObject
  declaration
   classDeclaration
    class
    simpleIdentifier
     Test2
    primaryConstructor
     classParameters
      (
      classParameter
       simpleIdentifier
        a
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            One
      ,
      classParameter
       simpleIdentifier
        b
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            Two
      )
    :
    delegationSpecifiers
     annotatedDelegationSpecifier
      delegationSpecifier
       explicitDelegation
        userType
         simpleUserType
          simpleIdentifier
           Two
        by
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       simpleIdentifier
                        b
     ,
     annotatedDelegationSpecifier
      delegationSpecifier
       explicitDelegation
        userType
         simpleUserType
          simpleIdentifier
           One
        by
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       simpleIdentifier
                        a
    classBody
     {
     \n
     classMemberDeclarations
      classMemberDeclaration
       declaration
        functionDeclaration
         modifiers
          modifier
           visibilityModifier
            public
          modifier
           memberModifier
            override
         fun
         simpleIdentifier
          foo
         functionValueParameters
          (
          )
         functionBody
          =
          expression
           disjunction
            conjunction
             equality
              comparison
               infixOperation
                elvisExpression
                 infixFunctionCall
                  rangeExpression
                   additiveExpression
                    multiplicativeExpression
                     asExpression
                      prefixUnaryExpression
                       postfixUnaryExpression
                        primaryExpression
                         literalConstant
                          0
      semis
       \n
     }
  semis
   <EOF>
 <EOF>
