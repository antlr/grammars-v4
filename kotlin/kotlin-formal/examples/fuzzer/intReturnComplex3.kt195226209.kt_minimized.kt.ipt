kotlinFile
 packageHeader
 importList
 topLevelObject
  declaration
   classDeclaration
    modifiers
     modifier
      visibilityModifier
       public
    class
    simpleIdentifier
     Holder
    classBody
     {
     \n
     \n
     classMemberDeclarations
     }
  semis
   \n
 topLevelObject
  declaration
   functionDeclaration
    modifiers
     modifier
      visibilityModifier
       public
     modifier
      functionModifier
       inline
    fun
    typeParameters
     <
     typeParameter
      simpleIdentifier
       R
     >
    simpleIdentifier
     doCall2_1
    functionValueParameters
     (
     functionValueParameter
      parameter
       simpleIdentifier
        block
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            )
           ->
           type_
            typeReference
             userType
              simpleUserType
               simpleIdentifier
                R
         )
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        exception
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            parameter
             simpleIdentifier
              e
             :
             type_
              nullableType
               parenthesizedType
                (
                type_
                 typeReference
                  userType
                   simpleUserType
                    simpleIdentifier
                     Exception
                )
               quest
                ?
            )
           ->
           type_
            typeReference
             userType
              simpleUserType
               simpleIdentifier
                Unit
         )
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        res
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            R
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        h
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            Holder
     )
    :
    type_
     typeReference
      userType
       simpleUserType
        simpleIdentifier
         R
    functionBody
     block
      {
      \n
      statements
       statement
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       tryExpression
                        try
                        block
                         {
                         \n
                         statements
                          statement
                           expression
                            disjunction
                             conjunction
                              equality
                               comparison
                                infixOperation
                                 elvisExpression
                                  infixFunctionCall
                                   rangeExpression
                                    additiveExpression
                                     multiplicativeExpression
                                      asExpression
                                       prefixUnaryExpression
                                        postfixUnaryExpression
                                         primaryExpression
                                          jumpExpression
                                           return
                                           expression
                                            disjunction
                                             conjunction
                                              equality
                                               comparison
                                                infixOperation
                                                 elvisExpression
                                                  infixFunctionCall
                                                   rangeExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      asExpression
                                                       prefixUnaryExpression
                                                        postfixUnaryExpression
                                                         primaryExpression
                                                          simpleIdentifier
                                                           doCall2
                                                         postfixUnarySuffix
                                                          typeArguments
                                                           <
                                                           typeProjection
                                                            type_
                                                             typeReference
                                                              userType
                                                               simpleUserType
                                                                simpleIdentifier
                                                                 R
                                                           >
                                                         postfixUnarySuffix
                                                          callSuffix
                                                           valueArguments
                                                            (
                                                            valueArgument
                                                             expression
                                                              disjunction
                                                               conjunction
                                                                equality
                                                                 comparison
                                                                  infixOperation
                                                                   elvisExpression
                                                                    infixFunctionCall
                                                                     rangeExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        asExpression
                                                                         prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                           primaryExpression
                                                                            simpleIdentifier
                                                                             block
                                                            ,
                                                            valueArgument
                                                             expression
                                                              disjunction
                                                               conjunction
                                                                equality
                                                                 comparison
                                                                  infixOperation
                                                                   elvisExpression
                                                                    infixFunctionCall
                                                                     rangeExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        asExpression
                                                                         prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                           primaryExpression
                                                                            simpleIdentifier
                                                                             exception
                                                            ,
                                                            valueArgument
                                                             expression
                                                              disjunction
                                                               conjunction
                                                                equality
                                                                 comparison
                                                                  infixOperation
                                                                   elvisExpression
                                                                    infixFunctionCall
                                                                     rangeExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        asExpression
                                                                         prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                           primaryExpression
                                                                            functionLiteral
                                                                             lambdaLiteral
                                                                              {
                                                                              statements
                                                                              }
                                                            ,
                                                            valueArgument
                                                             expression
                                                              disjunction
                                                               conjunction
                                                                equality
                                                                 comparison
                                                                  infixOperation
                                                                   elvisExpression
                                                                    infixFunctionCall
                                                                     rangeExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        asExpression
                                                                         prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                           primaryExpression
                                                                            simpleIdentifier
                                                                             res
                                                            ,
                                                            valueArgument
                                                             expression
                                                              disjunction
                                                               conjunction
                                                                equality
                                                                 comparison
                                                                  infixOperation
                                                                   elvisExpression
                                                                    infixFunctionCall
                                                                     rangeExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        asExpression
                                                                         prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                           primaryExpression
                                                                            simpleIdentifier
                                                                             h
                                                            )
                          semis
                           \n
                         }
                        \n
                        finallyBlock
                         finally
                         block
                          {
                          \n
                          \n
                          statements
                          }
       semis
        \n
      }
  semis
   \n
 topLevelObject
  declaration
   functionDeclaration
    modifiers
     modifier
      visibilityModifier
       public
     modifier
      functionModifier
       inline
    fun
    typeParameters
     <
     typeParameter
      simpleIdentifier
       R
     >
    simpleIdentifier
     doCall2
    functionValueParameters
     (
     functionValueParameter
      parameter
       simpleIdentifier
        block
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            )
           ->
           type_
            typeReference
             userType
              simpleUserType
               simpleIdentifier
                R
         )
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        exception
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            parameter
             simpleIdentifier
              e
             :
             type_
              typeReference
               userType
                simpleUserType
                 simpleIdentifier
                  Exception
            )
           ->
           type_
            nullableType
             parenthesizedType
              (
              type_
               typeReference
                userType
                 simpleUserType
                  simpleIdentifier
                   Unit
              )
             quest
              ?
         )
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        finallyBlock
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            )
           ->
           type_
            typeReference
             userType
              simpleUserType
               simpleIdentifier
                Unit
         )
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        res
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            R
     ,
     functionValueParameter
      parameter
       simpleIdentifier
        h
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            Holder
     )
    :
    type_
     typeReference
      userType
       simpleUserType
        simpleIdentifier
         R
    functionBody
     block
      {
      \n
      statements
       statement
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       tryExpression
                        try
                        block
                         {
                         \n
                         statements
                          statement
                           expression
                            disjunction
                             conjunction
                              equality
                               comparison
                                infixOperation
                                 elvisExpression
                                  infixFunctionCall
                                   rangeExpression
                                    additiveExpression
                                     multiplicativeExpression
                                      asExpression
                                       prefixUnaryExpression
                                        postfixUnaryExpression
                                         primaryExpression
                                          tryExpression
                                           try
                                           block
                                            {
                                            \n
                                            \n
                                            statements
                                            }
                                           catchBlock
                                            catch
                                            (
                                            simpleIdentifier
                                             e
                                            :
                                            userType
                                             simpleUserType
                                              simpleIdentifier
                                               Exception
                                            )
                                            block
                                             {
                                             \n
                                             \n
                                             statements
                                             }
                                           \n
                                           finallyBlock
                                            finally
                                            block
                                             {
                                             \n
                                             statements
                                              statement
                                               expression
                                                disjunction
                                                 conjunction
                                                  equality
                                                   comparison
                                                    infixOperation
                                                     elvisExpression
                                                      infixFunctionCall
                                                       rangeExpression
                                                        additiveExpression
                                                         multiplicativeExpression
                                                          asExpression
                                                           prefixUnaryExpression
                                                            postfixUnaryExpression
                                                             primaryExpression
                                                              parenthesizedExpression
                                                               (
                                                               expression
                                                                disjunction
                                                                 conjunction
                                                                  equality
                                                                   comparison
                                                                    infixOperation
                                                                     elvisExpression
                                                                      infixFunctionCall
                                                                       rangeExpression
                                                                        additiveExpression
                                                                         multiplicativeExpression
                                                                          asExpression
                                                                           prefixUnaryExpression
                                                                            postfixUnaryExpression
                                                                             primaryExpression
                                                                              simpleIdentifier
                                                                               finallyBlock
                                                               )
                                                             postfixUnarySuffix
                                                              postfixUnaryOperator
                                                               !
                                                               excl
                                                                !
                                                             postfixUnarySuffix
                                                              callSuffix
                                                               valueArguments
                                                                (
                                                                )
                                              semis
                                               \n
                                             }
                          semis
                           \n
                         }
                        \n
                        finallyBlock
                         finally
                         block
                          {
                          \n
                          \n
                          statements
                          }
       \n
       statement
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       jumpExpression
                        return
                        expression
                         disjunction
                          conjunction
                           equality
                            comparison
                             infixOperation
                              elvisExpression
                               infixFunctionCall
                                rangeExpression
                                 additiveExpression
                                  multiplicativeExpression
                                   asExpression
                                    prefixUnaryExpression
                                     postfixUnaryExpression
                                      primaryExpression
                                       simpleIdentifier
                                        res
       semis
        \n
      }
  semis
   <EOF>
 <EOF>
