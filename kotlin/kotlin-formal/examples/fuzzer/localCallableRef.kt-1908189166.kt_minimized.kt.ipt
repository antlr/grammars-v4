kotlinFile
 packageHeader
 importList
 topLevelObject
  declaration
   functionDeclaration
    modifiers
     modifier
      functionModifier
       suspend
    fun
    simpleIdentifier
     suspendWithValue
    functionValueParameters
     (
     functionValueParameter
      parameter
       simpleIdentifier
        result
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            )
           ->
           type_
            nullableType
             parenthesizedType
              (
              type_
               typeReference
                userType
                 simpleUserType
                  simpleIdentifier
                   String
              )
             quest
              ?
         )
     )
    :
    type_
     typeReference
      userType
       simpleUserType
        simpleIdentifier
         String
    functionBody
     =
     expression
      disjunction
       conjunction
        equality
         comparison
          infixOperation
           elvisExpression
            infixFunctionCall
             rangeExpression
              additiveExpression
               multiplicativeExpression
                asExpression
                 prefixUnaryExpression
                  postfixUnaryExpression
                   primaryExpression
                    simpleIdentifier
                     suspendCoroutineOrReturn
                   postfixUnarySuffix
                    callSuffix
                     valueArguments
                      (
                      valueArgument
                       expression
                        disjunction
                         conjunction
                          equality
                           comparison
                            infixOperation
                             elvisExpression
                              infixFunctionCall
                               rangeExpression
                                additiveExpression
                                 multiplicativeExpression
                                  asExpression
                                   prefixUnaryExpression
                                    postfixUnaryExpression
                                     primaryExpression
                                      parenthesizedExpression
                                       (
                                       expression
                                        disjunction
                                         conjunction
                                          equality
                                           comparison
                                            infixOperation
                                             elvisExpression
                                              infixFunctionCall
                                               rangeExpression
                                                additiveExpression
                                                 multiplicativeExpression
                                                  asExpression
                                                   prefixUnaryExpression
                                                    postfixUnaryExpression
                                                     primaryExpression
                                                      ifExpression
                                                       if
                                                       (
                                                       expression
                                                        disjunction
                                                         conjunction
                                                          equality
                                                           comparison
                                                            infixOperation
                                                             elvisExpression
                                                              infixFunctionCall
                                                               rangeExpression
                                                                additiveExpression
                                                                 multiplicativeExpression
                                                                  asExpression
                                                                   prefixUnaryExpression
                                                                    postfixUnaryExpression
                                                                     primaryExpression
                                                                      literalConstant
                                                                       true
                                                       )
                                                       controlStructureBody
                                                        block
                                                         {
                                                         \n
                                                         statements
                                                          statement
                                                           expression
                                                            disjunction
                                                             conjunction
                                                              equality
                                                               comparison
                                                                infixOperation
                                                                 elvisExpression
                                                                  infixFunctionCall
                                                                   rangeExpression
                                                                    additiveExpression
                                                                     multiplicativeExpression
                                                                      asExpression
                                                                       prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                         primaryExpression
                                                                          parenthesizedExpression
                                                                           (
                                                                           expression
                                                                            disjunction
                                                                             conjunction
                                                                              equality
                                                                               comparison
                                                                                infixOperation
                                                                                 elvisExpression
                                                                                  infixFunctionCall
                                                                                   rangeExpression
                                                                                    additiveExpression
                                                                                     multiplicativeExpression
                                                                                      asExpression
                                                                                       prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                         primaryExpression
                                                                                          functionLiteral
                                                                                           lambdaLiteral
                                                                                            {
                                                                                            lambdaParameters
                                                                                             lambdaParameter
                                                                                              variableDeclaration
                                                                                               simpleIdentifier
                                                                                                x
                                                                                            ->
                                                                                            statements
                                                                                            }
                                                                           )
                                                          semis
                                                           \n
                                                         }
                                                       else
                                                       controlStructureBody
                                                        block
                                                         {
                                                         \n
                                                         statements
                                                          statement
                                                           expression
                                                            disjunction
                                                             conjunction
                                                              equality
                                                               comparison
                                                                infixOperation
                                                                 elvisExpression
                                                                  infixFunctionCall
                                                                   rangeExpression
                                                                    additiveExpression
                                                                     multiplicativeExpression
                                                                      asExpression
                                                                       prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                         primaryExpression
                                                                          parenthesizedExpression
                                                                           (
                                                                           expression
                                                                            disjunction
                                                                             conjunction
                                                                              equality
                                                                               comparison
                                                                                infixOperation
                                                                                 elvisExpression
                                                                                  infixFunctionCall
                                                                                   rangeExpression
                                                                                    additiveExpression
                                                                                     multiplicativeExpression
                                                                                      asExpression
                                                                                       prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                         primaryExpression
                                                                                          functionLiteral
                                                                                           lambdaLiteral
                                                                                            {
                                                                                            lambdaParameters
                                                                                             lambdaParameter
                                                                                              variableDeclaration
                                                                                               simpleIdentifier
                                                                                                x
                                                                                            ->
                                                                                            statements
                                                                                            }
                                                                           )
                                                          semis
                                                           \n
                                                         }
                                       )
                      )
  semis
   <EOF>
 <EOF>
