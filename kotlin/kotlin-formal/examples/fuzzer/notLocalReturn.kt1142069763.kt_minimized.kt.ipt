kotlinFile
 packageHeader
 importList
 topLevelObject
  declaration
   functionDeclaration
    modifiers
     modifier
      functionModifier
       inline
     modifier
      functionModifier
       tailrec
    fun
    simpleIdentifier
     doCall
    functionValueParameters
     (
     functionValueParameter
      parameter
       simpleIdentifier
        f
       :
       type_
        parenthesizedType
         (
         type_
          functionType
           functionTypeParameters
            (
            )
           ->
           type_
            typeReference
             userType
              simpleUserType
               simpleIdentifier
                Unit
         )
     )
    functionBody
     =
     expression
      disjunction
       conjunction
        equality
         comparison
          infixOperation
           elvisExpression
            infixFunctionCall
             rangeExpression
              additiveExpression
               multiplicativeExpression
                asExpression
                 prefixUnaryExpression
                  postfixUnaryExpression
                   primaryExpression
                    parenthesizedExpression
                     (
                     expression
                      disjunction
                       conjunction
                        equality
                         comparison
                          infixOperation
                           elvisExpression
                            infixFunctionCall
                             rangeExpression
                              additiveExpression
                               multiplicativeExpression
                                asExpression
                                 prefixUnaryExpression
                                  postfixUnaryExpression
                                   primaryExpression
                                    simpleIdentifier
                                     f
                     )
                   postfixUnarySuffix
                    postfixUnaryOperator
                     !
                     excl
                      !
                   postfixUnarySuffix
                    callSuffix
                     valueArguments
                      (
                      )
  semis
   \n
 topLevelObject
  declaration
   functionDeclaration
    fun
    simpleIdentifier
     test1
    functionValueParameters
     (
     functionValueParameter
      parameter
       simpleIdentifier
        nonLocal
       :
       type_
        typeReference
         userType
          simpleUserType
           simpleIdentifier
            String
     )
    :
    type_
     typeReference
      userType
       simpleUserType
        simpleIdentifier
         String
    functionBody
     block
      {
      \n
      statements
       statement
        declaration
         propertyDeclaration
          val
          variableDeclaration
           simpleIdentifier
            localResult
          =
          expression
           disjunction
            conjunction
             equality
              comparison
               infixOperation
                elvisExpression
                 infixFunctionCall
                  rangeExpression
                   additiveExpression
                    multiplicativeExpression
                     asExpression
                      prefixUnaryExpression
                       postfixUnaryExpression
                        primaryExpression
                         simpleIdentifier
                          doCall
                        postfixUnarySuffix
                         callSuffix
                          valueArguments
                           (
                           valueArgument
                            expression
                             disjunction
                              conjunction
                               equality
                                comparison
                                 infixOperation
                                  elvisExpression
                                   infixFunctionCall
                                    rangeExpression
                                     additiveExpression
                                      multiplicativeExpression
                                       asExpression
                                        prefixUnaryExpression
                                         postfixUnaryExpression
                                          primaryExpression
                                           functionLiteral
                                            lambdaLiteral
                                             {
                                             statements
                                             }
                           )
       \n
       statement
        expression
         disjunction
          conjunction
           equality
            comparison
             infixOperation
              elvisExpression
               infixFunctionCall
                rangeExpression
                 additiveExpression
                  multiplicativeExpression
                   asExpression
                    prefixUnaryExpression
                     postfixUnaryExpression
                      primaryExpression
                       jumpExpression
                        return
                        expression
                         disjunction
                          conjunction
                           equality
                            comparison
                             infixOperation
                              elvisExpression
                               infixFunctionCall
                                rangeExpression
                                 additiveExpression
                                  multiplicativeExpression
                                   asExpression
                                    prefixUnaryExpression
                                     postfixUnaryExpression
                                      primaryExpression
                                       parenthesizedExpression
                                        (
                                        expression
                                         disjunction
                                          conjunction
                                           equality
                                            comparison
                                             infixOperation
                                              elvisExpression
                                               infixFunctionCall
                                                rangeExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   asExpression
                                                    prefixUnaryExpression
                                                     postfixUnaryExpression
                                                      primaryExpression
                                                       stringLiteral
                                                        lineStringLiteral
                                                         "
                                                         lineStringContent
                                                          NON_LOCAL_FAILED 
                                                         lineStringContent
                                                          $localResult
                                                         "
                                        )
                                      postfixUnarySuffix
                                       postfixUnaryOperator
                                        !
                                        excl
                                         !
       semis
        \n
      }
  semis
   <EOF>
 <EOF>
