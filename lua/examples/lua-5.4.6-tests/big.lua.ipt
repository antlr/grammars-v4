start_
 chunk
  block
   stat
    if
    exp
     prefixexp
      _soft
    then
    block
     retstat
      return
      explist
       exp
        string
         'a'
    end
   stat
    functioncall
     print
     args
      string
       "testing large tables"
   stat
    local
    attnamelist
     debug
     attrib
    =
    explist
     exp
      prefixexp
       functioncall
        require
        args
         string
          "debug"
   stat
    local
    attnamelist
     lim
     attrib
    =
    explist
     exp
      exp
       exp
        number
         2
       ^
       exp
        number
         18
      +
      exp
       number
        1000
   stat
    local
    attnamelist
     prog
     attrib
    =
    explist
     exp
      tableconstructor
       {
       fieldlist
        field
         exp
          string
           "local y = {0"
       }
   stat
    for
    i
    =
    exp
     number
      1
    ,
    exp
     prefixexp
      lim
    do
    block
     stat
      varlist
       var
        prefixexp
         prog
        [
        exp
         exp
          #
          exp
           prefixexp
            prog
         +
         exp
          number
           1
        ]
      =
      explist
       exp
        prefixexp
         i
    end
   stat
    varlist
     var
      prefixexp
       prog
      [
      exp
       exp
        #
        exp
         prefixexp
          prog
       +
       exp
        number
         1
      ]
    =
    explist
     exp
      string
       "}\n"
   stat
    varlist
     var
      prefixexp
       prog
      [
      exp
       exp
        #
        exp
         prefixexp
          prog
       +
       exp
        number
         1
      ]
    =
    explist
     exp
      string
       "X = y\n"
   stat
    varlist
     var
      prefixexp
       prog
      [
      exp
       exp
        #
        exp
         prefixexp
          prog
       +
       exp
        number
         1
      ]
    =
    explist
     exp
      prefixexp
       functioncall
        (
        exp
         string
          "assert(X[%d] == %d)"
        )
        :
        format
        args
         (
         explist
          exp
           exp
            prefixexp
             lim
           -
           exp
            number
             1
          ,
          exp
           exp
            prefixexp
             lim
           -
           exp
            number
             2
         )
   stat
    varlist
     var
      prefixexp
       prog
      [
      exp
       exp
        #
        exp
         prefixexp
          prog
       +
       exp
        number
         1
      ]
    =
    explist
     exp
      string
       "return 0"
   stat
    varlist
     var
      prog
    =
    explist
     exp
      prefixexp
       functioncall
        table
        .
        concat
        args
         (
         explist
          exp
           prefixexp
            prog
          ,
          exp
           string
            ";"
         )
   stat
    local
    attnamelist
     env
     attrib
    =
    explist
     exp
      tableconstructor
       {
       fieldlist
        field
         string
         =
         exp
          prefixexp
           string
        fieldsep
         ,
        field
         assert
         =
         exp
          prefixexp
           assert
       }
   stat
    local
    attnamelist
     f
     attrib
    =
    explist
     exp
      prefixexp
       functioncall
        assert
        args
         (
         explist
          exp
           prefixexp
            functioncall
             load
             args
              (
              explist
               exp
                prefixexp
                 prog
               ,
               exp
                nil
               ,
               exp
                nil
               ,
               exp
                prefixexp
                 env
              )
         )
   stat
    functioncall
     f
     args
      (
      )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         exp
          prefixexp
           env
           .
           X
           [
           exp
            prefixexp
             lim
           ]
         ==
         exp
          exp
           prefixexp
            lim
          -
          exp
           number
            1
        and
        exp
         exp
          prefixexp
           env
           .
           X
           [
           exp
            exp
             prefixexp
              lim
            +
            exp
             number
              1
           ]
         ==
         exp
          prefixexp
           lim
      )
   stat
    for
    namelist
     k
    in
    explist
     exp
      prefixexp
       functioncall
        pairs
        args
         (
         explist
          exp
           prefixexp
            env
         )
    do
    block
     stat
      varlist
       var
        prefixexp
         env
        [
        exp
         prefixexp
          k
        ]
      =
      explist
       exp
        prefixexp
         undef
    end
   stat
    functioncall
     setmetatable
     args
      (
      explist
       exp
        prefixexp
         env
       ,
       exp
        tableconstructor
         {
         fieldlist
          field
           __index
           =
           exp
            functiondef
             function
             funcbody
              (
              parlist
               namelist
                t
                ,
                n
              )
              block
               stat
                functioncall
                 coroutine
                 .
                 yield
                 args
                  (
                  explist
                   exp
                    string
                     'g'
                  )
               stat
                ;
               retstat
                return
                explist
                 exp
                  prefixexp
                   _G
                   [
                   exp
                    prefixexp
                     n
                   ]
              end
          fieldsep
           ,
          field
           __newindex
           =
           exp
            functiondef
             function
             funcbody
              (
              parlist
               namelist
                t
                ,
                n
                ,
                v
              )
              block
               stat
                functioncall
                 coroutine
                 .
                 yield
                 args
                  (
                  explist
                   exp
                    string
                     's'
                  )
               stat
                ;
               stat
                varlist
                 var
                  prefixexp
                   _G
                  [
                  exp
                   prefixexp
                    n
                  ]
                =
                explist
                 exp
                  prefixexp
                   v
              end
          fieldsep
           ,
         }
      )
   stat
    varlist
     var
      X
    =
    explist
     exp
      nil
   stat
    local
    attnamelist
     co
     attrib
    =
    explist
     exp
      prefixexp
       functioncall
        coroutine
        .
        wrap
        args
         (
         explist
          exp
           prefixexp
            f
         )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         prefixexp
          functioncall
           co
           args
            (
            )
        ==
        exp
         string
          's'
      )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         prefixexp
          functioncall
           co
           args
            (
            )
        ==
        exp
         string
          'g'
      )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         prefixexp
          functioncall
           co
           args
            (
            )
        ==
        exp
         string
          'g'
      )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         prefixexp
          functioncall
           co
           args
            (
            )
        ==
        exp
         number
          0
      )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         exp
          prefixexp
           X
           [
           exp
            prefixexp
             lim
           ]
         ==
         exp
          exp
           prefixexp
            lim
          -
          exp
           number
            1
        and
        exp
         exp
          prefixexp
           X
           [
           exp
            exp
             prefixexp
              lim
            +
            exp
             number
              1
           ]
         ==
         exp
          prefixexp
           lim
      )
   stat
    varlist
     var
      prefixexp
       functioncall
        getmetatable
        args
         (
         explist
          exp
           prefixexp
            env
         )
      .
      __index
    =
    explist
     exp
      functiondef
       function
       funcbody
        (
        parlist
        )
        block
        end
   stat
    varlist
     var
      prefixexp
       functioncall
        getmetatable
        args
         (
         explist
          exp
           prefixexp
            env
         )
      .
      __newindex
    =
    explist
     exp
      functiondef
       function
       funcbody
        (
        parlist
        )
        block
        end
   stat
    local
    attnamelist
     e
     attrib
     ,
     m
     attrib
    =
    explist
     exp
      prefixexp
       functioncall
        pcall
        args
         (
         explist
          exp
           prefixexp
            f
         )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         not
         exp
          prefixexp
           e
        and
        exp
         prefixexp
          functioncall
           m
           :
           find
           args
            (
            explist
             exp
              string
               "global 'X'"
            )
      )
   stat
    varlist
     var
      prefixexp
       functioncall
        getmetatable
        args
         (
         explist
          exp
           prefixexp
            env
         )
      .
      __newindex
    =
    explist
     exp
      functiondef
       function
       funcbody
        (
        parlist
        )
        block
         stat
          functioncall
           error
           args
            (
            explist
             exp
              string
               "hi"
            )
        end
   stat
    local
    attnamelist
     e
     attrib
     ,
     m
     attrib
    =
    explist
     exp
      prefixexp
       functioncall
        xpcall
        args
         (
         explist
          exp
           prefixexp
            f
          ,
          exp
           prefixexp
            debug
            .
            traceback
         )
   stat
    functioncall
     assert
     args
      (
      explist
       exp
        exp
         not
         exp
          prefixexp
           e
        and
        exp
         prefixexp
          functioncall
           m
           :
           find
           args
            (
            explist
             exp
              string
               "'newindex'"
            )
      )
   stat
    varlist
     var
      f
     ,
     var
      X
    =
    explist
     exp
      nil
   stat
    functioncall
     coroutine
     .
     yield
     args
      string
       'b'
   stat
    if
    exp
     exp
      exp
       number
        2
      ^
      exp
       number
        32
     ==
     exp
      number
       0
    then
    block
     stat
      functioncall
       print
       args
        string
         "testing string length overflow"
     stat
      local
      attnamelist
       repstrings
       attrib
      =
      explist
       exp
        number
         192
     stat
      local
      attnamelist
       ssize
       attrib
      =
      explist
       exp
        exp
         prefixexp
          functioncall
           math
           .
           ceil
           args
            (
            explist
             exp
              exp
               exp
                number
                 2.0
               ^
               exp
                number
                 32
              /
              exp
               prefixexp
                repstrings
            )
        +
        exp
         number
          1
     stat
      functioncall
       assert
       args
        (
        explist
         exp
          exp
           exp
            prefixexp
             repstrings
           *
           exp
            prefixexp
             ssize
          >
          exp
           exp
            number
             2.0
           ^
           exp
            number
             32
        )
     stat
      local
      attnamelist
       longs
       attrib
      =
      explist
       exp
        prefixexp
         functioncall
          string
          .
          rep
          args
           (
           explist
            exp
             string
              "\0"
            ,
            exp
             prefixexp
              ssize
           )
     stat
      local
      attnamelist
       rep
       attrib
      =
      explist
       exp
        prefixexp
         functioncall
          assert
          args
           (
           explist
            exp
             prefixexp
              functioncall
               load
               args
                (
                explist
                 exp
                  exp
                   string
                    "local a = ...; return "
                  ..
                  exp
                   prefixexp
                    functioncall
                     string
                     .
                     rep
                     args
                      (
                      explist
                       exp
                        string
                         "a"
                       ,
                       exp
                        prefixexp
                         repstrings
                       ,
                       exp
                        string
                         ".."
                      )
                )
           )
     stat
      local
      attnamelist
       a
       attrib
       ,
       b
       attrib
      =
      explist
       exp
        prefixexp
         functioncall
          pcall
          args
           (
           explist
            exp
             prefixexp
              rep
            ,
            exp
             prefixexp
              longs
           )
     stat
      functioncall
       assert
       args
        (
        explist
         exp
          exp
           not
           exp
            prefixexp
             a
          and
          exp
           prefixexp
            functioncall
             string
             .
             find
             args
              (
              explist
               exp
                prefixexp
                 b
               ,
               exp
                string
                 "overflow"
              )
        )
    end
   stat
    functioncall
     print
     args
      string
       'OK'
   retstat
    return
    explist
     exp
      string
       'a'
 <EOF>
