start_
 chunk
  block
   stat
    local
    function
    teststring
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "creating a string too long"
         )
      stat
       do
       block
        stat
         local
         attnamelist
          a
          attrib
         =
         explist
          exp
           string
            "x"
        stat
         local
         attnamelist
          st
          attrib
          ,
          msg
          attrib
         =
         explist
          exp
           prefixexp
            functioncall
             pcall
             args
              (
              explist
               exp
                functiondef
                 function
                 funcbody
                  (
                  parlist
                  )
                  block
                   stat
                    while
                    exp
                     true
                    do
                    block
                     stat
                      varlist
                       var
                        a
                      =
                      explist
                       exp
                        exp
                         prefixexp
                          a
                        ..
                        exp
                         exp
                          prefixexp
                           a
                         ..
                         exp
                          exp
                           prefixexp
                            a
                          ..
                          exp
                           exp
                            prefixexp
                             a
                           ..
                           exp
                            exp
                             prefixexp
                              a
                            ..
                            exp
                             exp
                              prefixexp
                               a
                             ..
                             exp
                              exp
                               prefixexp
                                a
                              ..
                              exp
                               exp
                                prefixexp
                                 a
                               ..
                               exp
                                exp
                                 prefixexp
                                  a
                                ..
                                exp
                                 exp
                                  prefixexp
                                   a
                                 ..
                                 exp
                                  exp
                                   prefixexp
                                    a
                                  ..
                                  exp
                                   exp
                                    prefixexp
                                     a
                                   ..
                                   exp
                                    exp
                                     prefixexp
                                      a
                                    ..
                                    exp
                                     exp
                                      prefixexp
                                       a
                                     ..
                                     exp
                                      exp
                                       prefixexp
                                        a
                                      ..
                                      exp
                                       exp
                                        prefixexp
                                         a
                                       ..
                                       exp
                                        exp
                                         prefixexp
                                          a
                                        ..
                                        exp
                                         exp
                                          prefixexp
                                           a
                                         ..
                                         exp
                                          exp
                                           prefixexp
                                            a
                                          ..
                                          exp
                                           exp
                                            prefixexp
                                             a
                                           ..
                                           exp
                                            exp
                                             prefixexp
                                              a
                                            ..
                                            exp
                                             exp
                                              prefixexp
                                               a
                                             ..
                                             exp
                                              exp
                                               prefixexp
                                                a
                                              ..
                                              exp
                                               exp
                                                prefixexp
                                                 a
                                               ..
                                               exp
                                                exp
                                                 prefixexp
                                                  a
                                                ..
                                                exp
                                                 exp
                                                  prefixexp
                                                   a
                                                 ..
                                                 exp
                                                  exp
                                                   prefixexp
                                                    a
                                                  ..
                                                  exp
                                                   exp
                                                    prefixexp
                                                     a
                                                   ..
                                                   exp
                                                    exp
                                                     prefixexp
                                                      a
                                                    ..
                                                    exp
                                                     exp
                                                      prefixexp
                                                       a
                                                     ..
                                                     exp
                                                      exp
                                                       prefixexp
                                                        a
                                                      ..
                                                      exp
                                                       exp
                                                        prefixexp
                                                         a
                                                       ..
                                                       exp
                                                        exp
                                                         prefixexp
                                                          a
                                                        ..
                                                        exp
                                                         exp
                                                          prefixexp
                                                           a
                                                         ..
                                                         exp
                                                          exp
                                                           prefixexp
                                                            a
                                                          ..
                                                          exp
                                                           exp
                                                            prefixexp
                                                             a
                                                           ..
                                                           exp
                                                            exp
                                                             prefixexp
                                                              a
                                                            ..
                                                            exp
                                                             exp
                                                              prefixexp
                                                               a
                                                             ..
                                                             exp
                                                              exp
                                                               prefixexp
                                                                a
                                                              ..
                                                              exp
                                                               exp
                                                                prefixexp
                                                                 a
                                                               ..
                                                               exp
                                                                exp
                                                                 prefixexp
                                                                  a
                                                                ..
                                                                exp
                                                                 exp
                                                                  prefixexp
                                                                   a
                                                                 ..
                                                                 exp
                                                                  exp
                                                                   prefixexp
                                                                    a
                                                                  ..
                                                                  exp
                                                                   exp
                                                                    prefixexp
                                                                     a
                                                                   ..
                                                                   exp
                                                                    exp
                                                                     prefixexp
                                                                      a
                                                                    ..
                                                                    exp
                                                                     exp
                                                                      prefixexp
                                                                       a
                                                                     ..
                                                                     exp
                                                                      exp
                                                                       prefixexp
                                                                        a
                                                                      ..
                                                                      exp
                                                                       exp
                                                                        prefixexp
                                                                         a
                                                                       ..
                                                                       exp
                                                                        exp
                                                                         prefixexp
                                                                          a
                                                                        ..
                                                                        exp
                                                                         exp
                                                                          prefixexp
                                                                           a
                                                                         ..
                                                                         exp
                                                                          exp
                                                                           prefixexp
                                                                            a
                                                                          ..
                                                                          exp
                                                                           exp
                                                                            prefixexp
                                                                             a
                                                                           ..
                                                                           exp
                                                                            exp
                                                                             prefixexp
                                                                              a
                                                                            ..
                                                                            exp
                                                                             exp
                                                                              prefixexp
                                                                               a
                                                                             ..
                                                                             exp
                                                                              exp
                                                                               prefixexp
                                                                                a
                                                                              ..
                                                                              exp
                                                                               exp
                                                                                prefixexp
                                                                                 a
                                                                               ..
                                                                               exp
                                                                                exp
                                                                                 prefixexp
                                                                                  a
                                                                                ..
                                                                                exp
                                                                                 exp
                                                                                  prefixexp
                                                                                   a
                                                                                 ..
                                                                                 exp
                                                                                  exp
                                                                                   prefixexp
                                                                                    a
                                                                                  ..
                                                                                  exp
                                                                                   exp
                                                                                    prefixexp
                                                                                     a
                                                                                   ..
                                                                                   exp
                                                                                    exp
                                                                                     prefixexp
                                                                                      a
                                                                                    ..
                                                                                    exp
                                                                                     exp
                                                                                      prefixexp
                                                                                       a
                                                                                     ..
                                                                                     exp
                                                                                      exp
                                                                                       prefixexp
                                                                                        a
                                                                                      ..
                                                                                      exp
                                                                                       exp
                                                                                        prefixexp
                                                                                         a
                                                                                       ..
                                                                                       exp
                                                                                        exp
                                                                                         prefixexp
                                                                                          a
                                                                                        ..
                                                                                        exp
                                                                                         exp
                                                                                          prefixexp
                                                                                           a
                                                                                         ..
                                                                                         exp
                                                                                          exp
                                                                                           prefixexp
                                                                                            a
                                                                                          ..
                                                                                          exp
                                                                                           exp
                                                                                            prefixexp
                                                                                             a
                                                                                           ..
                                                                                           exp
                                                                                            exp
                                                                                             prefixexp
                                                                                              a
                                                                                            ..
                                                                                            exp
                                                                                             exp
                                                                                              prefixexp
                                                                                               a
                                                                                             ..
                                                                                             exp
                                                                                              exp
                                                                                               prefixexp
                                                                                                a
                                                                                              ..
                                                                                              exp
                                                                                               exp
                                                                                                prefixexp
                                                                                                 a
                                                                                               ..
                                                                                               exp
                                                                                                exp
                                                                                                 prefixexp
                                                                                                  a
                                                                                                ..
                                                                                                exp
                                                                                                 exp
                                                                                                  prefixexp
                                                                                                   a
                                                                                                 ..
                                                                                                 exp
                                                                                                  exp
                                                                                                   prefixexp
                                                                                                    a
                                                                                                  ..
                                                                                                  exp
                                                                                                   exp
                                                                                                    prefixexp
                                                                                                     a
                                                                                                   ..
                                                                                                   exp
                                                                                                    exp
                                                                                                     prefixexp
                                                                                                      a
                                                                                                    ..
                                                                                                    exp
                                                                                                     exp
                                                                                                      prefixexp
                                                                                                       a
                                                                                                     ..
                                                                                                     exp
                                                                                                      exp
                                                                                                       prefixexp
                                                                                                        a
                                                                                                      ..
                                                                                                      exp
                                                                                                       exp
                                                                                                        prefixexp
                                                                                                         a
                                                                                                       ..
                                                                                                       exp
                                                                                                        exp
                                                                                                         prefixexp
                                                                                                          a
                                                                                                        ..
                                                                                                        exp
                                                                                                         exp
                                                                                                          prefixexp
                                                                                                           a
                                                                                                         ..
                                                                                                         exp
                                                                                                          exp
                                                                                                           prefixexp
                                                                                                            a
                                                                                                          ..
                                                                                                          exp
                                                                                                           exp
                                                                                                            prefixexp
                                                                                                             a
                                                                                                           ..
                                                                                                           exp
                                                                                                            exp
                                                                                                             prefixexp
                                                                                                              a
                                                                                                            ..
                                                                                                            exp
                                                                                                             exp
                                                                                                              prefixexp
                                                                                                               a
                                                                                                             ..
                                                                                                             exp
                                                                                                              exp
                                                                                                               prefixexp
                                                                                                                a
                                                                                                              ..
                                                                                                              exp
                                                                                                               exp
                                                                                                                prefixexp
                                                                                                                 a
                                                                                                               ..
                                                                                                               exp
                                                                                                                exp
                                                                                                                 prefixexp
                                                                                                                  a
                                                                                                                ..
                                                                                                                exp
                                                                                                                 exp
                                                                                                                  prefixexp
                                                                                                                   a
                                                                                                                 ..
                                                                                                                 exp
                                                                                                                  exp
                                                                                                                   prefixexp
                                                                                                                    a
                                                                                                                  ..
                                                                                                                  exp
                                                                                                                   exp
                                                                                                                    prefixexp
                                                                                                                     a
                                                                                                                   ..
                                                                                                                   exp
                                                                                                                    exp
                                                                                                                     prefixexp
                                                                                                                      a
                                                                                                                    ..
                                                                                                                    exp
                                                                                                                     exp
                                                                                                                      prefixexp
                                                                                                                       a
                                                                                                                     ..
                                                                                                                     exp
                                                                                                                      exp
                                                                                                                       prefixexp
                                                                                                                        a
                                                                                                                      ..
                                                                                                                      exp
                                                                                                                       exp
                                                                                                                        prefixexp
                                                                                                                         a
                                                                                                                       ..
                                                                                                                       exp
                                                                                                                        exp
                                                                                                                         prefixexp
                                                                                                                          a
                                                                                                                        ..
                                                                                                                        exp
                                                                                                                         exp
                                                                                                                          prefixexp
                                                                                                                           a
                                                                                                                         ..
                                                                                                                         exp
                                                                                                                          exp
                                                                                                                           prefixexp
                                                                                                                            a
                                                                                                                          ..
                                                                                                                          exp
                                                                                                                           prefixexp
                                                                                                                            a
                     stat
                      functioncall
                       print
                       args
                        (
                        explist
                         exp
                          prefixexp
                           functioncall
                            string
                            .
                            format
                            args
                             (
                             explist
                              exp
                               string
                                "string with %d bytes"
                              ,
                              exp
                               #
                               exp
                                prefixexp
                                 a
                             )
                        )
                    end
                  end
              )
        stat
         functioncall
          assert
          args
           (
           explist
            exp
             exp
              not
              exp
               prefixexp
                st
             and
             exp
              prefixexp
               (
               exp
                exp
                 prefixexp
                  functioncall
                   string
                   .
                   find
                   args
                    (
                    explist
                     exp
                      prefixexp
                       msg
                     ,
                     exp
                      string
                       "string length overflow"
                    )
                or
                exp
                 prefixexp
                  functioncall
                   string
                   .
                   find
                   args
                    (
                    explist
                     exp
                      prefixexp
                       msg
                     ,
                     exp
                      string
                       "not enough memory"
                    )
               )
           )
        stat
         functioncall
          print
          args
           (
           explist
            exp
             exp
              string
               "string length overflow with "
             ..
             exp
              exp
               #
               exp
                prefixexp
                 a
              *
              exp
               number
                100
           )
       end
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            '+'
         )
     end
   stat
    local
    function
    loadrep
    funcbody
     (
     parlist
      namelist
       x
       ,
       what
     )
     block
      stat
       local
       attnamelist
        p
        attrib
       =
       explist
        exp
         exp
          number
           1
         <<
         exp
          number
           20
      stat
       local
       attnamelist
        s
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           string
           .
           rep
           args
            (
            explist
             exp
              prefixexp
               x
             ,
             exp
              prefixexp
               p
            )
      stat
       local
       attnamelist
        count
        attrib
       =
       explist
        exp
         number
          0
      stat
       local
       function
       f
       funcbody
        (
        parlist
        )
        block
         stat
          varlist
           var
            count
          =
          explist
           exp
            exp
             prefixexp
              count
            +
            exp
             prefixexp
              p
         stat
          if
          exp
           exp
            exp
             prefixexp
              count
            %
            exp
             prefixexp
              (
              exp
               exp
                number
                 0x80
               *
               exp
                prefixexp
                 p
              )
           ==
           exp
            number
             0
          then
          block
           stat
            functioncall
             io
             .
             stderr
             :
             write
             args
              (
              explist
               exp
                string
                 "("
               ,
               exp
                exp
                 prefixexp
                  count
                //
                exp
                 exp
                  number
                   2
                 ^
                 exp
                  number
                   20
               ,
               exp
                string
                 " M)"
              )
          end
         retstat
          return
          explist
           exp
            prefixexp
             s
        end
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           load
           args
            (
            explist
             exp
              prefixexp
               f
             ,
             exp
              string
               "=big"
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "\nmemory: "
          ,
          exp
           exp
            prefixexp
             functioncall
              collectgarbage
              args
               string
                'count'
           *
           exp
            number
             1024
         )
      stat
       varlist
        var
         msg
       =
       explist
        exp
         prefixexp
          functioncall
           string
           .
           match
           args
            (
            explist
             exp
              prefixexp
               msg
             ,
             exp
              string
               "^[^\n]+"
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           prefixexp
            functioncall
             string
             .
             format
             args
              (
              explist
               exp
                string
                 "total: 0x%x %s ('%s')"
               ,
               exp
                prefixexp
                 count
               ,
               exp
                prefixexp
                 what
               ,
               exp
                prefixexp
                 msg
              )
         )
      retstat
       return
       explist
        exp
         prefixexp
          st
        ,
        exp
         prefixexp
          msg
     end
   stat
    function
    funcname
     controlstruct
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "control structure too long"
         )
      stat
       local
       attnamelist
        lim
        attrib
       =
       explist
        exp
         exp
          prefixexp
           (
           exp
            exp
             prefixexp
              (
              exp
               exp
                number
                 1
               <<
               exp
                number
                 24
              )
            -
            exp
             number
              2
           )
         //
         exp
          number
           3
      stat
       local
       attnamelist
        s
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           string
           .
           rep
           args
            (
            explist
             exp
              string
               "a = a + 1\n"
             ,
             exp
              prefixexp
               lim
            )
      stat
       varlist
        var
         s
       =
       explist
        exp
         exp
          string
           "while true do "
         ..
         exp
          exp
           prefixexp
            s
          ..
          exp
           string
            "end"
      stat
       functioncall
        assert
        args
         (
         explist
          exp
           prefixexp
            functioncall
             load
             args
              (
              explist
               exp
                prefixexp
                 s
              )
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           exp
            string
             "ok with "
           ..
           exp
            exp
             prefixexp
              lim
            ..
            exp
             string
              " lines"
         )
      stat
       varlist
        var
         lim
       =
       explist
        exp
         exp
          prefixexp
           lim
         +
         exp
          number
           3
      stat
       varlist
        var
         s
       =
       explist
        exp
         prefixexp
          functioncall
           string
           .
           rep
           args
            (
            explist
             exp
              string
               "a = a + 1\n"
             ,
             exp
              prefixexp
               lim
            )
      stat
       varlist
        var
         s
       =
       explist
        exp
         exp
          string
           "while true do "
         ..
         exp
          exp
           prefixexp
            s
          ..
          exp
           string
            "end"
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           load
           args
            (
            explist
             exp
              prefixexp
               s
            )
      stat
       functioncall
        assert
        args
         (
         explist
          exp
           exp
            not
            exp
             prefixexp
              st
           and
           exp
            prefixexp
             functioncall
              string
              .
              find
              args
               (
               explist
                exp
                 prefixexp
                  msg
                ,
                exp
                 string
                  "too long"
               )
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           prefixexp
            msg
         )
     end
   stat
    function
    funcname
     manylines
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "loading chunk with too many lines"
         )
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           loadrep
           args
            (
            explist
             exp
              string
               "\n"
             ,
             exp
              string
               "lines"
            )
      stat
       functioncall
        assert
        args
         (
         explist
          exp
           exp
            not
            exp
             prefixexp
              st
           and
           exp
            prefixexp
             functioncall
              string
              .
              find
              args
               (
               explist
                exp
                 prefixexp
                  msg
                ,
                exp
                 string
                  "too many lines"
               )
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            '+'
         )
     end
   stat
    function
    funcname
     hugeid
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "loading chunk with huge identifier"
         )
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           loadrep
           args
            (
            explist
             exp
              string
               "a"
             ,
             exp
              string
               "chars"
            )
      stat
       functioncall
        assert
        args
         (
         explist
          exp
           exp
            not
            exp
             prefixexp
              st
           and
           exp
            prefixexp
             (
             exp
              exp
               prefixexp
                functioncall
                 string
                 .
                 find
                 args
                  (
                  explist
                   exp
                    prefixexp
                     msg
                   ,
                   exp
                    string
                     "lexical element too long"
                  )
              or
              exp
               prefixexp
                functioncall
                 string
                 .
                 find
                 args
                  (
                  explist
                   exp
                    prefixexp
                     msg
                   ,
                   exp
                    string
                     "not enough memory"
                  )
             )
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            '+'
         )
     end
   stat
    function
    funcname
     toomanyinst
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "loading chunk with too many instructions"
         )
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           loadrep
           args
            (
            explist
             exp
              string
               "a = 10; "
             ,
             exp
              string
               "instructions"
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            '+'
         )
     end
   stat
    local
    function
    loadrepfunc
    funcbody
     (
     parlist
      namelist
       prefix
       ,
       f
     )
     block
      stat
       local
       attnamelist
        count
        attrib
       =
       explist
        exp
         -
         exp
          number
           1
      stat
       local
       function
       aux
       funcbody
        (
        parlist
        )
        block
         stat
          varlist
           var
            count
          =
          explist
           exp
            exp
             prefixexp
              count
            +
            exp
             number
              1
         stat
          if
          exp
           exp
            prefixexp
             count
           ==
           exp
            number
             0
          then
          block
           retstat
            return
            explist
             exp
              prefixexp
               prefix
          else
          block
           stat
            if
            exp
             exp
              exp
               prefixexp
                count
              %
              exp
               prefixexp
                (
                exp
                 number
                  0x100000
                )
             ==
             exp
              number
               0
            then
            block
             stat
              functioncall
               io
               .
               stderr
               :
               write
               args
                (
                explist
                 exp
                  string
                   "("
                 ,
                 exp
                  exp
                   prefixexp
                    count
                  //
                  exp
                   exp
                    number
                     2
                   ^
                   exp
                    number
                     20
                 ,
                 exp
                  string
                   " M)"
                )
            end
           retstat
            return
            explist
             exp
              prefixexp
               functioncall
                f
                args
                 (
                 explist
                  exp
                   prefixexp
                    count
                 )
          end
        end
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           load
           args
            (
            explist
             exp
              prefixexp
               aux
             ,
             exp
              string
               "k"
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "\nmemory: "
          ,
          exp
           exp
            prefixexp
             functioncall
              collectgarbage
              args
               string
                'count'
           *
           exp
            number
             1024
         )
      stat
       varlist
        var
         msg
       =
       explist
        exp
         prefixexp
          functioncall
           string
           .
           match
           args
            (
            explist
             exp
              prefixexp
               msg
             ,
             exp
              string
               "^[^\n]+"
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "expected error: "
          ,
          exp
           prefixexp
            msg
         )
     end
   stat
    function
    funcname
     toomanyconst
    funcbody
     (
     parlist
     )
     block
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "loading function with too many constants"
         )
      stat
       functioncall
        loadrepfunc
        args
         (
         explist
          exp
           string
            "function foo () return {0,"
          ,
          exp
           functiondef
            function
            funcbody
             (
             parlist
              namelist
               n
             )
             block
              retstat
               return
               explist
                exp
                 prefixexp
                  functioncall
                   string
                   .
                   char
                   args
                    (
                    explist
                     exp
                      number
                       34
                     ,
                     exp
                      exp
                       prefixexp
                        (
                        exp
                         exp
                          prefixexp
                           (
                           exp
                            exp
                             prefixexp
                              n
                            //
                            exp
                             exp
                              number
                               128
                             ^
                             exp
                              number
                               0
                           )
                         &
                         exp
                          number
                           127
                        )
                      +
                      exp
                       number
                        128
                     ,
                     exp
                      exp
                       prefixexp
                        (
                        exp
                         exp
                          prefixexp
                           (
                           exp
                            exp
                             prefixexp
                              n
                            //
                            exp
                             exp
                              number
                               128
                             ^
                             exp
                              number
                               1
                           )
                         &
                         exp
                          number
                           127
                        )
                      +
                      exp
                       number
                        128
                     ,
                     exp
                      exp
                       prefixexp
                        (
                        exp
                         exp
                          prefixexp
                           (
                           exp
                            exp
                             prefixexp
                              n
                            //
                            exp
                             exp
                              number
                               128
                             ^
                             exp
                              number
                               2
                           )
                         &
                         exp
                          number
                           127
                        )
                      +
                      exp
                       number
                        128
                     ,
                     exp
                      exp
                       prefixexp
                        (
                        exp
                         exp
                          prefixexp
                           (
                           exp
                            exp
                             prefixexp
                              n
                            //
                            exp
                             exp
                              number
                               128
                             ^
                             exp
                              number
                               3
                           )
                         &
                         exp
                          number
                           127
                        )
                      +
                      exp
                       number
                        128
                     ,
                     exp
                      exp
                       prefixexp
                        (
                        exp
                         exp
                          prefixexp
                           (
                           exp
                            exp
                             prefixexp
                              n
                            //
                            exp
                             exp
                              number
                               128
                             ^
                             exp
                              number
                               4
                           )
                         &
                         exp
                          number
                           127
                        )
                      +
                      exp
                       number
                        128
                     ,
                     exp
                      number
                       34
                     ,
                     exp
                      number
                       44
                    )
             end
         )
     end
   stat
    function
    funcname
     toomanystr
    funcbody
     (
     parlist
     )
     block
      stat
       local
       attnamelist
        a
        attrib
       =
       explist
        exp
         tableconstructor
          {
          }
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           pcall
           args
            (
            explist
             exp
              functiondef
               function
               funcbody
                (
                parlist
                )
                block
                 stat
                  for
                  i
                  =
                  exp
                   number
                    1
                  ,
                  exp
                   prefixexp
                    math
                    .
                    huge
                  do
                  block
                   stat
                    if
                    exp
                     exp
                      exp
                       prefixexp
                        i
                      %
                      exp
                       prefixexp
                        (
                        exp
                         number
                          0x100000
                        )
                     ==
                     exp
                      number
                       0
                    then
                    block
                     stat
                      functioncall
                       io
                       .
                       stderr
                       :
                       write
                       args
                        (
                        explist
                         exp
                          string
                           "("
                         ,
                         exp
                          exp
                           prefixexp
                            i
                          //
                          exp
                           exp
                            number
                             2
                           ^
                           exp
                            number
                             20
                         ,
                         exp
                          string
                           " M)"
                        )
                    end
                   stat
                    varlist
                     var
                      prefixexp
                       a
                      [
                      exp
                       prefixexp
                        i
                      ]
                    =
                    explist
                     exp
                      prefixexp
                       functioncall
                        string
                        .
                        pack
                        args
                         (
                         explist
                          exp
                           string
                            "I"
                          ,
                          exp
                           prefixexp
                            i
                         )
                  end
                end
            )
      stat
       local
       attnamelist
        size
        attrib
       =
       explist
        exp
         #
         exp
          prefixexp
           a
      stat
       varlist
        var
         a
       =
       explist
        exp
         prefixexp
          functioncall
           collectgarbage
           args
            string
             'count'
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "\nmemory:"
          ,
          exp
           exp
            prefixexp
             a
           *
           exp
            number
             1024
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "expected error:"
          ,
          exp
           prefixexp
            msg
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "size:"
          ,
          exp
           prefixexp
            size
         )
     end
   stat
    function
    funcname
     toomanyidx
    funcbody
     (
     parlist
     )
     block
      stat
       local
       attnamelist
        a
        attrib
       =
       explist
        exp
         tableconstructor
          {
          }
      stat
       local
       attnamelist
        st
        attrib
        ,
        msg
        attrib
       =
       explist
        exp
         prefixexp
          functioncall
           pcall
           args
            (
            explist
             exp
              functiondef
               function
               funcbody
                (
                parlist
                )
                block
                 stat
                  for
                  i
                  =
                  exp
                   number
                    1
                  ,
                  exp
                   prefixexp
                    math
                    .
                    huge
                  do
                  block
                   stat
                    if
                    exp
                     exp
                      exp
                       prefixexp
                        i
                      %
                      exp
                       prefixexp
                        (
                        exp
                         number
                          0x100000
                        )
                     ==
                     exp
                      number
                       0
                    then
                    block
                     stat
                      functioncall
                       io
                       .
                       stderr
                       :
                       write
                       args
                        (
                        explist
                         exp
                          string
                           "("
                         ,
                         exp
                          exp
                           prefixexp
                            i
                          //
                          exp
                           exp
                            number
                             2
                           ^
                           exp
                            number
                             20
                         ,
                         exp
                          string
                           " M)"
                        )
                    end
                   stat
                    varlist
                     var
                      prefixexp
                       a
                      [
                      exp
                       prefixexp
                        i
                      ]
                    =
                    explist
                     exp
                      prefixexp
                       i
                  end
                end
            )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "\nmemory: "
          ,
          exp
           exp
            prefixexp
             functioncall
              collectgarbage
              args
               string
                'count'
           *
           exp
            number
             1024
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "expected error: "
          ,
          exp
           prefixexp
            msg
         )
      stat
       functioncall
        print
        args
         (
         explist
          exp
           string
            "size:"
          ,
          exp
           #
           exp
            prefixexp
             a
         )
     end
   stat
    functioncall
     toomanyidx
     args
      (
      )
   stat
    functioncall
     print
     args
      string
       "OK"
 <EOF>
