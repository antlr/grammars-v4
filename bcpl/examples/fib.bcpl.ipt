program
 directive
  GET
  "libhdr"
 declaration_part
  declaration
   simultaneous_declaration
    LET
    definition
     function_definition
      identifier
       start
      (
      )
      =
      expression
       e0
        bexp
         VALOF
         command
          unlabelled_command
           repeatable_command
            compound_command
             {
             command_list
              command
               unlabelled_command
                repetitive_command
                 for_command
                  FOR
                  identifier
                   i
                  =
                  expression
                   e0
                    bexp
                     const
                      number
                       0
                  TO
                  expression
                   e0
                    bexp
                     const
                      number
                       15
                  DO
                  command
                   unlabelled_command
                    repeatable_command
                     routine_command
                      bexp
                       name
                        identifier
                         writef
                      (
                      expression_list
                       expression
                        e0
                         bexp
                          string
                           "%n, "
                       ,
                       expression
                        e0
                         bexp
                          name
                           identifier
                            fibonacci
                         nonl
                         se9
                          (
                          e0
                           bexp
                            name
                             identifier
                              i
                          )
                      )
              semi
               nl
              command
               unlabelled_command
                repeatable_command
                 routine_command
                  bexp
                   name
                    identifier
                     writef
                  (
                  expression_list
                   expression
                    e0
                     bexp
                      string
                       "...*n"
                  )
              semi
               nl
              command
               unlabelled_command
                repeatable_command
                 resultis_command
                  RESULTIS
                  expression
                   e0
                    bexp
                     const
                      number
                       0
             }
    AND
    definition
     function_definition
      identifier
       fibonacci
      (
      name_list
       name
        identifier
         n
      )
      =
      expression
       e0
        bexp
         name
          identifier
           n
        nonl
        se5
         <
         e4
          bexp
           const
            number
             2
        nonl
        se1
         fcond
          ->
         e0
          bexp
           const
            number
             1
         ,
         e0
          bexp
           name
            identifier
             fibonacci
          nonl
          se9
           (
           e0
            bexp
             name
              identifier
               n
            nonl
            se5
             -
             e5
              bexp
               const
                number
                 1
           )
          nonl
          se5
           +
           e5
            bexp
             name
              identifier
               fibonacci
            nonl
            se9
             (
             e0
              bexp
               name
                identifier
                 n
              nonl
              se5
               -
               e5
                bexp
                 const
                  number
                   2
             )
 <EOF>
