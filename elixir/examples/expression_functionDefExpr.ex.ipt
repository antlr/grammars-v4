parse
 block
  expression
   function_def
    def
    variable
     sum
    (
    expressions_
     expression
      variables
       variable
        a
       ,
       variable
        b
    )
    do_block
     do
     \n
     block
      expression
       expression
        variables
         variable
          a
       addOp
        +
       expression
        variables
         variable
          b
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   function_def
    def
    variable
     zero?
    (
    expressions_
     expression
      0
    )
    do_block
     do
     \n
     block
      expression
       bool_
        true
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   function_def
    def
    variable
     zero?
    (
    expressions_
     expression
      variables
       variable
        x
    )
    when
    expression
     expression
      variables
       variable
        is_integer
     (
     expressions_
      expression
       variables
        variable
         x
     )
    do_block
     do
     \n
     block
      expression
       bool_
        false
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   function_def
    def
    variable
     zero?
    (
    expressions_
     expression
      0
    )
    ,
    do
    :
    expression
     bool_
      true
  eoe
   \n
   \n
  expression
   function_def
    def
    variable
     zero?
    (
    expressions_
     expression
      variables
       variable
        x
    )
    when
    expression
     expression
      variables
       variable
        is_integer
     (
     expressions_
      expression
       variables
        variable
         x
     )
    ,
    do
    :
    expression
     bool_
      false
 <EOF>
