parse
 block
  expression
   expression
    variables
     variable
      x
   =
   expression
    1
  eoe
   \n
   \n
  expression
   expression
    1
   =
   expression
    variables
     variable
      x
  eoe
   \n
   \n
  expression
   expression
    unaryOp
     ^
    expression
     variables
      variable
       x
   =
   expression
    42
  eoe
   \n
   \n
  expression
   expression
    tuple
     {
     expressions_
      expression
       variables
        variable
         _
        ,
        variable
         integer
     }
   =
   expression
    tuple
     {
     expressions_
      expression
       :not_important
      ,
      expression
       1
     }
  eoe
   \n
   \n
  expression
   expression
    :atom
   =
   expression
    :atom
  eoe
   \n
   \n
  expression
   expression
    expression
     variables
      variable
       length
    (
    expressions_
     expression
      list
       [
       expressions_
        expression
         1
        ,
        expression
         list
          [
          expressions_
           expression
            2
          ]
        ,
        expression
         3
       ]
    )
   =
   expression
    3
  eoe
   \n
   \n
  expression
   expression
    list
     [
     short_map_entries
      short_map_entry
       variable
        a
       :
       expression
        variables
         variable
          a
     ]
   =
   expression
    list
     [
     short_map_entries
      short_map_entry
       variable
        a
       :
       expression
        1
     ]
 <EOF>
