parse
 block
  expression
   for
    for
    expressions_
     expression
      expression
       variables
        variable
         n
      <-
      expression
       list
        [
        expressions_
         expression
          1
         ,
         expression
          2
         ,
         expression
          3
         ,
         expression
          4
        ]
    ,
    do
    :
    expression
     expression
      variables
       variable
        n
     mulOp
      *
     expression
      2
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       expression
        tuple
         {
         expressions_
          expression
           variables
            variable
             type
            ,
            variable
             name
         }
       when
       expression
        expression
         variables
          variable
           type
        eqOp
         !=
        expression
         :guest
      <-
      expression
       variables
        variable
         users
    do_block
     do
     \n
     block
      expression
       expression
        String
       expression_tail
        .
        expression
         expression
          variables
           variable
            upcase
         (
         expressions_
          expression
           variables
            variable
             name
         )
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      bitstring
       <<
       expressions_
        expression
         expression
          variables
           variable
            r
         ::
         expression
          8
        ,
        expression
         expression
          variables
           variable
            g
         ::
         expression
          8
        ,
        expression
         expression
          expression
           variables
            variable
             b
          ::
          expression
           8
         <-
         expression
          variables
           variable
            pixels
       >>
    ,
    do
    :
    expression
     tuple
      {
      expressions_
       expression
        variables
         variable
          r
         ,
         variable
          g
         ,
         variable
          b
      }
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       tuple
        {
        expressions_
         expression
          variables
           variable
            language
           ,
           variable
            parent
        }
      <-
      expression
       expression
        variables
         variable
          languages
         ,
         variable
          grandparent
       =
       expression
        expression
         variables
          variable
           languages
        expression_tail
         [
         expression
          variables
           variable
            parent
         ]
    ,
    do
    :
    expression
     tuple
      {
      expressions_
       expression
        variables
         variable
          language
         ,
         variable
          grandparent
      }
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       tuple
        {
        expressions_
         expression
          variables
           variable
            language
           ,
           variable
            parent
        }
      <-
      expression
       variables
        variable
         languages
    do_block
     do
     \n
     block
      expression
       expression
        variables
         variable
          grandparent
       =
       expression
        expression
         variables
          variable
           languages
        expression_tail
         [
         expression
          variables
           variable
            parent
         ]
      eoe
       \n
      expression
       tuple
        {
        expressions_
         expression
          variables
           variable
            language
           ,
           variable
            grandparent
        }
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       expression
        tuple
         {
         expressions_
          expression
           variables
            variable
             language
            ,
            variable
             parent
         }
       <-
       expression
        variables
         variable
          languages
         ,
         variable
          grandparent
      <-
      expression
       list
        [
        expressions_
         expression
          expression
           variables
            variable
             languages
          expression_tail
           [
           expression
            variables
             variable
              parent
           ]
        ]
    ,
    do
    :
    expression
     tuple
      {
      expressions_
       expression
        variables
         variable
          language
         ,
         variable
          grandparent
      }
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      bitstring
       <<
       expressions_
        expression
         expression
          variables
           variable
            c
         <-
         expression
          " hello world "
       >>
     ,
     expression
      expression
       variables
        variable
         c
      eqOp
       !=
      expression
       ?\s
    ,
    options_
     option
      variable
       into
      :
      expression
       ""
    ,
    do
    :
    expression
     bitstring
      <<
      expressions_
       expression
        variables
         variable
          c
      >>
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       variables
        variable
         line
      <-
      expression
       expression
        IO
       expression_tail
        .
        expression
         expression
          variables
           variable
            stream
         (
         )
    ,
    options_
     option
      variable
       into
      :
      expression
       expression
        IO
       expression_tail
        .
        expression
         expression
          variables
           variable
            stream
         (
         )
    do_block
     do
     \n
     block
      expression
       expression
        String
       expression_tail
        .
        expression
         expression
          variables
           variable
            upcase
         (
         expressions_
          expression
           variables
            variable
             line
         )
      eoe
       \n
     end
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      expression
       variables
        variable
         x
      <-
      expression
       list
        [
        expressions_
         expression
          1
         ,
         expression
          1
         ,
         expression
          2
         ,
         expression
          3
        ]
    ,
    options_
     option
      variable
       uniq
      :
      expression
       bool_
        true
    ,
    do
    :
    expression
     expression
      variables
       variable
        x
     mulOp
      *
     expression
      2
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      bitstring
       <<
       expressions_
        expression
         expression
          variables
           variable
            x
         <-
         expression
          "abcabc"
       >>
    ,
    options_
     option
      variable
       uniq
      :
      expression
       bool_
        true
     ,
     option
      variable
       into
      :
      expression
       ""
    ,
    do
    :
    expression
     bitstring
      <<
      expressions_
       expression
        expression
         variables
          variable
           x
        addOp
         -
        expression
         32
      >>
  eoe
   \n
   \n
  expression
   for
    for
    expressions_
     expression
      bitstring
       <<
       expressions_
        expression
         expression
          variables
           variable
            x
         <-
         expression
          "AbCabCABc"
       >>
     ,
     expression
      expression
       variables
        variable
         x
      inOp
       in
      expression
       expression
        ?a
       listOp
        ..
       expression
        ?z
    ,
    do
    :
    expression
     bitstring
      <<
      expressions_
       expression
        variables
         variable
          x
      >>
 <EOF>
