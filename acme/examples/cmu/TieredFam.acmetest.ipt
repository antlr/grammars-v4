acmeCompUnit
 acmeFamilyDeclaration
  Family
  identifier
   TieredFam
  =
  acmeFamilyBody
   {
   acmePortTypeDeclaration
    Port
    Type
    identifier
     provideT
    =
    acmePortBody
     {
     designRule
      heuristic
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 reference
                  identifier
                   size
                  actualParams
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                self
                               .
                               setReference
                                attachedRoles
                   )
             >=
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 literalConstant
                  1
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This port has attachment(s)."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This port dangles!"
        ;
       >>
      ;
     }
   acmePortTypeDeclaration
    Port
    Type
    identifier
     useT
    =
    acmePortBody
     {
     designRule
      heuristic
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 reference
                  identifier
                   size
                  actualParams
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                self
                               .
                               setReference
                                attachedRoles
                   )
             >=
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 literalConstant
                  1
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This port has attachment(s)."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This port dangles!"
        ;
       >>
      ;
     }
   acmeRoleTypeDeclaration
    Role
    Type
    identifier
     providerT
    =
    acmeRoleBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 reference
                  identifier
                   size
                  actualParams
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                self
                               .
                               setReference
                                attachedPorts
                   )
             >=
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 literalConstant
                  1
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role has an attachment."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The role dangles!"
        ;
       >>
      ;
     designRule
      heuristic
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           !
           dRNegateExpression
            dREqualityExpression
             dRRelationalExpression
              dRAdditiveExpression
               dRMultiplicativeExpression
                dRNegativeExpression
                 primitiveExpression
                  parentheticalExpression
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                size
                               actualParams
                                (
                                designRuleExpression
                                 aSTDRImpliesExpression
                                  dRIffExpression
                                   dRAndExpression
                                    dRNegateExpression
                                     dREqualityExpression
                                      dRRelationalExpression
                                       dRAdditiveExpression
                                        dRMultiplicativeExpression
                                         dRNegativeExpression
                                          primitiveExpression
                                           reference
                                            identifier
                                             self
                                            .
                                            setReference
                                             attachedPorts
                                )
                          >
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              literalConstant
                               1
                   )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role has no more than one attachment."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role is attached to more than one port!"
        ;
       >>
      ;
     }
   acmeRoleTypeDeclaration
    Role
    Type
    identifier
     userT
    =
    acmeRoleBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 reference
                  identifier
                   size
                  actualParams
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                self
                               .
                               setReference
                                attachedPorts
                   )
             >=
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 literalConstant
                  1
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role has an attachment."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The role dangles!"
        ;
       >>
      ;
     designRule
      heuristic
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           !
           dRNegateExpression
            dREqualityExpression
             dRRelationalExpression
              dRAdditiveExpression
               dRMultiplicativeExpression
                dRNegativeExpression
                 primitiveExpression
                  parentheticalExpression
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                size
                               actualParams
                                (
                                designRuleExpression
                                 aSTDRImpliesExpression
                                  dRIffExpression
                                   dRAndExpression
                                    dRNegateExpression
                                     dREqualityExpression
                                      dRRelationalExpression
                                       dRAdditiveExpression
                                        dRMultiplicativeExpression
                                         dRNegativeExpression
                                          primitiveExpression
                                           reference
                                            identifier
                                             self
                                            .
                                            setReference
                                             attachedPorts
                                )
                          >
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              literalConstant
                               1
                   )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role has no more than one attachment."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "This role is attached to more than one port! Is this intended?"
        ;
       >>
      ;
     }
   acmeComponentTypeDeclaration
    Component
    Type
    identifier
     TierNodeT
    =
    acmeComponentBody
     {
     acmePropertyDeclaration
      Property
      identifier
       host
      :
      acmePropertyTypeRef
       acmePropertyTypeStructure
        acmePropertyTypeString
         string
      ;
     acmePropertyDeclaration
      Property
      identifier
       allowShareHost
      :
      acmePropertyTypeRef
       acmePropertyTypeDeclarationRef
        identifier
         boolean
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         default
        :
        acmePropertyTypeRef
         acmePropertyTypeDeclarationRef
          identifier
           boolean
        =
        acmePropertyValueDeclaration
         "true"
        ;
       >>
      ;
     }
   acmeConnectorTypeDeclaration
    Connector
    Type
    identifier
     CallReturnConnT
    =
    acmeConnectorBody
     {
     acmePropertyDeclaration
      Property
      identifier
       blocking
      :
      acmePropertyTypeRef
       acmePropertyTypeDeclarationRef
        identifier
         boolean
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         default
        :
        acmePropertyTypeRef
         acmePropertyTypeDeclarationRef
          identifier
           boolean
        =
        acmePropertyValueDeclaration
         true
        ;
       >>
      ;
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 reference
                  identifier
                   size
                  actualParams
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                self
                               .
                               setReference
                                roles
                   )
             >=
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 literalConstant
                  2
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The connector has at least two roles."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The connector does NOT have two roles!"
        ;
       >>
      ;
     designRule
      heuristic
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           !
           dRNegateExpression
            dREqualityExpression
             dRRelationalExpression
              dRAdditiveExpression
               dRMultiplicativeExpression
                dRNegativeExpression
                 primitiveExpression
                  parentheticalExpression
                   (
                   designRuleExpression
                    aSTDRImpliesExpression
                     dRIffExpression
                      dRAndExpression
                       dRNegateExpression
                        dREqualityExpression
                         dRRelationalExpression
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              reference
                               identifier
                                size
                               actualParams
                                (
                                designRuleExpression
                                 aSTDRImpliesExpression
                                  dRIffExpression
                                   dRAndExpression
                                    dRNegateExpression
                                     dREqualityExpression
                                      dRRelationalExpression
                                       dRAdditiveExpression
                                        dRMultiplicativeExpression
                                         dRNegativeExpression
                                          primitiveExpression
                                           reference
                                            identifier
                                             self
                                            .
                                            setReference
                                             roles
                                )
                          >
                          dRAdditiveExpression
                           dRMultiplicativeExpression
                            dRNegativeExpression
                             primitiveExpression
                              literalConstant
                               2
                   )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The connector has no more than two roles."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "The connector has more than two roles! Is this intended?"
        ;
       >>
      ;
     }
   acmeConnectorTypeDeclaration
    Connector
    Type
    identifier
     LocalConnT
    extends
    acmeConnectorTypeRef
     identifier
      CallReturnConnT
    with
    acmeConnectorBody
     {
     acmeRoleDeclaration
      Role
      identifier
       callee
      :
      acmeRoleTypeRef
       identifier
        providerT
      =
      new
      acmeRoleInstantiatedTypeRef
       identifier
        providerT
      ;
     acmeRoleDeclaration
      Role
      identifier
       caller
      :
      acmeRoleTypeRef
       identifier
        userT
      =
      new
      acmeRoleInstantiatedTypeRef
       identifier
        userT
      ;
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    r
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     roles
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             quantifiedExpression
                              Exists
                              variableSetDeclaration
                               identifier
                                t
                               in
                               setExpression
                                literalSet
                                 {
                                 reference
                                  identifier
                                   providerT
                                 ,
                                 reference
                                  identifier
                                   userT
                                 }
                              |
                              designRuleExpression
                               aSTDRImpliesExpression
                                dRIffExpression
                                 dRAndExpression
                                  dRNegateExpression
                                   dREqualityExpression
                                    dRRelationalExpression
                                     dRAdditiveExpression
                                      dRMultiplicativeExpression
                                       dRNegativeExpression
                                        primitiveExpression
                                         reference
                                          identifier
                                           declaresType
                                          actualParams
                                           (
                                           designRuleExpression
                                            aSTDRImpliesExpression
                                             dRIffExpression
                                              dRAndExpression
                                               dRNegateExpression
                                                dREqualityExpression
                                                 dRRelationalExpression
                                                  dRAdditiveExpression
                                                   dRMultiplicativeExpression
                                                    dRNegativeExpression
                                                     primitiveExpression
                                                      reference
                                                       identifier
                                                        r
                                           ,
                                           designRuleExpression
                                            aSTDRImpliesExpression
                                             dRIffExpression
                                              dRAndExpression
                                               dRNegateExpression
                                                dREqualityExpression
                                                 dRRelationalExpression
                                                  dRAdditiveExpression
                                                   dRMultiplicativeExpression
                                                    dRNegativeExpression
                                                     primitiveExpression
                                                      reference
                                                       identifier
                                                        t
                                           )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All roles are of types providerT or userT."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected unexpected role types!"
        ;
       >>
      ;
     }
   acmeConnectorTypeDeclaration
    Connector
    Type
    identifier
     RMIConnT
    extends
    acmeConnectorTypeRef
     identifier
      CallReturnConnT
    with
    acmeConnectorBody
     {
     acmeRoleDeclaration
      Role
      identifier
       callee
      :
      acmeRoleTypeRef
       identifier
        remoteProviderT
      =
      new
      acmeRoleInstantiatedTypeRef
       identifier
        remoteProviderT
      ;
     acmeRoleDeclaration
      Role
      identifier
       caller
      :
      acmeRoleTypeRef
       identifier
        remoteUserT
      =
      new
      acmeRoleInstantiatedTypeRef
       identifier
        remoteUserT
      ;
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    r
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     roles
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             quantifiedExpression
                              Exists
                              variableSetDeclaration
                               identifier
                                t
                               in
                               setExpression
                                literalSet
                                 {
                                 reference
                                  identifier
                                   remoteProviderT
                                 ,
                                 reference
                                  identifier
                                   remoteUserT
                                 }
                              |
                              designRuleExpression
                               aSTDRImpliesExpression
                                dRIffExpression
                                 dRAndExpression
                                  dRNegateExpression
                                   dREqualityExpression
                                    dRRelationalExpression
                                     dRAdditiveExpression
                                      dRMultiplicativeExpression
                                       dRNegativeExpression
                                        primitiveExpression
                                         reference
                                          identifier
                                           declaresType
                                          actualParams
                                           (
                                           designRuleExpression
                                            aSTDRImpliesExpression
                                             dRIffExpression
                                              dRAndExpression
                                               dRNegateExpression
                                                dREqualityExpression
                                                 dRRelationalExpression
                                                  dRAdditiveExpression
                                                   dRMultiplicativeExpression
                                                    dRNegativeExpression
                                                     primitiveExpression
                                                      reference
                                                       identifier
                                                        r
                                           ,
                                           designRuleExpression
                                            aSTDRImpliesExpression
                                             dRIffExpression
                                              dRAndExpression
                                               dRNegateExpression
                                                dREqualityExpression
                                                 dRRelationalExpression
                                                  dRAdditiveExpression
                                                   dRMultiplicativeExpression
                                                    dRNegativeExpression
                                                     primitiveExpression
                                                      reference
                                                       identifier
                                                        t
                                           )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         vis-roles
        :
        acmePropertyTypeRef
         acmePropertyTypeDeclarationRef
          identifier
           boolean
        =
        acmePropertyValueDeclaration
         true
        ;
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All roles are of types remoteProviderT or remoteUserT."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected unexpected role types!"
        ;
       >>
      ;
     }
   acmePortTypeDeclaration
    Port
    Type
    identifier
     remoteProvideT
    extends
    acmePortTypeRef
     identifier
      provideT
    with
    acmePortBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    r
                   :
                   acmeTypeRef
                    role
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     attachedRoles
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             reference
                              identifier
                               declaresType
                              actualParams
                               (
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            r
                               ,
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            remoteProviderT
                               )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All attached roles are remote."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected non-remote attached role(s)!"
        ;
       >>
      ;
     }
   acmePortTypeDeclaration
    Port
    Type
    identifier
     remoteUseT
    extends
    acmePortTypeRef
     identifier
      useT
    with
    acmePortBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    r
                   :
                   acmeTypeRef
                    role
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     attachedRoles
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             reference
                              identifier
                               declaresType
                              actualParams
                               (
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            r
                               ,
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            remoteUserT
                               )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All attached roles are remote."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected non-remote attached role(s)!"
        ;
       >>
      ;
     }
   acmeRoleTypeDeclaration
    Role
    Type
    identifier
     remoteUserT
    extends
    acmeRoleTypeRef
     identifier
      userT
    with
    acmeRoleBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    p
                   :
                   acmeTypeRef
                    port
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     attachedPorts
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             reference
                              identifier
                               declaresType
                              actualParams
                               (
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            p
                               ,
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            remoteUseT
                               )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All attached ports are remote."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected non-remote attached port(s)!"
        ;
       >>
      ;
     }
   acmeRoleTypeDeclaration
    Role
    Type
    identifier
     remoteProviderT
    extends
    acmeRoleTypeRef
     identifier
      providerT
    with
    acmeRoleBody
     {
     designRule
      invariant
      designRuleExpression
       aSTDRImpliesExpression
        dRIffExpression
         dRAndExpression
          dRNegateExpression
           dREqualityExpression
            dRRelationalExpression
             dRAdditiveExpression
              dRMultiplicativeExpression
               dRNegativeExpression
                primitiveExpression
                 quantifiedExpression
                  Forall
                  variableSetDeclaration
                   identifier
                    p
                   :
                   acmeTypeRef
                    port
                   in
                   reference
                    identifier
                     self
                    .
                    setReference
                     attachedPorts
                  |
                  designRuleExpression
                   aSTDRImpliesExpression
                    dRIffExpression
                     dRAndExpression
                      dRNegateExpression
                       dREqualityExpression
                        dRRelationalExpression
                         dRAdditiveExpression
                          dRMultiplicativeExpression
                           dRNegativeExpression
                            primitiveExpression
                             reference
                              identifier
                               declaresType
                              actualParams
                               (
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            p
                               ,
                               designRuleExpression
                                aSTDRImpliesExpression
                                 dRIffExpression
                                  dRAndExpression
                                   dRNegateExpression
                                    dREqualityExpression
                                     dRRelationalExpression
                                      dRAdditiveExpression
                                       dRMultiplicativeExpression
                                        dRNegativeExpression
                                         primitiveExpression
                                          reference
                                           identifier
                                            remoteProvideT
                               )
      acmePropertyBlock
       <<
       acmePropertyBlockEntry
        identifier
         label
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "All attached ports are remote."
        ;
       acmePropertyBlockEntry
        identifier
         errMsg
        :
        acmePropertyTypeRef
         acmePropertyTypeStructure
          acmePropertyTypeString
           string
        =
        acmePropertyValueDeclaration
         "Detected non-remote attached port(s)!"
        ;
       >>
      ;
     }
   designRule
    invariant
    designRuleExpression
     aSTDRImpliesExpression
      dRIffExpression
       dRAndExpression
        dRNegateExpression
         dREqualityExpression
          dRRelationalExpression
           dRAdditiveExpression
            dRMultiplicativeExpression
             dRNegativeExpression
              primitiveExpression
               quantifiedExpression
                Forall
                variableSetDeclaration
                 identifier
                  t1
                 :
                 acmeTypeRef
                  reference
                   identifier
                    TierNodeT
                 in
                 reference
                  identifier
                   self
                  .
                  setReference
                   Components
                |
                designRuleExpression
                 aSTDRImpliesExpression
                  dRIffExpression
                   dRAndExpression
                    dRNegateExpression
                     !
                     dRNegateExpression
                      dREqualityExpression
                       dRRelationalExpression
                        dRAdditiveExpression
                         dRMultiplicativeExpression
                          dRNegativeExpression
                           primitiveExpression
                            reference
                             identifier
                              t1
                             .
                             identifier
                              allowShareHost
                  ->
                  dRIffExpression
                   dRAndExpression
                    dRNegateExpression
                     dREqualityExpression
                      dRRelationalExpression
                       dRAdditiveExpression
                        dRMultiplicativeExpression
                         dRNegativeExpression
                          primitiveExpression
                           parentheticalExpression
                            (
                            designRuleExpression
                             aSTDRImpliesExpression
                              dRIffExpression
                               dRAndExpression
                                dRNegateExpression
                                 dREqualityExpression
                                  dRRelationalExpression
                                   dRAdditiveExpression
                                    dRMultiplicativeExpression
                                     dRNegativeExpression
                                      primitiveExpression
                                       quantifiedExpression
                                        Forall
                                        variableSetDeclaration
                                         identifier
                                          t2
                                         :
                                         acmeTypeRef
                                          reference
                                           identifier
                                            TierNodeT
                                         in
                                         reference
                                          identifier
                                           self
                                          .
                                          setReference
                                           Components
                                        |
                                        designRuleExpression
                                         aSTDRImpliesExpression
                                          dRIffExpression
                                           dRAndExpression
                                            dRNegateExpression
                                             dREqualityExpression
                                              dRRelationalExpression
                                               dRAdditiveExpression
                                                dRMultiplicativeExpression
                                                 dRNegativeExpression
                                                  primitiveExpression
                                                   reference
                                                    identifier
                                                     t1
                                              !=
                                              dRRelationalExpression
                                               dRAdditiveExpression
                                                dRMultiplicativeExpression
                                                 dRNegativeExpression
                                                  primitiveExpression
                                                   reference
                                                    identifier
                                                     t2
                                          ->
                                          dRIffExpression
                                           dRAndExpression
                                            dRNegateExpression
                                             dREqualityExpression
                                              dRRelationalExpression
                                               dRAdditiveExpression
                                                dRMultiplicativeExpression
                                                 dRNegativeExpression
                                                  primitiveExpression
                                                   reference
                                                    identifier
                                                     t1
                                                    .
                                                    identifier
                                                     host
                                              !=
                                              dRRelationalExpression
                                               dRAdditiveExpression
                                                dRMultiplicativeExpression
                                                 dRNegativeExpression
                                                  primitiveExpression
                                                   reference
                                                    identifier
                                                     t2
                                                    .
                                                    identifier
                                                     host
                            )
    acmePropertyBlock
     <<
     acmePropertyBlockEntry
      identifier
       label
      :
      acmePropertyTypeRef
       acmePropertyTypeStructure
        acmePropertyTypeString
         string
      =
      acmePropertyValueDeclaration
       "Tier nodes respect host assignment."
      ;
     acmePropertyBlockEntry
      identifier
       errMsg
      :
      acmePropertyTypeRef
       acmePropertyTypeStructure
        acmePropertyTypeString
         string
      =
      acmePropertyValueDeclaration
       "One or more tier node does not satisfy host assignment criteria!"
      ;
     >>
    ;
   designRule
    invariant
    designRuleExpression
     aSTDRImpliesExpression
      dRIffExpression
       dRAndExpression
        dRNegateExpression
         dREqualityExpression
          dRRelationalExpression
           dRAdditiveExpression
            dRMultiplicativeExpression
             dRNegativeExpression
              primitiveExpression
               quantifiedExpression
                Forall
                variableSetDeclaration
                 identifier
                  conn
                 :
                 acmeTypeRef
                  connector
                 in
                 reference
                  identifier
                   self
                  .
                  setReference
                   connectors
                |
                designRuleExpression
                 aSTDRImpliesExpression
                  dRIffExpression
                   dRAndExpression
                    dRNegateExpression
                     dREqualityExpression
                      dRRelationalExpression
                       dRAdditiveExpression
                        dRMultiplicativeExpression
                         dRNegativeExpression
                          primitiveExpression
                           reference
                            identifier
                             declaresType
                            actualParams
                             (
                             designRuleExpression
                              aSTDRImpliesExpression
                               dRIffExpression
                                dRAndExpression
                                 dRNegateExpression
                                  dREqualityExpression
                                   dRRelationalExpression
                                    dRAdditiveExpression
                                     dRMultiplicativeExpression
                                      dRNegativeExpression
                                       primitiveExpression
                                        reference
                                         identifier
                                          conn
                             ,
                             designRuleExpression
                              aSTDRImpliesExpression
                               dRIffExpression
                                dRAndExpression
                                 dRNegateExpression
                                  dREqualityExpression
                                   dRRelationalExpression
                                    dRAdditiveExpression
                                     dRMultiplicativeExpression
                                      dRNegativeExpression
                                       primitiveExpression
                                        reference
                                         identifier
                                          CallReturnConnT
                             )
    acmePropertyBlock
     <<
     acmePropertyBlockEntry
      identifier
       label
      :
      acmePropertyTypeRef
       acmePropertyTypeStructure
        acmePropertyTypeString
         string
      =
      acmePropertyValueDeclaration
       "All connectors satisfy call-return type."
      ;
     acmePropertyBlockEntry
      identifier
       errMsg
      :
      acmePropertyTypeRef
       acmePropertyTypeStructure
        acmePropertyTypeString
         string
      =
      acmePropertyValueDeclaration
       "At least one connector is NOT call-return!"
      ;
     >>
    ;
   }
 <EOF>
