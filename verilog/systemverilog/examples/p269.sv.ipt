source_text
 description
  module_declaration
   module_header
    module_keyword
     module
    module_identifier
     identifier
      simple_identifier
       shift
    ;
   module_item
    module_common_item
     module_item_declaration
      package_item_declaration
       data_declaration
        data_type
         integer_vector_type
          logic
         packed_dimension
          [
          constant_range
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  3
           :
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  0
          ]
        list_of_variable_decl_assignments
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             start
         ,
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             result
        ;
   module_item
    module_common_item
     initial_construct
      initial
      statement_or_null
       statement
        statement_item
         seq_block
          begin
          statement_or_null
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   start
               assignment_operator
                =
               expression
                primary
                 primary_literal
                  number
                   integral_number
                    decimal_number
                     unsigned_number
                      1
             ;
          statement_or_null
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   result
               assignment_operator
                =
               expression
                primary
                 (
                 mintypmax_expression
                  expression
                   expression
                    primary
                     hierarchical_identifier
                      identifier
                       simple_identifier
                        start
                   <<
                   expression
                    primary
                     primary_literal
                      number
                       integral_number
                        decimal_number
                         unsigned_number
                          2
                 )
             ;
          end
   endmodule
 description
  module_declaration
   module_header
    module_keyword
     module
    module_identifier
     identifier
      simple_identifier
       ashift
    ;
   module_item
    module_common_item
     module_item_declaration
      package_item_declaration
       data_declaration
        data_type
         integer_vector_type
          logic
         signing
          signed
         packed_dimension
          [
          constant_range
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  3
           :
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  0
          ]
        list_of_variable_decl_assignments
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             start
         ,
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             result
        ;
   module_item
    module_common_item
     initial_construct
      initial
      statement_or_null
       statement
        statement_item
         seq_block
          begin
          statement_or_null
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   start
               assignment_operator
                =
               expression
                primary
                 primary_literal
                  number
                   integral_number
                    binary_number
                     size
                      4
                     binary_base
                      'b
                     binary_value
                      1000
             ;
          statement_or_null
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   result
               assignment_operator
                =
               expression
                primary
                 (
                 mintypmax_expression
                  expression
                   expression
                    primary
                     hierarchical_identifier
                      identifier
                       simple_identifier
                        start
                   >>>
                   expression
                    primary
                     primary_literal
                      number
                       integral_number
                        decimal_number
                         unsigned_number
                          2
                 )
             ;
          end
   endmodule
 <EOF>
