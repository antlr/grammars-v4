source_text
 description
  module_declaration
   module_header
    module_keyword
     module
    module_identifier
     identifier
      simple_identifier
       test
    parameter_port_list
     #
     (
     list_of_param_assignments
      param_assignment
       parameter_identifier
        identifier
         simple_identifier
          N
       =
       constant_param_expression
        constant_mintypmax_expression
         constant_expression
          constant_primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                1
     )
    list_of_port_declarations
     (
     port_decl
      ansi_port_declaration
       port_direction
        input
       implicit_data_type
        packed_dimension
         [
         constant_range
          constant_expression
           constant_expression
            constant_primary
             identifier
              simple_identifier
               N
           -
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  1
          :
          constant_expression
           constant_primary
            primary_literal
             number
              integral_number
               decimal_number
                unsigned_number
                 0
         ]
       port_identifier
        identifier
         simple_identifier
          in
     ,
     port_decl
      ansi_port_declaration
       port_direction
        output
       implicit_data_type
        packed_dimension
         [
         constant_range
          constant_expression
           constant_expression
            constant_primary
             identifier
              simple_identifier
               N
           -
           constant_expression
            constant_primary
             primary_literal
              number
               integral_number
                decimal_number
                 unsigned_number
                  1
          :
          constant_expression
           constant_primary
            primary_literal
             number
              integral_number
               decimal_number
                unsigned_number
                 0
         ]
       port_identifier
        identifier
         simple_identifier
          out
     )
    ;
   module_item
    module_common_item
     conditional_generate_construct
      if_generate_construct
       if
       (
       constant_expression
        constant_expression
         constant_primary
          (
          constant_mintypmax_expression
           constant_expression
            constant_expression
             constant_primary
              identifier
               simple_identifier
                N
            <
            constant_expression
             constant_primary
              primary_literal
               number
                integral_number
                 decimal_number
                  unsigned_number
                   1
          )
        ||
        constant_expression
         constant_primary
          (
          constant_mintypmax_expression
           constant_expression
            constant_expression
             constant_primary
              identifier
               simple_identifier
                N
            >
            constant_expression
             constant_primary
              primary_literal
               number
                integral_number
                 decimal_number
                  unsigned_number
                   8
          )
       )
       generate_block
        generate_item
         elaboration_system_task
          $error
          arg_list
           (
           list_of_arguments
            ordered_arg
             expression
              primary
               primary_literal
                string_literal
                 "Parameter N has an invalid value of %0d"
            ,
            ordered_arg
             expression
              primary
               hierarchical_identifier
                identifier
                 simple_identifier
                  N
           )
          ;
   module_item
    module_common_item
     continuous_assign
      assign
      list_of_variable_assignments
       variable_assignment
        variable_lvalue
         hierarchical_identifier
          identifier
           simple_identifier
            out
        =
        expression
         primary
          hierarchical_identifier
           identifier
            simple_identifier
             in
      ;
   endmodule
 <EOF>
