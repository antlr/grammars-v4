source_text
 description
  package_item
   package_item_declaration
    interface_class_declaration
     interface
     class
     class_identifier
      identifier
       simple_identifier
        IntfClass
     ;
     interface_class_item
      interface_class_method
       pure
       virtual
       method_prototype
        function_prototype
         function
         data_type_or_void
          data_type
           integer_vector_type
            bit
         function_identifier
          identifier
           simple_identifier
            funcA
         port_list
          (
          tf_port_list
           tf_port_item
          )
       ;
     interface_class_item
      interface_class_method
       pure
       virtual
       method_prototype
        function_prototype
         function
         data_type_or_void
          data_type
           integer_vector_type
            bit
         function_identifier
          identifier
           simple_identifier
            funcB
         port_list
          (
          tf_port_list
           tf_port_item
          )
       ;
     endclass
 description
  package_item
   package_item_declaration
    class_declaration
     virtual
     class
     class_identifier
      identifier
       simple_identifier
        ClassA
     class_implementation
      implements
      interface_class_type
       ps_identifier
        identifier
         simple_identifier
          IntfClass
     ;
     class_item
      class_method
       method_qualifier
        virtual
       function_declaration
        function
        function_body_declaration
         function_data_type_or_implicit
          data_type_or_void
           data_type
            integer_vector_type
             bit
         function_identifier
          identifier
           simple_identifier
            funcA
         (
         tf_port_list
          tf_port_item
         )
         ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             jump_statement
              return
              expression
               primary
                (
                mintypmax_expression
                 expression
                  primary
                   primary_literal
                    number
                     integral_number
                      decimal_number
                       unsigned_number
                        1
                )
              ;
         endfunction
     class_item
      class_method
       pure
       virtual
       method_prototype
        function_prototype
         function
         data_type_or_void
          data_type
           integer_vector_type
            bit
         function_identifier
          identifier
           simple_identifier
            funcB
         port_list
          (
          tf_port_list
           tf_port_item
          )
       ;
     endclass
 description
  package_item
   package_item_declaration
    class_declaration
     class
     class_identifier
      identifier
       simple_identifier
        ClassB
     class_extension
      extends
      class_type
       class_ref
        class_identifier
         identifier
          simple_identifier
           ClassA
     ;
     class_item
      class_method
       method_qualifier
        virtual
       function_declaration
        function
        function_body_declaration
         function_data_type_or_implicit
          data_type_or_void
           data_type
            integer_vector_type
             bit
         function_identifier
          identifier
           simple_identifier
            funcB
         (
         tf_port_list
          tf_port_item
         )
         ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             jump_statement
              return
              expression
               primary
                (
                mintypmax_expression
                 expression
                  primary
                   primary_literal
                    number
                     integral_number
                      decimal_number
                       unsigned_number
                        1
                )
              ;
         endfunction
     endclass
 <EOF>
