source_text
 description
  package_item
   package_item_declaration
    data_declaration
     type_declaration
      typedef
      data_type
       struct_union
        struct
       {
       struct_union_member
        data_type_or_void
         data_type
          non_integer_type
           real
        list_of_variable_decl_assignments
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             field1
        ;
       struct_union_member
        data_type_or_void
         data_type
          integer_vector_type
           bit
        list_of_variable_decl_assignments
         variable_decl_assignment
          variable_identifier
           identifier
            simple_identifier
             field2
        ;
       }
      type_identifier
       identifier
        simple_identifier
         T
      ;
 description
  package_item
   package_item_declaration
    function_declaration
     function
     lifetime
      automatic
     function_body_declaration
      function_data_type_or_implicit
       data_type_or_void
        data_type
         class_type
          class_ref
           class_identifier
            identifier
             simple_identifier
              T
      function_identifier
       identifier
        simple_identifier
         Tsum
      (
      tf_port_list
       tf_port_item
        tf_port_direction
         port_direction
          input
        data_type_or_implicit
         data_type
          class_type
           class_ref
            class_identifier
             identifier
              simple_identifier
               T
        tf_port_id
         port_identifier
          identifier
           simple_identifier
            driver
         variable_dimension
          unsized_dimension
           [
           ]
      )
      ;
      function_statement_or_null
       function_statement
        statement
         statement_item
          blocking_assignment
           operator_assignment
            variable_lvalue
             hierarchical_identifier
              hier_ref
               identifier
                simple_identifier
                 Tsum
               .
              identifier
               simple_identifier
                field1
            assignment_operator
             =
            expression
             primary
              primary_literal
               number
                real_number
                 fixed_point_number
                  0.0
          ;
      function_statement_or_null
       function_statement
        statement
         statement_item
          loop_statement
           foreach
           (
           ps_or_hierarchical_array_identifier
            hierarchical_identifier
             identifier
              simple_identifier
               driver
           [
           loop_variables
            loop_var
             index_variable_identifier
              identifier
               simple_identifier
                i
           ]
           )
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 hier_ref
                  identifier
                   simple_identifier
                    Tsum
                  .
                 identifier
                  simple_identifier
                   field1
               assignment_operator
                +=
               expression
                primary
                 hierarchical_identifier
                  hier_ref
                   identifier
                    simple_identifier
                     driver
                   constant_bit_select
                    [
                    constant_expression
                     constant_primary
                      identifier
                       simple_identifier
                        i
                    ]
                   .
                  identifier
                   simple_identifier
                    field1
             ;
      endfunction
 description
  package_item
   package_item_declaration
    data_declaration
     net_type_declaration
      nettype
      data_type
       class_type
        class_ref
         class_identifier
          identifier
           simple_identifier
            T
      net_type_identifier
       identifier
        simple_identifier
         wT
      ;
 description
  package_item
   package_item_declaration
    data_declaration
     net_type_declaration
      nettype
      data_type
       class_type
        class_ref
         class_identifier
          identifier
           simple_identifier
            T
      net_type_identifier
       identifier
        simple_identifier
         wTsum
      net_type_decl_with
       with
       tf_identifier
        identifier
         simple_identifier
          Tsum
      ;
 description
  package_item
   package_item_declaration
    data_declaration
     type_declaration
      typedef
      data_type
       non_integer_type
        real
      type_identifier
       identifier
        simple_identifier
         TR
      variable_dimension
       unpacked_dimension
        [
        constant_expression
         constant_primary
          primary_literal
           number
            integral_number
             decimal_number
              unsigned_number
               5
        ]
      ;
 description
  package_item
   package_item_declaration
    data_declaration
     net_type_declaration
      nettype
      data_type
       class_type
        class_ref
         class_identifier
          identifier
           simple_identifier
            TR
      net_type_identifier
       identifier
        simple_identifier
         wTR
      ;
 description
  package_item
   package_item_declaration
    data_declaration
     net_type_declaration
      nettype
      data_type
       class_type
        class_ref
         class_identifier
          identifier
           simple_identifier
            wTsum
      net_type_identifier
       identifier
        simple_identifier
         nettypeid2
      ;
 <EOF>
