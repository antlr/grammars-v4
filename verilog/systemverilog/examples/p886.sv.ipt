source_text
 description
  module_declaration
   module_header
    module_keyword
     module
    module_identifier
     identifier
      simple_identifier
       DFF
    list_of_port_declarations
     (
     port_decl
      ansi_port_declaration
       port_identifier
        identifier
         simple_identifier
          Q
     ,
     port_decl
      ansi_port_declaration
       port_identifier
        identifier
         simple_identifier
          CLK
     ,
     port_decl
      ansi_port_declaration
       port_identifier
        identifier
         simple_identifier
          DAT
     )
    ;
   module_item
    port_declaration
     input_declaration
      input
      list_of_port_identifiers
       port_id
        port_identifier
         identifier
          simple_identifier
           CLK
    ;
   module_item
    port_declaration
     input_declaration
      input
      implicit_data_type
       packed_dimension
        [
        constant_range
         constant_expression
          constant_primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                7
         :
         constant_expression
          constant_primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                0
        ]
      list_of_port_identifiers
       port_id
        port_identifier
         identifier
          simple_identifier
           DAT
    ;
   module_item
    port_declaration
     output_declaration
      output
      implicit_data_type
       packed_dimension
        [
        constant_range
         constant_expression
          constant_primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                7
         :
         constant_expression
          constant_primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                0
        ]
      list_of_port_identifiers
       port_id
        port_identifier
         identifier
          simple_identifier
           Q
    ;
   module_item
    module_common_item
     always_construct
      always_keyword
       always
      statement
       statement_item
        procedural_timing_control_statement
         procedural_timing_control
          event_control
           @
           (
           event_expression
            edge_identifier
             posedge
            expression
             primary
              hierarchical_identifier
               identifier
                simple_identifier
                 clk
           )
         statement_or_null
          statement
           statement_item
            blocking_assignment
             operator_assignment
              variable_lvalue
               hierarchical_identifier
                identifier
                 simple_identifier
                  Q
              assignment_operator
               =
              expression
               primary
                hierarchical_identifier
                 identifier
                  simple_identifier
                   DAT
            ;
   module_item
    specify_block
     specify
     specify_item
      system_timing_check
       setup_timing_check
        $setup
        (
        data_event
         timing_check_event
          specify_terminal_descriptor
           port_identifier
            identifier
             simple_identifier
              DAT
        ,
        reference_event
         timing_check_event
          timing_check_event_control
           posedge
          specify_terminal_descriptor
           port_identifier
            identifier
             simple_identifier
              CLK
        ,
        timing_check_limit
         expression
          primary
           primary_literal
            number
             integral_number
              decimal_number
               unsigned_number
                10
        )
        ;
     endspecify
   endmodule
 <EOF>
