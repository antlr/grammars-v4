source_text
 description
  package_item
   package_item_declaration
    class_declaration
     class
     class_identifier
      identifier
       simple_identifier
        C1
     ;
     class_item
      class_property
       property_qualifier
        random_qualifier
         rand
       data_type
        integer_atom_type
         integer
       list_of_variable_decl_assignments
        variable_decl_assignment
         variable_identifier
          identifier
           simple_identifier
            x
       ;
     endclass
 description
  package_item
   package_item_declaration
    class_declaration
     class
     class_identifier
      identifier
       simple_identifier
        C2
     ;
     class_item
      class_property
       property_qualifier
        random_qualifier
         rand
       data_type
        integer_atom_type
         integer
       list_of_variable_decl_assignments
        variable_decl_assignment
         variable_identifier
          identifier
           simple_identifier
            y
       ;
     endclass
 description
  module_declaration
   module_header
    module_keyword
     module
    module_identifier
     identifier
      simple_identifier
       top
    ;
   module_item
    module_common_item
     initial_construct
      initial
      statement_or_null
       statement
        statement_item
         seq_block
          begin
          block_item_declaration
           data_declaration
            data_type
             class_type
              class_ref
               class_identifier
                identifier
                 simple_identifier
                  C1
            list_of_variable_decl_assignments
             variable_decl_assignment
              class_variable_identifier
               identifier
                simple_identifier
                 c1
              =
              class_new
               new
               arg_list
                (
                list_of_arguments
                 ordered_arg
                )
            ;
          block_item_declaration
           data_declaration
            data_type
             class_type
              class_ref
               class_identifier
                identifier
                 simple_identifier
                  C2
            list_of_variable_decl_assignments
             variable_decl_assignment
              class_variable_identifier
               identifier
                simple_identifier
                 c2
              =
              class_new
               new
               arg_list
                (
                list_of_arguments
                 ordered_arg
                )
            ;
          block_item_declaration
           data_declaration
            data_type
             integer_atom_type
              integer
            list_of_variable_decl_assignments
             variable_decl_assignment
              variable_identifier
               identifier
                simple_identifier
                 z
            ;
          statement_or_null
           statement
            statement_item
             subroutine_call_statement
              void
              '
              (
              subroutine_call
               method_call_root
                primary
                 hierarchical_identifier
                  identifier
                   simple_identifier
                    c1
               .
               randomize_call
                randomize
                rand_list
                 (
                 )
              )
              ;
          statement_or_null
           statement
            statement_item
             subroutine_call_statement
              void
              '
              (
              subroutine_call
               method_call_root
                primary
                 hierarchical_identifier
                  identifier
                   simple_identifier
                    c2
               .
               randomize_call
                randomize
                rand_list
                 (
                 )
              )
              ;
          end
   endmodule
 <EOF>
