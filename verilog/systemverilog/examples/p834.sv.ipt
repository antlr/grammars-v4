source_text
 description
  udp_declaration
   udp_nonansi_declaration
    primitive
    udp_identifier
     identifier
      simple_identifier
       srff
    (
    udp_port_list
     output_port_identifier
      identifier
       simple_identifier
        q
     ,
     input_port_identifier
      identifier
       simple_identifier
        s
     ,
     input_port_identifier
      identifier
       simple_identifier
        r
    )
    ;
   udp_port_declaration
    udp_output_declaration
     output
     port_identifier
      identifier
       simple_identifier
        q
    ;
   udp_port_declaration
    udp_reg_declaration
     reg
     variable_identifier
      identifier
       simple_identifier
        q
    ;
   udp_port_declaration
    udp_input_declaration
     input
     list_of_udp_port_identifiers
      port_identifier
       identifier
        simple_identifier
         s
      ,
      port_identifier
       identifier
        simple_identifier
         r
    ;
   udp_body
    sequential_body
     udp_initial_statement
      initial
      output_port_identifier
       identifier
        simple_identifier
         q
      =
      init_val
       binary_number
        size
         1
        binary_base
         'b
        binary_value
         1
      ;
     table
     sequential_entry
      seq_input_list
       level_input_list
        level_symbol
         1
        level_symbol
         0
      :
      current_state
       level_symbol
        ?
      :
      next_state
       output_symbol
        1
      ;
     sequential_entry
      seq_input_list
       edge_input_list
        edge_indicator
         edge_symbol
          f
        level_symbol
         0
      :
      current_state
       level_symbol
        1
      :
      next_state
       -
      ;
     sequential_entry
      seq_input_list
       edge_input_list
        level_symbol
         0
        edge_indicator
         edge_symbol
          r
      :
      current_state
       level_symbol
        ?
      :
      next_state
       output_symbol
        0
      ;
     sequential_entry
      seq_input_list
       edge_input_list
        level_symbol
         0
        edge_indicator
         edge_symbol
          f
      :
      current_state
       level_symbol
        0
      :
      next_state
       -
      ;
     sequential_entry
      seq_input_list
       level_input_list
        level_symbol
         1
        level_symbol
         1
      :
      current_state
       level_symbol
        ?
      :
      next_state
       output_symbol
        0
      ;
     endtable
   endprimitive
 <EOF>
