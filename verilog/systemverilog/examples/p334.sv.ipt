source_text
 description
  package_item
   package_item_declaration
    class_declaration
     virtual
     class
     class_identifier
      identifier
       simple_identifier
        C
     parameter_port_list
      #
      (
      parameter_port_declaration
       parameter_declaration
        parameter
        list_of_param_assignments
         param_assignment
          parameter_identifier
           identifier
            simple_identifier
             DECODE_W
      ,
      parameter_port_declaration
       parameter_declaration
        parameter
        list_of_param_assignments
         param_assignment
          parameter_identifier
           identifier
            simple_identifier
             ENCODE_W
          =
          constant_param_expression
           constant_mintypmax_expression
            constant_expression
             constant_primary
              system_tf_call
               system_tf_identifier
                $clog2
               arg_list
                (
                list_of_arguments
                 ordered_arg
                  expression
                   primary
                    hierarchical_identifier
                     identifier
                      simple_identifier
                       DECODE_W
                )
      )
     ;
     class_item
      class_method
       method_qualifier
        class_item_qualifier
         static
       function_declaration
        function
        function_body_declaration
         function_data_type_or_implicit
          data_type_or_void
           data_type
            integer_vector_type
             logic
            packed_dimension
             [
             constant_range
              constant_expression
               constant_expression
                constant_primary
                 identifier
                  simple_identifier
                   ENCODE_W
               -
               constant_expression
                constant_primary
                 primary_literal
                  number
                   integral_number
                    decimal_number
                     unsigned_number
                      1
              :
              constant_expression
               constant_primary
                primary_literal
                 number
                  integral_number
                   decimal_number
                    unsigned_number
                     0
             ]
         function_identifier
          identifier
           simple_identifier
            ENCODER_f
         (
         tf_port_list
          tf_port_item
           tf_port_direction
            port_direction
             input
           data_type_or_implicit
            data_type
             integer_vector_type
              logic
             packed_dimension
              [
              constant_range
               constant_expression
                constant_expression
                 constant_primary
                  identifier
                   simple_identifier
                    DECODE_W
                -
                constant_expression
                 constant_primary
                  primary_literal
                   number
                    integral_number
                     decimal_number
                      unsigned_number
                       1
               :
               constant_expression
                constant_primary
                 primary_literal
                  number
                   integral_number
                    decimal_number
                     unsigned_number
                      0
              ]
           tf_port_id
            port_identifier
             identifier
              simple_identifier
               DecodeIn
         )
         ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   ENCODER_f
               assignment_operator
                =
               expression
                primary
                 primary_literal
                  unbased_unsized_literal
                   '0
             ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             loop_statement
              for
              (
              for_initialization
               for_variable_declaration
                data_type
                 integer_atom_type
                  int
                for_variable_assign
                 variable_identifier
                  identifier
                   simple_identifier
                    i
                 =
                 expression
                  primary
                   primary_literal
                    number
                     integral_number
                      decimal_number
                       unsigned_number
                        0
              ;
              expression
               expression
                primary
                 hierarchical_identifier
                  identifier
                   simple_identifier
                    i
               <
               expression
                primary
                 hierarchical_identifier
                  identifier
                   simple_identifier
                    DECODE_W
              ;
              for_step
               for_step_assignment
                inc_or_dec_expression
                 variable_lvalue
                  hierarchical_identifier
                   identifier
                    simple_identifier
                     i
                 inc_or_dec_operator
                  ++
              )
              statement_or_null
               statement
                statement_item
                 seq_block
                  begin
                  statement_or_null
                   statement
                    statement_item
                     conditional_statement
                      if
                      (
                      cond_predicate
                       expression_or_cond_pattern
                        expression
                         primary
                          hierarchical_identifier
                           identifier
                            simple_identifier
                             DecodeIn
                          select_
                           bit_select
                            [
                            expression
                             primary
                              hierarchical_identifier
                               identifier
                                simple_identifier
                                 i
                            ]
                      )
                      statement_or_null
                       statement
                        statement_item
                         seq_block
                          begin
                          statement_or_null
                           statement
                            statement_item
                             blocking_assignment
                              operator_assignment
                               variable_lvalue
                                hierarchical_identifier
                                 identifier
                                  simple_identifier
                                   ENCODER_f
                               assignment_operator
                                =
                               expression
                                primary
                                 hierarchical_identifier
                                  identifier
                                   simple_identifier
                                    i
                                 select_
                                  [
                                  part_select_range
                                   constant_range
                                    constant_expression
                                     constant_expression
                                      constant_primary
                                       identifier
                                        simple_identifier
                                         ENCODE_W
                                     -
                                     constant_expression
                                      constant_primary
                                       primary_literal
                                        number
                                         integral_number
                                          decimal_number
                                           unsigned_number
                                            1
                                    :
                                    constant_expression
                                     constant_primary
                                      primary_literal
                                       number
                                        integral_number
                                         decimal_number
                                          unsigned_number
                                           0
                                  ]
                             ;
                          statement_or_null
                           statement
                            statement_item
                             jump_statement
                              break
                              ;
                          end
                  end
         endfunction
     class_item
      class_method
       method_qualifier
        class_item_qualifier
         static
       function_declaration
        function
        function_body_declaration
         function_data_type_or_implicit
          data_type_or_void
           data_type
            integer_vector_type
             logic
            packed_dimension
             [
             constant_range
              constant_expression
               constant_expression
                constant_primary
                 identifier
                  simple_identifier
                   DECODE_W
               -
               constant_expression
                constant_primary
                 primary_literal
                  number
                   integral_number
                    decimal_number
                     unsigned_number
                      1
              :
              constant_expression
               constant_primary
                primary_literal
                 number
                  integral_number
                   decimal_number
                    unsigned_number
                     0
             ]
         function_identifier
          identifier
           simple_identifier
            DECODER_f
         (
         tf_port_list
          tf_port_item
           tf_port_direction
            port_direction
             input
           data_type_or_implicit
            data_type
             integer_vector_type
              logic
             packed_dimension
              [
              constant_range
               constant_expression
                constant_expression
                 constant_primary
                  identifier
                   simple_identifier
                    ENCODE_W
                -
                constant_expression
                 constant_primary
                  primary_literal
                   number
                    integral_number
                     decimal_number
                      unsigned_number
                       1
               :
               constant_expression
                constant_primary
                 primary_literal
                  number
                   integral_number
                    decimal_number
                     unsigned_number
                      0
              ]
           tf_port_id
            port_identifier
             identifier
              simple_identifier
               EncodeIn
         )
         ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   DECODER_f
               assignment_operator
                =
               expression
                primary
                 primary_literal
                  unbased_unsized_literal
                   '0
             ;
         function_statement_or_null
          function_statement
           statement
            statement_item
             blocking_assignment
              operator_assignment
               variable_lvalue
                hierarchical_identifier
                 identifier
                  simple_identifier
                   DECODER_f
                select_
                 bit_select
                  [
                  expression
                   primary
                    hierarchical_identifier
                     identifier
                      simple_identifier
                       EncodeIn
                  ]
               assignment_operator
                =
               expression
                primary
                 primary_literal
                  number
                   integral_number
                    binary_number
                     size
                      1
                     binary_base
                      'b
                     binary_value
                      1
             ;
         endfunction
     endclass
 <EOF>
