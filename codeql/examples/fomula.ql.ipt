ql
 moduleBody
  class_
   annotations
   class
   classname
    Person
   extends
   type
    string
   {
   member
    character
     annotations
     classname
      Person
     (
     )
     {
     formula
      conjunction_formula
       implies_formula
        formula_base
         comparison
          expr
           multExpr
            unaryExpr
             nonOpExpr
              primary
               primaryBase
                variable
                 this
          compop
           =
          expr
           multExpr
            unaryExpr
             nonOpExpr
              primary
               primaryBase
                literal
                 "asdf"
     }
   }
  predicate
   annotations
    annotation
     argsAnnotation
      bindingset
      [
      variable
       varname
        a
      ]
   head
    predicate
    predicateName
     foo
    (
    var_decls
     var_decl
      type
       int
      varname
       a
    )
   optbody
    {
    formula
     conjunction_formula
      implies_formula
       formula_base
        comparison
         expr
          multExpr
           unaryExpr
            nonOpExpr
             primary
              primaryBase
               literal
                "Ann"
         compop
          <
         expr
          multExpr
           unaryExpr
            nonOpExpr
             primary
              primaryBase
               literal
                "Anne"
      and
      formula
       conjunction_formula
        implies_formula
         formula_base
          comparison
           expr
            multExpr
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 literal
                  5
            +
            multExpr
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 literal
                  6
           compop
            >=
           expr
            multExpr
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 literal
                  11
        and
        formula
         conjunction_formula
          implies_formula
           formula_base
            comparison
             expr
              multExpr
               unaryExpr
                nonOpExpr
                 primary
                  primaryBase
                   literal
                    4
             compop
              !=
             expr
              multExpr
               unaryExpr
                nonOpExpr
                 primary
                  primaryBase
                   literal
                    5
          and
          formula
           conjunction_formula
            implies_formula
             formula_base
              negated
               not
               formula
                conjunction_formula
                 implies_formula
                  formula_base
                   comparison
                    expr
                     multExpr
                      unaryExpr
                       nonOpExpr
                        primary
                         primaryBase
                          variable
                           varname
                            a
                    compop
                     =
                    expr
                     multExpr
                      unaryExpr
                       nonOpExpr
                        primary
                         primaryBase
                          literal
                           3
                 and
                 formula
                  conjunction_formula
                   implies_formula
                    formula_base
                     comparison
                      expr
                       multExpr
                        unaryExpr
                         nonOpExpr
                          primary
                           primaryBase
                            literal
                             1
                      compop
                       !=
                      expr
                       multExpr
                        unaryExpr
                         nonOpExpr
                          primary
                           primaryBase
                            range
                             [
                             expr
                              multExpr
                               unaryExpr
                                nonOpExpr
                                 primary
                                  primaryBase
                                   literal
                                    1
                             ..
                             expr
                              multExpr
                               unaryExpr
                                nonOpExpr
                                 primary
                                  primaryBase
                                   literal
                                    2
                             ]
                   and
                   formula
                    conjunction_formula
                     implies_formula
                      formula_base
                       inrange
                        expr
                         multExpr
                          unaryExpr
                           nonOpExpr
                            primary
                             primaryBase
                              variable
                               varname
                                a
                        in
                        range
                         [
                         expr
                          multExpr
                           unaryExpr
                            nonOpExpr
                             primary
                              primaryBase
                               literal
                                2.1
                         ..
                         expr
                          multExpr
                           unaryExpr
                            nonOpExpr
                             primary
                              primaryBase
                               literal
                                10.5
                         ]
                     and
                     formula
                      conjunction_formula
                       implies_formula
                        formula_base
                         fparen
                          (
                          formula
                           conjunction_formula
                            implies_formula
                             formula_base
                              inrange
                               expr
                                multExpr
                                 unaryExpr
                                  nonOpExpr
                                   primary
                                    primaryBase
                                     variable
                                      varname
                                       a
                               in
                               range
                                [
                                expr
                                 multExpr
                                  unaryExpr
                                   nonOpExpr
                                    primary
                                     primaryBase
                                      literal
                                       2.1
                                ..
                                expr
                                 multExpr
                                  unaryExpr
                                   nonOpExpr
                                    primary
                                     primaryBase
                                      literal
                                       10.5
                                ]
                          )
                       and
                       formula
                        conjunction_formula
                         implies_formula
                          formula_base
                           quantified
                            exists
                            (
                            var_decls
                             var_decl
                              type
                               int
                              varname
                               i
                            |
                            formula
                             conjunction_formula
                              implies_formula
                               formula_base
                                instanceof
                                 expr
                                  multExpr
                                   unaryExpr
                                    nonOpExpr
                                     primary
                                      primaryBase
                                       variable
                                        varname
                                         i
                                 instanceof
                                 type
                                  classname
                                   SmallInt
                            )
                         and
                         formula
                          conjunction_formula
                           implies_formula
                            formula_base
                             quantified
                              forall
                              (
                              var_decls
                               var_decl
                                type
                                 int
                                varname
                                 i
                              |
                              formula
                               conjunction_formula
                                implies_formula
                                 formula_base
                                  instanceof
                                   expr
                                    multExpr
                                     unaryExpr
                                      nonOpExpr
                                       primary
                                        primaryBase
                                         variable
                                          varname
                                           i
                                   instanceof
                                   type
                                    classname
                                     SmallInt
                              |
                              formula
                               conjunction_formula
                                implies_formula
                                 formula_base
                                  comparison
                                   expr
                                    multExpr
                                     unaryExpr
                                      nonOpExpr
                                       primary
                                        primaryBase
                                         variable
                                          varname
                                           i
                                   compop
                                    <
                                   expr
                                    multExpr
                                     unaryExpr
                                      nonOpExpr
                                       primary
                                        primaryBase
                                         literal
                                          5
                              )
    }
  predicate
   annotations
   head
    type
     string
    predicateName
     visibility
    (
    var_decls
     var_decl
      type
       classname
        Class
      varname
       c
    )
   optbody
    {
    formula
     conjunction_formula
      implies_formula
       formula_base
        ifthen
         if
         formula
          conjunction_formula
           implies_formula
            formula_base
             call
              primary
               primaryBase
                variable
                 varname
                  c
              .
              predicateName
               isPublic
              (
              )
         then
         formula
          conjunction_formula
           implies_formula
            formula_base
             comparison
              expr
               multExpr
                unaryExpr
                 nonOpExpr
                  primary
                   primaryBase
                    variable
                     result
              compop
               =
              expr
               multExpr
                unaryExpr
                 nonOpExpr
                  primary
                   primaryBase
                    literal
                     "public"
         else
         formula
          conjunction_formula
           implies_formula
            formula_base
             comparison
              expr
               multExpr
                unaryExpr
                 nonOpExpr
                  primary
                   primaryBase
                    variable
                     result
              compop
               =
              expr
               multExpr
                unaryExpr
                 nonOpExpr
                  primary
                   primaryBase
                    literal
                     "private"
    }
  class_
   annotations
   class
   classname
    SmallInt
   extends
   type
    int
   {
   member
    character
     annotations
     classname
      SmallInt
     (
     )
     {
     formula
      conjunction_formula
       implies_formula
        formula_base
         comparison
          expr
           multExpr
            unaryExpr
             nonOpExpr
              primary
               primaryBase
                variable
                 this
          compop
           =
          expr
           multExpr
            unaryExpr
             nonOpExpr
              primary
               primaryBase
                range
                 [
                 expr
                  multExpr
                   unaryExpr
                    nonOpExpr
                     primary
                      primaryBase
                       literal
                        1
                 ..
                 expr
                  multExpr
                   unaryExpr
                    nonOpExpr
                     primary
                      primaryBase
                       literal
                        10
                 ]
     }
   }
  select
   from
   var_decls
    var_decl
     type
      classname
       SmallInt
     varname
      x
   where
   formula
    conjunction_formula
     implies_formula
      formula_base
       comparison
        expr
         multExpr
          unaryExpr
           nonOpExpr
            primary
             primaryBase
              variable
               varname
                x
          %
          unaryExpr
           nonOpExpr
            primary
             primaryBase
              literal
               2
        compop
         =
        expr
         multExpr
          unaryExpr
           nonOpExpr
            primary
             primaryBase
              literal
               0
      implies
      formula
       conjunction_formula
        implies_formula
         formula_base
          comparison
           expr
            multExpr
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 variable
                  varname
                   x
             %
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 literal
                  4
           compop
            =
           expr
            multExpr
             unaryExpr
              nonOpExpr
               primary
                primaryBase
                 literal
                  0
   select
   as_exprs
    as_expr
     expr
      multExpr
       unaryExpr
        nonOpExpr
         primary
          primaryBase
           variable
            varname
             x
 <EOF>
