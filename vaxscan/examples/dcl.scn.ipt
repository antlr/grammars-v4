program
 MODULE
 id
  dcl_command_line_parser
 opt_ident
  ;
 module_statement_list
  module_statement_list
   module_statement_list
    module_statement_list
     module_statement_list
      module_statement_list
       module_statement_list
        module_statement_list
         module_statement_list
          module_statement_list
           module_statement_list
            module_statement_list
             module_statement_list
              module_statement_list
               module_statement_list
                module_statement_list
                 module_statement_list
                  module_statement_list
                   module_statement_list
                    module_statement_list
                     module_statement
                      token_declaration
                       TOKEN
                       id
                        space
                       token_attrs
                        token_attr_list
                         token_attr
                          IGNORE
                       {
                       token_exp
                        token_exp
                         token_exp
                          token_exp1
                           token_exp2
                            token_exp3
                             {
                             token_exp
                              token_exp
                               token_exp1
                                token_exp2
                                 token_exp3
                                  string_literal
                                   ' '
                              alt_
                               |
                              token_exp1
                               token_exp2
                                token_exp3
                                 string_literal
                                  ctrl_char_literal
                                   s'ht'
                             }
                            ...
                         alt_
                          |
                         token_exp1
                          token_exp2
                           token_exp3
                            string_literal
                             '-'
                        alt_
                         |
                        token_exp1
                         token_exp2
                          token_exp3
                           string_literal
                            s'eol'
                       }
                     ;
                    module_statement
                     token_declaration
                      TOKEN
                      id
                       slash
                      token_attrs
                       token_attr_list
                        token_attr
                         ALIAS
                         '/'
                      {
                      token_exp
                       token_exp1
                        token_exp2
                         token_exp3
                          string_literal
                           '/'
                      }
                    ;
                   module_statement
                    token_declaration
                     TOKEN
                     id
                      equal
                     token_attrs
                      token_attr_list
                       token_attr
                        ALIAS
                        '='
                     {
                     token_exp
                      token_exp1
                       token_exp2
                        token_exp3
                         string_literal
                          '='
                     }
                   ;
                  module_statement
                   token_declaration
                    TOKEN
                    id
                     lp
                    token_attrs
                     token_attr_list
                      token_attr
                       ALIAS
                       '('
                    {
                    token_exp
                     token_exp1
                      token_exp2
                       token_exp3
                        string_literal
                         '('
                    }
                  ;
                 module_statement
                  token_declaration
                   TOKEN
                   id
                    rp
                   token_attrs
                    token_attr_list
                     token_attr
                      ALIAS
                      ')'
                   {
                   token_exp
                    token_exp1
                     token_exp2
                      token_exp3
                       string_literal
                        ')'
                   }
                 ;
                module_statement
                 token_declaration
                  TOKEN
                  id
                   comma
                  token_attrs
                   token_attr_list
                    token_attr
                     ALIAS
                     ','
                  {
                  token_exp
                   token_exp1
                    token_exp2
                     token_exp3
                      string_literal
                       ','
                  }
                ;
               module_statement
                token_declaration
                 TOKEN
                 id
                  prompt_sign
                 token_attrs
                 {
                 token_exp
                  token_exp1
                   token_exp1
                    token_exp2
                     token_exp3
                      {
                      token_exp
                       token_exp
                        token_exp1
                         token_exp2
                          token_exp3
                           string_literal
                            s'sos'
                       alt_
                        |
                       token_exp1
                        token_exp2
                         token_exp3
                          string_literal
                           s'eol'
                      }
                   token_exp2
                    token_exp3
                     string_literal
                      '$'
                 }
               ;
              module_statement
               set_declaration
                SET
                id
                 alpha
                (
                set_exp
                 set_exp
                  set_term
                   set_primary
                    set_item
                     string_literal
                      'a'
                     ..
                     string_literal
                      'z'
                 OR
                 set_term
                  set_primary
                   set_item
                    string_literal
                     'A'
                    ..
                    string_literal
                     'Z'
                )
              ;
             module_statement
              set_declaration
               SET
               id
                digit
               (
               set_exp
                set_term
                 set_primary
                  set_item
                   string_literal
                    '0'
                   ..
                   string_literal
                    '9'
               )
             ;
            module_statement
             set_declaration
              SET
              id
               other
              (
              set_exp
               set_exp
                set_exp
                 set_exp
                  set_exp
                   set_term
                    set_primary
                     set_item
                      string_literal
                       '_'
                  OR
                  set_term
                   set_primary
                    set_item
                     string_literal
                      '$'
                 OR
                 set_term
                  set_primary
                   set_item
                    string_literal
                     ':'
                OR
                set_term
                 set_primary
                  set_item
                   string_literal
                    '.'
               OR
               set_term
                set_primary
                 set_item
                  string_literal
                   ';'
              )
            ;
           module_statement
            set_declaration
             SET
             id
              non_quote
             (
             set_exp
              set_term
               set_primary
                NOT
                set_item
                 (
                 set_exp
                  set_exp
                   set_exp
                    set_exp
                     set_term
                      set_primary
                       set_item
                        string_literal
                         ''''
                    OR
                    set_term
                     set_primary
                      set_item
                       string_literal
                        s'eol'
                   OR
                   set_term
                    set_primary
                     set_item
                      string_literal
                       s'eos'
                  OR
                  set_term
                   set_primary
                    set_item
                     string_literal
                      s'sos'
                 )
             )
           ;
          module_statement
           token_declaration
            TOKEN
            id
             verb
            token_attrs
            {
            token_exp
             token_exp1
              token_exp1
               token_exp2
                token_exp3
                 id
                  alpha
              token_exp2
               token_exp3
                [
                token_exp
                 token_exp
                  token_exp
                   token_exp1
                    token_exp2
                     token_exp3
                      id
                       alpha
                  alt_
                   |
                  token_exp1
                   token_exp2
                    token_exp3
                     id
                      digit
                 alt_
                  |
                 token_exp1
                  token_exp2
                   token_exp3
                    id
                     other
                ]
               ...
            }
          ;
         module_statement
          token_declaration
           TOKEN
           id
            spec
           token_attrs
           {
           token_exp
            token_exp1
             token_exp2
              token_exp3
               {
               token_exp
                token_exp
                 token_exp
                  token_exp1
                   token_exp2
                    token_exp3
                     id
                      alpha
                 alt_
                  |
                 token_exp1
                  token_exp2
                   token_exp3
                    id
                     digit
                alt_
                 |
                token_exp1
                 token_exp2
                  token_exp3
                   id
                    other
               }
              ...
           }
         ;
        module_statement
         token_declaration
          TOKEN
          id
           strg
          token_attrs
          {
          token_exp
           token_exp1
            token_exp1
             token_exp1
              token_exp2
               token_exp3
                string_literal
                 ''''
             token_exp2
              token_exp3
               id
                non_quote
              ...
            token_exp2
             token_exp3
              string_literal
               ''''
          }
        ;
       module_statement
        group_declaration
         GROUP
         id
          verb_spec
         (
         group_exp
          group_exp
           group_term
            group_primary
             group_item
              id
               verb
          OR
          group_term
           group_primary
            group_item
             id
              spec
         )
       ;
      module_statement
       declaration
        variable_declaration
         DECLARE
         name_list
          name_list
           pic_id
            id
             indent
          ,
          pic_id
           id
            spec_count
         :
         type_dec
          common_type_dec
           integer
      ;
     module_statement
      declaration
       constant_declaration
        CONSTANT
        id
         tabs
        constant_type
         =
         exp
          exp1
           exp2
            exp3
             exp4
              exp5
               exp6
                exp7
                 exp8
                  exp9
                   string_literal
                    '                                       '
     ;
    module_statement
     macro_declaration
      MACRO
      id
       command_line
      macro_type
       TRIGGER
      opt_macro_attrs
      {
      opt_picture
       picture
        pic1
         pic2
          pic2
           pic2
            pic3
             pic4
              macro_item
               id
                prompt_sign
           pic3
            pic4
             macro_item
              id
               command
          pic3
           pic4
            macro_item
             [
             picture
              pic1
               pic2
                pic2
                 pic3
                  pic4
                   macro_item
                    id
                     specification
                pic3
                 pic4
                  macro_item
                   [
                   picture
                    pic1
                     pic2
                      pic3
                       pic4
                        macro_item
                         token_alias
                          ','
                   ]
             ]
           ...
      }
      ;
      body
       statement_list
        statement_list
         statement_list
          statement
           macro_declaration
            MACRO
            id
             command
            macro_type
             SYNTAX
            opt_macro_attrs
            {
            opt_picture
             picture
              pic1
               pic2
                pic2
                 pic3
                  pic4
                   id
                    v
                   :
                   macro_item
                    id
                     verb
                pic3
                 pic4
                  macro_item
                   [
                   picture
                    pic1
                     pic2
                      pic2
                       pic3
                        pic4
                         macro_item
                          token_alias
                           '/'
                      pic3
                       pic4
                        macro_item
                         id
                          qualifier
                   ]
                 ...
            }
            ;
            body
             statement_list
              statement_list
               statement_list
                statement
                 executable
                  variable_ref
                   var_ref
                    write_id
                     id
                      indent
                  =
                  exp
                   exp1
                    exp2
                     exp3
                      exp4
                       exp5
                        exp6
                         exp7
                          exp8
                           exp9
                            0
                 ;
               statement
                executable
                 variable_ref
                  var_ref
                   write_id
                    id
                     spec_count
                 =
                 exp
                  exp1
                   exp2
                    exp3
                     exp4
                      exp5
                       exp6
                        exp7
                         exp8
                          exp9
                           1
                ;
              statement
               executable
                keyword_statement
                 write_statement
                  WRITE
                  exp_list
                   exp_list
                    exp
                     exp1
                      exp2
                       exp3
                        exp4
                         exp5
                          exp6
                           exp7
                            exp8
                             exp9
                              string_literal
                               'command: '
                   ,
                   exp
                    exp1
                     exp2
                      exp3
                       exp4
                        exp5
                         exp6
                          exp7
                           exp8
                            exp9
                             ref
                              id
                               v
               ;
            END
            MACRO
           ;
         statement
          macro_declaration
           MACRO
           id
            specification
           macro_type
            SYNTAX
           opt_macro_attrs
           {
           opt_picture
            picture
             pic1
              pic2
               pic2
                pic3
                 pic4
                  id
                   s
                  :
                  macro_item
                   id
                    verb_spec
               pic3
                pic4
                 macro_item
                  [
                  picture
                   pic1
                    pic2
                     pic2
                      pic3
                       pic4
                        macro_item
                         token_alias
                          '/'
                     pic3
                      pic4
                       macro_item
                        id
                         qualifier
                  ]
                ...
           }
           ;
           body
            statement_list
             statement_list
              statement
               executable
                keyword_statement
                 write_statement
                  WRITE
                  exp_list
                   exp_list
                    exp_list
                     exp_list
                      exp
                       exp1
                        exp2
                         exp3
                          exp4
                           exp5
                            exp6
                             exp7
                              exp8
                               exp9
                                string_literal
                                 'spec: '
                     ,
                     exp
                      exp1
                       exp2
                        exp3
                         exp4
                          exp5
                           exp6
                            exp7
                             exp8
                              exp9
                               ref
                                id
                                 spec_count
                    ,
                    exp
                     exp1
                      exp2
                       exp3
                        exp4
                         exp5
                          exp6
                           exp7
                            exp8
                             exp9
                              string_literal
                               '  '
                   ,
                   exp
                    exp1
                     exp2
                      exp3
                       exp4
                        exp5
                         exp6
                          exp7
                           exp8
                            exp9
                             ref
                              id
                               s
               ;
             statement
              executable
               variable_ref
                var_ref
                 write_id
                  id
                   spec_count
               =
               exp
                exp1
                 exp2
                  exp3
                   exp4
                    exp5
                     exp5
                      exp6
                       exp7
                        exp8
                         exp9
                          ref
                           id
                            spec_count
                     +
                     exp6
                      exp7
                       exp8
                        exp9
                         1
              ;
           END
           MACRO
          ;
        statement
         macro_declaration
          MACRO
          id
           qualifier
          macro_type
           SYNTAX
          opt_macro_attrs
          {
          opt_picture
           picture
            pic1
             pic2
              pic3
               pic4
                macro_item
                 id
                  field
          }
          ;
          body
          END
          MACRO
         ;
      END
      MACRO
    ;
   module_statement
    macro_declaration
     MACRO
     id
      field
     macro_type
      SYNTAX
     opt_macro_attrs
     {
     opt_picture
      picture
       pic1
        pic2
         pic2
          pic2
           pic3
            pic4
             id
              v
             :
             macro_item
              id
               verb
          pic3
           pic4
            macro_item
             id
              change_indent
         pic3
          pic4
           id
            vv
           :
           macro_item
            {
            picture
             picture
              picture
               pic1
                pic2
                 pic2
                  pic3
                   pic4
                    macro_item
                     token_alias
                      '='
                 pic3
                  pic4
                   macro_item
                    id
                     single_value
              alt_
               |
              pic1
               pic2
                pic2
                 pic2
                  pic2
                   pic3
                    pic4
                     macro_item
                      token_alias
                       '='
                  pic3
                   pic4
                    macro_item
                     token_alias
                      '('
                 pic3
                  pic4
                   macro_item
                    id
                     item_list
                pic3
                 pic4
                  macro_item
                   token_alias
                    ')'
             alt_
              |
             pic1
              pic2
               pic3
                pic4
                 macro_item
                  id
                   no_value
            }
     }
     ;
     body
      statement_list
       statement_list
        statement_list
         statement_list
          statement_list
           statement_list
            statement_list
             statement_list
              statement
               macro_declaration
                MACRO
                id
                 change_indent
                macro_type
                 SYNTAX
                opt_macro_attrs
                {
                opt_picture
                }
                ;
                body
                 statement_list
                  statement
                   executable
                    variable_ref
                     var_ref
                      write_id
                       id
                        indent
                    =
                    exp
                     exp1
                      exp2
                       exp3
                        exp4
                         exp5
                          exp5
                           exp6
                            exp7
                             exp8
                              exp9
                               ref
                                id
                                 indent
                          +
                          exp6
                           exp7
                            exp8
                             exp9
                              1
                   ;
                END
                MACRO
               ;
             statement
              macro_declaration
               MACRO
               id
                single_value
               macro_type
                SYNTAX
               opt_macro_attrs
               {
               opt_picture
                picture
                 pic1
                  pic2
                   pic3
                    pic4
                     id
                      s
                     :
                     macro_item
                      {
                      picture
                       picture
                        pic1
                         pic2
                          pic3
                           pic4
                            macro_item
                             id
                              verb_spec
                       alt_
                        |
                       pic1
                        pic2
                         pic3
                          pic4
                           macro_item
                            id
                             strg
                      }
               }
               ;
               body
                statement_list
                 statement
                  executable
                   keyword_statement
                    answer_statement
                     ANSWER
                     exp_list
                      exp
                       exp1
                        exp2
                         exp3
                          exp4
                           exp5
                            exp6
                             exp7
                              exp8
                               exp9
                                ref
                                 id
                                  s
                  ;
               END
               MACRO
              ;
            statement
             macro_declaration
              MACRO
              id
               item_list
              macro_type
               SYNTAX
              opt_macro_attrs
              {
              opt_picture
               picture
                pic1
                 pic2
                  pic3
                   pic4
                    id
                     f
                    :
                    macro_item
                     id
                      field
                 \
                 pic2
                  pic3
                   pic4
                    macro_item
                     token_alias
                      ','
              }
              ;
              body
               statement_list
                statement
                 executable
                  keyword_statement
                   answer_statement
                    ANSWER
                    exp_list
                     exp
                      exp1
                       exp2
                        exp3
                         exp4
                          exp5
                           exp6
                            exp7
                             exp8
                              exp9
                               string_literal
                                'list above'
                 ;
              END
              MACRO
             ;
           statement
            macro_declaration
             MACRO
             id
              no_value
             macro_type
              SYNTAX
             opt_macro_attrs
             {
             opt_picture
             }
             ;
             body
              statement_list
               statement
                executable
                 keyword_statement
                  answer_statement
                   ANSWER
                   exp_list
                    exp
                     exp1
                      exp2
                       exp3
                        exp4
                         exp5
                          exp6
                           exp7
                            exp8
                             exp9
                              string_literal
                               'none'
                ;
             END
             MACRO
            ;
          statement
           executable
            variable_ref
             var_ref
              write_id
               id
                vv
            =
            exp
             exp1
              exp2
               exp3
                exp4
                 exp5
                  exp6
                   exp7
                    exp8
                     exp9
                      ref
                       ref
                        id
                         trim
                       argument_list
                        (
                        arg_list
                         arg
                          exp
                           exp1
                            exp2
                             exp3
                              exp4
                               exp5
                                exp6
                                 exp7
                                  exp8
                                   exp9
                                    ref
                                     id
                                      vv
                        )
           ;
         statement
          executable
           keyword_statement
            if_statement
             IF
             exp
              exp1
               exp2
                exp3
                 exp3
                  exp4
                   exp5
                    exp6
                     exp7
                      exp8
                       exp9
                        ref
                         id
                          vv
                       [
                       part_ref
                        exp
                         exp1
                          exp2
                           exp3
                            exp4
                             exp5
                              exp6
                               exp7
                                exp8
                                 exp9
                                  1
                        rest_of_part_ref
                         ]
                 =
                 exp4
                  exp5
                   exp6
                    exp7
                     exp8
                      exp9
                       string_literal
                        '='
             THEN
             executable_list
              executable
               variable_ref
                var_ref
                 write_id
                  id
                   vv
               =
               exp
                exp1
                 exp2
                  exp3
                   exp4
                    exp5
                     exp6
                      exp7
                       exp8
                        exp9
                         ref
                          id
                           vv
                        [
                        part_ref
                         exp
                          exp1
                           exp2
                            exp3
                             exp4
                              exp5
                               exp6
                                exp7
                                 exp8
                                  exp9
                                   2
                         rest_of_part_ref
                          ..
                          ]
              ;
             opt_else_statement
             END
             IF
          ;
        statement
         executable
          keyword_statement
           write_statement
            WRITE
            exp_list
             exp_list
              exp_list
               exp_list
                exp_list
                 exp
                  exp1
                   exp2
                    exp3
                     exp4
                      exp5
                       exp6
                        exp7
                         exp8
                          exp9
                           ref
                            id
                             tabs
                          [
                          part_ref
                           exp
                            exp1
                             exp2
                              exp3
                               exp4
                                exp5
                                 exp6
                                  exp7
                                   exp8
                                    exp9
                                     1
                           rest_of_part_ref
                            ..
                            exp
                             exp1
                              exp2
                               exp3
                                exp4
                                 exp5
                                  exp6
                                   exp7
                                    exp8
                                     exp9
                                      ref
                                       id
                                        indent
                            ]
                ,
                exp
                 exp1
                  exp2
                   exp3
                    exp4
                     exp5
                      exp6
                       exp7
                        exp8
                         exp9
                          string_literal
                           'qualifier: '
               ,
               exp
                exp1
                 exp2
                  exp3
                   exp4
                    exp5
                     exp6
                      exp7
                       exp8
                        exp9
                         ref
                          id
                           v
              ,
              exp
               exp1
                exp2
                 exp3
                  exp4
                   exp5
                    exp6
                     exp7
                      exp8
                       exp9
                        string_literal
                         '  value: '
             ,
             exp
              exp1
               exp2
                exp3
                 exp4
                  exp5
                   exp6
                    exp7
                     exp8
                      exp9
                       ref
                        id
                         vv
         ;
       statement
        executable
         variable_ref
          var_ref
           write_id
            id
             indent
         =
         exp
          exp1
           exp2
            exp3
             exp4
              exp5
               exp5
                exp6
                 exp7
                  exp8
                   exp9
                    ref
                     id
                      indent
               -
               exp6
                exp7
                 exp8
                  exp9
                   1
        ;
     END
     MACRO
   ;
  module_statement
   procedure_declaration
    proc_start
     PROCEDURE
     id
      parse_command
     opt_proc_attr
      main
    opt_parameter_list
     (
     )
    ;
    body
     statement_list
      statement
       executable
        keyword_statement
         start_scan_statement
          START
          SCAN
          scan_attr_list
           scan_attr_list
            scan_attr
             INPUT
             FILE
             exp
              exp1
               exp2
                exp3
                 exp4
                  exp5
                   exp6
                    exp7
                     exp8
                      exp9
                       string_literal
                        'dcl.dat'
           scan_attr
            OUTPUT
            FILE
            exp
             exp1
              exp2
               exp3
                exp4
                 exp5
                  exp6
                   exp7
                    exp8
                     exp9
                      string_literal
                       'sys$output'
       ;
    END
    PROCEDURE
  ;
 end_module
  END
  MODULE
 ;
 <EOF>
