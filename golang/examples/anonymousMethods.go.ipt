sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "fmt"
 eos
  \n
 importDecl
  import
  importSpec
   .
   importPath
    string_
     "time"
 eos
  \n\n
 functionDecl
  func
  AnonymousMethods
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     simpleStmt
      shortVarDecl
       identifierList
        lambd
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            functionLit
             func
             signature
              parameters
               (
               parameterDecl
                identifierList
                 s
                type_
                 typeName
                  string
               )
             block
              {
              statementList
               statement
                simpleStmt
                 expressionStmt
                  expression
                   primaryExpr
                    primaryExpr
                     operand
                      operandName
                       Sleep
                    arguments
                     (
                     expressionList
                      expression
                       primaryExpr
                        operand
                         literal
                          basicLit
                           integer
                            10
                     )
               eos
                ;
               statement
                simpleStmt
                 expressionStmt
                  expression
                   primaryExpr
                    primaryExpr
                     primaryExpr
                      operand
                       operandName
                        fmt
                     .
                     Println
                    arguments
                     (
                     expressionList
                      expression
                       primaryExpr
                        operand
                         operandName
                          s
                     )
               eos
              }
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          operand
           operandName
            lambd
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              literal
               basicLit
                string_
                 "From lambda!"
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          operand
           literal
            functionLit
             func
             signature
              parameters
               (
               )
             block
              {
              statementList
               statement
                simpleStmt
                 expressionStmt
                  expression
                   primaryExpr
                    primaryExpr
                     primaryExpr
                      operand
                       operandName
                        fmt
                     .
                     Println
                    arguments
                     (
                     expressionList
                      expression
                       primaryExpr
                        operand
                         literal
                          basicLit
                           string_
                            "Create and invoke!"
                     )
               eos
              }
         arguments
          (
          )
    eos
     \n
   }
 eos
  \n
 <EOF>
