sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "fmt"
 eos
  \n
 importDecl
  import
  importSpec
   importPath
    string_
     "io"
 eos
  \n
 importDecl
  import
  importSpec
   importPath
    string_
     "crypto/md5"
 eos
  \n
 importDecl
  import
  importSpec
   importPath
    string_
     "crypto/sha256"
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "golang.org/x/crypto/blake2s"
 eos
  \n\n
 functionDecl
  func
  WeakHash
  signature
   parameters
    (
    parameterDecl
     identifierList
      a
     type_
      typeName
       int32
    )
  block
   {
   statementList
    statement
     simpleStmt
      shortVarDecl
       identifierList
        hMd5
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           primaryExpr
            operand
             operandName
              md5
           .
           New
          arguments
           (
           )
    eos
     \n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        hSha
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           primaryExpr
            operand
             operandName
              sha256
           .
           New
          arguments
           (
           )
    eos
     \n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        hBlake2s
        ,
        err
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           primaryExpr
            operand
             operandName
              blake2s
           .
           New256
          arguments
           (
           expressionList
            expression
             primaryExpr
              operand
               literal
                basicLit
                 nil
           )
    eos
     \n
    statement
     ifStmt
      if
      expression
       expression
        primaryExpr
         operand
          operandName
           err
       ==
       expression
        primaryExpr
         operand
          literal
           basicLit
            nil
      block
       {
       statementList
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 io
              .
              WriteString
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   hMd5
               ,
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "Welcome to Go Language Secure Coding Practices"
              )
        eos
         \n
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 io
              .
              WriteString
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   hSha
               ,
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "Welcome to Go Language Secure Coding Practices"
              )
        eos
         \n
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 io
              .
              WriteString
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   hBlake2s
               ,
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "Welcome to Go Language Secure Coding Practices"
              )
        eos
         \n
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 fmt
              .
              Printf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "MD5        : %x\n"
               ,
               expression
                primaryExpr
                 primaryExpr
                  primaryExpr
                   operand
                    operandName
                     hMd5
                  .
                  Sum
                 arguments
                  (
                  expressionList
                   expression
                    primaryExpr
                     operand
                      literal
                       basicLit
                        nil
                  )
              )
        eos
         \n
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 fmt
              .
              Printf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "SHA256     : %x\n"
               ,
               expression
                primaryExpr
                 primaryExpr
                  primaryExpr
                   operand
                    operandName
                     hSha
                  .
                  Sum
                 arguments
                  (
                  expressionList
                   expression
                    primaryExpr
                     operand
                      literal
                       basicLit
                        nil
                  )
              )
        eos
         \n
        statement
         simpleStmt
          expressionStmt
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 fmt
              .
              Printf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  literal
                   basicLit
                    string_
                     "Blake2s-256: %x\n"
               ,
               expression
                primaryExpr
                 primaryExpr
                  primaryExpr
                   operand
                    operandName
                     hBlake2s
                  .
                  Sum
                 arguments
                  (
                  expressionList
                   expression
                    primaryExpr
                     operand
                      literal
                       basicLit
                        nil
                  )
              )
        eos
         \n
       }
    eos
     \n
   }
 eos
  \n
 <EOF>
