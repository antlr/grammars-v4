sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  (
  importSpec
   importPath
    string_
     "fmt"
  eos
   \n
  importSpec
   importPath
    string_
     "runtime"
  eos
   \n
  )
 eos
  \n\n
 functionDecl
  func
  f
  signature
   parameters
    (
    )
   result
    type_
     typeName
      int
  block
   {
   statementList
    statement
     returnStmt
      return
      expressionList
       expression
        primaryExpr
         operand
          literal
           basicLit
            integer
             1
    eos
     \n
   }
 eos
  \n\n
 functionDecl
  func
  g
  signature
   parameters
    (
    )
  block
   {
   }
 eos
  \n\n
 functionDecl
  func
  SwitchesExpr
  signature
   parameters
    (
    )
   result
    type_
     typeName
      int
  block
   {
   statementList
    statement
     switchStmt
      exprSwitchStmt
       switch
       simpleStmt
        shortVarDecl
         identifierList
          os
         :=
         expressionList
          expression
           primaryExpr
            primaryExpr
             operand
              operandName
               runtime
            .
            GOOS
       eos
        ;
       expression
        primaryExpr
         operand
          operandName
           os
       {
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "darwin"
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Println
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "OS X."
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "linux"
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Println
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "Linux."
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         default
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Printf
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "%s.\n"
                ,
                expression
                 primaryExpr
                  operand
                   operandName
                    os
               )
         eos
          \n
       }
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        tag
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             integer
              1
    eos
     \n
    statement
     switchStmt
      exprSwitchStmt
       switch
       expression
        primaryExpr
         operand
          operandName
           tag
       {
       exprCaseClause
        exprSwitchCase
         default
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 g
              arguments
               (
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                0
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                1
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                2
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                3
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 f
              arguments
               (
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                4
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                5
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                6
          ,
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                7
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 f
              arguments
               (
               )
         eos
          \n
       }
    eos
     \n
    statement
     switchStmt
      exprSwitchStmt
       switch
       simpleStmt
        shortVarDecl
         identifierList
          x
         :=
         expressionList
          expression
           primaryExpr
            primaryExpr
             operand
              operandName
               f
            arguments
             (
             )
       eos
        ;
       {
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           expression
            primaryExpr
             operand
              operandName
               x
           <
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 0
        :
        statementList
         statement
          returnStmt
           return
           expressionList
            expression
             -
             expression
              primaryExpr
               operand
                operandName
                 x
         eos
          \n
       exprCaseClause
        exprSwitchCase
         default
        :
        statementList
         statement
          returnStmt
           return
           expressionList
            expression
             primaryExpr
              operand
               operandName
                x
         eos
          \n
       }
    eos
     \n
    statement
     switchStmt
      exprSwitchStmt
       switch
       {
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 1
           <
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 2
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 f
              arguments
               (
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 2
           <
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 3
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 f
              arguments
               (
               )
         eos
          \n
       exprCaseClause
        exprSwitchCase
         case
         expressionList
          expression
           expression
            primaryExpr
             operand
              operandName
               tag
           ==
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 4
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 f
              arguments
               (
               )
         eos
          \n
       }
    eos
     \n\n
    statement
     returnStmt
      return
      expressionList
       expression
        primaryExpr
         operand
          literal
           basicLit
            integer
             1
    eos
     \n
   }
 eos
  <EOF>
 <EOF>
