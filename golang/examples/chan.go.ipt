sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  (
  importSpec
   importPath
    string_
     "fmt"
  eos
   \n
  importSpec
   importPath
    string_
     "time"
  eos
   \n
  )
 eos
  \n\n
 functionDecl
  func
  Ch
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     declaration
      varDecl
       var
       varSpec
        identifierList
         ball
        =
        expressionList
         expression
          primaryExpr
           primaryExpr
            operand
             operandName
              make
           arguments
            (
            type_
             typeLit
              channelType
               chan
               elementType
                type_
                 typeName
                  string
            )
    eos
     \n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        kickBall
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            functionLit
             func
             signature
              parameters
               (
               parameterDecl
                identifierList
                 playerName
                type_
                 typeName
                  string
               )
             block
              {
              statementList
               statement
                forStmt
                 for
                 block
                  {
                  statementList
                   statement
                    simpleStmt
                     expressionStmt
                      expression
                       primaryExpr
                        primaryExpr
                         primaryExpr
                          operand
                           operandName
                            fmt
                         .
                         Println
                        arguments
                         (
                         expressionList
                          expression
                           <-
                           expression
                            primaryExpr
                             operand
                              operandName
                               ball
                          ,
                          expression
                           primaryExpr
                            operand
                             literal
                              basicLit
                               string_
                                "kicked the ball."
                         )
                   eos
                    \n
                   statement
                    simpleStmt
                     expressionStmt
                      expression
                       primaryExpr
                        primaryExpr
                         primaryExpr
                          operand
                           operandName
                            time
                         .
                         Sleep
                        arguments
                         (
                         expressionList
                          expression
                           primaryExpr
                            primaryExpr
                             operand
                              operandName
                               time
                            .
                            Second
                         )
                   eos
                    \n
                   statement
                    simpleStmt
                     sendStmt
                      expression
                       primaryExpr
                        operand
                         operandName
                          ball
                      <-
                      expression
                       primaryExpr
                        operand
                         operandName
                          playerName
                   eos
                    \n
                  }
               eos
                \n
              }
    eos
     \n
    statement
     goStmt
      go
      expression
       primaryExpr
        primaryExpr
         operand
          operandName
           kickBall
        arguments
         (
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "John"
         )
    eos
     \n
    statement
     goStmt
      go
      expression
       primaryExpr
        primaryExpr
         operand
          operandName
           kickBall
        arguments
         (
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "Alice"
         )
    eos
     \n
    statement
     goStmt
      go
      expression
       primaryExpr
        primaryExpr
         operand
          operandName
           kickBall
        arguments
         (
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "Bob"
         )
    eos
     \n
    statement
     goStmt
      go
      expression
       primaryExpr
        primaryExpr
         operand
          operandName
           kickBall
        arguments
         (
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               string_
                "Emily"
         )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             time
          .
          Sleep
         arguments
          (
          expressionList
           expression
            expression
             primaryExpr
              primaryExpr
               operand
                operandName
                 time
              .
              Second
            *
            expression
             primaryExpr
              operand
               literal
                basicLit
                 integer
                  2
          )
    eos
     \n
    statement
     simpleStmt
      sendStmt
       expression
        primaryExpr
         operand
          operandName
           ball
       <-
       expression
        primaryExpr
         operand
          literal
           basicLit
            string_
             "referee"
    eos
     \n\n
    statement
     declaration
      varDecl
       var
       varSpec
        identifierList
         c
        type_
         typeLit
          channelType
           chan
           elementType
            type_
             typeName
              bool
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        <-
        expression
         primaryExpr
          operand
           operandName
            c
    eos
     \n
   }
 eos
  \n
 <EOF>
