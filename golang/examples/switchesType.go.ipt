sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "fmt"
 eos
  \n\n
 declaration
  typeDecl
   type
   typeSpec
    typeDef
     O
     type_
      typeLit
       structType
        struct
        {
        }
 eos
  \n\n
 methodDecl
  func
  receiver
   parameters
    (
    parameterDecl
     type_
      typeName
       O
    )
  typee
  signature
   parameters
    (
    )
  block
   {
   }
 eos
  \n\n
 functionDecl
  func
  TypeSwitch
  signature
   parameters
    (
    parameterDecl
     identifierList
      i
     type_
      typeLit
       interfaceType
        interface
        {
        }
    )
  block
   {
   statementList
    statement
     switchStmt
      typeSwitchStmt
       switch
       typeSwitchGuard
        v
        :=
        primaryExpr
         operand
          operandName
           i
        .
        (
        type
        )
       {
       typeCaseClause
        typeSwitchCase
         case
         typeList
          type_
           typeName
            int
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Printf
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "Twice %v is %v\n"
                ,
                expression
                 primaryExpr
                  operand
                   operandName
                    v
                ,
                expression
                 expression
                  primaryExpr
                   operand
                    operandName
                     v
                 *
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       2
               )
         eos
          \n
       typeCaseClause
        typeSwitchCase
         case
         typeList
          type_
           typeName
            string
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Printf
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "%q is %v bytes long\n"
                ,
                expression
                 primaryExpr
                  operand
                   operandName
                    v
                ,
                expression
                 primaryExpr
                  primaryExpr
                   operand
                    operandName
                     len
                  arguments
                   (
                   expressionList
                    expression
                     primaryExpr
                      operand
                       operandName
                        v
                   )
               )
         eos
          \n
       typeCaseClause
        typeSwitchCase
         case
         typeList
          type_
           typeName
            byte
          ,
          type_
           typeName
            uintptr
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Printf
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "Type i %T"
                ,
                expression
                 primaryExpr
                  operand
                   operandName
                    v
               )
         eos
          \n
       typeCaseClause
        typeSwitchCase
         default
        :
        statementList
         statement
          simpleStmt
           expressionStmt
            expression
             primaryExpr
              primaryExpr
               primaryExpr
                operand
                 operandName
                  fmt
               .
               Printf
              arguments
               (
               expressionList
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     string_
                      "I don't know about type %T!\n"
                ,
                expression
                 primaryExpr
                  operand
                   operandName
                    v
               )
         eos
          \n
       }
    eos
     \n
   }
 eos
  \n
 <EOF>
