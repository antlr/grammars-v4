sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "fmt"
 eos
  \n\n
 declaration
  typeDecl
   type
   typeSpec
    typeDef
     TwoS
     type_
      typeLit
       structType
        struct
        {
        }
 eos
  \n\n
 functionDecl
  func
  TypeAssertions
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     declaration
      varDecl
       var
       varSpec
        identifierList
         i
        type_
         typeLit
          interfaceType
           interface
           {
           }
        =
        expressionList
         expression
          primaryExpr
           operand
            literal
             basicLit
              string_
               "hello"
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        s
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             i
          typeAssertion
           .
           (
           type_
            typeName
             string
           )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               s
          )
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        s
        ,
        ok
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             i
          typeAssertion
           .
           (
           type_
            typeName
             string
           )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               s
           ,
           expression
            primaryExpr
             operand
              operandName
               ok
          )
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        f
        ,
        ok
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             i
          typeAssertion
           .
           (
           type_
            typeName
             float64
           )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               f
           ,
           expression
            primaryExpr
             operand
              operandName
               ok
          )
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        t
        ,
        ok
       :=
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             i
          typeAssertion
           .
           (
           type_
            typeName
             TwoS
           )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               t
           ,
           expression
            primaryExpr
             operand
              operandName
               ok
          )
    eos
     \n\n
   }
 eos
  \n
 <EOF>
