sourceFile
 packageClause
  package
  main
 eos
  \n\n
 importDecl
  import
  importSpec
   importPath
    string_
     "fmt"
 eos
  \n\n
 declaration
  typeDecl
   type
   typeSpec
    typeDef
     Person
     type_
      typeLit
       structType
        struct
        {
        fieldDecl
         identifierList
          name
         type_
          typeName
           string
        eos
         \n
        fieldDecl
         identifierList
          age
         type_
          typeName
           int32
        eos
         \n
        }
 eos
  \n\n
 methodDecl
  func
  receiver
   parameters
    (
    parameterDecl
     identifierList
      p
     type_
      typeName
       Person
    )
  IsAdult
  signature
   parameters
    (
    )
   result
    type_
     typeName
      bool
  block
   {
   statementList
    statement
     returnStmt
      return
      expressionList
       expression
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             p
          .
          age
        >=
        expression
         primaryExpr
          operand
           literal
            basicLit
             integer
              18
    eos
     \n
   }
 eos
  \n\n
 declaration
  typeDecl
   type
   typeSpec
    typeDef
     Employee
     type_
      typeLit
       structType
        struct
        {
        fieldDecl
         identifierList
          position
         type_
          typeName
           string
        eos
         \n
        }
 eos
  \n\n
 methodDecl
  func
  receiver
   parameters
    (
    parameterDecl
     identifierList
      e
     type_
      typeName
       Employee
    )
  IsManager
  signature
   parameters
    (
    )
   result
    type_
     typeName
      bool
  block
   {
   statementList
    statement
     returnStmt
      return
      expressionList
       expression
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             e
          .
          position
        ==
        expression
         primaryExpr
          operand
           literal
            basicLit
             string_
              "manager"
    eos
     \n
   }
 eos
  \n\n
 declaration
  typeDecl
   type
   typeSpec
    typeDef
     Record
     type_
      typeLit
       structType
        struct
        {
        fieldDecl
         embeddedField
          typeName
           Person
        eos
         \n
        fieldDecl
         embeddedField
          typeName
           Employee
        eos
         \n
        }
 eos
  \n\n
 functionDecl
  func
  main
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     simpleStmt
      shortVarDecl
       identifierList
        person
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            compositeLit
             literalType
              typeName
               Person
             literalValue
              {
              elementList
               keyedElement
                key
                 expression
                  primaryExpr
                   operand
                    operandName
                     name
                :
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      string_
                       "Michal"
               ,
               keyedElement
                key
                 expression
                  primaryExpr
                   operand
                    operandName
                     age
                :
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       29
              }
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               person
          )
    eos
     \n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        record
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            compositeLit
             literalType
              typeName
               Record
             literalValue
              {
              }
    eos
     \n
    statement
     simpleStmt
      assignment
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             record
          .
          name
       assign_op
        =
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             string_
              "Michal"
    eos
     \n
    statement
     simpleStmt
      assignment
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             record
          .
          age
       assign_op
        =
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             integer
              29
    eos
     \n
    statement
     simpleStmt
      assignment
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             record
          .
          position
       assign_op
        =
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             string_
              "software engineer"
    eos
     \n\n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               record
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              operand
               operandName
                record
             .
             name
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              operand
               operandName
                record
             .
             age
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              operand
               operandName
                record
             .
             position
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 record
              .
              IsAdult
             arguments
              (
              )
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 record
              .
              IsManager
             arguments
              (
              )
          )
    eos
     \n
   }
 eos
  <EOF>
 <EOF>
