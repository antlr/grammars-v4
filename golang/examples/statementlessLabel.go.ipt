sourceFile
 packageClause
  package
  pkg
 eos
  \n\n
 functionDecl
  func
  fn
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     forStmt
      for
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             simpleStmt
              expressionStmt
               expression
                primaryExpr
                 primaryExpr
                  operand
                   operandName
                    println
                 arguments
                  (
                  )
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
       }
    eos
     \n
    statement
     forStmt
      for
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             breakStmt
              break
            eos
             \n
           }
          else
          block
           {
           statementList
            statement
             breakStmt
              break
            eos
             \n
           }
        eos
         \n
       }
    eos
     \n
    statement
     forStmt
      for
      rangeClause
       range
       expression
        primaryExpr
         conversion
          type_
           (
           type_
            typeLit
             sliceType
              [
              ]
              elementType
               type_
                typeName
                 int
           )
          (
          expression
           primaryExpr
            operand
             literal
              basicLit
               nil
          )
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             simpleStmt
              expressionStmt
               expression
                primaryExpr
                 primaryExpr
                  operand
                   operandName
                    println
                 arguments
                  (
                  )
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
       }
    eos
     \n
    statement
     forStmt
      for
      rangeClause
       range
       expression
        primaryExpr
         conversion
          type_
           (
           type_
            typeLit
             mapType
              map
              [
              type_
               typeName
                int
              ]
              elementType
               type_
                typeName
                 int
           )
          (
          expression
           primaryExpr
            operand
             literal
              basicLit
               nil
          )
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             simpleStmt
              expressionStmt
               expression
                primaryExpr
                 primaryExpr
                  operand
                   operandName
                    println
                 arguments
                  (
                  )
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
       }
    eos
     \n
    statement
     forStmt
      for
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             gotoStmt
              goto
              Label
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
        statement
         labeledStmt
          Label
          :
        eos
       }
    eos
     \n
    statement
     forStmt
      for
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             continueStmt
              continue
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
       }
    eos
     \n
    statement
     forStmt
      for
      block
       {
       statementList
        statement
         ifStmt
          if
          expression
           primaryExpr
            operand
             operandName
              true
          block
           {
           statementList
            statement
             continueStmt
              continue
            eos
             \n
           }
        eos
         \n
        statement
         breakStmt
          break
        eos
         \n
       }
    eos
     \n
   }
 eos
  \n\n
 declaration
  varDecl
   var
   varSpec
    identifierList
     z
    =
    expressionList
     expression
      primaryExpr
       operand
        literal
         functionLit
          func
          signature
           parameters
            (
            )
          block
           {
           statementList
            statement
             forStmt
              for
              block
               {
               statementList
                statement
                 ifStmt
                  if
                  expression
                   primaryExpr
                    operand
                     operandName
                      true
                  block
                   {
                   statementList
                    statement
                     simpleStmt
                      expressionStmt
                       expression
                        primaryExpr
                         primaryExpr
                          operand
                           operandName
                            println
                         arguments
                          (
                          )
                    eos
                     \n
                   }
                eos
                 \n
                statement
                 breakStmt
                  break
                eos
                 \n
               }
            eos
             \n
           }
 eos
  \n
 <EOF>
