sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  (
  importSpec
   importPath
    string_
     "fmt"
  eos
   \n
  )
 eos
  \n\n
 functionDecl
  func
  ArrayDecls
  signature
   parameters
    (
    )
  block
   {
   statementList
    statement
     declaration
      varDecl
       var
       varSpec
        identifierList
         a
        type_
         typeLit
          arrayType
           [
           arrayLength
            expression
             primaryExpr
              operand
               literal
                basicLit
                 integer
                  2
           ]
           elementType
            type_
             typeName
              string
    eos
     \n
    statement
     simpleStmt
      assignment
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             a
          index
           [
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 0
           ]
       assign_op
        =
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             string_
              "Hello"
    eos
     \n
    statement
     simpleStmt
      assignment
       expressionList
        expression
         primaryExpr
          primaryExpr
           operand
            operandName
             a
          index
           [
           expression
            primaryExpr
             operand
              literal
               basicLit
                integer
                 1
           ]
       assign_op
        =
       expressionList
        expression
         primaryExpr
          operand
           literal
            basicLit
             string_
              "World"
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             primaryExpr
              operand
               operandName
                a
             index
              [
              expression
               primaryExpr
                operand
                 literal
                  basicLit
                   integer
                    0
              ]
           ,
           expression
            primaryExpr
             primaryExpr
              operand
               operandName
                a
             index
              [
              expression
               primaryExpr
                operand
                 literal
                  basicLit
                   integer
                    1
              ]
          )
    eos
     \n\n
    statement
     simpleStmt
      shortVarDecl
       identifierList
        primes
       :=
       expressionList
        expression
         primaryExpr
          operand
           literal
            compositeLit
             literalType
              arrayType
               [
               arrayLength
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     integer
                      6
               ]
               elementType
                type_
                 typeName
                  int
             literalValue
              {
              elementList
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       2
               ,
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       3
               ,
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       5
               ,
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       7
               ,
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       11
               ,
               keyedElement
                element
                 expression
                  primaryExpr
                   operand
                    literal
                     basicLit
                      integer
                       13
              }
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              operandName
               primes
          )
    eos
     \n\n
    statement
     declaration
      varDecl
       var
       varSpec
        identifierList
         twoD
        type_
         typeLit
          arrayType
           [
           arrayLength
            expression
             primaryExpr
              operand
               literal
                basicLit
                 integer
                  2
           ]
           elementType
            type_
             typeLit
              arrayType
               [
               arrayLength
                expression
                 primaryExpr
                  operand
                   literal
                    basicLit
                     integer
                      4
               ]
               elementType
                type_
                 typeName
                  int
    eos
     \n
    statement
     forStmt
      for
      forClause
       simpleStmt
        shortVarDecl
         identifierList
          i
         :=
         expressionList
          expression
           primaryExpr
            operand
             literal
              basicLit
               integer
                0
       eos
        ;
       expression
        expression
         primaryExpr
          operand
           operandName
            i
        <
        expression
         primaryExpr
          operand
           literal
            basicLit
             integer
              2
       eos
        ;
       simpleStmt
        incDecStmt
         expression
          primaryExpr
           operand
            operandName
             i
         ++
      block
       {
       statementList
        statement
         forStmt
          for
          forClause
           simpleStmt
            shortVarDecl
             identifierList
              j
             :=
             expressionList
              expression
               primaryExpr
                operand
                 literal
                  basicLit
                   integer
                    0
           eos
            ;
           expression
            expression
             primaryExpr
              operand
               operandName
                j
            <
            expression
             primaryExpr
              operand
               literal
                basicLit
                 integer
                  3
           eos
            ;
           simpleStmt
            incDecStmt
             expression
              primaryExpr
               operand
                operandName
                 j
             ++
          block
           {
           statementList
            statement
             simpleStmt
              assignment
               expressionList
                expression
                 primaryExpr
                  primaryExpr
                   operand
                    operandName
                     twoD
                    typeArgs
                     [
                     typeList
                      type_
                       typeName
                        i
                     ]
                  index
                   [
                   expression
                    primaryExpr
                     operand
                      operandName
                       j
                   ]
               assign_op
                =
               expressionList
                expression
                 expression
                  primaryExpr
                   operand
                    operandName
                     i
                 +
                 expression
                  primaryExpr
                   operand
                    operandName
                     j
            eos
             \n
           }
        eos
         \n
       }
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Println
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              literal
               basicLit
                string_
                 "2d: "
           ,
           expression
            primaryExpr
             operand
              operandName
               twoD
          )
    eos
     \n
   }
 eos
  <EOF>
 <EOF>
