sourceFile
 packageClause
  package
  samples
 eos
  \n\n
 importDecl
  import
  (
  importSpec
   importPath
    string_
     "fmt"
  eos
   \n
  importSpec
   importPath
    string_
     "reflect"
  eos
   \n
  )
 eos
  \n\n
 functionDecl
  func
  ParamTest
  signature
   parameters
    (
    parameterDecl
     identifierList
      a
      ,
      b
     type_
      typeName
       int32
    ,
    parameterDecl
     identifierList
      c
     type_
      typeName
       int16
    )
  block
   {
   statementList
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Printf
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              literal
               basicLit
                string_
                 "Type of a is %s\n"
           ,
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 reflect
              .
              TypeOf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   a
              )
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Printf
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              literal
               basicLit
                string_
                 "Type of a is %s\n"
           ,
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 reflect
              .
              TypeOf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   b
              )
          )
    eos
     \n
    statement
     simpleStmt
      expressionStmt
       expression
        primaryExpr
         primaryExpr
          primaryExpr
           operand
            operandName
             fmt
          .
          Printf
         arguments
          (
          expressionList
           expression
            primaryExpr
             operand
              literal
               basicLit
                string_
                 "Type of a is %s\n"
           ,
           expression
            primaryExpr
             primaryExpr
              primaryExpr
               operand
                operandName
                 reflect
              .
              TypeOf
             arguments
              (
              expressionList
               expression
                primaryExpr
                 operand
                  operandName
                   c
              )
          )
    eos
     \n
   }
 eos
  <EOF>
 <EOF>
