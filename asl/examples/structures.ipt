asl
 statement
  simple_statement
   struct_statement
    struct_definition
     define
     structure
     struct_type
      detector_struct
     \n
     member_name
      geog_addr
     member_type
      Text
     \n
     member_name
      status
     member_type
      user_defined_type
       METS_DETECTOR
       .
       Status_type
     \n
     enddefine
  \n\n
 statement
  simple_statement
   struct_statement
    struct_definition
     define
     structure
     struct_type
      plan_struct
     \n
     member_name
      plan_number
     member_type
      Integer
     \n
     member_name
      signs
     member_type
      struct_type
       sign_struct
     \n
     member_name
      signals
     member_type
      struct_type
       signal_struct
     \n
     enddefine
  \n\n
 statement
  simple_statement
   struct_statement
    struct_instantiation
     struct_
      {
      detector_status
      }
     is
     struct_type
      detector_struct
  \n
 statement
  sequential_logic_statement
   for_loop
    for
    variable
     detector
    in
    set_variable
     {
     variable
      detectors
     }
    do
    \n
    statement
     simple_statement
      struct_statement
       struct_assembly
        append
        [
        value_list
         struct_value
          object_attribute
           variable
            detector
           .
           attribute
            Geog_addr
         ,
         struct_value
          object_attribute
           variable
            detector
           .
           attribute
            Status
        ]
        to
        struct_
         {
         detector_status
         }
     \n
    endfor
  \n
 statement
  simple_statement
   struct_statement
    struct_instantiation
     struct_
      {
      plan_devices
      }
     is
     struct_type
      plan_struct
  \n
 statement
  sequential_logic_statement
   for_loop
    for
    variable
     a_plan
    in
    set_variable
     {
     variable
      sensor_plans
     }
    do
    \n
    statement
     simple_statement
      relationship_navigation
       set_variable
        {
        variable
         signs
        }
       =
       variable
        a_plan
       ->
       relationship_spec
        R1001
     \n
    statement
     simple_statement
      relationship_navigation
       set_variable
        {
        variable
         signals
        }
       =
       variable
        a_plan
       ->
       relationship_spec
        R1002
     \n
    statement
     simple_statement
      struct_statement
       struct_assembly
        append
        [
        value_list
         struct_value
          object_attribute
           variable
            plan
           .
           attribute
            Plan_no
         ,
         struct_value
          set_variable
           {
           variable
            signs
           }
         ,
         struct_value
          set_variable
           {
           variable
            signals
           }
        ]
        to
        struct_
         {
         plan_devices
         }
        ordered by
        member_name
         plan_number
     \n
    endfor
  \n\n
 statement
  simple_statement
   struct_statement
    struct_for_loop
     for
     [
     variable_list
      variable
       address
      ,
      variable
       status
     ]
     in
     struct_
      {
      detector_status
      }
     do
     \n
     statement
      simple_statement
       event_generation
        internal_event_generation
         %generate
         event_specification
          E_METSDET5
          :
          Detector_Status
         (
         event_parameters
          event_parameter
           variable
            address
          ,
          event_parameter
           variable
            status
         )
         ;
      \n
     endfor
  \n\n
 statement
  simple_statement
   struct_statement
    struct_for_loop
     for
     [
     variable_list
      variable
       plan_no
      ,
      struct_
       {
       signs
       }
      ,
      struct_
       {
       signals
       }
     ]
     in
     struct_
      {
      plan_devices
      }
     do
     \n
     statement
      simple_statement
       event_generation
        internal_event_generation
         %generate
         event_specification
          E_METSPL6
          :
          Plan_Devices
         (
         event_parameters
          event_parameter
           variable
            plan_no
         )
         ;
      \n
     statement
      simple_statement
       struct_statement
        struct_for_loop
         for
         [
         variable_list
          variable
           address
          ,
          variable
           setting
         ]
         in
         struct_
          {
          signs
          }
         do
         \n
         statement
          simple_statement
           event_generation
            internal_event_generation
             %generate
             event_specification
              E_METSPL7
              :
              Plan_Sign
             (
             event_parameters
              event_parameter
               variable
                address
              ,
              event_parameter
               variable
                setting
             )
             ;
          \n
         endfor
      \n
     statement
      simple_statement
       struct_statement
        struct_for_loop
         for
         [
         variable_list
          variable
           address
          ,
          variable
           setting
         ]
         in
         struct_
          {
          signals
          }
         do
         \n
         statement
          simple_statement
           event_generation
            internal_event_generation
             %generate
             event_specification
              E_METSPL8
              :
              Plan_Signal
             (
             event_parameters
              event_parameter
               variable
                address
              ,
              event_parameter
               variable
                setting
             )
             ;
          \n
         endfor
      \n
     statement
      simple_statement
       event_generation
        internal_event_generation
         %generate
         event_specification
          E_METSPL9
          :
          Plan_Data_Complete
         (
         )
         ;
      \n
     endfor
  \n\n
 statement
  simple_statement
   struct_statement
    order_struct
     struct_
      {
      ordered_dets
      }
     =
     struct_
      {
      detectors
      }
     ordered by
     member_name
      address
  \n
 statement
  simple_statement
   struct_statement
    order_struct
     struct_
      {
      ordered_updates
      }
     =
     struct_
      {
      updates
      }
     reverse ordered by
     member_name
      time_of_update
  \n\n
 statement
  simple_statement
   struct_statement
    struct_subset
     struct_
      {
      detector_updates
      }
     =
     struct_
      {
      all_updates
      }
     where
     struct_condition
      member_name
       geog_addr
      logical_operator
       equality_operator
        =
      component
       variable
        address
  \n
 statement
  simple_statement
   struct_statement
    struct_subset
     struct_
      {
      ib_signals
      }
     =
     struct_
      {
      all_indicators
      }
     where
     struct_condition
      member_name
       type
      logical_operator
       equality_operator
        =
      component
       constant
        enum_value
         SIGNAL
      &
      struct_condition
       member_name
        inboundary
       logical_operator
        equality_operator
         =
       component
        constant
         TRUE
  \n
 <EOF>
