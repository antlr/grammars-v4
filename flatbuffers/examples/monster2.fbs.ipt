schema
 include_
  include
  "include_test1.fbs"
  ;
 namespace_decl
  namespace
  identifier
   MyGame
  .
  identifier
   Example2
  ;
 type_decl
  table
  identifier
   Monster
  metadata
  {
  }
 namespace_decl
  namespace
  identifier
   MyGame
  .
  identifier
   Example
  ;
 attribute_decl
  attribute
  "priority"
  ;
 enum_decl
  enum
  identifier
   Color
  :
  type_
   byte
  metadata
   (
   commasep_ident_with_opt_single_value
    ident_with_opt_single_value
     identifier
      bit_flags
   )
  {
  commasep_enumval_decl
   enumval_decl
    ns_ident
     identifier
      Red
    =
    integer_const
     0
   ,
   enumval_decl
    ns_ident
     identifier
      Green
   ,
   enumval_decl
    ns_ident
     identifier
      Blue
    =
    integer_const
     3
  }
 union_decl
  union
  identifier
   Any
  metadata
  {
  commasep_unionval_with_opt_alias
   unionval_with_opt_alias
    ns_ident
     identifier
      Monster
   ,
   unionval_with_opt_alias
    ns_ident
     identifier
      TestSimpleTableWithEnum
   ,
   unionval_with_opt_alias
    ns_ident
     identifier
      MyGame
     .
     identifier
      Example2
     .
     identifier
      Monster
  }
 type_decl
  struct
  identifier
   Test
  metadata
  {
  field_decl
   identifier
    a
   :
   type_
    short
   metadata
   ;
  field_decl
   identifier
    b
   :
   type_
    byte
   metadata
   ;
  }
 type_decl
  table
  identifier
   TestSimpleTableWithEnum
  metadata
   (
   commasep_ident_with_opt_single_value
    ident_with_opt_single_value
     identifier
      csharp_partial
   )
  {
  field_decl
   identifier
    color
   :
   type_
    ns_ident
     identifier
      Color
   =
   scalar
    identifier
     Green
   metadata
   ;
  }
 type_decl
  struct
  identifier
   Vec3
  metadata
   (
   commasep_ident_with_opt_single_value
    ident_with_opt_single_value
     identifier
      force_align
     :
     single_value
      scalar
       16
   )
  {
  field_decl
   identifier
    x
   :
   type_
    float
   metadata
   ;
  field_decl
   identifier
    y
   :
   type_
    float
   metadata
   ;
  field_decl
   identifier
    z
   :
   type_
    float
   metadata
   ;
  field_decl
   identifier
    test1
   :
   type_
    double
   metadata
   ;
  field_decl
   identifier
    test2
   :
   type_
    ns_ident
     identifier
      Color
   metadata
   ;
  field_decl
   identifier
    test3
   :
   type_
    ns_ident
     identifier
      Test
   metadata
   ;
  }
 type_decl
  table
  identifier
   Stat
  metadata
  {
  field_decl
   identifier
    id
   :
   type_
    string
   metadata
   ;
  field_decl
   identifier
    val
   :
   type_
    long
   metadata
   ;
  field_decl
   identifier
    count
   :
   type_
    ushort
   metadata
   ;
  }
 type_decl
  table
  identifier
   Monster
  metadata
  {
  field_decl
   identifier
    pos
   :
   type_
    ns_ident
     identifier
      Vec3
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        0
    )
   ;
  field_decl
   identifier
    hp
   :
   type_
    short
   =
   scalar
    100
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        2
    )
   ;
  field_decl
   identifier
    mana
   :
   type_
    short
   =
   scalar
    150
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        1
    )
   ;
  field_decl
   identifier
    name
   :
   type_
    string
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        3
     ,
     ident_with_opt_single_value
      identifier
       required
     ,
     ident_with_opt_single_value
      identifier
       key
    )
   ;
  field_decl
   identifier
    color
   :
   type_
    ns_ident
     identifier
      Color
   =
   scalar
    identifier
     Blue
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        6
    )
   ;
  field_decl
   identifier
    inventory
   :
   type_
    [
    type_
     ubyte
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        5
    )
   ;
  field_decl
   identifier
    friendly
   :
   type_
    bool
   =
   scalar
    false
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       deprecated
     ,
     ident_with_opt_single_value
      identifier
       priority
      :
      single_value
       scalar
        1
     ,
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        4
    )
   ;
  field_decl
   identifier
    testarrayoftables
   :
   type_
    [
    type_
     ns_ident
      identifier
       Monster
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        11
    )
   ;
  field_decl
   identifier
    testarrayofstring
   :
   type_
    [
    type_
     string
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        10
    )
   ;
  field_decl
   identifier
    testarrayofstring2
   :
   type_
    [
    type_
     string
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        28
    )
   ;
  field_decl
   identifier
    testarrayofbools
   :
   type_
    [
    type_
     bool
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        24
    )
   ;
  field_decl
   identifier
    enemy
   :
   type_
    ns_ident
     identifier
      MyGame
     .
     identifier
      Example
     .
     identifier
      Monster
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        12
    )
   ;
  field_decl
   identifier
    test
   :
   type_
    ns_ident
     identifier
      Any
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        8
    )
   ;
  field_decl
   identifier
    test4
   :
   type_
    [
    type_
     ns_ident
      identifier
       Test
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        9
    )
   ;
  field_decl
   identifier
    testnestedflatbuffer
   :
   type_
    [
    type_
     ubyte
    ]
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        13
     ,
     ident_with_opt_single_value
      identifier
       nested_flatbuffer
      :
      single_value
       "Monster"
    )
   ;
  field_decl
   identifier
    testempty
   :
   type_
    ns_ident
     identifier
      Stat
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        14
    )
   ;
  field_decl
   identifier
    testbool
   :
   type_
    bool
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        15
    )
   ;
  field_decl
   identifier
    testhashs32_fnv1
   :
   type_
    int
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        16
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1_32"
    )
   ;
  field_decl
   identifier
    testhashu32_fnv1
   :
   type_
    uint
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        17
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1_32"
    )
   ;
  field_decl
   identifier
    testhashs64_fnv1
   :
   type_
    long
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        18
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1_64"
    )
   ;
  field_decl
   identifier
    testhashu64_fnv1
   :
   type_
    ulong
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        19
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1_64"
    )
   ;
  field_decl
   identifier
    testhashs32_fnv1a
   :
   type_
    int
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        20
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1a_32"
    )
   ;
  field_decl
   identifier
    testhashu32_fnv1a
   :
   type_
    uint
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        21
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1a_32"
     ,
     ident_with_opt_single_value
      identifier
       cpp_type
      :
      single_value
       "Stat"
    )
   ;
  field_decl
   identifier
    testhashs64_fnv1a
   :
   type_
    long
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        22
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1a_64"
    )
   ;
  field_decl
   identifier
    testhashu64_fnv1a
   :
   type_
    ulong
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        23
     ,
     ident_with_opt_single_value
      identifier
       hash
      :
      single_value
       "fnv1a_64"
    )
   ;
  field_decl
   identifier
    testf
   :
   type_
    float
   =
   scalar
    3.14159
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        25
    )
   ;
  field_decl
   identifier
    testf2
   :
   type_
    float
   =
   scalar
    3
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        26
    )
   ;
  field_decl
   identifier
    testf3
   :
   type_
    float
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       id
      :
      single_value
       scalar
        27
    )
   ;
  }
 rpc_decl
  rpc_service
  identifier
   MonsterStorage
  {
  rpc_method
   identifier
    Store
   (
   identifier
    Monster
   )
   :
   identifier
    Stat
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       streaming
      :
      single_value
       "none"
    )
   ;
  rpc_method
   identifier
    Retrieve
   (
   identifier
    Stat
   )
   :
   identifier
    Monster
   metadata
    (
    commasep_ident_with_opt_single_value
     ident_with_opt_single_value
      identifier
       streaming
      :
      single_value
       "server"
     ,
     ident_with_opt_single_value
      identifier
       idempotent
    )
   ;
  }
 root_decl
  root_type
  identifier
   Monster
  ;
 file_identifier_decl
  file_identifier
  "MONS"
  ;
 file_extension_decl
  file_extension
  "mon"
  ;
 <EOF>
