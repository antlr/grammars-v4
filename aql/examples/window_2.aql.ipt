arangodb_query
 data_query
  data_access_query
   for_op
    for_in
     FOR
     id_
      t
     IN
     expr
      literal
       id_
        observations
    collect
     COLLECT
     expr
      expr
       literal
        id_
         subject
      =
      expr
       expr
        literal
         id_
          t
       .
       expr
        literal
         id_
          subject
     INTO
     expr
      expr
       literal
        id_
         group
      =
      expr
       literal
        id_
         t
   for_op
    for_in
     let_list
      LET
      expr
       expr
        literal
         id_
          subquery
       =
       expr
        (
        data_access_query
         for_op
          for_in
           FOR
           id_
            t2
           IN
           expr
            literal
             id_
              group
          sort
           SORT
           expr
            expr
             literal
              id_
               t2
            .
            expr
             literal
              id_
               time
          window
           WINDOW
           object_literal
            {
            pair_list
             pair
              id_
               preceding
              :
              expr
               literal
                numeric_literal
                 1
             ,
             pair
              id_
               following
              :
              expr
               literal
                numeric_literal
                 1
            }
           aggregate_assign
            AGGREGATE
            id_
             rollingAverage
            =
            expr
             expr
              id_
               AVG
              (
              expr
               expr
                literal
                 id_
                  t2
               .
               expr
                literal
                 id_
                  val
              )
             ,
             expr
              expr
               literal
                id_
                 rollingSum
              =
              expr
               id_
                SUM
               (
               expr
                expr
                 literal
                  id_
                   t2
                .
                expr
                 literal
                  id_
                   val
               )
          window
           WINDOW
           object_literal
            {
            pair_list
             pair
              id_
               preceding
              :
              expr
               literal
                string
                 "unbounded"
             ,
             pair
              id_
               following
              :
              expr
               literal
                numeric_literal
                 0
            }
           aggregate_assign
            AGGREGATE
            id_
             cumulativeSum
            =
            expr
             id_
              SUM
             (
             expr
              expr
               literal
                id_
                 t2
              .
              expr
               literal
                id_
                 val
             )
         return_expr
          RETURN
          expr
           literal
            object_literal
             {
             pair_list
              pair
               id_
                time
               :
               expr
                expr
                 literal
                  id_
                   t2
                .
                expr
                 literal
                  id_
                   time
              ,
              pair
               id_
                subject
               :
               expr
                expr
                 literal
                  id_
                   t2
                .
                expr
                 literal
                  id_
                   subject
              ,
              pair
               id_
                val
               :
               expr
                expr
                 expr
                  literal
                   id_
                    t2
                 .
                 expr
                  literal
                   id_
                    val
                ,
                expr
                 expr
                  literal
                   id_
                    rollingAverage
                 ,
                 expr
                  expr
                   literal
                    id_
                     rollingSum
                  ,
                  expr
                   literal
                    id_
                     cumulativeSum
             }
        )
     FOR
     id_
      t2
     IN
     expr
      literal
       id_
        subquery
   return_expr
    RETURN
    expr
     literal
      id_
       t2
 <EOF>
