translation_unit
 external_declaration
  declaration
   type_qualifier
    single_type_qualifier
     layout_qualifier
      layout
      (
      layout_qualifier_id_list
       layout_qualifier_id
        points
      )
    single_type_qualifier
     storage_qualifier
      in
   ;
 external_declaration
  declaration
   type_qualifier
    single_type_qualifier
     layout_qualifier
      layout
      (
      layout_qualifier_id_list
       layout_qualifier_id
        triangle_strip
       ,
       layout_qualifier_id
        max_vertices
        =
        constant_expression
         binary_expression
          unary_expression
           postfix_expression
            primary_expression
             0
      )
    single_type_qualifier
     storage_qualifier
      out
   ;
 external_declaration
  declaration
   init_declarator_list
    single_declaration
     fully_specified_type
      type_qualifier
       single_type_qualifier
        storage_qualifier
         in
       single_type_qualifier
        precision_qualifier
         highp
      type_specifier
       type_specifier_nonarray
        vec4
     typeless_declaration
      v_geom_FragColor
      array_specifier
       dimension
        [
        ]
   ;
 external_declaration
  declaration
   init_declarator_list
    single_declaration
     fully_specified_type
      type_qualifier
       single_type_qualifier
        storage_qualifier
         out
       single_type_qualifier
        precision_qualifier
         highp
      type_specifier
       type_specifier_nonarray
        vec4
     typeless_declaration
      v_frag_FragColor
   ;
 external_declaration
  function_definition
   function_prototype
    fully_specified_type
     type_specifier
      type_specifier_nonarray
       void
    main
    (
    function_parameters
     parameter_declaration
      parameter_type_specifier
       type_specifier
        type_specifier_nonarray
         void
    )
   compound_statement_no_new_scope
    {
    statement_list
     statement
      simple_statement
       expression_statement
        expression
         assignment_expression
          constant_expression
           binary_expression
            unary_expression
             postfix_expression
              postfix_expression
               primary_expression
                variable_identifier
                 EndPrimitive
              (
              )
        ;
     statement
      simple_statement
       expression_statement
        expression
         assignment_expression
          constant_expression
           binary_expression
            unary_expression
             postfix_expression
              postfix_expression
               primary_expression
                variable_identifier
                 EndPrimitive
              (
              )
        ;
    }
 <EOF>
