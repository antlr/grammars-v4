translation_unit
 external_declaration
  declaration
   type_qualifier
    single_type_qualifier
     layout_qualifier
      layout
      (
      layout_qualifier_id_list
       layout_qualifier_id
        binding
        =
        constant_expression
         binary_expression
          unary_expression
           postfix_expression
            primary_expression
             0
       ,
       layout_qualifier_id
        std140
      )
    single_type_qualifier
     storage_qualifier
      uniform
   ubo_block
   {
   struct_declaration_list
    struct_declaration
     type_specifier
      type_specifier_nonarray
       float
     struct_declarator_list
      struct_declarator
       unused_uniform
     ;
    struct_declaration
     type_specifier
      type_specifier_nonarray
       float
     struct_declarator_list
      struct_declarator
       shared_uniform
     ;
    struct_declaration
     type_specifier
      type_specifier_nonarray
       float
     struct_declarator_list
      struct_declarator
       vsonly_uniform
     ;
    struct_declaration
     type_specifier
      type_specifier_nonarray
       float
     struct_declarator_list
      struct_declarator
       fsonly_uniform
     ;
   }
   ubo
   ;
 external_declaration
  declaration
   init_declarator_list
    single_declaration
     fully_specified_type
      type_qualifier
       single_type_qualifier
        storage_qualifier
         in
      type_specifier
       type_specifier_nonarray
        float
     typeless_declaration
      vertout
   ;
 external_declaration
  declaration
   init_declarator_list
    single_declaration
     fully_specified_type
      type_qualifier
       single_type_qualifier
        storage_qualifier
         out
      type_specifier
       type_specifier_nonarray
        float
     typeless_declaration
      fragout
   ;
 external_declaration
  function_definition
   function_prototype
    fully_specified_type
     type_specifier
      type_specifier_nonarray
       void
    main
    (
    )
   compound_statement_no_new_scope
    {
    statement_list
     statement
      simple_statement
       expression_statement
        expression
         assignment_expression
          unary_expression
           postfix_expression
            primary_expression
             variable_identifier
              fragout
          assignment_operator
           =
          assignment_expression
           constant_expression
            binary_expression
             unary_expression
              postfix_expression
               primary_expression
                variable_identifier
                 vertout
        ;
     statement
      simple_statement
       expression_statement
        expression
         assignment_expression
          unary_expression
           postfix_expression
            primary_expression
             variable_identifier
              fragout
          assignment_operator
           +=
          assignment_expression
           constant_expression
            binary_expression
             unary_expression
              postfix_expression
               postfix_expression
                primary_expression
                 variable_identifier
                  ubo
               .
               field_selection
                variable_identifier
                 shared_uniform
        ;
     statement
      simple_statement
       expression_statement
        expression
         assignment_expression
          unary_expression
           postfix_expression
            primary_expression
             variable_identifier
              fragout
          assignment_operator
           +=
          assignment_expression
           constant_expression
            binary_expression
             unary_expression
              postfix_expression
               postfix_expression
                primary_expression
                 variable_identifier
                  ubo
               .
               field_selection
                variable_identifier
                 fsonly_uniform
        ;
    }
 <EOF>
