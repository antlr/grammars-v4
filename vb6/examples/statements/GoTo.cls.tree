(startRule (module (moduleBody (moduleBodyElement (functionStmt Function   (ambiguousIdentifier SomeFunction) (argList ( )) \n\t (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier (ambiguousKeyword Text))   (asTypeClause As   (type (baseType String))))))) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text))))   =   (valueStmt (literal "Hello World")))) \n \n\t (blockStmt (goToStmt Goto   (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier LineLabel1)))))) \n\t \n (blockStmt (lineLabel (ambiguousIdentifier LineLabel1) :)) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text))))   =   (valueStmt (literal "1")))) \n (blockStmt (lineLabel (ambiguousIdentifier LineLabel2) :)) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text))))   =   (valueStmt (literal "2")))) \n\t (blockStmt (implicitCallStmt_InBlock (iCS_B_MemberProcedureCall (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Debug))) . (ambiguousIdentifier (ambiguousKeyword Print))   (argsCall (argCall (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier (ambiguousKeyword Text)))))))))))  \n End Function)) \n \n \n (moduleBodyElement (moduleBlock (block (blockStmt (implicitCallStmt_InBlock (iCS_B_ProcedureCall (certainIdentifier SomeFunction))))))))) <EOF>)