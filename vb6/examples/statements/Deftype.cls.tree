(startRule (module \n (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (deftypeStmt DefBool   (letterrange (certainIdentifier A) - (certainIdentifier b)))) \n \n (blockStmt (deftypeStmt DefByte   (letterrange (certainIdentifier c) - (certainIdentifier d)))) \n (blockStmt (deftypeStmt DefInt   (letterrange (certainIdentifier E) - (certainIdentifier F)))) \n (blockStmt (deftypeStmt DefLng   (letterrange (certainIdentifier G) - (certainIdentifier H))))  \n (blockStmt (deftypeStmt DefCur   (letterrange (certainIdentifier I) - (certainIdentifier J)))) \n (blockStmt (deftypeStmt DefSng   (letterrange (certainIdentifier k) - (certainIdentifier L)))) \n \n (blockStmt (deftypeStmt DefDbl   (letterrange (certainIdentifier M)))) \n (blockStmt (deftypeStmt DefDec   (letterrange (certainIdentifier n)) , (letterrange (certainIdentifier o) - (certainIdentifier p)))) \n (blockStmt (deftypeStmt DefDate   (letterrange (certainIdentifier q)) , (letterrange (certainIdentifier R) - (certainIdentifier s)) , (letterrange (certainIdentifier t)))) \n (blockStmt (deftypeStmt DefStr   (letterrange (certainIdentifier U) - (certainIdentifier V)))) \n (blockStmt (deftypeStmt DefObj   (letterrange (certainIdentifier W) - (certainIdentifier X)))) \n (blockStmt (deftypeStmt DefVar   (letterrange (certainIdentifier Y) - (certainIdentifier Z)))) \n \n (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier BoolVar))))) \n (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier EIntVar))))) \n (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier RDateVar))))) \n \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier EIntVar)))   =   (valueStmt (literal 2))))))))) <EOF>)