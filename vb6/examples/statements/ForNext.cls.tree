(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier I)   (asTypeClause As   (type (baseType Integer)))) ,   (variableSubStmt (ambiguousIdentifier J)   (asTypeClause As   (type (baseType Integer)))) ,   (variableSubStmt (ambiguousIdentifier K)   (asTypeClause As   (type (baseType Variant))))))) \n \n (blockStmt (constStmt (visibility Private)   Const   (constSubStmt (ambiguousIdentifier L)   (asTypeClause As   (type (baseType Integer)))   =   (valueStmt (literal 10))))) \n \n \n (blockStmt (forNextStmt For   (ambiguousIdentifier I)   =   (valueStmt (literal 1))   TO   (valueStmt (literal 10)) \n\t (block (blockStmt (beepStmt Beep))) \n Next)) \n \n \n (blockStmt (forNextStmt For   (ambiguousIdentifier J) = (valueStmt (literal 0))   TO   (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) \n\t (block (blockStmt (beepStmt Beep))) \n Next   (ambiguousIdentifier J))) \n \n \n (blockStmt (forNextStmt For   (ambiguousIdentifier I) = (valueStmt (literal 0))   To   (valueStmt (implicitCallStmt_InStmt (iCS_S_MembersCall (iCS_S_VariableOrProcedureCall (ambiguousIdentifier K)) (iCS_S_MemberCall . (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Value)))))) \n\t (block (blockStmt (forNextStmt For   (ambiguousIdentifier J) = (valueStmt (literal 1))   To   (valueStmt (literal 20))   Step   (valueStmt (literal 2)) \n\t\t (block (blockStmt (beepStmt Beep))) \n\t Next))) \n Next)) \n \n \n (blockStmt (forNextStmt For   (ambiguousIdentifier i)   =   (valueStmt (literal 1))   To   (valueStmt (literal 32000)) :  Next   (ambiguousIdentifier i)))))))) <EOF>)