(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier IsVisible)   (asTypeClause As   (type (baseType Boolean))))))) \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))   =   (valueStmt (literal True)))) \n \n (blockStmt (ifThenElseStmt (ifBlockStmt If   (ifConditionStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))))   Then  \n\t (block (blockStmt (beepStmt Beep)) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))   =   (valueStmt (literal false))))) \n) (ifElseBlockStmt Else \n\t (block (blockStmt (beepStmt Beep)) \n\t (blockStmt (beepStmt Beep))) \n) End If))))))) <EOF>)