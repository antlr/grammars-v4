(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier IsVisible)   (asTypeClause As   (type (baseType Boolean))))))) \r\n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))   =   (valueStmt (literal True)))) \r\n \r\n (blockStmt (ifThenElseStmt (ifBlockStmt If   (ifConditionStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))))   Then  \r\n\t (block (blockStmt (beepStmt Beep)) \r\n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier IsVisible)))   =   (valueStmt (literal false))))) \r\n) (ifElseBlockStmt Else \r\n\t (block (blockStmt (beepStmt Beep)) \r\n\t (blockStmt (beepStmt Beep))) \r\n) End If)))))) \r\n) <EOF>)