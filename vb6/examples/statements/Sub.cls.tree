(startRule (module \n (moduleBody (moduleBodyElement (subStmt Sub   (ambiguousIdentifier Mult) (argList ( (arg ByVal   (ambiguousIdentifier Factor1)   (asTypeClause As   (type (baseType Integer)))) ,   (arg (ambiguousIdentifier Factor2)   (asTypeClause As   (type (baseType Integer)))) )) \n\t (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier Product))))) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Product)))   =   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Factor1))))   *   (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Factor2))))))) \n\t \n\t (blockStmt (implicitCallStmt_InBlock (iCS_B_MemberProcedureCall (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Debug))) . (ambiguousIdentifier (ambiguousKeyword Print))   (argsCall (argCall (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier Product)))))))))) \n End Sub)))  ) <EOF>)