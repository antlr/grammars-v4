(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier I)) ,   (variableSubStmt (ambiguousIdentifier J))))) \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (literal 20)))) \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier J)))   =   (valueStmt (literal 30)))) \n \n (blockStmt (whileWendStmt While   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   >   (valueStmt (literal 0))) \n\t (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   -   (valueStmt (literal 1)))))) \n Wend)) \n \n \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (literal 100)))) \n \n (blockStmt (whileWendStmt While   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   >   (valueStmt (literal 0))) \n\t (block (blockStmt (whileWendStmt While   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   Mod   (valueStmt (valueStmt (literal 15))   <>   (valueStmt (literal 0)))) \n\t\t (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   -   (valueStmt (literal 1)))))) \n\t Wend))) \n Wend))))))) <EOF>)