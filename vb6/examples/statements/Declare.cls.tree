(startRule (module (moduleBody (moduleBodyElement (declareStmt (visibility Private)   Declare   Sub   (ambiguousIdentifier subName1)   Lib   "MyLib"   Alias   "alias1"   (argList ( (arg (ambiguousIdentifier arg1)) ,   (arg (ambiguousIdentifier arg2)) ,   (arg ParamArray   (ambiguousIdentifier arg3)) )))) \n \n (moduleBodyElement (declareStmt (visibility Public)   Declare   Sub   (ambiguousIdentifier subName2)   Lib   "MyLib"   Alias   "alias2"   (argList ( (arg (ambiguousIdentifier arg1)) ,   (arg (ambiguousIdentifier arg2)   (asTypeClause As   (type (baseType Long)))) ,   (arg ByRef   (ambiguousIdentifier arg3)) )))) \n \n (moduleBodyElement (declareStmt (visibility Private)   Declare   Function   (ambiguousIdentifier functionName1)   Lib   "MyLib"   (argList ( (arg Optional   (ambiguousIdentifier arg1)) ,   (arg ByVal   (ambiguousIdentifier arg2)) ,   (arg (ambiguousIdentifier arg3)) ))   (asTypeClause As   (type (complexType (ambiguousIdentifier Currency)))))) \n \n (moduleBodyElement (declareStmt (visibility Public)   Declare   Function   (ambiguousIdentifier functionName2)   Lib   "MyLib"   Alias   "alias3"   (argList ( )))) \n \n \n (moduleBodyElement (declareStmt (visibility Private)   Declare   Function   (ambiguousIdentifier GetComputerName)   Lib   "kernel32"   Alias   "GetComputerNameA"   (argList ( (arg ByVal   (ambiguousIdentifier lpBuffer)   (asTypeClause As   (type (baseType String)))) ,   (arg (ambiguousIdentifier nSize)   (asTypeClause As   (type (baseType Long)))) ))   (asTypeClause As   (type (baseType Long))))) \n \n (moduleBodyElement (declareStmt Declare   Function   (ambiguousIdentifier SetComputerName)   Lib   "kernel32"    Alias   "SetComputerNameA"   (argList (    (arg ByVal   (ambiguousIdentifier lpComputerName)   (asTypeClause As   (type (baseType String)))) ))   (asTypeClause As   (type (baseType Long))))) \n   \n (moduleBodyElement (declareStmt (visibility Private)   Declare   Function   (ambiguousIdentifier ExitWindowsEx)   Lib   "user32"   (argList (    (arg ByVal   (ambiguousIdentifier uFlags)   (asTypeClause As   (type (baseType Long)))) ,    (arg ByVal   (ambiguousIdentifier dwReserved)   (asTypeClause As   (type (baseType Long)))) ))   (asTypeClause As   (type (baseType Long))))))) <EOF>)