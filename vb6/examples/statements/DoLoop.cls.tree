(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier I))))) \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (literal 5)))) \n \n (blockStmt (doLoopStmt Do   While   (valueStmt Not   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   =   (valueStmt (literal 0)))) \n\t (block (blockStmt (beepStmt Beep)) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   -=   (valueStmt (literal 1))))) \n Loop)) \n \n \n (blockStmt (doLoopStmt Do   Until   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) = (valueStmt (literal 0))) \n\t (block (blockStmt (beepStmt Beep)) \n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   -=   (valueStmt (literal 1))))) \n Loop))))))) <EOF>)