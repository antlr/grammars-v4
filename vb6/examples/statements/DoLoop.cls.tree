(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier I))))) \r\n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   =   (valueStmt (literal 5)))) \r\n \r\n (blockStmt (doLoopStmt Do   While   (valueStmt Not   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I))))   =   (valueStmt (literal 0)))) \r\n\t (block (blockStmt (beepStmt Beep)) \r\n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   -=   (valueStmt (literal 1))))) \r\n Loop)) \r\n \r\n \r\n (blockStmt (doLoopStmt Do   Until   (valueStmt (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))) = (valueStmt (literal 0))) \r\n\t (block (blockStmt (beepStmt Beep)) \r\n\t (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier I)))   -=   (valueStmt (literal 1))))) \r\n Loop)))))) \r\n) <EOF>)