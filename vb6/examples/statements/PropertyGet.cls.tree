(startRule (module (moduleBody (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier CurrentI)   (asTypeClause As   (type (baseType Integer)))))))))) \n \n (moduleBodyElement (propertyGetStmt Property Get   (ambiguousIdentifier ValueOfI) (argList ( ))   (asTypeClause As   (type (baseType Integer))) \n\t (block (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier ValueOfI)))   =   (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier CurrentI))))))) \n End Property)) \n \n (moduleBodyElement (moduleBlock (block (blockStmt (variableStmt Dim   (variableListStmt (variableSubStmt (ambiguousIdentifier J))))) \n (blockStmt (letStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier J)))   =   (valueStmt (implicitCallStmt_InStmt (iCS_S_VariableOrProcedureCall (ambiguousIdentifier ValueOfI))))))))))) <EOF>)