state_machine
 program_decl
  {
  top_layer_stmt
   startat_decl
    "StartAt"
    :
    keyword_or_string
     "State0"
  ,
  top_layer_stmt
   states_decl
    "States"
    :
    {
    state_decl
     state_name
      keyword_or_string
       "State0"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       parameters_decl
        "Parameters"
        :
        payload_tmpl_decl
         {
         payload_binding
          "FromInput.$"
          :
          "$.users[?(@.status == 0)]"
         }
      ,
      state_stmt
       output_path_decl
        "OutputPath"
        :
        keyword_or_string
         "$.FromInput"
      ,
      state_stmt
       next_decl
        "Next"
        :
        keyword_or_string
         "State1"
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "State1"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       parameters_decl
        "Parameters"
        :
        payload_tmpl_decl
         {
         payload_binding
          "FromInput.$"
          :
          "$[?(@.year <= 1999)]"
         }
      ,
      state_stmt
       output_path_decl
        "OutputPath"
        :
        keyword_or_string
         "$.FromInput"
      ,
      state_stmt
       next_decl
        "Next"
        :
        keyword_or_string
         "State2"
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "State2"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       parameters_decl
        "Parameters"
        :
        payload_tmpl_decl
         {
         payload_binding
          "InputValue.$"
          :
          "$"
         ,
         payload_binding
          "FromInput.$"
          :
          intrinsic_func
           "States.JsonToString($.[?(@.year <= 1998)])"
         }
      ,
      state_stmt
       next_decl
        "Next"
        :
        keyword_or_string
         "State3"
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "State3"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       input_path_decl
        "InputPath"
        :
        keyword_or_string
         "$.InputValue"
      ,
      state_stmt
       output_path_decl
        "OutputPath"
        :
        keyword_or_string
         "$.[?(@.year < 1999)].name"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    }
  }
 <EOF>
