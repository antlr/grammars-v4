state_machine
 program_decl
  {
  top_layer_stmt
   startat_decl
    "StartAt"
    :
    keyword_or_string
     "Start"
  ,
  top_layer_stmt
   states_decl
    "States"
    :
    {
    state_decl
     state_name
      keyword_or_string
       "Start"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Task"
      ,
      state_stmt
       resource_decl
        "Resource"
        :
        keyword_or_string
         "__tbd__"
      ,
      state_stmt
       parameters_decl
        "Parameters"
        :
        payload_tmpl_decl
         {
         payload_binding
          "FunctionName.$"
          :
          "$.FunctionName"
         ,
         payload_binding
          "Payload.$"
          :
          "$.Payload"
         }
      ,
      state_stmt
       catch_decl
        "Catch"
        :
        [
        catcher_decl
         {
         catcher_stmt
          error_equals_decl
           "ErrorEquals"
           :
           [
           error_name
            keyword_or_string
             "Lambda.Unknown"
           ]
         ,
         catcher_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "EndWithLambdaUnknownHandler"
         }
        ,
        catcher_decl
         {
         catcher_stmt
          error_equals_decl
           "ErrorEquals"
           :
           [
           error_name
            states_error_name
             "States.TaskFailed"
           ]
         ,
         catcher_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "EndWithStateTaskFailedHandler"
         }
        ,
        catcher_decl
         {
         catcher_stmt
          error_equals_decl
           "ErrorEquals"
           :
           [
           error_name
            states_error_name
             "States.ALL"
           ]
         ,
         catcher_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "EndWithAllHandler"
         }
        ]
      ,
      state_stmt
       next_decl
        "Next"
        :
        keyword_or_string
         "EndWithFinal"
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "EndWithLambdaUnknownHandler"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       result_path_decl
        "ResultPath"
        :
        keyword_or_string
         "$.lambda_unknown"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "EndWithStateTaskFailedHandler"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       result_path_decl
        "ResultPath"
        :
        keyword_or_string
         "$.task_failed_error"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "EndWithAllHandler"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       result_path_decl
        "ResultPath"
        :
        keyword_or_string
         "$.all_error"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "EndWithFinal"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       result_path_decl
        "ResultPath"
        :
        keyword_or_string
         "$.final"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    }
  }
 <EOF>
