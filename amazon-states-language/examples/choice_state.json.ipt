state_machine
 program_decl
  {
  top_layer_stmt
   startat_decl
    "StartAt"
    :
    keyword_or_string
     "ChoiceStateX"
  ,
  top_layer_stmt
   states_decl
    "States"
    :
    {
    state_decl
     state_name
      keyword_or_string
       "ChoiceStateX"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Choice"
      ,
      state_stmt
       choices_decl
        "Choices"
        :
        [
        choice_rule
         {
         comparison_composite_stmt
          comparison_composite
           choice_operator
            "Not"
           :
           choice_rule
            {
            comparison_variable_stmt
             variable_decl
              "Variable"
              :
              keyword_or_string
               "$.type"
            ,
            comparison_variable_stmt
             comparison_func
              comparison_op
               "StringEquals"
              :
              json_value_decl
               keyword_or_string
                "Private"
            }
         ,
         comparison_composite_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "Public"
         }
        ,
        choice_rule
         {
         comparison_variable_stmt
          variable_decl
           "Variable"
           :
           keyword_or_string
            "$.value"
         ,
         comparison_variable_stmt
          comparison_func
           comparison_op
            "NumericEquals"
           :
           json_value_decl
            0
         ,
         comparison_variable_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "ValueIsZero"
         }
        ,
        choice_rule
         {
         comparison_composite_stmt
          comparison_composite
           choice_operator
            "And"
           :
           [
           choice_rule
            {
            comparison_variable_stmt
             variable_decl
              "Variable"
              :
              keyword_or_string
               "$.value"
            ,
            comparison_variable_stmt
             comparison_func
              comparison_op
               "NumericGreaterThanEquals"
              :
              json_value_decl
               20
            }
           ,
           choice_rule
            {
            comparison_variable_stmt
             variable_decl
              "Variable"
              :
              keyword_or_string
               "$.value"
            ,
            comparison_variable_stmt
             comparison_func
              comparison_op
               "NumericLessThan"
              :
              json_value_decl
               30
            }
           ]
         ,
         comparison_composite_stmt
          next_decl
           "Next"
           :
           keyword_or_string
            "ValueInTwenties"
         }
        ]
      ,
      state_stmt
       default_decl
        "Default"
        :
        keyword_or_string
         "DefaultState"
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "Public"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "ValueIsZero"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "ValueInTwenties"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Pass"
      ,
      state_stmt
       end_decl
        "End"
        :
        true
      }
    ,
    state_decl
     state_name
      keyword_or_string
       "DefaultState"
     :
     state_decl_body
      {
      state_stmt
       type_decl
        "Type"
        :
        state_type
         "Fail"
      ,
      state_stmt
       cause_decl
        "Cause"
        :
        keyword_or_string
         "No Matches!"
      }
    }
  }
 <EOF>
