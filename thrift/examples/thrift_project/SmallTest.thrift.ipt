document
 header
  namespace_
   namespace
   rb
   TestNamespace
 definition
  struct_
   struct
   Goodbyez
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    val
    =
    const_value
     integer
      325
    list_separator
     ;
   }
 definition
  senum
   senum
   Thinger
   {
   "ASDFKJ"
   list_separator
    ,
   "r32)*F#@"
   list_separator
    ,
   "ASDFLJASDF"
   }
 definition
  struct_
   struct
   BoolPasser
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       bool
    value
    =
    const_value
     integer
      1
   }
 definition
  struct_
   struct
   Hello
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    simple
    =
    const_value
     integer
      53
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        base_type
         real_base_type
          i32
       >
    complex
    =
    const_value
     const_map
      {
      const_map_entry
       const_value
        integer
         23
       :
       const_value
        integer
         532
       list_separator
        ,
      const_map_entry
       const_value
        integer
         6243
       :
       const_value
        integer
         632
       list_separator
        ,
      const_map_entry
       const_value
        integer
         2355
       :
       const_value
        integer
         532
      }
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        container_type
         map_type
          map
          <
          field_type
           base_type
            real_base_type
             i32
          ,
          field_type
           base_type
            real_base_type
             i32
          >
       >
    complexer
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     base_type
      real_base_type
       string
    words
    =
    const_value
     "words"
    list_separator
     ,
   field
    field_id
     integer
      5
     :
    field_type
     Goodbyez
    thinz
    =
    const_value
     const_map
      {
      const_map_entry
       const_value
        'val'
       :
       const_value
        integer
         36632
      }
   }
 definition
  const_rule
   const
   field_type
    container_type
     map_type
      map
      <
      field_type
       base_type
        real_base_type
         i32
      ,
      field_type
       container_type
        map_type
         map
         <
         field_type
          base_type
           real_base_type
            i32
         ,
         field_type
          base_type
           real_base_type
            i32
         >
      >
   CMAP
   =
   const_value
    const_map
     {
     const_map_entry
      const_value
       integer
        235
      :
      const_value
       const_map
        {
        const_map_entry
         const_value
          integer
           235
         :
         const_value
          integer
           235
        }
      list_separator
       ,
     const_map_entry
      const_value
       integer
        53
      :
      const_value
       const_map
        {
        const_map_entry
         const_value
          integer
           53
         :
         const_value
          integer
           53
        }
     }
 definition
  const_rule
   const
   field_type
    base_type
     real_base_type
      i32
   CINT
   =
   const_value
    integer
     325
   list_separator
    ;
 definition
  const_rule
   const
   field_type
    Hello
   WHOA
   =
   const_value
    const_map
     {
     const_map_entry
      const_value
       'simple'
      :
      const_value
       integer
        532
     }
 definition
  exception
   exception
   Goodbye
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    simple
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        base_type
         real_base_type
          i32
       >
    complex
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        container_type
         map_type
          map
          <
          field_type
           base_type
            real_base_type
             i32
          ,
          field_type
           base_type
            real_base_type
             i32
          >
       >
    complexer
    list_separator
     ,
   }
 definition
  service
   service
   SmallService
   {
   function_
    function_type
     field_type
      Thinger
    testThinger
    (
    field
     field_id
      integer
       1
      :
     field_type
      Thinger
     bootz
    )
    list_separator
     ,
   function_
    function_type
     field_type
      Hello
    testMe
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i32
     hello
     =
     const_value
      integer
       64
     list_separator
      ,
    field
     field_id
      integer
       2
      :
     field_type
      Hello
     wonk
    )
    throws_list
     throws
     (
     field
      field_id
       integer
        1
       :
      field_type
       Goodbye
      g
     )
    list_separator
     ,
   function_
    function_type
     void
    testVoid
    (
    )
    throws_list
     throws
     (
     field
      field_id
       integer
        1
       :
      field_type
       Goodbye
      g
     )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        i32
    testI32
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i32
     boo
    )
   }
 <EOF>
