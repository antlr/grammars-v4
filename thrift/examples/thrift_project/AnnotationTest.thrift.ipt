document
 definition
  typedef_
   typedef
   field_type
    container_type
     list_type
      list
      <
      field_type
       base_type
        real_base_type
         i32
      >
     type_annotations
      (
      type_annotation
       cpp.template
       =
       annotation_value
        "std::list"
      )
   int_linked_list
 definition
  struct_
   struct
   foo
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    bar
    type_annotations
     (
     type_annotation
      presence
      =
      annotation_value
       "required"
     )
    list_separator
     ;
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       i32
    baz
    type_annotations
     (
     type_annotation
      presence
      =
      annotation_value
       "manual"
      list_separator
       ,
     type_annotation
      cpp.use_pointer
      =
      annotation_value
       ""
      list_separator
       ,
     )
    list_separator
     ;
   field
    field_id
     integer
      3
     :
    field_type
     base_type
      real_base_type
       i32
    qux
    list_separator
     ;
   field
    field_id
     integer
      4
     :
    field_type
     base_type
      real_base_type
       i32
    bop
    list_separator
     ;
   }
   type_annotations
    (
    type_annotation
     cpp.type
     =
     annotation_value
      "DenseFoo"
     list_separator
      ,
    type_annotation
     python.type
     =
     annotation_value
      "DenseFoo"
     list_separator
      ,
    type_annotation
     java.final
     =
     annotation_value
      ""
     list_separator
      ,
    type_annotation
     annotation.without.value
     list_separator
      ,
    )
 definition
  exception
   exception
   foo_error
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    error_code
    type_annotations
     (
     type_annotation
      foo
      =
      annotation_value
       "bar"
     )
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       string
    error_msg
   }
   type_annotations
    (
    type_annotation
     foo
     =
     annotation_value
      "bar"
    )
 definition
  typedef_
   typedef
   field_type
    base_type
     real_base_type
      string
     type_annotations
      (
      type_annotation
       unicode.encoding
       =
       annotation_value
        "UTF-16"
      )
   non_latin_string
   type_annotations
    (
    type_annotation
     foo
     =
     annotation_value
      "bar"
    )
 definition
  typedef_
   typedef
   field_type
    container_type
     list_type
      list
      <
      field_type
       base_type
        real_base_type
         double
        type_annotations
         (
         type_annotation
          cpp.fixed_point
          =
          annotation_value
           "16"
         )
      >
   tiny_float_list
 definition
  enum_rule
   enum
   weekdays
   {
   enum_field
    SUNDAY
    type_annotations
     (
     type_annotation
      weekend
      =
      annotation_value
       "yes"
     )
    list_separator
     ,
   enum_field
    MONDAY
    list_separator
     ,
   enum_field
    TUESDAY
    list_separator
     ,
   enum_field
    WEDNESDAY
    list_separator
     ,
   enum_field
    THURSDAY
    list_separator
     ,
   enum_field
    FRIDAY
    list_separator
     ,
   enum_field
    SATURDAY
    type_annotations
     (
     type_annotation
      weekend
      =
      annotation_value
       "yes"
     )
   }
   type_annotations
    (
    type_annotation
     foo.bar
     =
     annotation_value
      "baz"
    )
 definition
  senum
   senum
   seasons
   {
   "Spring"
   list_separator
    ,
   "Summer"
   list_separator
    ,
   "Fall"
   list_separator
    ,
   "Winter"
   }
   type_annotations
    (
    type_annotation
     foo
     =
     annotation_value
      "bar"
    )
 definition
  struct_
   struct
   ostr_default
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    bar
    list_separator
     ;
   }
 definition
  struct_
   struct
   ostr_custom
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    bar
    list_separator
     ;
   }
   type_annotations
    (
    type_annotation
     cpp.customostream
    )
 definition
  service
   service
   foo_service
   {
   function_
    function_type
     void
    foo
    (
    )
    type_annotations
     (
     type_annotation
      foo
      =
      annotation_value
       "bar"
     )
   }
   type_annotations
    (
    type_annotation
     a.b
     =
     annotation_value
      "c"
    )
 <EOF>
