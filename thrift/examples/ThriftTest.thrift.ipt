document
 header
  namespace_
   namespace
   c_glib
   TTest
 header
  namespace_
   namespace
   cpp
   thrift.test
 header
  namespace_
   namespace
   delphi
   Thrift.Test
 header
  namespace_
   namespace
   go
   thrifttest
 header
  namespace_
   namespace
   java
   thrift.test
 header
  namespace_
   namespace
   js
   ThriftTest
 header
  namespace_
   namespace
   lua
   ThriftTest
 header
  namespace_
   namespace
   netstd
   ThriftTest
 header
  namespace_
   namespace
   perl
   ThriftTest
 header
  namespace_
   namespace
   php
   ThriftTest
 header
  namespace_
   namespace
   py
   ThriftTest
 header
  namespace_
   namespace
   py.twisted
   ThriftTest
 header
  namespace_
   namespace
   rb
   Thrift.Test
 header
  namespace_
   namespace
   st
   ThriftTest
 header
  namespace_
   namespace
   xsd
   test
   type_annotations
    (
    type_annotation
     uri
     =
     annotation_value
      'http://thrift.apache.org/ns/ThriftTest'
    )
 header
  namespace_
   namespace
   noexist
   ThriftTest
 header
  namespace_
   namespace
   cpp.noexist
   ThriftTest
 header
  namespace_
   namespace
   *
   thrift.test
 definition
  enum_rule
   enum
   Numberz
   {
   enum_field
    ONE
    =
    integer
     1
    list_separator
     ,
   enum_field
    TWO
    list_separator
     ,
   enum_field
    THREE
    list_separator
     ,
   enum_field
    FIVE
    =
    integer
     5
    list_separator
     ,
   enum_field
    SIX
    list_separator
     ,
   enum_field
    EIGHT
    =
    integer
     8
   }
 definition
  const_rule
   const
   field_type
    Numberz
   myNumberz
   =
   const_value
    Numberz.ONE
   list_separator
    ;
 definition
  typedef_
   typedef
   field_type
    base_type
     real_base_type
      i64
   UserId
 definition
  struct_
   struct
   Bonk
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       string
    message
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       i32
    type
   }
 definition
  typedef_
   typedef
   field_type
    container_type
     map_type
      map
      <
      field_type
       base_type
        real_base_type
         string
      ,
      field_type
       Bonk
      >
   MapType
 definition
  struct_
   struct
   Bools
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       bool
    im_true
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       bool
    im_false
    list_separator
     ,
   }
 definition
  struct_
   struct
   Xtruct
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       string
    string_thing
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     i8
    byte_thing
    list_separator
     ,
   field
    field_id
     integer
      9
     :
    field_type
     base_type
      real_base_type
       i32
    i32_thing
    list_separator
     ,
   field
    field_id
     integer
      11
     :
    field_type
     base_type
      real_base_type
       i64
    i64_thing
   }
 definition
  struct_
   struct
   Xtruct2
   {
   field
    field_id
     integer
      1
     :
    field_type
     i8
    byte_thing
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     Xtruct
    struct_thing
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     base_type
      real_base_type
       i32
    i32_thing
   }
 definition
  struct_
   struct
   Xtruct3
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       string
    string_thing
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     base_type
      real_base_type
       i32
    changed
    list_separator
     ,
   field
    field_id
     integer
      9
     :
    field_type
     base_type
      real_base_type
       i32
    i32_thing
    list_separator
     ,
   field
    field_id
     integer
      11
     :
    field_type
     base_type
      real_base_type
       i64
    i64_thing
   }
 definition
  struct_
   struct
   Insanity
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        Numberz
       ,
       field_type
        UserId
       >
    userMap
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        Xtruct
       >
    xtructs
   }
   type_annotations
    (
    type_annotation
     python.immutable
     =
     annotation_value
      ""
    )
 definition
  struct_
   struct
   CrazyNesting
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       string
    string_field
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_req
     optional
    field_type
     container_type
      set_type
       set
       <
       field_type
        Insanity
       >
    set_field
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_req
     required
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         map_type
          map
          <
          field_type
           container_type
            set_type
             set
             <
             field_type
              base_type
               real_base_type
                i32
             >
            type_annotations
             (
             type_annotation
              python.immutable
              =
              annotation_value
               ""
             )
          ,
          field_type
           container_type
            map_type
             map
             <
             field_type
              base_type
               real_base_type
                i32
             ,
             field_type
              container_type
               set_type
                set
                <
                field_type
                 container_type
                  list_type
                   list
                   <
                   field_type
                    container_type
                     map_type
                      map
                      <
                      field_type
                       Insanity
                      ,
                      field_type
                       base_type
                        real_base_type
                         string
                      >
                     type_annotations
                      (
                      type_annotation
                       python.immutable
                       =
                       annotation_value
                        ""
                      )
                   >
                  type_annotations
                   (
                   type_annotation
                    python.immutable
                    =
                    annotation_value
                     ""
                   )
                >
             >
          >
       >
    list_field
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     base_type
      real_base_type
       binary
    binary_field
   }
 definition
  union_
   union
   SomeUnion
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        Numberz
       ,
       field_type
        UserId
       >
    map_thing
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       string
    string_thing
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     base_type
      real_base_type
       i32
    i32_thing
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     Xtruct3
    xtruct_thing
    list_separator
     ,
   field
    field_id
     integer
      5
     :
    field_type
     Insanity
    insanity_thing
   }
 definition
  exception
   exception
   Xception
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    errorCode
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       string
    message
   }
 definition
  exception
   exception
   Xception2
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    errorCode
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     Xtruct
    struct_thing
   }
 definition
  struct_
   struct
   EmptyStruct
   {
   }
 definition
  struct_
   struct
   OneField
   {
   field
    field_id
     integer
      1
     :
    field_type
     EmptyStruct
    field
   }
 definition
  service
   service
   ThriftTest
   {
   function_
    function_type
     void
    testVoid
    (
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        string
    testString
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        string
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        bool
    testBool
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        bool
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      i8
    testByte
    (
    field
     field_id
      integer
       1
      :
     field_type
      i8
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        i32
    testI32
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i32
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        i64
    testI64
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i64
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        double
    testDouble
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        double
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      base_type
       real_base_type
        binary
    testBinary
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        binary
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      Xtruct
    testStruct
    (
    field
     field_id
      integer
       1
      :
     field_type
      Xtruct
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      Xtruct2
    testNest
    (
    field
     field_id
      integer
       1
      :
     field_type
      Xtruct2
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           i32
        ,
        field_type
         base_type
          real_base_type
           i32
        >
    testMap
    (
    field
     field_id
      integer
       1
      :
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           i32
        ,
        field_type
         base_type
          real_base_type
           i32
        >
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           string
        ,
        field_type
         base_type
          real_base_type
           string
        >
    testStringMap
    (
    field
     field_id
      integer
       1
      :
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           string
        ,
        field_type
         base_type
          real_base_type
           string
        >
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       set_type
        set
        <
        field_type
         base_type
          real_base_type
           i32
        >
    testSet
    (
    field
     field_id
      integer
       1
      :
     field_type
      container_type
       set_type
        set
        <
        field_type
         base_type
          real_base_type
           i32
        >
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       list_type
        list
        <
        field_type
         base_type
          real_base_type
           i32
        >
    testList
    (
    field
     field_id
      integer
       1
      :
     field_type
      container_type
       list_type
        list
        <
        field_type
         base_type
          real_base_type
           i32
        >
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      Numberz
    testEnum
    (
    field
     field_id
      integer
       1
      :
     field_type
      Numberz
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      UserId
    testTypedef
    (
    field
     field_id
      integer
       1
      :
     field_type
      UserId
     thing
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           i32
        ,
        field_type
         container_type
          map_type
           map
           <
           field_type
            base_type
             real_base_type
              i32
           ,
           field_type
            base_type
             real_base_type
              i32
           >
        >
    testMapMap
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i32
     hello
    )
    list_separator
     ,
   function_
    function_type
     field_type
      container_type
       map_type
        map
        <
        field_type
         UserId
        ,
        field_type
         container_type
          map_type
           map
           <
           field_type
            Numberz
           ,
           field_type
            Insanity
           >
        >
    testInsanity
    (
    field
     field_id
      integer
       1
      :
     field_type
      Insanity
     argument
    )
    list_separator
     ,
   function_
    function_type
     field_type
      Xtruct
    testMulti
    (
    field
     field_id
      integer
       1
      :
     field_type
      i8
     arg0
     list_separator
      ,
    field
     field_id
      integer
       2
      :
     field_type
      base_type
       real_base_type
        i32
     arg1
     list_separator
      ,
    field
     field_id
      integer
       3
      :
     field_type
      base_type
       real_base_type
        i64
     arg2
     list_separator
      ,
    field
     field_id
      integer
       4
      :
     field_type
      container_type
       map_type
        map
        <
        field_type
         base_type
          real_base_type
           i16
        ,
        field_type
         base_type
          real_base_type
           string
        >
     arg3
     list_separator
      ,
    field
     field_id
      integer
       5
      :
     field_type
      Numberz
     arg4
     list_separator
      ,
    field
     field_id
      integer
       6
      :
     field_type
      UserId
     arg5
    )
    list_separator
     ,
   function_
    function_type
     void
    testException
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        string
     arg
    )
    throws_list
     throws
     (
     field
      field_id
       integer
        1
       :
      field_type
       Xception
      err1
     )
    list_separator
     ,
   function_
    function_type
     field_type
      Xtruct
    testMultiException
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        string
     arg0
     list_separator
      ,
    field
     field_id
      integer
       2
      :
     field_type
      base_type
       real_base_type
        string
     arg1
    )
    throws_list
     throws
     (
     field
      field_id
       integer
        1
       :
      field_type
       Xception
      err1
      list_separator
       ,
     field
      field_id
       integer
        2
       :
      field_type
       Xception2
      err2
     )
   function_
    oneway
     oneway
    function_type
     void
    testOneway
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        i32
     secondsToSleep
    )
   }
 definition
  service
   service
   SecondService
   {
   function_
    function_type
     field_type
      base_type
       real_base_type
        string
    secondtestString
    (
    field
     field_id
      integer
       1
      :
     field_type
      base_type
       real_base_type
        string
     thing
    )
   }
 definition
  struct_
   struct
   VersioningTestV1
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    begin_in_both
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     base_type
      real_base_type
       string
    old_string
    list_separator
     ,
   field
    field_id
     integer
      12
     :
    field_type
     base_type
      real_base_type
       i32
    end_in_both
   }
 definition
  struct_
   struct
   VersioningTestV2
   {
   field
    field_id
     integer
      1
     :
    field_type
     base_type
      real_base_type
       i32
    begin_in_both
    list_separator
     ,
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       i32
    newint
    list_separator
     ,
   field
    field_id
     integer
      3
     :
    field_type
     i8
    newbyte
    list_separator
     ,
   field
    field_id
     integer
      4
     :
    field_type
     base_type
      real_base_type
       i16
    newshort
    list_separator
     ,
   field
    field_id
     integer
      5
     :
    field_type
     base_type
      real_base_type
       i64
    newlong
    list_separator
     ,
   field
    field_id
     integer
      6
     :
    field_type
     base_type
      real_base_type
       double
    newdouble
   field
    field_id
     integer
      7
     :
    field_type
     Bonk
    newstruct
    list_separator
     ,
   field
    field_id
     integer
      8
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        base_type
         real_base_type
          i32
       >
    newlist
    list_separator
     ,
   field
    field_id
     integer
      9
     :
    field_type
     container_type
      set_type
       set
       <
       field_type
        base_type
         real_base_type
          i32
       >
    newset
    list_separator
     ,
   field
    field_id
     integer
      10
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        base_type
         real_base_type
          i32
       >
    newmap
    list_separator
     ,
   field
    field_id
     integer
      11
     :
    field_type
     base_type
      real_base_type
       string
    newstring
    list_separator
     ,
   field
    field_id
     integer
      12
     :
    field_type
     base_type
      real_base_type
       i32
    end_in_both
   }
 definition
  struct_
   struct
   ListTypeVersioningV1
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        base_type
         real_base_type
          i32
       >
    myints
    list_separator
     ;
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       string
    hello
    list_separator
     ;
   }
 definition
  struct_
   struct
   ListTypeVersioningV2
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        base_type
         real_base_type
          string
       >
    strings
    list_separator
     ;
   field
    field_id
     integer
      2
     :
    field_type
     base_type
      real_base_type
       string
    hello
    list_separator
     ;
   }
 definition
  struct_
   struct
   GuessProtocolStruct
   {
   field
    field_id
     integer
      7
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          string
       ,
       field_type
        base_type
         real_base_type
          string
       >
    map_field
    list_separator
     ,
   }
 definition
  struct_
   struct
   LargeDeltas
   {
   field
    field_id
     integer
      1
     :
    field_type
     Bools
    b1
    list_separator
     ,
   field
    field_id
     integer
      10
     :
    field_type
     Bools
    b10
    list_separator
     ,
   field
    field_id
     integer
      100
     :
    field_type
     Bools
    b100
    list_separator
     ,
   field
    field_id
     integer
      500
     :
    field_type
     base_type
      real_base_type
       bool
    check_true
    list_separator
     ,
   field
    field_id
     integer
      1000
     :
    field_type
     Bools
    b1000
    list_separator
     ,
   field
    field_id
     integer
      1500
     :
    field_type
     base_type
      real_base_type
       bool
    check_false
    list_separator
     ,
   field
    field_id
     integer
      2000
     :
    field_type
     VersioningTestV2
    vertwo2000
    list_separator
     ,
   field
    field_id
     integer
      2500
     :
    field_type
     container_type
      set_type
       set
       <
       field_type
        base_type
         real_base_type
          string
       >
    a_set2500
    list_separator
     ,
   field
    field_id
     integer
      3000
     :
    field_type
     VersioningTestV2
    vertwo3000
    list_separator
     ,
   field
    field_id
     integer
      4000
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        base_type
         real_base_type
          i32
       >
    big_numbers
   }
 definition
  struct_
   struct
   NestedListsI32x2
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         list_type
          list
          <
          field_type
           base_type
            real_base_type
             i32
          >
       >
    integerlist
   }
 definition
  struct_
   struct
   NestedListsI32x3
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         list_type
          list
          <
          field_type
           container_type
            list_type
             list
             <
             field_type
              base_type
               real_base_type
                i32
             >
          >
       >
    integerlist
   }
 definition
  struct_
   struct
   NestedMixedx2
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         set_type
          set
          <
          field_type
           base_type
            real_base_type
             i32
          >
       >
    int_set_list
   field
    field_id
     integer
      2
     :
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          i32
       ,
       field_type
        container_type
         set_type
          set
          <
          field_type
           base_type
            real_base_type
             string
          >
       >
    map_int_strset
   field
    field_id
     integer
      3
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         map_type
          map
          <
          field_type
           base_type
            real_base_type
             i32
          ,
          field_type
           container_type
            set_type
             set
             <
             field_type
              base_type
               real_base_type
                string
             >
          >
       >
    map_int_strset_list
   }
 definition
  struct_
   struct
   ListBonks
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        Bonk
       >
    bonk
   }
 definition
  struct_
   struct
   NestedListsBonk
   {
   field
    field_id
     integer
      1
     :
    field_type
     container_type
      list_type
       list
       <
       field_type
        container_type
         list_type
          list
          <
          field_type
           container_type
            list_type
             list
             <
             field_type
              Bonk
             >
          >
       >
    bonk
   }
 definition
  struct_
   struct
   BoolTest
   {
   field
    field_id
     integer
      1
     :
    field_req
     optional
    field_type
     base_type
      real_base_type
       bool
    b
    =
    const_value
     true
    list_separator
     ;
   field
    field_id
     integer
      2
     :
    field_req
     optional
    field_type
     base_type
      real_base_type
       string
    s
    =
    const_value
     "true"
    list_separator
     ;
   }
 definition
  struct_
   struct
   StructA
   {
   field
    field_id
     integer
      1
     :
    field_req
     required
    field_type
     base_type
      real_base_type
       string
    s
    list_separator
     ;
   }
 definition
  struct_
   struct
   StructB
   {
   field
    field_id
     integer
      1
     :
    field_req
     optional
    field_type
     StructA
    aa
    list_separator
     ;
   field
    field_id
     integer
      2
     :
    field_req
     required
    field_type
     StructA
    ab
    list_separator
     ;
   }
 definition
  struct_
   struct
   OptionalSetDefaultTest
   {
   field
    field_id
     integer
      1
     :
    field_req
     optional
    field_type
     container_type
      set_type
       set
       <
       field_type
        base_type
         real_base_type
          string
       >
    with_default
    =
    const_value
     const_list
      [
      const_value
       "test"
      ]
   }
 definition
  struct_
   struct
   OptionalBinary
   {
   field
    field_id
     integer
      1
     :
    field_req
     optional
    field_type
     container_type
      set_type
       set
       <
       field_type
        base_type
         real_base_type
          binary
       >
    bin_set
    =
    const_value
     const_map
      {
      }
   field
    field_id
     integer
      2
     :
    field_req
     optional
    field_type
     container_type
      map_type
       map
       <
       field_type
        base_type
         real_base_type
          binary
       ,
       field_type
        base_type
         real_base_type
          i32
       >
    bin_map
    =
    const_value
     const_map
      {
      }
   }
 <EOF>
