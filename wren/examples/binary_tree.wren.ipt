script
 fileAtom
  classDefinition
   class
   id
    Tree
   {
   classBody
    classStatement
     classConstructor
      construct
      id
       new
      arguments
       (
       id
        item
       ,
       id
        depth
       )
      block
       {
       statement
        assignment
         expression
          atomExpression
           call
            id
             _item
         assignOp
          =
         expression
          atomExpression
           call
            id
             item
       statement
        ifSt
         ifCond
          if
          (
          expression
           expression
            atomExpression
             call
              id
               depth
           compoundExpression
            logic
             andLogic
              atomLogic
               logicOp
                >
               expression
                atomExpression
                 numE
                  0
          )
         statement
          block
           {
           statement
            assignment
             var
             expression
              atomExpression
               call
                id
                 item2
             assignOp
              =
             expression
              expression
               atomExpression
                call
                 id
                  item
              compoundExpression
               arithAdd
                +
                expression
                 atomExpression
                  call
                   id
                    item
           statement
            assignment
             expression
              atomExpression
               call
                id
                 depth
             assignOp
              =
             expression
              expression
               atomExpression
                call
                 id
                  depth
              compoundExpression
               arithAdd
                -
                expression
                 atomExpression
                  numE
                   1
           statement
            assignment
             expression
              atomExpression
               call
                id
                 _left
             assignOp
              =
             expression
              atomExpression
               call
                id
                 Tree
                .
                call
                 id
                  new
                 callInvoke
                  (
                  enumeration
                   expression
                    expression
                     atomExpression
                      call
                       id
                        item2
                    compoundExpression
                     arithAdd
                      -
                      expression
                       atomExpression
                        numE
                         1
                   ,
                   expression
                    atomExpression
                     call
                      id
                       depth
                  )
           statement
            assignment
             expression
              atomExpression
               call
                id
                 _right
             assignOp
              =
             expression
              atomExpression
               call
                id
                 Tree
                .
                call
                 id
                  new
                 callInvoke
                  (
                  enumeration
                   expression
                    atomExpression
                     call
                      id
                       item2
                   ,
                   expression
                    atomExpression
                     call
                      id
                       depth
                  )
           }
       }
    classStatement
     classOpGetter
      operatorGetter
       id
        check
      block
       {
       statement
        ifSt
         ifCond
          if
          (
          expression
           expression
            atomExpression
             call
              id
               _left
           compoundExpression
            logic
             andLogic
              atomLogic
               logicOp
                ==
               expression
                atomExpression
                 nullE
                  null
          )
         statement
          block
           {
           statement
            returnSt
             return
             expression
              atomExpression
               call
                id
                 _item
           }
       statement
        returnSt
         return
         expression
          expression
           atomExpression
            call
             id
              _item
          compoundExpression
           arithAdd
            +
            expression
             expression
              atomExpression
               call
                id
                 _left
                .
                call
                 id
                  check
             compoundExpression
              arithAdd
               -
               expression
                atomExpression
                 call
                  id
                   _right
                  .
                  call
                   id
                    check
       }
   }
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        minDepth
    assignOp
     =
    expression
     atomExpression
      numE
       4
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        maxDepth
    assignOp
     =
    expression
     atomExpression
      numE
       12
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        stretchDepth
    assignOp
     =
    expression
     expression
      atomExpression
       call
        id
         maxDepth
     compoundExpression
      arithAdd
       +
       expression
        atomExpression
         numE
          1
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        start
    assignOp
     =
    expression
     atomExpression
      call
       id
        System
       .
       call
        id
         clock
 fileAtom
  statement
   expression
    atomExpression
     call
      id
       System
      .
      call
       id
        print
       callInvoke
        (
        enumeration
         expression
          expression
           atomExpression
            stringE
             "stretch tree of depth %(stretchDepth) check: "
          compoundExpression
           arithAdd
            +
            expression
             atomExpression
              stringE
               "%(Tree.new(0, stretchDepth).check)"
        )
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        longLivedTree
    assignOp
     =
    expression
     atomExpression
      call
       id
        Tree
       .
       call
        id
         new
        callInvoke
         (
         enumeration
          expression
           atomExpression
            numE
             0
          ,
          expression
           atomExpression
            call
             id
              maxDepth
         )
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        iterations
    assignOp
     =
    expression
     atomExpression
      numE
       1
 fileAtom
  statement
   forSt
    for
    (
    id
     d
    in
    expression
     expression
      atomExpression
       numE
        0
     compoundExpression
      arithRange
       ...
       expression
        atomExpression
         call
          id
           maxDepth
    )
    statement
     block
      {
      statement
       assignment
        expression
         atomExpression
          call
           id
            iterations
        assignOp
         =
        expression
         expression
          atomExpression
           call
            id
             iterations
         compoundExpression
          arithMul
           *
           expression
            atomExpression
             numE
              2
      }
 fileAtom
  statement
   assignment
    var
    expression
     atomExpression
      call
       id
        depth
    assignOp
     =
    expression
     atomExpression
      call
       id
        minDepth
 fileAtom
  statement
   whileSt
    while
    (
    expression
     expression
      atomExpression
       call
        id
         depth
     compoundExpression
      logic
       andLogic
        atomLogic
         logicOp
          <
         expression
          atomExpression
           call
            id
             stretchDepth
    )
    statement
     block
      {
      statement
       assignment
        var
        expression
         atomExpression
          call
           id
            check
        assignOp
         =
        expression
         atomExpression
          numE
           0
      statement
       forSt
        for
        (
        id
         i
        in
        expression
         expression
          atomExpression
           numE
            1
         compoundExpression
          arithRange
           ..
           expression
            atomExpression
             call
              id
               iterations
        )
        statement
         block
          {
          statement
           assignment
            expression
             atomExpression
              call
               id
                check
            assignOp
             =
            expression
             expression
              atomExpression
               call
                id
                 check
             compoundExpression
              arithAdd
               +
               expression
                expression
                 atomExpression
                  call
                   id
                    Tree
                   .
                   call
                    id
                     new
                    callInvoke
                     (
                     enumeration
                      expression
                       atomExpression
                        call
                         id
                          i
                      ,
                      expression
                       atomExpression
                        call
                         id
                          depth
                     )
                    .
                    call
                     id
                      check
                compoundExpression
                 arithAdd
                  +
                  expression
                   atomExpression
                    call
                     id
                      Tree
                     .
                     call
                      id
                       new
                      callInvoke
                       (
                       enumeration
                        expression
                         atomExpression
                          -
                          atomExpression
                           call
                            id
                             i
                        ,
                        expression
                         atomExpression
                          call
                           id
                            depth
                       )
                      .
                      call
                       id
                        check
          }
      statement
       expression
        atomExpression
         call
          id
           System
          .
          call
           id
            print
           callInvoke
            (
            enumeration
             expression
              atomExpression
               stringE
                "%(iterations * 2) trees of depth %(depth) check: %(check)"
            )
      statement
       assignment
        expression
         atomExpression
          call
           id
            iterations
        assignOp
         =
        expression
         expression
          atomExpression
           call
            id
             iterations
         compoundExpression
          arithMul
           /
           expression
            atomExpression
             numE
              4
      statement
       assignment
        expression
         atomExpression
          call
           id
            depth
        assignOp
         =
        expression
         expression
          atomExpression
           call
            id
             depth
         compoundExpression
          arithAdd
           +
           expression
            atomExpression
             numE
              2
      }
 fileAtom
  statement
   expression
    atomExpression
     call
      id
       System
      .
      call
       id
        print
       callInvoke
        (
        enumeration
         expression
          atomExpression
           stringE
            "long lived tree of depth %(maxDepth) check: %(longLivedTree.check)"
        )
 fileAtom
  statement
   expression
    atomExpression
     call
      id
       System
      .
      call
       id
        print
       callInvoke
        (
        enumeration
         expression
          atomExpression
           stringE
            "elapsed: %(System.clock - start)"
        )
 <EOF>
