program
 implement
 Command
 ;
 top_declaration_sequence
  top_declaration
   declaration
    include
    string_constant
     "sys.m"
    ;
  top_declaration
   declaration
    identifier_list
     sys
    :
    type_
     data_type
      adt_type
       Sys
    ;
  top_declaration
   declaration
    include
    string_constant
     "draw.m"
    ;
  top_declaration
   declaration
    include
    string_constant
     "sh.m"
    ;
  top_declaration
   function_definition
    function_name_part
     init
    function_arg_ret
     (
     formal_arg_list
      formal_arg
       nil_or_D_list
        nil_or_D
         nil
       :
       type_
        data_type
         ref
         adt_type
          module_qualified_type
           Draw
           ->
           Context
      ,
      formal_arg
       nil_or_D_list
        nil_or_D
         nil
       :
       type_
        data_type
         list
         of
         data_type
          adt_type
           string
     )
    {
    statements_
     statement
      expression
       lvalue_expression
        sys
       =
       expression
        load_expression
         load
         Sys
         expression
          binary_expression
           monadic_expression
            term
             term
              Sys
             ->
             term
              PATH
      ;
     statement
      expression
       binary_expression
        monadic_expression
         term
          term
           term
            sys
           ->
           term
            print
          (
          expression_list
           expression
            binary_expression
             monadic_expression
              term
               string_constant
                "Hello World!\n"
          )
      ;
    }
 <EOF>
