(root (stmt (regoPackage package (ref ex))) (stmt (regoRules (ruleHead loopback = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref input))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar true))))))))))) })))) (stmt (regoRules (ruleHead composite [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ]) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref input (refOperand (refOperandDot . foo)) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref _)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))))) ; (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x))))))) > (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 2))))))))))) })))) (stmt (regoRules (ruleHead vars = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (object_ { (objectItem (scalar "foo") : (term (ref input (refOperand (refOperandDot . foo))))) , (objectItem (scalar "bar") : (term (ref input (refOperand (refOperandDot . bar))))) }))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar true))))))))))) })))) (stmt (regoRules (ruleHead input_eq) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref input (refOperand (refOperandDot . x)))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1))))))))))) })))) (stmt (regoRules (ruleHead allow_basic = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar true))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . a)))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar "testdata"))))))))))) })))) (stmt (regoRules (ruleHead allow_merge_1 = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar true))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . b)))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (object_ { (objectItem (scalar "v1") : (term (scalar "hello"))) , (objectItem (scalar "v2") : (term (scalar "world"))) }))))))))))) })))) (stmt (regoRules (ruleHead allow_merge_2 = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar true))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . b)))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (object_ { (objectItem (scalar "v1") : (term (scalar "hello"))) , (objectItem (scalar "v2") : (term (scalar "world"))) , (objectItem (scalar "v3") : (term (scalar "again"))) }))))))))))) })))) (stmt (regoRules (ruleHead virtual [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ]) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . a)) (refOperand (refOperandDot . b)) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1))))))))))) })))) (stmt (regoRules (ruleHead mock_var = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (object_ { (objectItem (scalar "a") : (term (scalar 0))) , (objectItem (scalar "b") : (term (scalar 0))) }))))))))))) (stmt (regoRules (ruleHead mock_rule = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar false))))))))) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1)))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 2))))))))))) })))) (stmt (regoRules (ruleHead allow1) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . label)) (refOperand (refOperandDot . b)) (refOperand (refOperandDot . c)))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (array_ [ (exprTermList (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1)))))))) , (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 2)))))))) , (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 3))))))))) ]))))))))))) })))) (stmt (regoRules (ruleHead allow2) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . label)) (refOperand (refOperandDot . b)) (refOperand (refOperandDot . c)) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 2))))))))))) })))) (stmt (regoRules (ruleHead allow3) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . label)) (refOperand (refOperandDot . b)) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1))))))))))) })))) (stmt (regoRules (ruleHead allow4) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref data (refOperand (refOperandDot . label)) (refOperand (refOperandDot . b)) (refOperand (refOperandDot . c)) (refOperand (refOperandDot . d)) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (scalar 1))))))))))) })))) (stmt (regoRules (ruleHead allow) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref allow1)))))))))) (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref allow2)))))))))) (literal not (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref allow3)))))))))) (literal not (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref allow4))))))))))) })))) <EOF>)