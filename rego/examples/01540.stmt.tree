(root (stmt (regoPackage package (ref b (refOperand (refOperandDot . c)) (refOperand (refOperandDot . d))))) (stmt (importDirective import (ref data (refOperand (refOperandDot . a))))) (stmt (importDirective import (ref data (refOperand (refOperandDot . g))))) (stmt (regoRules (ruleHead p [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ]) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref a (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref i)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))))) ; (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref q (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ]))))))))))))) })))) (stmt (regoRules (ruleHead q [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x)))))))) ]) (ruleBody (nonEmptyBraceEnclosedBody { (query (literal (literalExpr (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref g (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref j)))))))) ])) (refOperand (refOperandCanonical [ (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref k)))))))) ])))))))))) = (exprTerm (relationExpr (bitwiseOrExpr (bitwiseAndExpr (arithExpr (factorExpr (term (ref x))))))))))) })))) <EOF>)