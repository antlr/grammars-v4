prog
 line
  comment_line
   comment
    ### FILE="Main.annotation"
   eol
    \n
 line
  comment_line
   comment
    # Copyright:\tPublic domain.
   eol
    \n
 line
  comment_line
   comment
    # Filename:\tPINBALL_GAME_BUTTONS_AND_LIGHTS.agc
   eol
    \n
 line
  comment_line
   comment
    # Purpose:\tPart of the source code for Solarium build 55. This
   eol
    \n
 line
  comment_line
   comment
    #\t\tis for the Command Module's (CM) Apollo Guidance
   eol
    \n
 line
  comment_line
   comment
    #\t\tComputer (AGC), for Apollo 4.
   eol
    \n
 line
  comment_line
   comment
    # Assembler:\tyaYUL --block1
   eol
    \n
 line
  comment_line
   comment
    # Contact:\tJim Lawton <jim DOT lawton AT gmail DOT com>
   eol
    \n
 line
  comment_line
   comment
    # Website:\twww.ibiblio.org/apollo/index.html
   eol
    \n
 line
  comment_line
   comment
    # Page scans:\twww.ibiblio.org/apollo/ScansForConversion/Solarium055/
   eol
    \n
 line
  comment_line
   comment
    # Mod history:\t2009-09-23 JL\tCreated.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 481
   eol
    \n\n
 line
  comment_line
   comment
    # KEYBOARD AND DISPLAY PROGRAM
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE FOLLOWING QUOTATION IS PROVIDED THROUGH THE COUTESY OF THE AUTHORS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\t''IT WILL BE PROVED TO THY FACE THAT THOU HAST MEN ABOUT THEE THAT
   eol
    \n
 line
  comment_line
   comment
    # USUALLY TALK OF A NOUN AND A VERB, AND SUCH ABOMINABLE WORDS AS NO
   eol
    \n
 line
  comment_line
   comment
    # CHRISTIAN EAR CAN ENDURE TO HEAR.''
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\t\t\tHENRY 6, ACT 2, SCENE 4
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # SUMMARY OF ERASABLE ASSIGNMENTS FOR KEYBOARD AND DISPLAY PROGRAM 
   eol
    \n
 line
  comment_line
   comment
    # WHICH ARE ALL DEFINED ELSEWHERE.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\t\tSETLOC\t627
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # BUFFER STORAGE AREAS FOR ROUTINES USING DISPLAY OR LOAD ROUTINES.
   eol
    \n
 line
  comment_line
   comment
    # DSPTEM1\tERASE\t+2\t\t# BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
   eol
    \n
 line
  comment_line
   comment
    # DSPTEM2\tERASE\t+2\t\t# BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # ERASABLE ASSIGNMENTS SPECIFIC TO PINBALL
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # ERASABLES RESERVED FOR EXECUTIVE ACTION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # DSPCOUNT\tERASE\t\t\t# DISPLAY POSITION INDICATOR
   eol
    \n
 line
  comment_line
   comment
    # DECBRNCH\tERASE\t\t\t# +DEC, - DEC, OCT INDICATOR
   eol
    \n
 line
  comment_line
   comment
    # VERBREG\tERASE\t\t\t# VERB CODE
   eol
    \n
 line
  comment_line
   comment
    # NOUNREG\tERASE\t\t\t# NOUN CODE
   eol
    \n
 line
  comment_line
   comment
    # XREG\t\tERASE\t\t\t# R1 INPUT BUFFER
   eol
    \n
 line
  comment_line
   comment
    # YREG\t\tERASE\t\t\t# R2 INPUT BUFFER
   eol
    \n
 line
  comment_line
   comment
    # ZREG\t\tERASE\t\t\t# R3 INPUT BUFFER
   eol
    \n
 line
  comment_line
   comment
    # XREGLP\tERASE\t\t\t# LO PART OF XREG (FOR DEC CONV ONLY)
   eol
    \n
 line
  comment_line
   comment
    # YREGLP\tERASE\t\t\t# LO PART OF YREG (FOR DEC CONV ONLY)
   eol
    \n
 line
  comment_line
   comment
    # ZREGLP\tERASE\t\t\t# LO PART OF ZREG (FOR DEC CONV ONLY)
   eol
    \n
 line
  comment_line
   comment
    # MODREG\tERASE\t\t\t# MODE CODE
   eol
    \n
 line
  comment_line
   comment
    # DSPLOCK\t=\tSTATE (BIT4)\t# KEYBOARD/SUBROUTINE CALL INTERLOCK
   eol
    \n
 line
  comment_line
   comment
    # REQRET\tERASE\t\t\t# RETURN REGISTER FOR LOAD
   eol
    \n
 line
  comment_line
   comment
    # LOADSTAT\tERASE\t\t\t# STATUS INDICATOR FOR LOADTST
   eol
    \n
 line
  comment_line
   comment
    # CLPASS\tERASE\t\t\t# PASS INDICATOR CLEAR
   eol
    \n
 line
  comment_line
   comment
    # NOUT\t\tERASE\t\t\t# ACTIVITY COUNTER FOR DSPTAB
   eol
    \n
 line
  comment_line
   comment
    # NOUNCADR\tERASE\t\t\t# MACHINE CADR FOR NOUN
   eol
    \n
 line
  comment_line
   comment
    # MONSAVE\tERASE\t\t\t# N/V CODE FOR MONITOR. ALSO ACTIVITY
   eol
    \n
 line
  comment_line
   comment
    # MONSAVE1\tERASE\t\t\t# NOUNADD STORAGE FOR MONITOR WITH MATBS
   eol
    \n
 line
  comment_line
   comment
    # DSPTAB\tERASE\t+13D\t\t# 0-10, DISPLAY PANEL BUFFER. 11-13, C RELAYS
   eol
    \n
 line
  comment_line
   comment
    ## Page 482
   eol
    \n
 line
  comment_line
   comment
    # CADRSTOR\tERASE\t\t\t# ENDIDLE STORAGE
   eol
    \n
 line
  comment_line
   comment
    # GRABLOCK\tERASE\t\t\t# INTERNAL INTERLOCK FOR DISPLAY SYSTEM
   eol
    \n
 line
  comment_line
   comment
    # NVSBCADR\tERASE\t\t\t# NVSUB STORAGE FOR CALLING CADR
   eol
    \n
 line
  comment_line
   comment
    # DSPLIST\tERASE\t+2\t\t# WAITING REG FOR DSP SYST INTERNAL USE
   eol
    \n
 line
  comment_line
   comment
    # END OF ERASABLES RESERVED FOR PINBALL EXECUTIVE ACTION.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # ERASABLES RESERVED FOR INTERRUPT ACTION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IN0WORD\tERASE\t\t\t# INPUT CODE STORAGE (KEYRUPT OR UPRUPT)
   eol
    \n
 line
  comment_line
   comment
    # DSPCNT\tERASE\t\t\t# COUNTER FOR DSPOUT
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # TEMPORARY ERASABLES FOR EXECUTIVE ACTION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # DSEXIT\t=\tCOMPON\t\t# RETURN FOR DSPIN
   eol
    \n
 line
  comment_line
   comment
    # EXITEM\t=\tCOMPON\t\t# RETURN FOR SCALE FACTOR ROUTINE SELECT
   eol
    \n
 line
  comment_line
   comment
    # BLANKRET\t=\tCOMPON\t\t# RETURN FOR 2BLANK
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # WRDRET\t=\tTEM9\t\t# RETURN FOR 5BLANK
   eol
    \n
 line
  comment_line
   comment
    # WDRET\t\t=\tTEM9\t\t# RETURN FOR DSPWD
   eol
    \n
 line
  comment_line
   comment
    # DECRET\t=\tTEM9\t\t# RETURN FOR PUTCOM(DEC LOAD)
   eol
    \n
 line
  comment_line
   comment
    # 21/22REG\t=\tTEM9\t\t# TEMP FOR CHARIN
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # UPDATRET\t=\tORDER\t\t# RETURN FOR UPDATNN, UPDATVB
   eol
    \n
 line
  comment_line
   comment
    # CHAR\t\t=\tORDER\t\t# TEMP FOR CHARIN
   eol
    \n
 line
  comment_line
   comment
    # ERCNT\t\t=\tORDER\t\t# COUNTER FOR ERROR LIGHT RESET
   eol
    \n
 line
  comment_line
   comment
    # DECOUNT\t=\tORDER\t\t# COUNTER FOR SCALING AND DISPLAY (DEC)
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # SGNON\t\t=\tTEM11\t\t# TEMP FOR +,- ON
   eol
    \n
 line
  comment_line
   comment
    # NOUNTEM\t=\tTEM11\t\t# COUNTER FOR MIXNOUN FETCH
   eol
    \n
 line
  comment_line
   comment
    # DISTEM\t= \tTEM11\t\t# COUNTER FOR OCTAL DISPLAY VERBS
   eol
    \n
 line
  comment_line
   comment
    # DECTEM\t=\tTEM11\t\t# COUNTER FOR FETCH (DEC DISPLAY VERBS)
   eol
    \n
 line
  comment_line
   comment
    # DECTEM1\t=\tTEM11\t\t# TEMP FOR NUM
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # SGNOFF\t=\tDVSW\t\t# TEMP FOR +,- ON
   eol
    \n
 line
  comment_line
   comment
    # NVTEMP\t=\tDVSW\t\t# TEMP FOR NVSUB
   eol
    \n
 line
  comment_line
   comment
    # SFTEMP1\t=\tDVSW\t\t# STORAGE FOR SF CONST HI PART (=SFTEMP2-1)
   eol
    \n
 line
  comment_line
   comment
    # DECTEM2\t=\tDVSW\t\t# TEMP FOR NUM
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # CODE\t\t=\tBRANCHQ\t\t# FOR DSPIN
   eol
    \n
 line
  comment_line
   comment
    # SFTEMP2\t=\tBRANCHQ\t\t# STORAGE FOR SF CONST LO PART (=SFTEMP1+1)
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # ENTRET\t=\tMODE\t\t# EXIT FROM ENTER
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # PROGREG\t=\tVBUF +2\t\t# FOR GO EXEC PROGRAM
   eol
    \n
 line
  comment_line
   comment
    # MIXTEMP\t=\tVBUF +2\t\t# FOR MIXNOUN DATA
   eol
    \n
 line
  comment_line
   comment
    # SIGNRET\t=\tVBUF +2\t\t# RETURN FOR +,- ON
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    ## Page 483
   eol
    \n\n
 line
  comment_line
   comment
    # ALSO PROGREG+1, PROGREG+2. MIXTEMP+1, MIXTEMP+2.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # WDCNT\t\t=\tVBUF +5\t\t# CHAR COUNTER FOR DSPWD
   eol
    \n
 line
  comment_line
   comment
    # INREL\t\t=\tVBUF +5\t\t# INPUT BUFFER SELECTOR ( X,Y,Z, REG )
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MIXBR\t\t=\tTEM10\t\t# INDICATOR FOR MIXED OR NORMAL NOUN
   eol
    \n
 line
  comment_line
   comment
    # DSPMMTEM\t=\tTEM10\t\t# DSPCOUNT SAVE FOR DSPMM
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MONTEM\t=\tNEWEQIND\t# TEMP RETURN FOR MONITOR
   eol
    \n
 line
  comment_line
   comment
    # DSREL\t\t=\tTEM2\t\t# REL ADDRESS FOR DSPIN (TEM2 USED BY DAD1)
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # DSMAG\t\t=\tTEM4\t\t# MAGNITUDE STORE FOR DSPIN
   eol
    \n
 line
  comment_line
   comment
    # IDADDTEM\t=\tTEM4\t\t# MIXNOUN INDIRECT ADDRESS STORAGE
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # COUNT\t\t=\tTEM5\t\t# FOR DSPIN  (TEM5 IS USED BY DAD)
   eol
    \n
 line
  comment_line
   comment
    # LSTPTR\t=\tARETURN\t\t# LIST POINTER FOR GRABUSY
   eol
    \n
 line
  comment_line
   comment
    # RELRET\t=\tARETURN\t\t# RETURN FOR RELDSP
   eol
    \n
 line
  comment_line
   comment
    # FREERET\t=\tARETURN\t\t# RETURN FOR FREEDSP
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # CADRTEM\t=\tESCAPE\t\t# TEMP STORAGE FOR GRAB ROUTINES
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # NNADTEM\tERASE\t\t\t# TEMP FOR NOUN ADDRESS TABLE ENTRY
   eol
    \n
 line
  comment_line
   comment
    # NNTYPTEM\tERASE\t\t\t# TEMP FOR NOUN TYPE TABLE ENTRY
   eol
    \n
 line
  comment_line
   comment
    # IDAD1TEM\tERASE\t\t\t# TEMP FOR INDIR ADDRES TABLE ENTRY(MIXNN)
   eol
    \n
 line
  comment_line
   comment
    #\t\t\t\t\t# MUST = IDAD2TEM-1, = IDAD3TEM-2.
   eol
    \n
 line
  comment_line
   comment
    # IDAD2TEM\tERASE\t\t\t# TEMP FOR INDIR ADDRES TABLE ENTRY(MIXNN)
   eol
    \n
 line
  comment_line
   comment
    #\t\t\t\t\t# MUST = IDAD1TEM+1, = IDAD3TEM-1.
   eol
    \n
 line
  comment_line
   comment
    # IDAD3TEM\tERASE\t\t\t# TEMP FOR INDIR ADDRES TABLE ENTRY(MIXNN)
   eol
    \n
 line
  comment_line
   comment
    #\t\t\t\t\t# MUST = IDAD1TEM+2, = IDAD2TEM+1.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # TEMPORARY ERASABLES FOR INTERRUPT ACTION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # KEYTEMP1\t=\tWTEXIT\t\t# TEMP FOR KEYRUPT, UPRUPT
   eol
    \n
 line
  comment_line
   comment
    # DSRUPTEM\t=\tWTEXIT\t\t# TEMP FOR DSPOUT
   eol
    \n
 line
  comment_line
   comment
    # KEYTEMP2\t=\tRUPTAGN\t\t# TEMP FOR KEYRUPT, UPRUPT
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 484
   eol
    \n\n
 line
  comment_line
   comment
    # THE INPUT CODES ASSUMED FOR THE KEYBOARD ARE,
   eol
    \n
 line
  comment_line
   comment
    # 0\t\t10000
   eol
    \n
 line
  comment_line
   comment
    # 1\t\t00001
   eol
    \n
 line
  comment_line
   comment
    # 9\t\t01001
   eol
    \n
 line
  comment_line
   comment
    # VERB\t\t10001
   eol
    \n
 line
  comment_line
   comment
    # ERROR RES\t10010
   eol
    \n
 line
  comment_line
   comment
    # KEY RLSE\t11001
   eol
    \n
 line
  comment_line
   comment
    # +\t\t11010
   eol
    \n
 line
  comment_line
   comment
    # -\t\t11011
   eol
    \n
 line
  comment_line
   comment
    # ENTER\t\t11100
   eol
    \n
 line
  comment_line
   comment
    # CLEAR\t\t11110
   eol
    \n
 line
  comment_line
   comment
    # NOUN\t\t11111
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # OUTPUT FORMAT FOR DISPLAY PANEL. SET OUT0 TO  AAAABCCCCCDDDDD.
   eol
    \n
 line
  comment_line
   comment
    # A'S SELECT A RELAYWORD. THIS DETERMINES WHICH PAIR OF CHARACTERS ARE
   eol
    \n
 line
  comment_line
   comment
    # ENERGIZED.
   eol
    \n
 line
  comment_line
   comment
    # B FOR SPECIAL RELAYS SUCH AS SIGNS ETC.
   eol
    \n
 line
  comment_line
   comment
    # C'S  5 BIT RELAY CODE FOR LEFT CHAR OF PAIR SELECTED BY RELAYWORD.
   eol
    \n
 line
  comment_line
   comment
    # D'S  5 BIT RELAY CODE FOR RIGHTCHAR OF PAIR SELECTED BY RELAYWORD.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE PANEL APPEARS AS FOLLOWS,
   eol
    \n
 line
  comment_line
   comment
    # MD1\tMD2 \t\t\t\t(MAJOR MODE)
   eol
    \n
 line
  comment_line
   comment
    # VD1\tVD2 (VERB)\tND1\tND2\t(NOUN)
   eol
    \n
 line
  comment_line
   comment
    # R1D1\tR1D2\tR1D3\tR1D4\tR1D5 \t(R1)
   eol
    \n
 line
  comment_line
   comment
    # R2D1\tR2D2\tR2D3\tR2D4\tR2D5 \t(R2)
   eol
    \n
 line
  comment_line
   comment
    # R3D1\tR3D2\tR3D3\tR3D4\tR3D5 \t(R3)
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # EACH OF THESE IS GIVEN A DSPCOUNT NUMBER FOR USE WITHIN COMPUTATION ONLY
   eol
    \n
 line
  comment_line
   comment
    # MD1\t25\tR2D1\t11\t\tALL ARE OCTAL
   eol
    \n
 line
  comment_line
   comment
    # MD2\t24\tR2D2\t10
   eol
    \n
 line
  comment_line
   comment
    # VD1\t23\tR2D3\t7
   eol
    \n
 line
  comment_line
   comment
    # VD2\t22\tR2D4\t6
   eol
    \n
 line
  comment_line
   comment
    # ND1\t21\tR2D5\t5
   eol
    \n
 line
  comment_line
   comment
    # ND2\t20\tR3D1\t4
   eol
    \n
 line
  comment_line
   comment
    # R1D1\t16\tR3D2\t3
   eol
    \n
 line
  comment_line
   comment
    # R1D2\t15\tR3D3\t2
   eol
    \n
 line
  comment_line
   comment
    # R1D3\t14\tR3D4\t1
   eol
    \n
 line
  comment_line
   comment
    # R1D4\t13\tR3D5\t0
   eol
    \n
 line
  comment_line
   comment
    # R1D5\t12
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THERE IS AN 11-REGISTER TABLE (DSPTAB) FOR THE DISPLAY PANEL.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # DSPTAB\tRELAYWD\t\tBIT11\t\tBITS 10-6\tBITS 5-1
   eol
    \n
 line
  comment_line
   comment
    # RELADD
   eol
    \n
 line
  comment_line
   comment
    # 10\t\t1011\t\t\t\tMD1 (25)\tMD2  (24)
   eol
    \n
 line
  comment_line
   comment
    # 9\t\t1010\t\tFLASH\t\tVD1 (23)\tVD2  (22)
   eol
    \n
 line
  comment_line
   comment
    ## Page 485
   eol
    \n
 line
  comment_line
   comment
    # 8\t\t1001\t\t\t\tND1 (21)\tND2  (20)
   eol
    \n
 line
  comment_line
   comment
    # 7\t\t1000\t\tUPACT\t\t\t\tR1D1 (16)
   eol
    \n
 line
  comment_line
   comment
    # 6\t\t0111\t\t+R1\t\tR1D2 (15)\tR1D3 (14)
   eol
    \n
 line
  comment_line
   comment
    # 5\t\t0110\t\t-R1\t\tR1D4 (13)\tR1D5 (12)
   eol
    \n
 line
  comment_line
   comment
    # 4\t\t0101\t\t+R2\t\tR2D1 (11)\tR2D2 (10)
   eol
    \n
 line
  comment_line
   comment
    # 3\t\t0100\t\t-R2\t\tR2D3 (7)\tR2D4 (6)
   eol
    \n
 line
  comment_line
   comment
    # 2\t\t0011\t\t\t\tR2D5 (5)\tR3D1 (4)
   eol
    \n
 line
  comment_line
   comment
    # 1\t\t0010\t\t+R3\t\tR3D2 (3)\tR3D3 (2)
   eol
    \n
 line
  comment_line
   comment
    # 0\t\t0001\t\t-R3\t\tR3D4 (1)\tR3D5 (0)
   eol
    \n
 line
  comment_line
   comment
    #\t\t0000\t    NO RELAYWORD
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE 5-BIT RELAY CODES ARE,
   eol
    \n
 line
  comment_line
   comment
    # BLANK\t\t00000
   eol
    \n
 line
  comment_line
   comment
    # 0\t\t10101
   eol
    \n
 line
  comment_line
   comment
    # 1\t\t00011
   eol
    \n
 line
  comment_line
   comment
    # 2\t\t11001
   eol
    \n
 line
  comment_line
   comment
    # 3\t\t11011
   eol
    \n
 line
  comment_line
   comment
    # 4\t\t01111
   eol
    \n
 line
  comment_line
   comment
    # 5\t\t11110
   eol
    \n
 line
  comment_line
   comment
    # 6\t\t11100
   eol
    \n
 line
  comment_line
   comment
    # 7\t\t10011
   eol
    \n
 line
  comment_line
   comment
    # 8\t\t11101
   eol
    \n
 line
  comment_line
   comment
    # 9\t\t11111
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 486
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        14000
   eol
    \n\n
 line
  instruction_line
   label
    FLASHON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHON1
   eol
    \n\n
 line
  instruction_line
   label
    FLASHOFF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHOF1
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # END OF STANDARD LEAD INS.
   eol
    \n\n\n\n
 line
  instruction_line
   label
    CHARIN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
    ws
     \t\t
    comment
     # BLOCK DISPLAY SYST BUT SAVE OLD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
    ws
     \t\t
    comment
     # C(DSPLOCK) FOR ERROR LIGHT RESET.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        21/22REG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # INPUT CODE\tFUNCTION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # 7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        89TEST
    ws
     \t\t
    comment
     # 10\t\t    8
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        89TEST
    ws
     \t\t
    comment
     # 11\t\t    9
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 12
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 13
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 14
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 16
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 17
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
    ws
     \t\t
    comment
     # 20\t\t    0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERB
    ws
     \t\t
    comment
     # 21\t\t    VERB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROR
    ws
     \t\t
    comment
     # 22\t\t    ERROR LIGHT RESET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ABORTCAL
    ws
     \t
    comment
     # 23
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 24
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 25
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 26
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 27
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 30
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBRELDSP
    ws
     \t
    comment
     # 31\t\t    KEY RELEASE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSGN
    ws
     \t\t
    comment
     # 32\t\t    +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEGSGN
    ws
     \t\t
    comment
     # 33\t\t    -
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTERJMP
    ws
     \t
    comment
     # 34\t\t    ENTER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # 35
   eol
    \n
 line
  comment_line
   comment
    ## Page 487
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLEAR
    ws
     \t\t
    comment
     # 36\t\t    CLEAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUN
    ws
     \t\t
    comment
     # 37\t\t    NOUN
   eol
    \n\n\n\n
 line
  instruction_line
   label
    ENTERJMP
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTER
   eol
    \n\n
 line
  instruction_line
   label
    ABORTCAL
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OCT32
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
    ws
     \t
    comment
     # FORCE DECODING OF VERB 72 AND DO RELDSP.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JAMEXTVB
   eol
    \n\n
 line
  instruction_line
   label
    OCT32
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        32
   eol
    \n\n\n\n
 line
  instruction_line
   label
    89TEST
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NUM
    ws
     \t\t
    comment
     # IF DECBRNCH IS +, 8 OR 9 OK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # IF DECBRNCH IS +0, REJECT 8 OR 9
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # NUM ASSEMBLES OCTAL 3 BITS AT A TIME. FOR DECIMAL IT CONVERTS INCOMING
   eol
    \n
 line
  comment_line
   comment
    # WORD AS A FRACTION, KEEPING RESULTS TO DP.
   eol
    \n
 line
  comment_line
   comment
    # OCTAL RESULTS ARE LEFT IN XREG, YREG, OR ZREG. HI PART OF DEC IN XREG,
   eol
    \n
 line
  comment_line
   comment
    # YREG, ZREG. THE LOW PARTS IN XREGLP, YREGLP, OR ZREGLP.
   eol
    \n
 line
  comment_line
   comment
    # DECBRNCH IS LEFT AT +0 FOR OCT, +1 FOR + DEC, +2 FOR - DEC.
   eol
    \n
 line
  comment_line
   comment
    # IF DSPCOUNT WAS LEFT -, NO MORE DATA IS ACCEPTED.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHAR
   eol
    \n
 line
  instruction_line
   label
    NUM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # -BLOCK DATA IN IF DSPCOUNT IS -
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # -0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GETINREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
    ws
     \t\t
    comment
     # IF CLPASS IS + OR +0, MAKE IT +0.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
 line
  comment_line
   comment
    ## Page 488
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # +0, OCTAL.  +1, + DEC.  +2, - DEC.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECTOBIN
    ws
     \t
    comment
     # +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # +0 OCTAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDNMTST
   eol
    \n
 line
  instruction_line
   label
    DECTOBIN
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # SUM X 2EXP-14 IN MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEN
    ws
     \t\t
    comment
     # 10 X 2EXP-14
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SHORTMP
    ws
     \t\t
    comment
     # 10SUM X 2EXP-28 IN MPAC, MPAC+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDNMTST
    ws
     \t
    comment
     # NO OF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # OF MUST BE 5TH CHAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECCEND
   eol
    \n
 line
  instruction_line
   label
    ENDNMTST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CRITCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # +\t PATHOLOGICAL CASE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHARALRM
    ws
     \t
    comment
     # +0\tIMPOSSIBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MORNUM
    ws
     \t\t
    comment
     # -
   eol
    \n
 line
  instruction_line
   label
    ENDNUM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECCEND
   eol
    \n
 line
  instruction_line
   label
    ENDALL
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # BLOCK NUMIN BY PLACING DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MORNUM
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # NEGATIVELY
   eol
    \n
 line
  instruction_line
   label
    DECEND
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +DECSGN
    ws
     \t\t
    comment
     # + DEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DMP
    ws
     \t\t
    comment
     # - DEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEGDECON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDECOM
    ws
     \t\t
    comment
     # MULT SUM X 2EXP-28 IN MPAC, MPAC+1 BY
   eol
    \n
 line
  comment_line
   comment
    ## Page 489
   eol
    \n
 line
  instruction_line
   label
    +DECSGN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   argument
    ws
     \t\t
    comment
     # 2EXP14/10EXP5, GIVES (SUM/10EXP5)X2EXP-14
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECON
    ws
     \t\t
    comment
     # IN MPAC, +1, +2.
   eol
    \n
 line
  instruction_line
   label
    ENDECOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREGLP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDALL
   eol
    \n
 line
  instruction_line
   label
    MORNUM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # DECREMENT DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    CRITCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        22
    ws
     \t\t
    comment
     # (DEC 18)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20
    ws
     \t\t
    comment
     # (DEC 16)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        12
    ws
     \t\t
    comment
     # (DEC 10)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n\n
 line
  instruction_line
   label
    DECON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      2DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        E-5
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        B14
    ws
     \t
    comment
     # 2EXP14/10EXP5 = .16384 DEC
   eol
    \n\n
 line
  instruction_line
   label
    NEGDECON
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        72603
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        64516
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # GETINREL GETS PROPER DATA REG REL ADDRESS FOR CURRENT C(DSPCOUNT) AND
   eol
    \n
 line
  comment_line
   comment
    # PUTS IT INTO INREL. +0 VERBREG, 1 NOUNREG, 2 XREG, 3 YREG, 4 ZREG.
   eol
    \n\n
 line
  instruction_line
   label
    GETINREL
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INRELTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # (A TEMP, REG)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    INRELTAB
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t\t
    comment
     # R3D5 (DSPCOUNT = 0)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t\t
    comment
     # R3D4\t\t =(1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t\t
    comment
     # R3D3\t\t =(2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t\t
    comment
     # R3D2\t\t =(3)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t \t
    comment
     # R3D1\t\t =(4)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # R2D5\t\t =(5)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # R2D4\t\t =(6)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # R2D3\t\t =(7)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # R2D2\t\t =(8D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # R2D1\t\t =(9D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
    ws
     \t\t
    comment
     # R1D5\t\t =(10D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
    ws
     \t\t
    comment
     # R1D4\t\t =(11D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
    ws
     \t\t
    comment
     # R1D3\t\t =(12D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
    ws
     \t\t
    comment
     # R1D2\t\t =(13D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
    ws
     \t\t
    comment
     # R1D1\t\t =(14D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
    ws
     \t\t
    comment
     # NO DSPCOUNT NUMBER = 15D
   eol
    \n
 line
  comment_line
   comment
    ## Page 490
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # ND2\t\t =(16D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # ND1\t\t =(17D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # VD2\t\t =(18D)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # VD1\t\t =(19D)
   eol
    \n\n\n\n
 line
  instruction_line
   label
    VERB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
    ws
     \t\t
    comment
     # VERB CANT USE 2BLANK SINCE THAT TURNS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
    ws
     \t\t
    comment
     # THE FLASH OFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
   eol
    \n
 line
  instruction_line
   label
    N/VCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
    ws
     \t\t
    comment
     # SET FOR ENTPAS0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
    ws
     \t\t
    comment
     # IF DSPALARM OCCURS BEFORE FIRST ENTPAS0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
    ws
     \t\t
    comment
     # OR NVSUB, ENTRET MUST ALREADY BE SET
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # TO TC ENDOFJOB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n
 line
  instruction_line
   label
    NOUN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ND1
    ws
     \t\t
    comment
     # ND1, OCT 21 (DEC 17)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        N/VCOM
   eol
    \n\n\n\n
 line
  assignment_line
   variable
    VD2
   ws
    \t\t
   =
   ws
    \t
   expression
    multiplyingExpression
     atom
      variable
       CRITCON
   ws
    \t\t
   comment
    # OCT 22
   eol
    \n\n\n\n
 line
  instruction_line
   label
    NEGSGN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        -ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
 line
  instruction_line
   label
    BOTHSGN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
    ws
     \t
    comment
     # SET DEC COMP BIT TO 1 (IN DECBRNCH)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # BIT 5 FOR R1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT7
    ws
     \t\t
    comment
     # BIT 4 FOR R2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
    ws
     \t
    comment
     # BIT 3 FOR R3
   eol
    \n
 line
  instruction_line
   label
    FIXCLPAS
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
    ws
     \t\t
    comment
     # IF CLPASS IS + OR +0, MAKE IT +0.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  comment_line
   comment
    ## Page 491
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    POSGN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BOTHSGN
   eol
    \n\n
 line
  instruction_line
   label
    +ON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GETINREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNOFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNON
   eol
    \n
 line
  instruction_line
   label
    SGNCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNOFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT11
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNRET
   eol
    \n
 line
  instruction_line
   label
    -ON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GETINREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNOFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNCOM
   eol
    \n\n
 line
  instruction_line
   label
    SGNTAB
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5
    ws
     \t\t
    comment
     # -R1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # -R2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # -R3
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SIGNTEST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # ALLOWS +,- ONLY WHEN DSPCOUNT=R1D1,
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNRET
    ws
     \t\t
    comment
     # R2D1, OR R3D1. ALLOWS ONLY FIRST OF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
    ws
     \t\t
    comment
     # CONSECUTIVE +/- CHARACTERS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # IF LOW2 BITS OF DECBRNCH NOT = 0, SIGN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # FOR THIS WORD ALREADY IN. REJECT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTST1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R2D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTST1
   eol
    \n
 line
  comment_line
   comment
    ## Page 492
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R3D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTST1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # NO MATCH FOUND. SIGN ILLEGAL
   eol
    \n
 line
  instruction_line
   label
    SGNTST1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNRET
    ws
     \t\t
    comment
     # SIGN LEGAL
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # ERROR LIGHT RESET RESETS TMALM, DSPALARM (CHECK FAIL), PROGALM, UNBLOCKS
   eol
    \n
 line
  comment_line
   comment
    # ENDPULSES, RESETS ERRUPT TRAP. IT ALSO FORCES BIT 12 OF ALL DSPTAB
   eol
    \n
 line
  comment_line
   comment
    # ENTRIES TO ONE. RESETS UPACT LIGHT.
   eol
    \n\n
 line
  instruction_line
   label
    ERROR
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
    ws
     \t\t
    comment
     # RESTORE ORIGINAL C(DSPLOCK) BIT4 OF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
    ws
     \t\t\t
    comment
     # STATE. THUS ERROR LIGHT RESET LEAVES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOC
    ws
     \t\t
    comment
     # DSPLOCK UNCHANGED.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        21/22REG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT7
    ws
     \t\t
    comment
     # RESET ERRUPT TRAP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CFAILCON
    ws
     \t
    comment
     # RESET THE C RELAYS FOR IMU FAIL, CDUFAIL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +11D
    ws
     \t
    comment
     # PIPA FAIL.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +11D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
 line
  instruction_line
   label
    TSTAB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BINCON
    ws
     \t\t
    comment
     # (DEC 10)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCNT
    ws
     \t\t
    comment
     # ERCNT = COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERPLUS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
 line
  instruction_line
   label
    ERMINUS
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOTBIT12
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCOM
   eol
    \n
 line
  instruction_line
   label
    ERPLUS
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOTBIT12
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # MIGHT WANT TO RESET CLPASS, DECBRNCH,
   eol
    \n
 line
  instruction_line
   label
    ERCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCNT
    ws
     \t\t
    comment
     # ETC.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCNT
   eol
    \n
 line
  comment_line
   comment
    ## Page 493
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TSTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROPT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROPT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROPT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n\n
 line
  instruction_line
   label
    ERROPT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROR1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROR1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERROR1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTICSB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n\n
 line
  instruction_line
   label
    ERROR1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FAILREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFAIL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SEVEN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
    ws
     \t\t
    comment
     # TURN OFF UPACT LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    OPTICSB
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        35000
   eol
    \n
 line
  instruction_line
   label
    ERCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01131
    ws
     \t\t
    comment
     # BITS 1, 4, 5, 7, 10.
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # PROGALM, TMFAIL, CHECK FAIL, ERRUPT TRAP
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # END PULSES.
   eol
    \n\n
 line
  instruction_line
   label
    NOTBIT12
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        73777
   eol
    \n
 line
  instruction_line
   label
    CFAILCON
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40340
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # CLEAR BLANKS WHICH R1, R2, R3 IS CURRENT OR LAST TO BE DISPLAYED (PERTINE
   eol
    \n
 line
  comment_line
   comment
    # NT XREG,YREG,ZREG IS CLEARED). SUCCESSIVE CLEARS TAKE CARE OF EACH RX
   eol
    \n
 line
  comment_line
   comment
    # L/ RC UNTIL R1 IS DONE. THEN NO FURTHER ACTION.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE SINGLE COMPONENT LOAD VERBS ALLOW ONLY THE SINGLE RC THAT IS
   eol
    \n
 line
  comment_line
   comment
    # APPROPRIATE TO BE CLEARED.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # CLPASS\t+0  PASS0, CAN BE BACKED UP
   eol
    \n
 line
  comment_line
   comment
    #\t\t+NZ  HIPASS, CAN BE BACKED UP
   eol
    \n
 line
  comment_line
   comment
    #\t\t-NZ  PASS0, CANNOT BE BACKED UP
   eol
    \n\n
 line
  instruction_line
   label
    CLEAR
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
 line
  comment_line
   comment
    ## Page 494
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # DO NOT CHANGE DSPCOUNT BECAUSE MAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INRELTAB
    ws
     \t
    comment
     # FAIL LEGALTST.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # MUST SET INREL, EVEN FOR HIPASS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASHI
    ws
     \t\t
    comment
     # +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # +0\tIF CLPASS IS +0 OR -, IT IS PASS0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # -
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEGALTST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLEAR1
   eol
    \n
 line
  instruction_line
   label
    CLPASHI
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEGALTST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DOUBLK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # +3 TO - NUMBER. BACKS UP DATA REQUESTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXTEMP
    ws
     \t\t
    comment
     # TEMP STORAGE FOR INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # DECREMENT VERB AND RE-DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXTEMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # RESTORE INREL
   eol
    \n
 line
  instruction_line
   label
    CLEAR1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLR5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
    ws
     \t\t
    comment
     # ONLY IF CLPASS IS + OR +0,
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
    ws
     \t\t
    comment
     # SET FOR HIGHER PASS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n
 line
  instruction_line
   label
    CLR5
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # USED 5BLANK  BUT AVOIDS ITS TC GETINREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5BLANK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
 line
  instruction_line
   label
    LEGALTST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # LEGAL  INREL G/ 2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # ILLEGAL   INREL= 0,1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # LEGAL    INREL = 2
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # 5BLANK BLANKS 5 CHAR DISPLAY WORD IN R1, R2, OR R3. IT ALSO ZEROES XREG,
   eol
    \n
 line
  comment_line
   comment
    # YREG, OR ZREG. PLACE ANY + DSPCOUNT NUMBER FOR PERTINENT RC INTO DSPCOUNT
   eol
    \n
 line
  comment_line
   comment
    # DSPCOUNT IS LEFT SET TO LEFT MOST DSP NUMB FOR RC JUST BLANKED.
   eol
    \n\n
 line
  instruction_line
   label
    5BLANK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
 line
  comment_line
   comment
    ## Page 495
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WRDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GETINREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # ZERO X, Y, Z, REG.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREGLP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
    ws
     \t\t
    comment
     # ZERO PERTINENT DEC COMP BIT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT7
    ws
     \t\t
    comment
     # PROTECT OTHERS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BRNCHCON
    ws
     \t
    comment
     # ZERO LOW 2 BITS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SINBLANK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
    ws
     \t
    comment
     # BLANK ISOLATED CHAR SEPARATELY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
   eol
    \n
 line
  instruction_line
   label
    5BLANK1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DOUBLK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # SET DSPCOUNT TO LEFT MOST DSP NUMBER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WRDRET
    ws
     \t\t
    comment
     # OF REG. JUST BLANKED
   eol
    \n\n
 line
  instruction_line
   label
    SINBLANK
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16
    ws
     \t\t
    comment
     # DEC 14
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
   eol
    \n
 line
  instruction_line
   label
    DOUBLK
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        15
    ws
     \t\t
    comment
     # DEC 13
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11
    ws
     \t\t
    comment
     # DEC 9
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
   eol
    \n\n
 line
  instruction_line
   label
    BRNCHCON
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        77774
   eol
    \n\n
 line
  comment_line
   comment
    # 2BLANK BLANKS TWO CHAR. PLACE DSP NUMBER OF LEFT CHAR  OF THE PAIR INTO
   eol
    \n
 line
  comment_line
   comment
    # DSPCOUNT. THIS NUMBER IS LEFT IN DSPCOUNT
   eol
    \n\n
 line
  instruction_line
   label
    2BLANK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BLANKRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BLANKCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
 line
  comment_line
   comment
    ## Page 496
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INCNOUT
    ws
     \t\t
    comment
     # IF OLD CONTENTS +,+1 TO NOUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
    ws
     \t\t\t
    comment
     # IF -,NOUT OK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BLANKRET
   eol
    \n
 line
  instruction_line
   label
    BLANKCON
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4000
   eol
    \n\n
 line
  instruction_line
   label
    INCNOUT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # RETURN TO 2+ L(CALLING TC)
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 497
   eol
    \n\n
 line
  comment_line
   comment
    # ENTER PASS 0 IS THE EXECUTE FUNCTION. HIGHER ORDER ENTERS ARE TO LOAD
   eol
    \n
 line
  comment_line
   comment
    # DATA. THE SIGN OF REQRET DETERMINES THE PASS, + FOR PASS 0,- FOR HIGHER
   eol
    \n
 line
  comment_line
   comment
    # PASSES.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16000
   eol
    \n\n
 line
  instruction_line
   label
    NVSUBB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUB1
    ws
     \t\t
    comment
     # STANDARD LEAD INS, DONT MOVE.
   eol
    \n
 line
  instruction_line
   label
    GRABUSYB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABUSY1
   eol
    \n
 line
  instruction_line
   label
    NVSUBSYB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBSY1
   eol
    \n
 line
  instruction_line
   label
    DSPMM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMM1
   eol
    \n
 line
  instruction_line
   label
    LOADLV1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # END OF STANDARD LEAD INS.
   eol
    \n\n\n\n
 line
  instruction_line
   label
    ENTER
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTPAS0
    ws
     \t\t
    comment
     # IF +, PASS 0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTPAS0
    ws
     \t\t
    comment
     # IF +, PASS 0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # IF -, NOT PASS 0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
    ws
     \t\t
    comment
     # IF DEC, ALARM IF LESS THAN 5 CHAR IN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
    ws
     \t
    comment
     # BUT LEAVE REQRET - AND FLASH ON, SO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # OPERATOR CAN SUPPLY MISSING NUMERICAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # CHARACTERS AND CONTINUE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ACCEPTWD
    ws
     \t
    comment
     # OCTAL. ANY NUMBER OF CHAR OK.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # 5 CHAR IN (DSPCOUNT IS -)
   eol
    \n
 line
  instruction_line
   label
    ACCEPTWD
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
    ws
     \t\t
    comment
     # 5 CHAR IN (DSPCOUNT IS -)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
    ws
     \t\t
    comment
     # SET REQRET +.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHOFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n\n
 line
  assignment_line
   variable
    ENTEXIT
   ws
    \t\t
   =
   ws
    \t
   expression
    multiplyingExpression
     atom
      variable
       ENTRET
   eol
    \n\n
 line
  instruction_line
   label
    ENTPAS0
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     #  NOUN VERB SUB ENTERS HERE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
 line
  instruction_line
   label
    TESTVB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # IF VERB IS 32-77, SKIP NOUN TEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOWVERB
    ws
     \t\t
    comment
     # 32-VB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TESTNN
    ws
     \t\t
    comment
     # VERB L/ 32
   eol
    \n
 line
  instruction_line
   label
    LOWVERB
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        32
    ws
     \t\t
    comment
     # LOWER VERB THAT AVOIDS NOUN TEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # VERB G/ 32
   eol
    \n
 line
  comment_line
   comment
    ## Page 498
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
    ws
     \t\t
    comment
     # VERB=32
   eol
    \n
 line
  instruction_line
   label
    TESTNN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXNOUN
    ws
     \t\t
    comment
     # MIXED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
    ws
     \t\t
    comment
     # NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -2
    ws
     \t
    comment
     #      NORMAL IF +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # NOT IN USE   IF +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQADD
    ws
     \t\t
    comment
     # SPECIFY MACHINE ADDRESS IF -
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R3D1
    ws
     \t\t
    comment
     # AUGMENT MACHINE ADDRESS IF -0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOCTWD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
   eol
    \n
 line
  instruction_line
   label
    REQADD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # SET CLPASS FOR PASS0 ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # TEST IF REACHED HERE FROM INTERNAL OR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INTMATBS
    ws
     \t
    comment
     #\t\tFROM EXTERNAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INTMATBS
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATZ
    ws
     \t\t
    comment
     # EXTERNAL MACH CADR TO BE SPECIFIED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # ALARM IF DECIMAL USED FOR MATBS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZREG
    ws
     \t\t
    comment
     # OCTAL USED\tOK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
   eol
    \n\n
 line
  instruction_line
   label
    LODNNLOC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNTAB
   eol
    \n\n
 line
  instruction_line
   label
    INTMATBS
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # MAKES VB 15 LOOK LIKE VB 05.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPADD
    ws
     \t\t
    comment
     # VB NOT = 05 OR 15, DISPLAY ADDRESS.
   eol
    \n
 line
  instruction_line
   label
    NEG5
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        77772
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPADD
    ws
     \t\t
    comment
     # VB NOT = 05 OR 15, DISPLAY ADDRESS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
    ws
     \t\t
    comment
     # VB = 05 OR 15, DO NOT DISPLAY ADDRESS.
   eol
    \n
 line
  instruction_line
   label
    DSPADD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R3D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CA
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOCTWD
   eol
    \n
 line
  comment_line
   comment
    ## Page 499
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
 line
  instruction_line
   label
    VERBFAN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2CON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # VERB-LST2CON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # VERB G/ LST2CON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBFANDIR
    ws
     \t
    comment
     # VERB L/ LST2CON
   eol
    \n
 line
  instruction_line
   label
    JAMEXTVB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # SPECIAL ENTRY FOR FORCING EXTENDED VERB.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP
    ws
     \t\t
    comment
     # RELEASE DISPLAY SYST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # ALSO TURN OFF RELEASE DISPLAY SYST LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2CADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n
 line
  instruction_line
   label
    LST2CON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40
    ws
     \t\t
    comment
     # FIRST LST2 VERB
   eol
    \n
 line
  instruction_line
   label
    LST2CADR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2FAN
    ws
     \t\t
    comment
     # THE LST2 FAN IS LOCATED IN BANK 05
   eol
    \n\n
 line
  instruction_line
   label
    VBFANDIR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n\n
 line
  instruction_line
   label
    VERBTAB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # VB00 ILLEGAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPA
    ws
     \t\t
    comment
     # VB01 DISPLAY OCT COMP 1 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPB
    ws
     \t\t
    comment
     # VB02 DISPLAY OCT COMP 2 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPC
    ws
     \t\t
    comment
     # VB03 DISPLAY OCT COMP 3 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPAB
    ws
     \t\t
    comment
     # VB04 DISPLAY OCT COMP 1,2 (R1,R2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPABC
    ws
     \t\t
    comment
     # VB05 DISPLAY OCT COMP 1,2,3 (R1,R2,R3)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECDSP
    ws
     \t\t
    comment
     # VB06 DECIMAL DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDPDEC
    ws
     \t
    comment
     # VB07 DP DECIMAL DISPLAY (R1,R2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBRQWAIT
    ws
     \t
    comment
     # VB10 REQUEST WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB11 MONITOR OCT COMP 1 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB12 MONITOR OCT COMP 2 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB13 MONITOR OCT COMP 3 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB14 MONITOR OCT COMP 1,2 (R1,R2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB15 MONITOR OCT COMP 1,2,3 (R1,R2,R3)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB16 MONITOR DECIMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONITOR
    ws
     \t\t
    comment
     # VB17 MONITOR DP DEC  (R1,R2)
   eol
    \n
 line
  instruction_line
   label
    REQEXLOC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBRQEXEC
    ws
     \t
    comment
     # VB20 REQUEST EXECUTIVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ALOAD
    ws
     \t\t
    comment
     # VB21 LOAD COMP 1 (R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BLOAD
    ws
     \t\t
    comment
     # VB22 LOAD COMP 2 (R2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLOAD
    ws
     \t\t
    comment
     # VB23 LOAD COMP 3 (R3)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ABLOAD
    ws
     \t\t
    comment
     # VB24 LOAD COMP 1,2 (R1,R2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ABCLOAD
    ws
     \t\t
    comment
     # VB25 LOAD COMP 1,2,3 (R1,R2,R3)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # VB26 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # VB27 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # VB30 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPBANK
    ws
     \t\t
    comment
     # VB31 BANK DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUMP
    ws
     \t\t
    comment
     # VB32 C(R2) INTO R3, C(R1) INTO R2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBPROC
    ws
     \t\t
    comment
     # VB33 PROCEED WITHOUT DATA
   eol
    \n
 line
  comment_line
   comment
    ## Page 500
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBTERM
    ws
     \t\t
    comment
     # VB34 TERMINATE CURRENT TEST OR LOAD REQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBRELDSP
    ws
     \t
    comment
     # VB35 RELEASE DISPLAY SYST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SLAPB
    ws
     \t\t
    comment
     # VB36 FRESH START
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MMCHANG
    ws
     \t\t
    comment
     # VB37 CHANGE MAJOR MODE
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # THE LIST2 VERBFAN IS LOCATED IN BANK 05.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 501
   eol
    \n\n
 line
  comment_line
   comment
    # NNADTAB CONTAINS A RELATIVE ADDRESS, IDADDREL(IN LOW 10 BITS), REFERRING
   eol
    \n
 line
  comment_line
   comment
    # TO WHERE 3 CONSECUTIVE ADDRESSES ARE STORED (IN IDADDTAB).
   eol
    \n
 line
  comment_line
   comment
    # MIXNOUN GETS DATA AND STORES IN MIXTEMP,+1,+2. IT SETS NOUNADD FOR
   eol
    \n
 line
  comment_line
   comment
    # MIXTEMP.
   eol
    \n\n
 line
  instruction_line
   label
    MIXNOUN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # +  IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # +0  NOT IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # -  IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # -0  IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # AVOID MIXNOUN SWAP FOR OTHER THAN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
    ws
     \t\t
    comment
     #\tDISPLAY VERBS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
 line
  instruction_line
   label
    MIXNN1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXAD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # SET NOUNADD TO MIXTEMP + K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD1TEM
    ws
     \t
    comment
     # GET IDADDTAB ENTRY FOR COMPONENT K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # OF NOUN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # TEST FOR DP (FOR OCT DISPLAY). IF SO, GET
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     #   MINOR PART ONLY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HI5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
    ws
     \t\t
    comment
     # SF ROUT NUMBER IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXNN2
    ws
     \t\t
    comment
     # NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # DP  GET MINOR PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
 line
  instruction_line
   label
    MIXNN2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW10
    ws
     \t\t
    comment
     # ESUBK (NO DP)  OR  (ESUBK)+1    FOR DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # PICK UP C(ESUBK)  NOT DP.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # OR C((ESUBK)+1)  FOR DP MINOR PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # STORE IN MIXTEM + K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXNN1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBFAN
   eol
    \n\n
 line
  instruction_line
   label
    MIXAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXTEMP
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DPTEST
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # ENTER WITH SF ROUT NUMBER IN A.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # RETURNS TO L+1 IF NO DP
   eol
    \n
 line
  comment_line
   comment
    ## Page 502
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # RETURNS TO L+2 IF DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # OCTAL ONLY  NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # FRACT NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # DEG  NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # ARITH  NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST1
    ws
     \t\t
    comment
     # DP1OUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST1
    ws
     \t\t
    comment
     # DP2OUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # OPDEG  NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST1
    ws
     \t\t
    comment
     # DP3OUT
   eol
    \n
 line
  instruction_line
   label
    DPTEST1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # RETURN TO L+2
   eol
    \n\n\n\n
 line
  instruction_line
   label
    REQDATX
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQCOM
   eol
    \n
 line
  instruction_line
   label
    REQDATY
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R2D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQCOM
   eol
    \n
 line
  instruction_line
   label
    REQDATZ
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R3D1
   eol
    \n
 line
  instruction_line
   label
    REQCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # ENTEXIT NOT ENDOFJOB. NVSUB INITIATED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # ENTEXIT NOT ENDOFJOB. NVSUB INITIATED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
    ws
     \t\t
    comment
     # ENTEXIT = ENDOFJOB. EXTERNALLY INITIATED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # NVSUB INITIATED LOAD. SET CADRSTOR TO -0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n\n
 line
  comment_line
   comment
    # IF NVSUB INITIATED LOAD, SET CADRSTOR TO -0 TO TELL RECALTST TO RELEASE
   eol
    \n
 line
  comment_line
   comment
    # DISPLAY IF ENDIDLE WAS NOT USED. (NECESSARY FRO DATAWAIT)
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
 line
  instruction_line
   label
    UPDATNN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
 line
  comment_line
   comment
    ## Page 503
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTADD
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # MATBS\t DONT CHANGE NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TCF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTADD
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # MATBI\t DONT CHANGE NOUNADD
   eol
    \n
 line
  instruction_line
   label
    PUTADD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ND1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDAT1
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
 line
  instruction_line
   label
    UPDATVB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
 line
  instruction_line
   label
    UPDAT1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSP2BIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATRET
   eol
    \n\n\n\n
 line
  instruction_line
   label
    GODSPALM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 504
   eol
    \n\n
 line
  comment_line
   comment
    # \tNOUN TABLES
   eol
    \n
 line
  comment_line
   comment
    # NOUN CODE L/55, NORMAL CASE. NOUN CODE G/E 55, MIXED NOUN CASE.
   eol
    \n
 line
  comment_line
   comment
    # FOR NORMAL CASE, NNADTAB CONTAINS ONE MACHINE ADDRESS FOR EACH NOUN.
   eol
    \n
 line
  comment_line
   comment
    # +0 INDICATES NOUN NOT USED.   - ENTRY IDICATES MACHINE ADDRESS TO BE
   eol
    \n
 line
  comment_line
   comment
    # SPECIFIED.      -0 INDICATES AUGMENT OF LAST MACHINE ADDRESS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # FOR MIXED CASE, NNADTAB CONTAINS ONE INDIRECT ADDRESS(IDADDREL) IN LOW
   eol
    \n
 line
  comment_line
   comment
    # 10 BITS, AND THE COMPONENT CODE NUMBER IN THE HIGH 5 BITS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # NNTYPTAB IS A PACKED TABLE OF THE FORM MMMMMNNNNNPPPPP.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # FOR THE NORMAL CASE, M'S ARE THE COMPONENT CODE NUMBER.
   eol
    \n
 line
  comment_line
   comment
    #\t\t       N'S ARE THE SF ROUTINE CODE NUMBER.
   eol
    \n
 line
  comment_line
   comment
    #\t\t       P'S ARE THE SF CONSTANT CODE NUMBER.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MIXED-CASE,M'S ARE THE SF CONSTANT3 CODE NUMBER\t3 COMPONENT CASE
   eol
    \n
 line
  comment_line
   comment
    #\t     N'S ARE THE SF CONSTANT2 CODE NUMBER
   eol
    \n
 line
  comment_line
   comment
    #\t     P'S ARE THE SF CONSTANT1 CODE NUMBER
   eol
    \n
 line
  comment_line
   comment
    #\t     N'S ARE THE SF CONSTANT2 CODE NUMBER\t2 COMPONENT CASE
   eol
    \n
 line
  comment_line
   comment
    #\t     P'S ARE THE SF CONSTANT1 CODE NUMBER
   eol
    \n
 line
  comment_line
   comment
    #\t     P'S ARE THE SF CONSTANT1 CODE NUMBER\t 1 COMPONENT CASE
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THERE IS ALSO AN INDIRECT ADDRESS TABLE(IDADDTAB) FOR MIXED CASE ONLY.
   eol
    \n
 line
  comment_line
   comment
    # ENTRY IS OF FORM RRRRREEEEEEEEEE. IDADDREL IS THE RELATIVE ADDRESS OF
   eol
    \n
 line
  comment_line
   comment
    # THE FIRST OF THESE ENTRIES.
   eol
    \n
 line
  comment_line
   comment
    # R'S ARE THE SF ROUTINE CODE NUMBERS FOR COMPONENT K
   eol
    \n
 line
  comment_line
   comment
    # E'S ARE THE MACHINE ADDRESS FOR COMPONENT K
   eol
    \n
 line
  comment_line
   comment
    # THERE IS ONE ENTRY IN THIS TABLE FOR EACH COMPONENT OF A MIXED NOUN
   eol
    \n
 line
  comment_line
   comment
    # THEY ARE LISTED IN ORDER OF ASCENDING K.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IN OCTAL DISPLAY AND LOAD (OCT OR DEC) VERBS, EXCLUDE USE OF VERBS WHOSE
   eol
    \n
 line
  comment_line
   comment
    # COMPONENT NUMBER IS GREATER THAN THE NUMBER OF COMONENTS IN NOUN.
   eol
    \n
 line
  comment_line
   comment
    # ALL MACHINE ADDRESS TO BE SPECIFIED NOUNS ARE 1 COMPONENT.
   eol
    \n
 line
  comment_line
   comment
    # ONLY EXCEPTION IS NOUN 01 TO ALLOW OCTAL DISPLAYS AND LOADS OF
   eol
    \n
 line
  comment_line
   comment
    # AN UNCONTOLLED NUMBER OF COMPONENTS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IN MULTI-COMPONENT LOAD VERBS, NO MIXING OF OCTAL AND DECIMAL DATA
   eol
    \n
 line
  comment_line
   comment
    # COMPONENT WORDS IS ALLOWED. ALARM IF VIOLATION.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IN DECIMAL LOADS OF DATA, 5 NUMERICAL CHARACTERS MUST BE KEYED IN
   eol
    \n
 line
  comment_line
   comment
    # BEFORE EACH ENTER. IF NOT, ALARM.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 505
   eol
    \n\n
 line
  comment_line
   comment
    # \tDISPLAY VERBS
   eol
    \n
 line
  instruction_line
   label
    DSPABC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
 line
  instruction_line
   label
    DSPAB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    DSPA
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TSTFORDP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
 line
  instruction_line
   label
    DSPCOM1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOM2
   eol
    \n
 line
  instruction_line
   label
    DSPB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOM1
   eol
    \n
 line
  instruction_line
   label
    DSPC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOM1
   eol
    \n
 line
  instruction_line
   label
    DSPCOM2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # A  B  C  AB  ABC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
    ws
     \t\t
    comment
     # -1 -0 +1 +2  +3   IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # +0 +0 +0 +1  +2    IN A AFTER CCS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOM3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    DSPCOM3
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DISTEM
    ws
     \t\t
    comment
     # +0 +1 +2 INTO DISTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DISTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOCTWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DISTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOM2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n\n
 line
  comment_line
   comment
    # COMPTEST ALARMS IF COMPONENT NUMBER OF VERB(LOAD OR OCT DISPLAY) IS
   eol
    \n
 line
  comment_line
   comment
    # GREATER THAN THE HIGHEST COMPONENT NUMBER OF NOUN.
   eol
    \n
 line
  comment_line
   comment
    # NOUN 01 IS EXCLUDED FROM TEST.
   eol
    \n
 line
  instruction_line
   label
    COMPTEST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # - VERB COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
 line
  instruction_line
   label
    COMPTST1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
 line
  comment_line
   comment
    ## Page 506
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # NOUN NOT = 01
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NOUN NOT = 01
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # NOUN = 01. ANY COMP OK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPICK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # MUST NOT DESTROY NNADTEM OR NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HI5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
    ws
     \t\t
    comment
     # NOUN COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # NOUN COMP - VERB COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # NOUN COMP G/ VERB COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # NOUN COMP L/ VERB COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # NOUN COMP = VERB COMP
   eol
    \n\n\n\n
 line
  instruction_line
   label
    TSTFORDP
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # TEST FOR DP. IF SO, GET MINOR PART ONLY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # MIXED CASE ALREADY HANDLED IN MIXNOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTNOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # E+1 INTO NOUNADD FOR MINOR PART.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n\n\n\n
 line
  instruction_line
   label
    COMPICK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      ADRES
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
   eol
    \n\n
 line
  instruction_line
   label
    DECDSP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
    ws
     \t\t
    comment
     # NORMAL\t\tMIXED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPICK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # ADRES NNTYPTEM\tADRES NNADTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CA
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # MUST NOT DESTORY NNADTEM OR NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # C(NNTYPTEM)\t\tC(NNADTEM)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HI5
    ws
     \t\t
    comment
     # GET HI5 OF NNTYPTAB(NORM) OF NNADTAB(MIX)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # COMP NUMBER INTO DECOUNT
   eol
    \n
 line
  instruction_line
   label
    DSPDCGET
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECTEM
    ws
     \t\t
    comment
     # PICKS UP DATA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # DECTEM  1COMP +0, 2COMP +1, 3COMP +2
   eol
    \n
 line
  comment_line
   comment
    ## Page 507
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREG
    ws
     \t\t
    comment
     # CANT USE BUF SINCE DMP USES IT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCGET
    ws
     \t
    comment
     # MORE TO GET
   eol
    \n
 line
  instruction_line
   label
    DSPDCPUT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # DISPLAYS DATA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # DECOUNT 1COMP +0, 2COMP +1, 3COMP +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFCONUM
    ws
     \t\t
    comment
     # SF CON NUMB IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # SWITCH BANKS TO SF CONSTANT READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GTSFOUT
    ws
     \t\t
    comment
     # ROUTINE. LOADS SFTEMP1, SFTEMP2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPSFNOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTMIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECDSP3
   eol
    \n\n
 line
  instruction_line
   label
    DSPSFNOR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTNOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECDSP3
   eol
    \n\n
 line
  instruction_line
   label
    DSPDCEND
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # ALL SFOUT ROUTINES END HERE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDECWD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCPUT
    ws
     \t
    comment
     # MORE TO DISPLAY
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DECDSP3
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFOUTABR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n\n
 line
  instruction_line
   label
    SFOUTABR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # ALARM IF DEC DISP WITH OCTAL ONLY NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGOUTSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ARTOUTSF
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DP1OUTSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DP2OUTSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPDEGOUT
   eol
    \n
 line
  comment_line
   comment
    ## Page 508
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DP3OUTSF
   eol
    \n
 line
  assignment_line
   variable
    ENDRTOUT
   ws
    \t
   EQUALS
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # \tTHE FOLLOWING IS A TYPICAL SF ROUTINE. IT USES MPAC. LEAVES RESU
   eol
    \n
 line
  comment_line
   comment
    # LTS IN MPAC, MPAC+1. ENDS WITH TC DSPDCEND
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INCNOUT
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +5
   eol
    \n\n
 line
  comment_line
   comment
    #    DEGOUTSF SCALES BY .18 THE LOW 14 BITS OF ANGLE , ADDING .18 FOR
   eol
    \n
 line
  comment_line
   comment
    # NUMBERS IN THE NEGATIVE (AGC) RANGE.
   eol
    \n\n
 line
  instruction_line
   label
    DEGOUTSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # SET INDEX FOR FULL SCALE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FIXRANGE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NO AUGMENT NEEDED (SFTEMP1 AND 2 ARE 0)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SETAUG
    ws
     \t\t
    comment
     # SET AUGMENTER ACCORDING TO C(MPAC +2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGCOM
   eol
    \n\n
 line
  comment_line
   comment
    #   OPDEGOUT SCALES BY .09 FOR ONE RANGE AND BY .45 FOR THE OTHER.
   eol
    \n
 line
  comment_line
   comment
    # FOR THE .45 RANGE A .2 BIAS IS ALSO ADDED.
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # OPDEGOUT IS USED TO TEST BIT 13 OF WASOPSET (1 = 90 DEG RANGE, 0 = 180).
   eol
    \n
 line
  comment_line
   comment
    # SINCE THAT BIT IS ALWAYS 1 IN BLOCK 50 - 100, DON'T TEST IT NOW
   eol
    \n
 line
  instruction_line
   label
    OPDEGOUT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # 90 DEG RANGE ALWAYS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # IF POS OR POS 0 THEN ADD BIAS AND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # CORRECT FOR POSSIBLE OVERFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEGOPT
    ws
     \t\t
    comment
     # IF NEG NON ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG1
    ws
     \t\t
    comment
     # IF NEG ZERO SUBTRACT 1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20BIAS
   eol
    \n
 line
  instruction_line
   label
    BIASCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # TEST FOR OVEFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # NO OVFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # IF OVFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # SET MULTIPLIER TO .45
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGOUTSF
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  instruction_line
   label
    NEGOPT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # NEGATIVE CASE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIASCOM
    ws
     \t\t
    comment
     # IF POS THEN SUBTRACT 1 BECASUE OF 2SCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # IF NEG RESTORE SUM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
    ws
     \t\t\t
    comment
     # IF NEG 0 LEAVE NEG 0
   eol
    \n
 line
  comment_line
   comment
    ## Page 509
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIASCOM
   eol
    \n\n
 line
  instruction_line
   label
    SETAUG
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # LOADS SFTEMP1 AND SFTEMP2 WITH THE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGTAB2
    ws
     \t\t
    comment
     # DP AUGMENTER CONSTANT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGTAB1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    FIXRANGE
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # IF MPAC IS + RETURN TO L+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
    ws
     \t\t
    comment
     # IF MPAC IS - RETURN TO L+2 AFTER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # MASKING OUT THE SIGN BIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n\n
 line
  instruction_line
   label
    DEGCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # LOADS MULTIPLIER, DOES SHORTMP, AND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGTAB2
    ws
     \t\t
    comment
     # ADDS AUTMENTER.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGTAB1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # ADJUSTED ANGLE IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SHORTMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DAD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SCOUTEND
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DEGTAB1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        05605
    ws
     \t\t
    comment
     # HI PART OF \t.18
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02702
    ws
     \t\t
    comment
     #\t\t.09
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16314
    ws
     \t\t
    comment
     # .45
   eol
    \n\n
 line
  instruction_line
   label
    DEGTAB2
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        03656
    ws
     \t\t
    comment
     # LOW PART OF\t.18
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        21727
    ws
     \t\t
    comment
     # \t\t.09
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        31463
    ws
     \t\t
    comment
     # .45
   eol
    \n\n
 line
  instruction_line
   label
    20BIAS
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16040
    ws
     \t\t
    comment
     # 20 DEG BIAS FOR OPTICS
   eol
    \n\n
 line
  instruction_line
   label
    ARTOUTSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # ASSUMES POINT AT LEFT OF DP SFCON.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # HI PART OF SFCONSTANT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SHORTMP
   eol
    \n
 line
  comment_line
   comment
    ## Page 510
   eol
    \n
 line
  instruction_line
   label
    SCOUTEND
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCEND
   eol
    \n\n
 line
  instruction_line
   label
    DP1OUTSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPOUT
    ws
     \t\t
    comment
     # SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # IN SFTEMP1, SFTEMP2.  THEN SCALE RESULT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # BY B14.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SCOUTEND
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DP2OUTSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPOUT
    ws
     \t\t
    comment
     # SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SCOUTEND
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DP3OUTSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPOUT
    ws
     \t\t
    comment
     # ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TPLEFT7
    ws
     \t\t
    comment
     # PART OF SFCON. SHIFTS RESULTS LEFT 7.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SCOUTEND
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # DPOUT PICKS UP FRESH DATA FOR BOTH HI AND LO COMPONENTS.
   eol
    \n
 line
  comment_line
   comment
    # THIS IS NEEDED FOR TIME DISPLAY.
   eol
    \n\n
 line
  instruction_line
   label
    DPOUT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPOUTNOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD1TEM
    ws
     \t
    comment
     # GET IDADDTAB ENTRY FOR COMPONENT K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # OF NOUN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW10
    ws
     \t\t
    comment
     # E SUBK
   eol
    \n
 line
  instruction_line
   label
    DPOUTCOM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # MIXED\t\tNORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
    ws
     \t\t\t
    comment
     # C(ESUBK)\tC(E)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # C((E SUBK)+1)\tC(E+1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # TEST IF LOW PART +0 IN CASE PICKING UP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # TIME, IF SO COULD HAVE OVFLOD, SO GET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0CASE
    ws
     \t\t
    comment
     # UP TO DATE HIGH PART. IF NOT +0, NO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # PROBLEM.
   eol
    \n
 line
  instruction_line
   label
    +0RET
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   eol
    \n
   comment_line
    comment
     ## Page 511
    eol
     \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TPAGREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
   eol
    \n\n
 line
  instruction_line
   label
    +0CASE
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0RET
   eol
    \n\n
 line
  instruction_line
   label
    DPOUTNOR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # E
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPOUTCOM
   eol
    \n\n
 line
  comment_line
   comment
    # THIS IS A SPECIAL PURPOSE VERB FOR DISPLAYING A DOUBLE PRECISION AGC
   eol
    \n
 line
  comment_line
   comment
    # WORD AS 10 DECIMAL DIGITS ON THE AGC DISPLAY PANEL.  IT CAN BE USED WITH
   eol
    \n
 line
  comment_line
   comment
    # ANY NOUN, EXCEPT MIXED NOUNS. IT DISPLAYS THE CONTENTS
   eol
    \n
 line
  comment_line
   comment
    # OF THE REGISTER NOUNADD IS POINTING TO.  IF USED WITH NOUNS WHICH ARE
   eol
    \n
 line
  comment_line
   comment
    # INHERENTLY NOT DP SUCH AS THE CDU COUNTERS THE DISPLAY WILL BE GARBAGE.
   eol
    \n
 line
  comment_line
   comment
    # DISPLAY IS IN R1 AND R2 ONLY WITH THE SIGN IN R1.
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DSPDPDEC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NORMAL NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # LOAD MPAC WITH HIGH ORDER PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # LOAD MPAC+1 WITH LOW ORDER PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TPAGREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSP2DEC
   eol
    \n
 line
  instruction_line
   label
    ENDDPDEC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 512
   eol
    \n\n
 line
  comment_line
   comment
    # \tLOAD VERBS
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDRTOUT
   eol
    \n\n
 line
  instruction_line
   label
    ABCLOAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBSP1LD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBSP2LD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBSP3LD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATZ
   eol
    \n\n\n\n
 line
  instruction_line
   label
    PUTXYZ
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIX
    ws
     \t\t
    comment
     # TEST THAT THE 3 DATA WORDS LOADED ARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ALLDC/OC
    ws
     \t
    comment
     # ALL DEC OR ALL OCT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # X COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # Y COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # Z COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n\n
 line
  instruction_line
   label
    ABLOAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBSP1LD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBSP2LD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATY
   eol
    \n
 line
  instruction_line
   label
    PUTXY
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FIVE
    ws
     \t\t
    comment
     # TEST THAT THE 2 DATA WORDS LOADED ARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ALLDC/OC
    ws
     \t
    comment
     # ALL DEC OR ALL OCT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
 line
  comment_line
   comment
    ## Page 513
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # X COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # Y COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n\n
 line
  instruction_line
   label
    ALOAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # X COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n\n
 line
  instruction_line
   label
    BLOAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # SET CLPASS FOR PASS0 ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n\n
 line
  instruction_line
   label
    CLOAD
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        COMPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # SET CLPASS FOR PASS0 ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQDATZ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNNLOC
    ws
     \t
    comment
     # SWITCH BANKS TO NOUN TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
    ws
     \t\t
    comment
     # ROUTINE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADLV
   eol
    \n\n
 line
  instruction_line
   label
    LOADLV
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADSTAT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
    ws
     \t\t
    comment
     # TO BLOCK NUMERICAL CHARACTERS AND
   eol
    \n
 line
  comment_line
   comment
    ## Page 514
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # CLEARS AFTER A COMPLETED LOAD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
    ws
     \t
    comment
     # AFTER COMPLETED LOAD, GO TO RECALTST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECALTST
    ws
     \t
    comment
     # TO SEE IF THERE IS RECALL FROM ENDIDLE.
   eol
    \n\n
 line
  instruction_line
   label
    VBSP1LD
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        21
    ws
     \t\t
    comment
     # VB21 = ALOAD
   eol
    \n
 line
  instruction_line
   label
    VBSP2LD
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        22
    ws
     \t\t
    comment
     # VB22 = BLOAD
   eol
    \n
 line
  instruction_line
   label
    VBSP3LD
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        23
    ws
     \t\t
    comment
     # VB23 = CLOAD
   eol
    \n\n\n\n
 line
  instruction_line
   label
    ALLDC/OC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # TESTS THAT DATA WORDS LOADED ARE EITHER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # ALL DEC OR ALL OCT. ALARMS IF NOT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
    ws
     \t\t
    comment
     # SHIFTED RIGHT 2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # DEC COMP BITS IN LOW 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # SOME ONES IN LOW 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECRET
    ws
     \t\t
    comment
     # ALL ZEROS. ALL OCTAL.  OK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # DEC COMP = 7 FOR 3COMP, =6 FOR 2COMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # (BUT IT HAS BEEN DECREMENTED BY CCS)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # MUST MATCH 6 FOR 3COMP, 5 FOR 2COMP.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECRET
    ws
     \t\t
    comment
     # ALL REQUIRED ARE DEC. OK
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SFRUTNOR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # GETS SF ROUTINE NUMBER FOR NORMAL CASE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MID5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RIGHT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
    ws
     \t\t
    comment
     # SF ROUTINE NUMBER IN A
   eol
    \n\n
 line
  instruction_line
   label
    SFRUTMIX
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # GETS SF ROUTINE NUMBER FOR MIXED CASE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD1TEM
    ws
     \t
    comment
     # GET IDADDTEAB ENTRY FOR COMPONENT K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # OF NOUN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HI5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
    ws
     \t\t
    comment
     # SF ROUTINE NUMBER IN A
   eol
    \n\n
 line
  instruction_line
   label
    SFCONUM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # GETS SF CONSTANT NUMBER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CONUMNOR
    ws
     \t
    comment
     # NORMAL NOUN
   eol
    \n
 line
  comment_line
   comment
    ## Page 515
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # MIXED NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DISPLACE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
 line
  comment_line
   comment
    # DO TC SFRET (DECOUNT=0),DO TC RIGHT5(DECOUNT=1), DO TC LEFT5 (DECOUNT=2).
   eol
    \n
 line
  instruction_line
   label
    SFRET
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
    ws
     \t\t
    comment
     # SF CON NUMBER IN A
   eol
    \n\n
 line
  instruction_line
   label
    DISPLACE
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RIGHT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
   eol
    \n\n
 line
  instruction_line
   label
    CONUMNOR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
    ws
     \t\t
    comment
     # NORMAL NOUN ALWAYS GETS LOW 5 OF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        EXITEM
   eol
    \n\n\n\n
 line
  instruction_line
   label
    PUTCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREGLP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        XREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTNORM
    ws
     \t\t
    comment
     # NORMAL NOUN
   eol
    \n
 line
  comment_line
   comment
    # IF MIXNOUN, PLACE ADDRESS FOR COMPONENT K INTO NOUNADD
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CA
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD1TEM
    ws
     \t
    comment
     # GET IDADDTAB ENTRY FOR COMPONENT K
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # OF NOUN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW10
    ws
     \t\t
    comment
     # EK\tFOR CURRENT NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         EXTEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         SU
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # PLACE (E SUB K) - K INTO NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTDECSF
    ws
     \t
    comment
     # +  DEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTMIX
    ws
     \t
    comment
     # +0 OCTAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM2
    ws
     \t\t
    comment
     # NO DP
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # TEST FOR DP SCALE FOR OCT LOAD. IF SO,
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # +0 INTO MAJOR PART. SET NOUNADD FOR
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # LOADING OCTAL WORD INTO MINOR PART.
   eol
    \n
 line
  instruction_line
   label
    PUTDPCOM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # DP
   eol
    \n
 line
  comment_line
   comment
    ## Page 516
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # (ESUBK)+1  OR  E+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # NOUNADD NOW SET FOR MINOR PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # (ESUBK)+1  OR  E+1  INTO DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # NOUNADD SET FOR MINOR PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t\t
    comment
     # ZERO MAJOR PART(ESUBK OR E)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM2
   eol
    \n\n
 line
  instruction_line
   label
    PUTNORM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECBRNCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTDECSF
    ws
     \t
    comment
     # +  DEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTNOR
    ws
     \t
    comment
     # +0  OCTAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPTEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM2
    ws
     \t\t
    comment
     # NO DP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTDPCOM
   eol
    \n\n
 line
  instruction_line
   label
    PUTCOM2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECRET
   eol
    \n\n
 line
  comment_line
   comment
    # PUTDECSF FINDS MIXBR AND DECOUNT STILL SET FROM PUTCOM
   eol
    \n\n
 line
  instruction_line
   label
    PUTDECSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFCONUM
    ws
     \t\t
    comment
     # SF CON NUMB IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # SWITCH BANKS TO SF CONSTANT TABLE READING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GTSFIN
    ws
     \t\t
    comment
     # ROUTINE. LOADS SFTEMP1, SFTEMP2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTSFNOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTMIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTDCSF2
   eol
    \n
 line
  instruction_line
   label
    PUTSFNOR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFRUTNOR
   eol
    \n\n
 line
  instruction_line
   label
    PUTDCSF2
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFINTABR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
    ws
     \t
    comment
     # SWITCH BANKS FOR EXPANSION ROOM
   eol
    \n
 line
  instruction_line
   label
    SFINTABR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # ALARM IF DEC LOAD WITH OCTAL ONLY NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BINROUND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGINSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ARTHINSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINSF2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTDEGIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINSF
    ws
     \t\t
    comment
     # SAME AS ARITHDP1
   eol
    \n
 line
  assignment_line
   variable
    ENDRUTIN
   ws
    \t
   EQUALS
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # SCALE FACTORS FOR THOSE ROUTINES NEEDING THEM ARE AVAILABLE IN SFTEMP1.
   eol
    \n
 line
  comment_line
   comment
    ## Page 517
   eol
    \n
 line
  comment_line
   comment
    # ALL SFIN ROUTINES USE MPAC MPAC+1. LEAVE RESULT IN A. END WITH TC DECRET
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDDPDEC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  comment_line
   comment
    # DEGINSF APPLIES 1000/180 * 5.55555(10) = 5.43434(8)
   eol
    \n\n
 line
  instruction_line
   label
    DEGINSF
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   argument
    ws
     \t\t
    comment
     # SF ROUTINE FOR DEC DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGCON1
    ws
     \t\t
    comment
     # MULT BY 5.5  5(10)X2/-3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # THIS ROUNDS OFF MPAC+1 BEFORE SHIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT11
    ws
     \t\t
    comment
     # LEFT 3, AND CAUSES 360.00 TO OF/UF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # WHEN SHIFTED LEFT AND ALARM.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT11
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2ROUND
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # LEFT 1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SL1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
 line
  instruction_line
   label
    DEGINSF2
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # LEFT 2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SL1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNFIX
    ws
     \t\t
    comment
     # IF +, GO TO SIGNFIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIGNFIX
    ws
     \t\t
    comment
     # IF +0, GO TO SIGNFIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
    ws
     \t\t\t
    comment
     # IF - , USE -MAGNITUDE +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # IF -0, USE +0
   eol
    \n
 line
  instruction_line
   label
    SIGNFIX
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SGNTO1
    ws
     \t\t
    comment
     # IF OVERFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSCALE
    ws
     \t
    comment
     # NO OVERFLOW/UNDERFLOW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # IF UF FORCE SIGN TO 0 EXCEPT -180
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG180
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSMAX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
 line
  instruction_line
   label
    ENDSCALE
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTCOM2
   eol
    \n\n
 line
  instruction_line
   label
    NEG180
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSMAX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSCALE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n\n
 line
  instruction_line
   label
    SGNTO1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # IF OF FORCE SIGN TO 1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSMAX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSCALE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n\n
 line
  instruction_line
   label
    DEGCON1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      2DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5.555555555
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        B-3
   eol
    \n
 line
  comment_line
   comment
    ## Page 518
   eol
    \n
 line
  instruction_line
   label
    DEGCON2
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      2DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2.222222222
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        B-2
   eol
    \n
 line
  instruction_line
   label
    NEG.2
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -06250
    ws
     \t\t
    comment
     # .197753906  I.E. THE BIAS SCALED
   eol
    \n\n
 line
  instruction_line
   label
    ARTHINSF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   argument
    ws
     \t\t
    comment
     # SCALES MPAC, +1 BY SFTEMP1, SFTEMP2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # ASSUMES POINT BETWEEN HI AND LO PARTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # OF SFCON. SHIFTS RESULTS LEFT BY 14.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # (BY TAKING RESULTS FROM MPAC+1, MPAC+2)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # TOO LARGE A LOAD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BINROUND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # TOO LARGE A LOAD
   eol
    \n
 line
  instruction_line
   label
    BINROUND
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2ROUND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TESTOFUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSCALE
    ws
     \t
    comment
     # RETURNS IF NO OF/UF
   eol
    \n\n\n\n
 line
  instruction_line
   label
    OPTDEGIN
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # OPTICS SCALING ROUTINE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPDEGIN2
    ws
     \t
    comment
     # LOW RANGE   0 TO 90 DEG ALWAYS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPDEGIN2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # REJECT - INPUT. ALARM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # DITTO
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # NO LONGER DO WE TEST BIT 13 OF WASOPSET TO DETERMINE RANGE. RANGE NOW
   eol
    \n
 line
  comment_line
   comment
    # IS ALWAYS 90 DEG (BLOCK 50 - 100)
   eol
    \n\n\n\n
 line
  instruction_line
   label
    OPDEGIN2
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # RANGE IS 90 DEG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG.2
    ws
     \t\t
    comment
     # SUBTRACT BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DMP
    ws
     \t\t
    comment
     # MULT BY 100 / 45  B-2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGCON2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT12
    ws
     \t\t
    comment
     # ROUND AS IN DEGINSF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2ROUND
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DEGINSF2
   eol
    \n\n
 line
  instruction_line
   label
    DPINSF
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   argument
    ws
     \t\t
    comment
     # SCALES MPAC, MPAC +1 BY SFTEMP1,
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # SFTEMP2.  STORES LOW PART OF RESULT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # IN (E SUBK) +1 OR E+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2ROUND
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
 line
  comment_line
   comment
    ## Page 519
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TESTOFUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
    ws
     \t\t
    comment
     # RETURNS IF NO OF/UF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINORM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
    ws
     \t\t
    comment
     # MIXEDNOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECOUNT
   eol
    \n
 line
  instruction_line
   label
    DPINCOM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     #     MIXED\t\t  NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     #   E SUBK\t      E
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # PLACE LOW PART IN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSCALE
    ws
     \t
    comment
     # (E SUBK) +1\t MIXED
   eol
    \n
 line
  instruction_line
   label
    DPINORM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # E +1\t       NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINCOM
   eol
    \n\n\n\n
 line
  instruction_line
   label
    DPINSF2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
    ws
     \t
    opcode
     standard_opcode
      DMP
   argument
    ws
     \t\t
    comment
     # ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        XCADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
    ws
     \t\t
    comment
     # PART OF SF CONST. DPINSF2 SHIFTS RESULTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TPLEFT7
    ws
     \t\t
    comment
     # LEFT BY 7, ROUNDS MPAC+2 INTO MPAC+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DPINSF
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n\n
 line
  instruction_line
   label
    TPLEFT7
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # OPERATES ON MPAC, MPAC+1, MPAC+2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIX
    ws
     \t\t
    comment
     # LEFT BY 7
   eol
    \n
 line
  instruction_line
   label
    LEFT7COM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SL1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT7COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n\n\n\n
 line
  instruction_line
   label
    2ROUND
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # IF MPAC+1 DOES NOT OF/UF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # IF MPAC DOES NOT OF/UF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
   eol
    \n
 line
  instruction_line
   label
    2RNDEND
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n\n\n
 line
  instruction_line
   label
    TESTOFUF
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OVFIND
    ws
     \t\t
    comment
     # RETURNS IF NO OF/UF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # OF
   eol
    \n
 line
  comment_line
   comment
    ## Page 520
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPALARM
    ws
     \t
    comment
     # UF
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 521
   eol
    \n\n
 line
  comment_line
   comment
    # MONITOR ALLOWS OTHER KEYBOARD ACTIVITY. IT IS ENDED BY VERB TERMINATE,
   eol
    \n
 line
  comment_line
   comment
    # ANY NVSUB CALL THAT PASSES THE DSPLOCK, OR ANOTHER MONITOR.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MONITOR ACTION IS SUSPENDED, BUT NOT ENDED, BY ANY KEYBOARD ACTION,
   eol
    \n
 line
  comment_line
   comment
    # EXCEPT ERROR LIGHT RESET. IT BEGINS AGAIN WHEN KEY RELEASE IS PERFORMED.
   eol
    \n
 line
  comment_line
   comment
    # MONITOR SAVES THE NOUN AND APPROPRIATE DISPLAY VERB IN MONSAVE. IT SAVES
   eol
    \n
 line
  comment_line
   comment
    # NOUNADD IN MONSAVE1, IF NOUN = MACHINE ADDRESS TO BE SPECIFIED. BIT 15 OF
   eol
    \n
 line
  comment_line
   comment
    # MONSAVE1 IS THE KILL MONITOR SIGNAL (KILLER BIT). 
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MONSAVE INDICATES IF MONITOR IS ON (+=ON, +0=OFF)
   eol
    \n
 line
  comment_line
   comment
    # IF MONSAVE IS +, MONITOR ENTERS NO REQUEST, BUT TURNS KILLER BIT OFF.
   eol
    \n
 line
  comment_line
   comment
    # IF MONSAVE IS +0, MONITOR ENTERS REQUEST AND TURNS KILLER BIT OFF.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # NVSUB AND VB=TERMINATE TURN KILL MONITOR BIT ON.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IF KILLER BIT IS ON, MONREQ ENTERS NO FURTHER REQUESTS, ZEROS MONSAVE
   eol
    \n
 line
  comment_line
   comment
    # AND MONSAVE1 (TURNING OFF KILLER BIT).
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # MONITOR DOESNT TEST FOR MATBS SINCE NVSUB CAN HANDLE INTERNAL MATBS NOW.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDRUTIN
   eol
    \n\n
 line
  instruction_line
   label
    MONITOR
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
 line
  instruction_line
   label
    MONIT1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # TEMP STORAGE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LEFT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # TEMP STORAGE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
    ws
     \t
    comment
     # NEITHER CASE SEARCHES LIST.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP1
    ws
     \t\t
    comment
     # GRABLOCK=0,1. +0 INTO DSPLOCK AND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # TURN OFF KEY RLSE LIGHT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK0
    ws
     \t
    comment
     # GRABLOCK=2. +0 INTO DSPLOCK AND
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # TURN OFF KEY RLSE LIGHT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # IF MONSAVE WAS +, NO REQUEST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # IF MONSAVE WAS 0, REQUEST MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
    ws
     \t\t
    comment
     # PLACE MONITOR VERB AND NOUN INTO MONSAVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  comment_line
   comment
    ## Page 522
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
    ws
     \t
    comment
     # ZERO THE KILL MONITOR BIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
   eol
    \n\n\n\n
 line
  instruction_line
   label
    MONREQ
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        READTIME
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # CALLED BY WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODSAMPT
    ws
     \t
    comment
     # TIME IS SNATCHED IN RUPT FOR NOUN 65
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # IF KILLER BIT = 0, ENTER REQUESTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # IF KILLER BIT = 0, ENTER REQUESTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        KILLMON
    ws
     \t\t
    comment
     # IF KILLER BIT = 1, NO REQUESTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        KILLMON
    ws
     \t\t
    comment
     # IF KILLER BIT = 1, NO REQUESTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONDEL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
    ws
     \t
    comment
     # ENTER WAITLIST REQUEST FOR MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIO31
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOVAC
    ws
     \t\t
    comment
     # ENTER EXEC REQUEST FOR MONDO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONDO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n\n
 line
  instruction_line
   label
    KILLMON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # ZERO MONSAVE AND TURN KILLER BIT OFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
    ws
     \t
    comment
     # TURN OFF KILL MONITOR BIT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n\n\n\n
 line
  instruction_line
   label
    MONDEL
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        144
    ws
     \t\t
    comment
     # FOR 1 SEC MONITOR INTERVALS
   eol
    \n\n\n\n
 line
  instruction_line
   label
    MONDO
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
    ws
     \t
    comment
     # CALLED BY EXEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # IF KILLER BIT = 0, CONTINUE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # IF KILLER BIT = 0, CONTINUE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # IN CASE TERMINATE CAME SINCE LAST MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # IN CASE TERMINATE CAME SINCE LAST MONREQ
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TSTDSPLK
    ws
     \t
    comment
     # PERFORMS CCS DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONBUSY
    ws
     \t\t
    comment
     # NVSUB IS BUSY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW6
    ws
     \t\t
    comment
     # NVSUB IS AVAILABLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVTEMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBMON
    ws
     \t
    comment
     # PLACE NOUN INTO NOUNREG AND DISPLAY IT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # IN CASE OF ALARM DURING DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONMASK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
    ws
     \t\t
    comment
     # CHANGE MONITOR VERB TO DISPLAY VERB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RIGHT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
 line
  comment_line
   comment
    ## Page 523
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONBACK
    ws
     \t\t
    comment
     # SET RETURN TO PASTEVB AFTER DATA DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
 line
  instruction_line
   label
    ENDMONDO
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TESTNN
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDFAILF
   eol
    \n
 line
  instruction_line
   label
    PASTEVB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIDSIX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVTEMP
    ws
     \t\t
    comment
     # PLACE MONITOR VERB INTO VERBREG AND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBMON
    ws
     \t
    comment
     #\tDISPLAY IT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    ENDPASTE
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    MIDSIX
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        07700
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDMONDO
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    MONMASK
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        700
   eol
    \n
 line
  instruction_line
   label
    MONBACK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      ADRES
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PASTEVB
   eol
    \n\n
 line
  instruction_line
   label
    MONBUSY
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSPON
    ws
     \t
    comment
     # TURN KEY RELEASE LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  comment_line
   comment
    # DSPBANK IS USED TO DISPLAY (IN OCTAL) ANY FIXED REGISTER IN BANK.
   eol
    \n
 line
  comment_line
   comment
    # IT IS USED WITH NOUN = MACHINE ADDRESS TO BE SPECIFIED. THE CADR OF THE
   eol
    \n
 line
  comment_line
   comment
    # DESIRED LOCATION IS THEN PUNCHED IN. 
   eol
    \n\n
 line
  instruction_line
   label
    DSPBANK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DATACALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOCTWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n\n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TSTOFUF
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n\n
 line
  comment_line
   comment
    #  DSPDECWD CONVERTS C(MPAC) AND C(MPAC+1) INTO A SIGN AND 5 CHAR DECIMAL
   eol
    \n
 line
  comment_line
   comment
    # STARTING IN LOC SPECIFIED IN DSPCOUNT.
   eol
    \n\n
 line
  instruction_line
   label
    DSPDECWD
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # USES SHORTMP THROUGHOUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
 line
  comment_line
   comment
    ## Page 524
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DECROUND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSMAX
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FOUR
   eol
    \n
 line
  instruction_line
   label
    DSPDCWD1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BINCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SHORTMP
   eol
    \n
 line
  instruction_line
   label
    TRACE1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
 line
  instruction_line
   label
    TRACE1S
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
    ws
     \t
    opcode
     pseudo_opcode
      COUNT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # DECREMENT DSPCOUNT EXCETP AT +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCWD1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n\n
 line
  instruction_line
   label
    DECROUND
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02476
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # DSP2DEC CONVERTS C(MPAC) AND C(MPAC+1) INTO A SIGN AND 10 CHAR DECIMAL
   eol
    \n
 line
  comment_line
   comment
    # STARTING IN THE LOC SPECIFIED IN DSPCOUNT.
   eol
    \n\n
 line
  instruction_line
   label
    DSP2DEC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
 line
  comment_line
   comment
    ## Page 525
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THREE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
    ws
     \t\t
    comment
     # -R2 OFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FOUR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
    ws
     \t\t
    comment
     # +R2 OFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +8D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R2D1
   eol
    \n
 line
  instruction_line
   label
    END2DEC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPDCWD1
   eol
    \n\n\n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPBANK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +7
   eol
    \n\n
 line
  comment_line
   comment
    # DSPOCTWD DISPLAYS C(A) UPON ENTRY AS A 5 CHAR OCT STARTING IN THE DSP
   eol
    \n
 line
  comment_line
   comment
    # CHAR SPECIFIED IN DSPCOUNT. IT STOPS AFTER 5 CHAR HAVE BEEN DISPLAYED.
   eol
    \n\n
 line
  instruction_line
   label
    DSPOCTWO
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT14
    ws
     \t\t
    comment
     # TO BLANK SIGNS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FOUR
   eol
    \n
 line
  instruction_line
   label
    WDAGAIN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMSK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # DECREMENT DSPCOUNT EXCEPT AT +0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOCTIN
   eol
    \n
 line
  instruction_line
   label
    OCTBACK
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDAGAIN
    ws
     \t\t
    comment
     # +
   eol
    \n
 line
  comment_line
   comment
    ## Page 526
   eol
    \n
 line
  instruction_line
   label
    DSPLV
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
    ws
     \t\t
    comment
     # TO BLOCK NUMERICAL CHARACTERS, CLEARS,
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # AND SIGNS AFTER A COMPLETED DISPLAY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n\n
 line
  assignment_line
   variable
    DSPMSK
   ws
    \t\t
   =
   ws
    \t
   expression
    multiplyingExpression
     atom
      variable
       SEVEN
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # DSP2BIT DISPLAYS C(A) UPON ENTRY AS A 2 CHAR OCT BEGINNING IN THE DSP
   eol
    \n
 line
  comment_line
   comment
    # LOC SPECIFIED IN DSPCOUNT BY PRE CYCLING RIGHT C(A) AND USING THE LOGIC
   eol
    \n
 line
  comment_line
   comment
    # OF THE 5 CHAR OCTAL DISPLAY
   eol
    \n\n
 line
  instruction_line
   label
    DSP2BIT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDCNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WDAGAIN
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +5
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # FOR DSPIN PLACE 0/25 OCT INTO COUNT, 5 BIT RELAY CODE INTO CODE. BOTH
   eol
    \n
 line
  comment_line
   comment
    # ARE DESTROYED. IF BIT14 OF COUNT IS 1, SIGN IS BLANKED WITH LEFT CHAR.
   eol
    \n
 line
  comment_line
   comment
    # FOR DSPIN1 PLACE 0,1 INTO BIT11 OF CODE, 2 INTO COUNT, REL ADDRESS OF
   eol
    \n
 line
  comment_line
   comment
    # DSPTAB ENTRY INTO DSREL.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        END2DEC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  instruction_line
   label
    DSPIN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # LEFT IF COUNT IS ODD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # RIGHT IF COUNT IS EVEN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SLEFT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT14
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
 line
  comment_line
   comment
    ## Page 527
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # BIT14 = 1, BLANK SIGN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # BIT14 = 0, LEAVE SIGN ALONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
    ws
     \t\t
    comment
     # +0 INTO COUNT FOR RIGHT
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # +1 INTO COUNT FOR LEFT (SIGN LEFT ALONE)
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # +3 INTO COUNT FOR LEFT (TO BLANK SIGN)
   eol
    \n
 line
  instruction_line
   label
    DSPIN1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # IF +
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # IF-
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSMAG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSMSK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         EXTEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         SU
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DFRNT
    ws
     \t\t
    comment
     # IF+
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DFRNT
    ws
     \t\t
    comment
     # IF-
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSLV
    ws
     \t\t
    comment
     # IF -0
   eol
    \n
 line
  instruction_line
   label
    DFRNT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
    ws
     \t
    opcode
     pseudo_opcode
      COUNT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSMSK
    ws
     \t\t
    comment
     # MASK WITH 77740,76037, OR 75777
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSMAG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INCNOUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
 line
  instruction_line
   label
    DSLV
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      RELINT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSEXIT
   eol
    \n\n
 line
  instruction_line
   label
    DSMSK
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        37
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1740
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2000
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3740
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # FOR 11DSPIN, PUT REL ADDRESS OF DSPTAB ENTRY INTO A, 1 IN BIT11 OR 0 IN
   eol
    \n
 line
  comment_line
   comment
    # BIT11 OF CODE.
   eol
    \n\n
 line
  instruction_line
   label
    11DSPIN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN1
   eol
    \n
 line
  comment_line
   comment
    ## Page 528
   eol
    \n\n
 line
  instruction_line
   label
    DSPOCTIN
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
    ws
     \t\t
    comment
     # SO DSPOCTWD DOESNT USE SWCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n
 line
  instruction_line
   label
    ENDSPOCT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OCTBACK
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # DSPALARM FINDS TC NVSUBEND IN ENTRET FOR NVSUB INITIATED ROUTINES.
   eol
    \n
 line
  comment_line
   comment
    # ABORT WITH OCT 01501.
   eol
    \n
 line
  comment_line
   comment
    # DSPALARM FINDS TC ENDOFJOB IN ENTRET FOR KEYBOARD INITIATED ROUTINES.
   eol
    \n
 line
  comment_line
   comment
    # DO TC ENTRET.
   eol
    \n\n
 line
  instruction_line
   label
    CHARALRM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
    ws
     \t\t
    comment
     # ALARMS WHICH MUST DO ENDOFJOBS COME
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
    ws
     \t\t
    comment
     # HERE. ALLOWS ENTRET TO BE TEMP ERASABLE
   eol
    \n\n
 line
  instruction_line
   label
    DSPALARM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FALTON
    ws
     \t\t
    comment
     # TURN ON CHECK FAIL LIGHT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSBENDL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
    ws
     \t\t
    comment
     # NOT NVSUB INITIATED.
   eol
    \n
 line
  instruction_line
   label
    NVSBENDL
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
    ws
     \t\t
    comment
     # NOT NVSUB INITIATED.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ABORT
    ws
     \t\t
    comment
     # NVSUB INITIATED.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01501
   eol
    \n\n\n\n
 line
  instruction_line
   label
    FLASHON1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT11
    ws
     \t\t
    comment
     # GETS HERE THRU FLASHON(STANDARD LEAD IN)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHLOC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSREL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN1
   eol
    \n
 line
  instruction_line
   label
    FLASHOF1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # GETS HERE THRU FLASHOFF(STANDARD LEAD IN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHON1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    FLASHLOC
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # MMCHANG USES NOUN DISPLAY UNTIL ENTER. THEN IT USES MODE DISP.
   eol
    \n
 line
  comment_line
   comment
    # IT GOES TO MODROUT WITH THE NEW M M CODE IN A, BUT NOT DISPLAYED IN
   eol
    \n
 line
  comment_line
   comment
    # MM LIGHTS.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSP2BIT
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +10D
   eol
    \n\n
 line
  instruction_line
   label
    MMCHANG
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQMM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
 line
  comment_line
   comment
    ## Page 529
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ND1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MODROUTB
    ws
     \t
    comment
     # GO THRU STANDARD LOC.
   eol
    \n\n\n\n
 line
  instruction_line
   label
    REQMM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ND1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2BLANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # VBRQEXEC ENTERS REQUEST TO EXEC     FOR ANY ADDRESS WITH ANY PRIORITY.
   eol
    \n
 line
  comment_line
   comment
    # IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES PRIO  PRELOADED INTO 
   eol
    \n
 line
  comment_line
   comment
    # BITS 10-14 OF FIRST REGISTER OF TEMP AREA, WITH BIT1=0 FOR NOVAC, BIT1
   eol
    \n
 line
  comment_line
   comment
    # =1 FOR FINDVAC). THE VERB IS USED WITH NOUN=MACHINE ADDRESS TO BE
   eol
    \n
 line
  comment_line
   comment
    # SPECIFIED. CADR JOBADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.
   eol
    \n\n
 line
  instruction_line
   label
    VBRQEXEC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # ********
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SETVAC
    ws
     \t\t
    comment
     # IF BIT1 =1, FINDVAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TCNOVAC
    ws
     \t\t
    comment
     # IF BIT1 =0, NOVAC
   eol
    \n
 line
  instruction_line
   label
    REQEX1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
     \t\t
    comment
     # TC NOVAC OR TC FINDVAC INTO PROGREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # CADR JOBADDR INTO PROGREG +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # *******
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
   eol
    \n\n
 line
  instruction_line
   label
    SETVAC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TCFINDVC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQEX1
   eol
    \n\n
 line
  comment_line
   comment
    # VBRQWAIT ENTERS REQUEST TO WAITLIST FOR ANY ADDRESS WITH ANY DELAY.
   eol
    \n
 line
  comment_line
   comment
    ## Page 530
   eol
    \n
 line
  comment_line
   comment
    # IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES DELAY PRELOADED IN FIRST
   eol
    \n
 line
  comment_line
   comment
    # REGISTER OF TEMP AREA. THE VERB IS USED WITH NOUN= MACHINE ADDRESS TO
   eol
    \n
 line
  comment_line
   comment
    # BE SPECIFIED. CADR TASKADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.
   eol
    \n\n
 line
  instruction_line
   label
    VBRQWAIT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDINST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # TC ENDOFJOB INTO PROGREG+2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TCWAIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
     \t\t
    comment
     # TC WAITLIST INTO PROGREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # CADR TASKADDR INTO PROGREG+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # DELTA T IN A
   eol
    \n
 line
  instruction_line
   label
    ENDRQWT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGREG
   eol
    \n\n\n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHLOC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    VBPROC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # PROCEED WITHOUT DATA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADSTAT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLASHOFF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECALTST
    ws
     \t
    comment
     # SEE IF THERE IS ANY RECALL FROM ENDIDLE
   eol
    \n\n\n\n
 line
  instruction_line
   label
    VBTERM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        KILMONON
    ws
     \t
    comment
     # TURN ON KILL MONITOR BIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBPROC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # TERM VERB SETS LOADSTAT NEG
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # VBRELDSP TURNS OFF RELEASE DISPLAY SYSTEM(AND SEARCHES LIST ONLY
   eol
    \n
 line
  comment_line
   comment
    # IF THIS LIGHT WAS TURNED ON BY NVSUBUSY), AND TURNS OFF UPACT LIGHT.
   eol
    \n\n
 line
  instruction_line
   label
    VBRELDSP
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # RELEASE DISPLAY SYST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
    ws
     \t\t
    comment
     # TURN OFF UPACT LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SEVEN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP
    ws
     \t\t
    comment
     # SEARCHES LIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # BUMP SHIFTS WORD DISPLAYED IN R2 TO R3, R1 TO R2. IT BLANKS R1.
   eol
    \n
 line
  comment_line
   comment
    ## Page 531
   eol
    \n\n
 line
  instruction_line
   label
    BUMP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FIVE
    ws
     \t\t
    comment
     # R2D5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # SHIFT DATA OF R2 TO R3, R1 TO R2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
    ws
     \t\t
    comment
     # +0 INTO COUNT IF EVEN (RIGHT)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
    ws
     \t\t
    comment
     # +1 INTO COUNT IF ODD (LEFT)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         SR
    ws
     \t\t
    comment
     # DSREL IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # DSMAG IN A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSMSK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # EVEN(RIGHT)  OK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RIGHT5
    ws
     \t\t
    comment
     # ODD(LEFT)  SHIFT RIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FIVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # DSPCOUNT-5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # TO PREVENT -0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         COUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPIN
    ws
     \t\t
    comment
     # CODE ALREADY IN CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
    ws
     \t\t
    comment
     # OCT 16
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # +, DSPCOUNT L/ OCT 16
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # INCREMENT DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  instruction_line
   label
    SWSGN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # -0, DSPCOUNT= OCT 16. DO SIGN SHIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # OCT 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # PICKUP ORDER , DSREL=3,4,5,6.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
     \t\t
    comment
     # \t\t   (-R2,+R2,-R1,+R1)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT11
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CODE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWTAB
    ws
     \t\t
    comment
     # PUT AWAY ORDER, DSREL= 0,1,3,4.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11DSPIN
    ws
     \t\t
    comment
     #\t\t   (-R3,+R3,-R2,+R2.)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # OCT 3
   eol
    \n
 line
  comment_line
   comment
    ## Page 532
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # +, DSPCOUNT L/ 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # INCREMENT DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWSGN
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        R1D1
    ws
     \t\t
    comment
     # -0,       DSPCOUNT = 3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5BLANK
    ws
     \t\t
    comment
     # BLANKS R1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTEXIT
   eol
    \n\n
 line
  instruction_line
   label
    SWTAB
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # -R3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # +R3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        3
    ws
     \t\t
    comment
     # -R2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
    ws
     \t\t
    comment
     # +R2
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # NVSUB IS USED FOR SUB ROUTINE CALLS FROM WITHIN COMPUTER. IT CAN BE
   eol
    \n
 line
  comment_line
   comment
    # USED TO DO ANY THING THE KEYBOARD CAN CALL. PLACE  ...VVVVVVNNNNNN 
   eol
    \n
 line
  comment_line
   comment
    # INTO A.      V'S ARE 6 BIT VERB CODE. N'S , 6-BIT NOUN CODE.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # NVSUB CAN BE USED WTIH MACH ADDR TO BE SPEC BY PLACING THE ADDRESS INTO
   eol
    \n
 line
  comment_line
   comment
    # MPAC+2 BEFORE THE STANDARD NVSUB CALL.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #  NVSUB RETURNS TO 2+ CALLING LOC AFTER PERFORMING TASK, IF DISPLAY
   eol
    \n
 line
  comment_line
   comment
    # SYSTEM IS AVAILABLE. THE NEW NOUN AND VERB CODES ARE DISPLAYED.
   eol
    \n
 line
  comment_line
   comment
    # IF V'S =0, THE NEW NOUN CODE IS DISPLAYED ONLY(RETURN WITH NO FURTHER
   eol
    \n
 line
  comment_line
   comment
    # ACTION). IF N'S =0, THE NEW VERB CODE IS DISPLAYED ONLY(RETURN WITH NO
   eol
    \n
 line
  comment_line
   comment
    # FURTHER ACTION).
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IT RETURNS TO 1+ CALLING LOC WITHOUT PERFORMING TASK, IF DISPLAY
   eol
    \n
 line
  comment_line
   comment
    # SYSTEM IS BLOCKED (NOTHING IS DISPLAYED IN THIS CASE).
   eol
    \n
 line
  comment_line
   comment
    # IT DOES TC ABORT (WITH OCT 01501) IF IT ENCOUNTERS A DISPLAY PROGRAM
   eol
    \n
 line
  comment_line
   comment
    # ALARM CONDITION BEFORE RETURN TO CALLER.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE DISPLAY SYSTEM IS BLOCKED BY THE DEPRESSION OF ANY
   eol
    \n
 line
  comment_line
   comment
    # KEY, EXCEPT ERROR LIGHT RESET. ALSO BY ENDIDLE.
   eol
    \n
 line
  comment_line
   comment
    # \tIT IS RELEASED BY SPECIAL VERB = RELEASE DISPLAY, ALL GO TO VERBS,
   eol
    \n
 line
  comment_line
   comment
    # PROCEED WITOHOUT DATA, TERMINATE, INITIALIZE EXECUTIVE,
   eol
    \n
 line
  comment_line
   comment
    # RECALL PART OF RECALTST IF ENDIDLE WAS USED,
   eol
    \n
 line
  comment_line
   comment
    # IN RECALTST IF NVSUB INITIATED LOAD AND ENDIDLE WAS NOT USED,
   eol
    \n
 line
  comment_line
   comment
    # VB = REQUEST EXECUTIVE, VB = REQUEST WAITLIST,
   eol
    \n
 line
  comment_line
   comment
    # MONITOR SET UP.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # A NVSUB CALL THAT PASSES DSPLOCK ENDS OLD MONITOR.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # DSPLOCK IS THE INTERLOCK FOR USE OF KEYBOARD AND DISPLAY SYSTEM WHICH
   eol
    \n
 line
  comment_line
   comment
    # LOCKS OUT INTERNAL USE WHENEVER THERE IS EXTERNAL KEYBOARD ACTION.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # NVSUB IN F/F PLACES 2 + CALLING CADR INTO NVSBCADR, TC NVSUBEND INTO
   eol
    \n
 line
  comment_line
   comment
    # ENTRET. IT WILL HANDLE A CALL FROM F/F OK, BUT WILL NOT RESTORE BANKREG
   eol
    \n
 line
  comment_line
   comment
    ## Page 533
   eol
    \n
 line
  comment_line
   comment
    # TO ITS ORIGINAL CONTENTS.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIDSIX
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    NVSUB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVTEMP
    ws
     \t\t
    comment
     # IN FIXED FIXED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # DSP SYST BLOCKED. RET TO 1+ CALLING LOC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # DSP SYST AVAILABLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
    ws
     \t\t
    comment
     # 2+ CALLING CADR INTO TEMQS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        KILMONON
    ws
     \t
    comment
     # TURN ON KILL MONITOR BIT
   eol
    \n
 line
  instruction_line
   label
    NVSUBCOM
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MAKECADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ADDRWD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSBCADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBB
    ws
     \t\t
    comment
     # GO TO NVSUB1 THRU STANDARD LOC
   eol
    \n
 line
  instruction_line
   label
    NVSUBANK
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUB1
    ws
     \t\t
    comment
     # BANK NUMBER OF NVSUB1
   eol
    \n\n
 line
  instruction_line
   label
    NVSUBMON
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # MONDO COMES HERE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBCOM
   eol
    \n\n\n\n
 line
  instruction_line
   label
    NVSUBEND
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSBCADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
   eol
    \n\n\n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDRQWAIT
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    NVSUB1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTSET
    ws
     \t\t
    comment
     # IN BANK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTRET
    ws
     \t\t
    comment
     # SET RETURN TO NVSUBEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVTEMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # TEMP STORAGE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MID6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVTEMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RIGHT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # TEMP STORAGE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # TEST NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # IF NOUN NOT +0, GO ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # IF NOUN = +0, DISPLAY VERB . THEN RETURN
   eol
    \n
 line
  comment_line
   comment
    ## Page 534
   eol
    \n
 line
  instruction_line
   label
    ENTSET
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t\t
    comment
     # TEST VERB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # IF VERB NOT +0, GO ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATNN
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # IF VERB = +0, DISPLAY NOUN . THEN RETURN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBEND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # IF BOTH NOUN AND VERB NOT +0, DISPLAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # BOTH AND GO TO ENTPAS0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATNN
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
    ws
     \t\t
    comment
     # NOUN TABLES WERE READ IN UPDATNN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # NORMAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GODSPALM
    ws
     \t
    comment
     # NOUN NOT IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MATBSUB
   eol
    \n
 line
  instruction_line
   label
    NVSUB2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADSTAT
    ws
     \t
    comment
     # SET FOR WAITING FOR DATA CONDITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
    ws
     \t\t
    comment
     # SET REQRET FOR PASS 0.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENTPAS0
   eol
    \n\n
 line
  instruction_line
   label
    MATBSUB
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # NVSUB CALL LEFT ADDRES FOR MATBS IN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNADD
    ws
     \t\t
    comment
     # MPAC+2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUB2
   eol
    \n\n\n\n
 line
  instruction_line
   label
    LOW6
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        77
   eol
    \n
 line
  instruction_line
   label
    MID6
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        7700
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBEND
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
 line
  instruction_line
   label
    KILMONON
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # FORCE BIT 15 OF MONSAVE1 TO 1.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
    ws
     \t\t\t
    comment
     # \t  THIS IS THE KILL MONITOR BIT.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # LOADSTAT  +0 INACTIVE(WAITING FOR DATA). SET BY NVSUB
   eol
    \n
 line
  comment_line
   comment
    # \t    +1  PROCEED NO DATA. SET BY V33 OR PROCEED
   eol
    \n
 line
  comment_line
   comment
    #\t   -1 TERMINATE   SET BY V34
   eol
    \n
 line
  comment_line
   comment
    #\t   -0 DATA IN   SET BY END OF LOAD ROUTINE
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # L  TC ENDIDLE  (FIXED FIXED)
   eol
    \n
 line
  comment_line
   comment
    # ROUTINES THAT REQUEST LOADS THROUGH NVSUB SHOULD USE ENDIDLE WHILE
   eol
    \n
 line
  comment_line
   comment
    # WAITING FOR THE DATA TO BE LOADED. ENDIDLE PUTS CURRENT JOB TO SLEEP.
   eol
    \n
 line
  comment_line
   comment
    ## Page 535
   eol
    \n
 line
  comment_line
   comment
    # RECALTST TESTS LOADSTAT AND WAKES JOB UP TO,
   eol
    \n
 line
  comment_line
   comment
    # L+1 FOR TERMINATE
   eol
    \n
 line
  comment_line
   comment
    # L+2 FOR PROCEED WITHOUT DATA
   eol
    \n
 line
  comment_line
   comment
    # L+3 FOR DATA IN
   eol
    \n
 line
  comment_line
   comment
    # IT DOES NOTHING     IF LOADSTAT INDICATES WAITING FOR DATA.
   eol
    \n\n
 line
  instruction_line
   label
    ENDIDLE
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # NOVAC ROUTINES ENTER HERE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MAKECADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK1
    ws
     \t
    comment
     # MAKE DSPLOCK BUSY (BIT 4 OF STATE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ADDRWD
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBSLEEP
   eol
    \n\n\n\n
 line
  instruction_line
   label
    ENDINST
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    BNKCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        5777
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # JAMTERM ALLOWS PROGRAMS TO PERFORM THE TERMINATE FUNCTION.
   eol
    \n
 line
  comment_line
   comment
    # IT DOES ENDOFJOB.
   eol
    \n\n
 line
  instruction_line
   label
    JAMTERM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWENTY8
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
    ws
     \t\t
    comment
     # LEAVE ENTER AT PASS 0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATVB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # DISPLAY VB 34
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VBTERM
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # DATAWAIT IS AN ALTERNATIVE TO ENDIDLE. IT RETURNS IMMEDIATELY IF
   eol
    \n
 line
  comment_line
   comment
    # LOADSTAT INDICATES THAT DATA IS ALREADY IN, OR PROCEED OR TERMINATE HAS
   eol
    \n
 line
  comment_line
   comment
    # BEEN EXECUTED. RETURN FORMAT IS SAME AS FOR ENDIDLE.
   eol
    \n
 line
  comment_line
   comment
    # DATAWAIT SHOULD BE USED ONLY AFTER REQUESTING A LOAD VERB.
   eol
    \n\n
 line
  instruction_line
   label
    DATAWAIT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADSTAT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DATWAIT1
    ws
     \t
    comment
     # PROCEED,RETURN TO L+2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDIDLE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # STILL WAITING. GO TO SLEEP.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
    ws
     \t\t
    comment
     # TERMINATE. RETURN TO L+1.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
    ws
     \t\t
    comment
     # DATA IN. RETURN TO L+3.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        2
   eol
    \n
 line
  instruction_line
   label
    DATWAIT1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEMQS
    ws
     \t\t
    comment
     # RETURN TO L+2
   eol
    \n
 line
  comment_line
   comment
    ## Page 536
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n\n
 line
  comment_line
   comment
    # DATAWAIT DOES NOT RELEASE DISPLAY SYST. IT IS RELEASED AT END OF NVSUB
   eol
    \n
 line
  comment_line
   comment
    # INITIATED LOAD, IF ENDIDLE WAS NOT USED.
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MID6
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  comment_line
   comment
    # DSPMM  PLACE MAJOR MODE CODE INTO MODREG
   eol
    \n\n
 line
  instruction_line
   label
    DSPMM1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MD1
    ws
     \t\t
    comment
     # GETS HERE THRU DSPMM (STANDARD LEAD IN)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
    ws
     \t
    comment
     # SAVE DSPCOUNT 
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMMTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MODREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSP2BIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMMTEM
    ws
     \t
    comment
     # RESTORE DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
 line
  instruction_line
   label
    ENDSPMM1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPDATRET
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # RECALTST IS ENTERED DIRECTLY AFTER DATA IS 
   eol
    \n
 line
  comment_line
   comment
    # LOADED, TERMINATE VERB IS EXECUTED, OR THE PROCEED WITHOUT DATA VERB IS
   eol
    \n
 line
  comment_line
   comment
    # EXECUTED. IT WAKES UP JOB THAT DID TC ENDIDLE.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # IF NVSUB INITIATED LOAD, AND ENDIDLE WAS NOT USED, THEN IT RELEASES
   eol
    \n
 line
  comment_line
   comment
    # DISPLAY SYST. (NEEDED FOR DATAWAIT)
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n\n
 line
  instruction_line
   label
    RECALTST
   ws
     \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECAL1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # NORMAL EXIT IF KEYBOARD INITIATED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECAL1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
    ws
     \t
    comment
     # -0. CONCLUSION OF NVSUB INITIATED LOAD.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECAL3
    ws
     \t\t
    comment
     # +0 INTO CADRSTOR, RELEASE DISPLAY, 
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     #    AND ENDOFJOB. NEEDED FOR DATAWAIT.
   eol
    \n
 line
  instruction_line
   label
    RECAL1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBWAKE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOADSTAT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DOPROC
    ws
     \t\t
    comment
     # + PROCEED WITHOUT DATA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # PATHALOGICAL CASE EXIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DOTERM
    ws
     \t\t
    comment
     # -   TERMINATE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
 line
  instruction_line
   label
    RECAL2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOCCTR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
    ws
     \t\t
    comment
     # LOC IS - FOR BASIC JOBS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOCCTR
   eol
    \n
 line
  comment_line
   comment
    ## Page 537
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
 line
  instruction_line
   label
    RECAL3
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP1
    ws
     \t\t
    comment
     # DOES NOT SEARCH LIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    DOTERM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECAL2
   eol
    \n\n
 line
  instruction_line
   label
    DOPROC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RECAL2
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 538
   eol
    \n\n
 line
  comment_line
   comment
    # THE FOLLOWING REFERS TO THE NOUN TABLES
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +6
   eol
    \n\n
 line
  comment_line
   comment
    # COMPONENT CODE NUMBER\t\tINTERPRETATION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # 00000\t\t\t\t1 COMPONENT
   eol
    \n
 line
  comment_line
   comment
    # 00001\t\t\t\t2 COMPONENT (EACH S P)
   eol
    \n
 line
  comment_line
   comment
    # 00010\t\t\t\t3 COMPONENT (EACH SP)
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # SF ROUTINE CODE NUMBER\tINTERPRETATION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # 00000\t\tOCTAL ONLY
   eol
    \n
 line
  comment_line
   comment
    # 00001\t\tSTRAIGHT FRACTIONAL
   eol
    \n
 line
  comment_line
   comment
    # 00010\t\tDEGREES (XXX.XX)
   eol
    \n
 line
  comment_line
   comment
    # 00011\t\tARITHMETIC SF
   eol
    \n
 line
  comment_line
   comment
    # 00100\t\tARITH DP1\tOUT(MULT BY 2/14 AT END)\tIN(STRAIGHT)
   eol
    \n
 line
  comment_line
   comment
    # 00101\t\tARITH DP2\tOUT(STRAIGHT)\t\t\tIN(SL 7 AT END)
   eol
    \n
 line
  comment_line
   comment
    # 00110\t\tOPTICS DEGREES(XX.XXX MAX 89.999) OR (XXX.XX MAX 179.99)
   eol
    \n
 line
  comment_line
   comment
    # 00111\t\tARITH DP3\tOUT ( SL 7 AT END)\t\tIN ( STRAIGHT)
   eol
    \n
 line
  comment_line
   comment
    # END OF SF ROUTINE CODE NUMBERS
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # SF CONSTANT CODE NUMBER\tINTERPRETATION
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # 00000\t\t\t\tWHOLE
   eol
    \n
 line
  comment_line
   comment
    # 00000\t\t\t\tTIME SEC(XXX.XX SEC)SAME AS WHOLE (ARITHDP1)
   eol
    \n
 line
  comment_line
   comment
    # 00001\t\t\t\tTIME HOURS(XXX.XX) USE ARITH DP2
   eol
    \n
 line
  comment_line
   comment
    # 00010\t\t\t\tDEGREES
   eol
    \n
 line
  comment_line
   comment
    # 00010\t\t\t\tOPTICS DEGREES
   eol
    \n
 line
  comment_line
   comment
    # 00011\t\t\t\tGYRO DEGREES(XX.XXX) USE ARITH DP1
   eol
    \n
 line
  comment_line
   comment
    # 00100\t\t\t\tGYRO BIAS DRIFT .BBXXXXX MILLIRAD/SEC
   eol
    \n
 line
  comment_line
   comment
    # 00101\t\t\t\tGYRO AXIS ACCEL. DRIFT
   eol
    \n
 line
  comment_line
   comment
    #\t\t\t\t.BBXXXXX (MILLIRAD/SEC) / (CM/SEC SEC)
   eol
    \n
 line
  comment_line
   comment
    # 00110\t\t\t\tPIPA BIAS X.XXXX CM/SEC SEC
   eol
    \n
 line
  comment_line
   comment
    # 00111\t\t\t\tPIPA SCALE FACTOR ERROR
   eol
    \n
 line
  comment_line
   comment
    #\t\t\t\t\tXXXXX. PARTS/MILLION
   eol
    \n
 line
  comment_line
   comment
    # 01000\t\t\t\tPOSITION(XXXX.X KILOMETERS) USE ARITHDP3
   eol
    \n
 line
  comment_line
   comment
    # 01001\t\t\t\tVELOCITY(XXXX.X METERS/SEC) USE ARITHDP2
   eol
    \n
 line
  comment_line
   comment
    # 01010\t\t\t\tTIME HOURS(XXX.XX)WEEKS INSIDE(ARITHDP2)
   eol
    \n
 line
  comment_line
   comment
    # 01011\t\t\t\tELEVATION DEGREES(89.999MAX) USE ARITH
   eol
    \n
 line
  comment_line
   comment
    # 01100\t\t\t\tVG FOR 501 (XXXX.X MET/SEC)  USE ARITH
   eol
    \n
 line
  comment_line
   comment
    # END OF SF CONSTANT CODE NUMBERS
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 539
   eol
    \n
 line
  comment_line
   comment
    # FOR GREATER THAN SINGLE PRECISION SCALES, PUT ADDRESS OF MAJOR PART INTO
   eol
    \n
 line
  comment_line
   comment
    # NOUN TABLES.
   eol
    \n
 line
  comment_line
   comment
    # OCTAL LOADS PLACE +0 INTO MAJOR PART, DATA INTO MINOR PART.
   eol
    \n
 line
  comment_line
   comment
    # OCTAL DISPLAYS SHOW MINOR PART ONLY.
   eol
    \n
 line
  comment_line
   comment
    # TO GET AT BOTH MAJOR AND MINOR PARTS (IN OCTAL), USE NOUN 01.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 540
   eol
    \n\n
 line
  comment_line
   comment
    # THE FOLLOWING ROUTINES ARE FOR READING THE NOUN TABLES AND THE SF TABLES
   eol
    \n
 line
  comment_line
   comment
    # (WHICH ARE IN A SEPARATE BANK FROM THE REST OF PINBALL). THESE READING
   eol
    \n
 line
  comment_line
   comment
    # ROUTINES ARE IN THE SAME BANK AS THE TABLES. THEY ARE CALLED BY SWCALL.
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # LODNNTAB LOADS NNADTEM WTIH THE NNADTAB ENTRY, NNTYPTEM WITH THE
   eol
    \n
 line
  comment_line
   comment
    # NNTYPTAB ENTRY. IF THE NOUN IS MIXED, IDAD1TEM IS LOADED WITH THE FIRST
   eol
    \n
 line
  comment_line
   comment
    # IDADDTAB ENTRY, IDAD2TEM THE SECOND IDADDTAB ENTRY, IDAD3TEM THE THIRD
   eol
    \n
 line
  comment_line
   comment
    # IDADDTAB ENTRY. MIXBR IS SET FOR MIXED OR NORMAL NOUN.
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDEXTVS
   eol
    \n
 line
  instruction_line
   label
    LODNNTAB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD3TEM
    ws
     \t
    comment
     # SAVE RETURN ADDRESS IN IDAD3TEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNTYPTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNORM
    ws
     \t\t
    comment
     # NOUN L/ FIRST MIXED NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
    ws
     \t\t
    comment
     # NORMAL.  +1 INTO MIXBR.
   eol
    \n
 line
  instruction_line
   label
    MIXCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        55
    ws
     \t\t
    comment
     # FIRST MIXED NOUN = 55.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
 line
  instruction_line
   label
    LODMIXNN
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # NOUN G/E FIRST MIXED NOUN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW10
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NNADTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # IDADDREL INTO Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDADDTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD1TEM
    ws
     \t
    comment
     # LOAD IDAD1TEM\tWITH FIRST IDADDTAB ENTRY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDADDTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD2TEM
    ws
     \t
    comment
     # LOAD IDAD2TEM WITH 2ND IDADDTAB ENTRY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDADDTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # LOAD IDAD3TEM WITH 3RD IDADDTAB ENTRY.
   eol
    \n
 line
  instruction_line
   label
    LODNLV
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IDAD3TEM
    ws
     \t
    comment
     # PUT RETURN ADDESS INTO A.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n\n
 line
  instruction_line
   label
    LODNORM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MIXBR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LODNLV
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # GTSFOUT LOADS SFTEMP1, SFTEMP2 WTIH THE DP SFOUTAB ENTRIES.
   eol
    \n
 line
  comment_line
   comment
    ## Page 541
   eol
    \n\n
 line
  instruction_line
   label
    GTSFOUT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # SF CONUM ARRIVES IN SFTEMP2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFOUTAB1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFOUTAB2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # GTSFIN LOADS SFTEMP1, SFTEMP2 WITH THE DP SFINTAB ENTRIES.
   eol
    \n\n
 line
  instruction_line
   label
    GTSFIN
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INDEX
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
    ws
     \t\t
    comment
     # SF CONUM ARIVES IN SFTEMP2.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFINTAB1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFINTAB2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFTEMP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n\n\n
   argument
    ws
     \t\t\t\t\t
    comment
     # NN   NORMAL NOUNS
   eol
    \n
 line
  instruction_line
   label
    NNADTAB
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 00 NOT IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 01 SPECIFY MACHINE ADDRESS (FRACTIONAL)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 02 SPECIFY MACHINE ADDRESS (WHOLE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 03 SPECIFY MACHINE ADDRESS (DEGREES)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 04 SPECIFY MACHINE ADDRESS (HOURS)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 05 SPECIFY MACHINE ADDRESS (SECONDS)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 06 SPECIFY MACHINE ADDRESS (GYRO DEG)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40000
    ws
     \t\t
    comment
     # 07 SPECIFY MACHINE ADDRESS (Y OPT DEG.)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 10 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 11 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 12 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 13 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 14 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        77777
    ws
     \t\t
    comment
     # 15 INCREMENT MACHINE ADDRESS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00035
    ws
     \t\t
    comment
     # 16 TIME SECONDS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00035
    ws
     \t\t
    comment
     # 17 TIME HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CDUX
    ws
     \t\t
    comment
     # 20 ICDU
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         PIPAX
    ws
     \t\t
    comment
     # 21 PIPAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THETAD
    ws
     \t\t
    comment
     # 22 NEW ANGLES I
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM2
    ws
     \t\t
    comment
     # 23 DELTA ANGLES I
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # 24 DELTA TIME (SEC)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # 25 CHECKLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # 26 PRIO/DELAY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SMODE
    ws
     \t\t
    comment
     # 27 SELF TEST ON/OFF SWITCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # 30 STAR NUMBERS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FAILREG
    ws
     \t\t
    comment
     # 31 FAILREG, SFAIL, ERCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TDEC
    ws
     \t\t
    comment
     # 32 DECISION TIME (MIDCOURSE)
   eol
    \n
 line
  comment_line
   comment
    ## Page 542
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      ADRES
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TET
    ws
     \t\t
    comment
     # 33 EPHEMERIS TIME(MIDCOURSE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MEASQ
    ws
     \t\t
    comment
     # 34 MEASURED QUANTITY (MIDCOURSE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ROLL
    ws
     \t\t
    comment
     # 35 ROLL, PITCH, YAW
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LANDMARK
    ws
     \t
    comment
     # 36 LANDMARK DATA 1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LANDMARK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t
    comment
     # 37 LANDMARK DATA 2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
     \t\t
    comment
     # 40 VG FOR 501
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 41 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 42 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 43 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 44 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 45 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 46 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 47 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 50 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 51 SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GBIASX
    ws
     \t\t
    comment
     # 52 GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ADIAX
    ws
     \t\t
    comment
     # 53 GYRO INPUT AXIS ACCELERATION DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ADRES
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ADSRAX
    ws
     \t\t
    comment
     # 54 GYRO SPIN AXIS ACCELERATION DRIFT
   eol
    \n\n
   argument
    ws
     \t\t\t\t\t
    comment
     # NN  MIXED NOUNS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02000
    ws
     \t\t
    comment
     # 55 OCDU
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04002
    ws
     \t\t
    comment
     # 56 UNCALLED MARK DATA (OCDU & TIME(SEC))
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02005
    ws
     \t\t
    comment
     # 57 NEW ANGLES OCDU
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04007
    ws
     \t\t
    comment
     # 60 IMU MODE STATUS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02012
    ws
     \t\t
    comment
     # 61 TARGET AZIMUTH AND ELEVATION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04062
    ws
     \t\t
    comment
     # 62 RE-RENTRY VARIABLES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02016
    ws
     \t\t
    comment
     # 63 OCDUX AND TIME(SEC)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02020
    ws
     \t\t
    comment
     # 64 OCDUY AND TIME(SEC)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02022
    ws
     \t\t
    comment
     # 65 SAMPLED TIME (HOURS AND SECONDS)
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     #\t(FETCHED IN INTERRUPT)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04024
    ws
     \t\t
    comment
     # 66 SYSTEM TEST RESULTS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04027
    ws
     \t\t
    comment
     # 67 DELTA GYRO ANGLES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04032
    ws
     \t\t
    comment
     # 70 PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04035
    ws
     \t\t
    comment
     # 71 PIPA SCALE FACTOR ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04040
    ws
     \t\t
    comment
     # 72 DELTA POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04043
    ws
     \t\t
    comment
     # 73 DELTA VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04046
    ws
     \t\t
    comment
     # 74 MEASUREMENT DATA (MIDCOURSE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04051
    ws
     \t\t
    comment
     # 75 MEASUREMENT DEVIATIONS (MIDCOURSE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04054
    ws
     \t\t
    comment
     # 76 POSITION VECTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04057
    ws
     \t\t
    comment
     # 77 VELOCITY VECTOR
   eol
    \n\n\n\n
   argument
    ws
     \t\t\t\t\t
    comment
     # NN        NORMAL NOUNS
   eol
    \n
 line
  instruction_line
   label
    NNTYPTAB
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 00 NOT IN USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00040
    ws
     \t\t
    comment
     # 01 1COMP  FRACTIONAL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00140
    ws
     \t\t
    comment
     # 02 1COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00102
    ws
     \t\t
    comment
     # 03 1COMP  DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00241
    ws
     \t\t
    comment
     # 04 1COMP  HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00200
    ws
     \t\t
    comment
     # 05 1COMP  SECONDS
   eol
    \n
 line
  comment_line
   comment
    ## Page 543
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00203
    ws
     \t\t
    comment
     # 06 1COMP  OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00302
    ws
     \t\t
    comment
     # 07 1COMP  OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 10        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 11        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 12        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 13        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 14        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 15 1COMP  OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00200
    ws
     \t\t
    comment
     # 16 1COMP  SECONDS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00241
    ws
     \t\t
    comment
     # 17 3COMP  HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04102
    ws
     \t\t
    comment
     # 20 3COMP  DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04140
    ws
     \t\t
    comment
     # 21 3COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04102
    ws
     \t\t
    comment
     # 22 3COMP  DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04102
    ws
     \t\t
    comment
     # 23 3COMP  DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00200
    ws
     \t\t
    comment
     # 24 1COMP  SECONDS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00140
    ws
     \t\t
    comment
     # 25 1COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00140
    ws
     \t\t
    comment
     # 26 1COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00140
    ws
     \t\t
    comment
     # 27 1COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04140
    ws
     \t\t
    comment
     # 30 3COMP  WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04000
    ws
     \t\t
    comment
     # 31 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00252
    ws
     \t\t
    comment
     # 32 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00252
    ws
     \t\t
    comment
     # 33 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00350
    ws
     \t\t
    comment
     # 34 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04102
    ws
     \t\t
    comment
     # 35 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04000
    ws
     \t\t
    comment
     # 36 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04000
    ws
     \t\t
    comment
     # 37 3COMP  HMS (DEC ONLY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04154
    ws
     \t\t
    comment
     # 40 3COMP  VG FOR 501
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 41        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 42        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 43        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 44        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 45        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 46        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 47        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 50        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 51        SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04144
    ws
     \t\t
    comment
     # 52 3COMP  GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04145
    ws
     \t\t
    comment
     # 53 3COMP  GYRO AXIS ACCEL. DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04145
    ws
     \t\t
    comment
     # 54 3COMP  GYRO AXIS ACCEL. DRIFT
   eol
    \n\n
   argument
    ws
     \t\t\t\t\t
    comment
     # NN        MIXED NOUNS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00102
    ws
     \t\t
    comment
     # 55 2COMP  DEGREES, Y OPT DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00102
    ws
     \t\t
    comment
     # 56 3COMP  DEGREES, Y OPT DEGREES, SECS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00102
    ws
     \t\t
    comment
     # 57 2COMP  DEGREES, Y OPT DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 60 3COMP  OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00542
    ws
     \t\t
    comment
     # 61 2COMP  DEGREES, ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 62 3COMP  SECS, WHOLE, WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00002
    ws
     \t\t
    comment
     # 63 2COMP  DEGREES, SECS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00002
    ws
     \t\t
    comment
     # 64 2COMP  Y OPT DEGREES, SECS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00001
    ws
     \t\t
    comment
     # 65 2COMP  HOURS, SECONDS
   eol
    \n
 line
  comment_line
   comment
    ## Page 544
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # 66 3COMP  WHOLE, FRACTIONAL, WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        06143
    ws
     \t\t
    comment
     # 67 3COMP  GYRO DEGREES FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        14306
    ws
     \t\t
    comment
     # 70 3COMP  PIPA BIAS FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16347
    ws
     \t\t
    comment
     # 71 3COMP  PIPA SCALE FACTOR ERR.FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20410
    ws
     \t\t
    comment
     # 72 3COMP  POSITION FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        22451
    ws
     \t\t
    comment
     # 73 3COMP  VELOCITY FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00412
    ws
     \t\t
    comment
     # 74 3COMP  TIME WEEKS, POSITION, POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20450
    ws
     \t\t
    comment
     # 75 3COMP  POSITION, VELOCITY, POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20410
    ws
     \t\t
    comment
     # 76 3COMP  POSITION FOR EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        22451
    ws
     \t\t
    comment
     # 77 3COMP  VELOCITY FOR EACH
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SFINTAB1
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00006
    ws
     \t\t
    comment
     # WHOLE,TIME(SEC)\t\tHIGH PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00253
    ws
     \t\t
    comment
     # TIME HOURS(=1.3-, PT. BETWEEN BITS 7-8)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00021
    ws
     \t\t
    comment
     # GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00001
    ws
     \t\t
    comment
     # GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00011
    ws
     \t\t
    comment
     # GYRO AXIS ACCEL. DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00004
    ws
     \t\t
    comment
     # PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00314
    ws
     \t\t
    comment
     # PIPA SCALE ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        23420
    ws
     \t\t
    comment
     # POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00201
    ws
     \t\t
    comment
     # VELOCITY (POINT BETWEEN BITS 7-8)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01371
    ws
     \t\t
    comment
     # TIME WEEKS (POINT BETWEEN BITS 7-8)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00001
    ws
     \t\t
    comment
     # ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00003
    ws
     \t\t
    comment
     # VG FOR 501
   eol
    \n
 line
  comment_line
   comment
    # END OF SFINTAB1
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SFINTAB2
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        03240
    ws
     \t\t
    comment
     # WHOLE, TIME(SEC)\t\tLO PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        25124
    ws
     \t\t
    comment
     # TIME HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # DEGREES ( SFCON IN DEGINSF)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        30707
    ws
     \t\t
    comment
     # GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        02133
    ws
     \t\t
    comment
     # GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        30322
    ws
     \t\t
    comment
     # GYRO AXIS ACCEL. DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        14021
    ws
     \t\t
    comment
     # PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        31463
    ws
     \t\t
    comment
     # PIPA SCALE ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        30327
    ws
     \t\t
    comment
     # VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        34750
    ws
     \t\t
    comment
     # TIME WEEKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        03434
    ws
     \t\t
    comment
     # ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        04000
    ws
     \t\t
    comment
     # VG FOR 501
   eol
    \n
 line
  comment_line
   comment
    # END OF SFINTAB2
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SFOUTAB1
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        05174
    ws
     \t\t
    comment
     # WHOLE, TIME(SEC)\t\tHIGH PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        27670
    ws
     \t\t
    comment
     # TIME HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # DEGREES
   eol
    \n
 line
  comment_line
   comment
    ## Page 545
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01631
    ws
     \t\t
    comment
     # GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        35753
    ws
     \t\t
    comment
     # GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        03216
    ws
     \t\t
    comment
     # GYRO AXIS ACCEL. DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        07237
    ws
     \t\t
    comment
     # PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00120
    ws
     \t\t
    comment
     # PIPA SCALE ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00321
    ws
     \t\t
    comment
     # POSITION (POINT BETWEEN BITS 7-8)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        37441
    ws
     \t\t
    comment
     # VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        05300
    ws
     \t\t
    comment
     # TIME WEEKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        34631
    ws
     \t\t
    comment
     # ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        12172
    ws
     \t\t
    comment
     # VG FOR 501
   eol
    \n
 line
  comment_line
   comment
    # END OF SFOUTAB1
   eol
    \n\n\n\n
 line
  instruction_line
   label
    SFOUTAB2
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        13261
    ws
     \t\t
    comment
     # WHOLE, TIME(SEC)\t\tLO PART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        31357
    ws
     \t\t
    comment
     # TIME HOURS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
    ws
     \t\t
    comment
     # DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        23146
    ws
     \t\t
    comment
     # GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        32323
    ws
     \t\t
    comment
     # GYRO BIAS DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        06400
    ws
     \t\t
    comment
     # GYRO AXIS ACCEL. DRIFT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        37776
    ws
     \t\t
    comment
     # PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # PIPA SCALE ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        26706
    ws
     \t\t
    comment
     # POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        14247
    ws
     \t\t
    comment
     # VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        20305
    ws
     \t\t
    comment
     # TIME WEEKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        23146
    ws
     \t\t
    comment
     # ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        34121
    ws
     \t\t
    comment
     # VG FOR 501
   eol
    \n
 line
  comment_line
   comment
    # END OF SFOUTAB2
   eol
    \n\n\n\n
 line
  comment_line
   ws
    \t\t\t\t\t
   comment
    # MIXNOUN  SF ROUT\t\tREG
   eol
    \n
 line
  instruction_line
   label
    IDADDTAB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         OPTX
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +04000
    ws
     \t
    comment
     # 01\t   DEGREES\t\t52
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         OPTY
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +14000
    ws
     \t
    comment
     # 01\t   Y OPT DEGREES\t53
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +04000
    ws
     \t
    comment
     # 02\t   DEGREES\t\t627
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +14001
    ws
     \t
    comment
     # 02\t   Y OPT DEGREES\t630
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +10002
    ws
     \t
    comment
     # 02\t   SEC\t\t\t631
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DESOPTX
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +04000
    ws
     \t
    comment
     # 03\t   DEGREES\t\t724
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DESOPTX
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +14001
    ws
     \t
    comment
     # 03\t   Y OPT DEGREES\t725
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
    ws
     \t\t
    comment
     # 04\t   OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
    ws
     \t\t
    comment
     # 04\t   OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
    ws
     \t\t
    comment
     # 04\t   OCTAL ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +04000
    ws
     \t
    comment
     # 05\t   DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06001
    ws
     \t
    comment
     # 05\t   ELEVATION DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # N 62 WAS 2COMP. CHANGED TO 3COMP. MOVED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # TO END OF IDADDTAB TO PRESERVE TABLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         OPTX
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +04000
    ws
     \t
    comment
     # 07\t   DEGREES\t\t52
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME2
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10000
    ws
     \t
    comment
     # 07\t   SEC\t\t\t35
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         OPTY
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +14000
    ws
     \t
    comment
     # 10\t   Y OPT DEGREES\t53
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME2
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10000
    ws
     \t
    comment
     # 10\t   SEC\t\t\t35
   eol
    \n
 line
  comment_line
   comment
    ## Page 546
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SAMPTIME
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12000
    ws
     \t
    comment
     # 11\t   HOURS\t\t655
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SAMPTIME
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +10000
    ws
      
    comment
     # 11\t   SECONDS\t\t655
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 12\t   WHOLE\t\t632
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +02001
    ws
     \t
    comment
     # 12\t   FRACTIONAL\t\t633
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06002
    ws
     \t
    comment
     # 12\t   WHOLE\t\t634
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OGC
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10000
    ws
     \t
    comment
     # 13\t   GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OGC
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10002
    ws
     \t
    comment
     # 13\t   GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OGC
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10004
    ws
     \t
    comment
     # 13\t   GYRO DEGREES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PBIASX
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 14\t   PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PBIASY
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 14\t   PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PBIASZ
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 14\t   PIPA BIAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PIPASCFX
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 15\t   PIPA SCALE FACTOR ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PIPASCFY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 15\t   PIPA SCALE FACTOR ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PIPASCFZ
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 15\t   PIPA SCALE FACTOR ERROR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELR
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +16000
    ws
     \t
    comment
     # 16\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELR
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +16002
    ws
     \t
    comment
     # 16\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELR
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +16004
    ws
     \t
    comment
     # 16\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELVEL
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +12000
    ws
     \t
    comment
     # 17\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELVEL
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +12002
    ws
     \t
    comment
     # 17\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELVEL
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +12004
    ws
     \t
    comment
     # 17\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TDEC
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +12000
    ws
     \t
    comment
     # 20\t   TIME WEEKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MEASQ
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +16000
    ws
     \t
    comment
     # 20\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MEASMODE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 20\t   WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +16000
    ws
     \t
    comment
     # 21\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12002
    ws
     \t
    comment
     # 21\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DELTAQ
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +16000
    ws
     \t
    comment
     # 21\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +16000
    ws
     \t
    comment
     # 22\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +16002
    ws
     \t
    comment
     # 22\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +16004
    ws
     \t
    comment
     # 22\t   POSITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12000
    ws
     \t
    comment
     # 23\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12002
    ws
     \t
    comment
     # 23\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTEM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12004
    ws
     \t
    comment
     # 23\t   VELOCITY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME2
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +10000
    ws
     \t
    comment
     # 06\t   SEC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        V
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 06\t   WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        THETAH
    ws
      \t
    expression
     multiplyingExpression
      atom
       variable
        +06000
    ws
     \t
    comment
     # 06\t   WHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     #\t   SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     #\t   SPARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     #\t   SPARE
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 547
   eol
    \n\n
 line
  comment_line
   comment
    # MISCELLANEOUS SERVICE ROUTINES
   eol
    \n\n\n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      SETLOC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DATWAIT1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n\n
 line
  instruction_line
   label
    R1D1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        16
   eol
    \n
 line
  instruction_line
   label
    R2D1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11
   eol
    \n
 line
  instruction_line
   label
    R3D1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
   eol
    \n\n
 line
  instruction_line
   label
    RIGHT5
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    LEFT5
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         CYL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    SLEFT5
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      DOUBLE
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         DOUBLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n\n\n
 line
  instruction_line
   label
    LOW5
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        37
   eol
    \n
 line
  instruction_line
   label
    MID5
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1740
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        76000
    ws
     \t\t
    comment
     # MUST STAY HERE.
   eol
    \n\n
 line
  instruction_line
   label
    TCNOVAC
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOVAC
   eol
    \n
 line
  instruction_line
   label
    TCWAIT
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
 line
  instruction_line
   label
    TCTSKOVR
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n
 line
  instruction_line
   label
    TCFINDVC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FINDVAC
   eol
    \n\n\n\n
 line
  instruction_line
   label
    VD1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        23
   eol
    \n
 line
  instruction_line
   label
    ND1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        21
   eol
    \n
 line
  instruction_line
   label
    MD1
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        25
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 548
   eol
    \n\n
 line
  instruction_line
   label
    BINCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        10
   eol
    \n\n
 line
  assignment_line
   variable
    TEN
   ws
    \t\t
   EQUALS
   ws
    \t
   expression
    multiplyingExpression
     atom
      variable
       BINCON
   eol
    \n\n
 line
  instruction_line
   label
    FALTON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
    ws
     \t\t\t
    comment
     # TURN PROGRAM CHECK LIGHT ON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT5
    ws
     \t\t
    comment
     # OUT1,BIT5(ALSO KNOWN AS ILLEGAL ORDER)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    FALTOF
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    RELDSPON
   ws
    \t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
    ws
     \t\t\t
    comment
     # TURN ON RELEASE DISPLAY SYST LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    DSPLOCK0
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
    ws
     \t\t\t
    comment
     # DSPLOCK = BIT4 OF STATE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    DSPLOCK1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
    ws
     \t\t\t
    comment
     # DSPLOCK = BIT4 OF STATE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
    ws
     \t\t
    comment
     # LEAVES OLD C(DSPLOCK) IN A.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n\n
 line
  instruction_line
   label
    TSTDSPLK
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
    ws
     \t\t
    comment
     # SIMULATES CCS DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # DSPLOCK = 1, RETURN TO L+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
    ws
     \t\t
    comment
     # DSPLOCK = 0, RETURN TO L+1
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 549
   eol
    \n\n
 line
  comment_line
   comment
    # INTERNAL ROUTINES THAT USE THE KEYBOARD AND DISPLAY SYSTEM(THRU
   eol
    \n
 line
  comment_line
   comment
    # NVSUB) MUST  TC GRABDSP  BEFOREHAND , TO GRAB THE DISPLAY SYSTEM AND
   eol
    \n
 line
  comment_line
   comment
    # MAKE IT BUSY TO OTHER INTERNAL USERS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\tWHEN FINISHED , THERE MUST BE A TC FREEDSP , TO RELEASE THE
   eol
    \n
 line
  comment_line
   comment
    # SYSTEM FOR OTHER INTERNAL USERS.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\tTHE CALLING SEQUENCES ARE
   eol
    \n
 line
  comment_line
   comment
    # L\tTC\tGRABDSP
   eol
    \n
 line
  comment_line
   comment
    # L+1\tRETURN HERE WHEN SYSTEM IS ALREADY GRABBED
   eol
    \n
 line
  comment_line
   comment
    # L+2\tRETURN HERE MEANS YOU HAVE IT
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # L\tTC\tNVSUB
   eol
    \n
 line
  comment_line
   comment
    # L+1\tRETURN HERE IF OPERATOR HAS INTERVENED
   eol
    \n
 line
  comment_line
   comment
    # L+2\tRETURN HERE AFTER EXECUTION
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # \tA ROUTINE CALLED GRABUSY IS PROVIDED (USE IS OPTIONAL) TO PUT YOUR
   eol
    \n
 line
  comment_line
   comment
    # JOB TO SLEEP UNTIL  THE SYSTEM IS FREED BY THE JOB HOLDING IT. 
   eol
    \n
 line
  comment_line
   comment
    # YOUR CADR IS PUT AT FIRST AVAILABLE SLOT IN A WAITING LIST (FIFO).
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\tTHE CALLING SEQUENCE IS
   eol
    \n
 line
  comment_line
   comment
    #\t\tCAF\tWAKECADR
   eol
    \n
 line
  comment_line
   comment
    #\t\tTC\tGRABUSY
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    #\tA ROUTINE CALLED  NVSUBUSY IS PROVIDED (USE IS OPTIONAL)  TO PUT
   eol
    \n
 line
  comment_line
   comment
    # YOUR JOB TO SLEEP UNTIL THE OPERATOR RELEASES IT. YOUR CADR IS PUT
   eol
    \n
 line
  comment_line
   comment
    # ON TOP OF A WAITING LIST (FIFO). IT ALSO TURNS ON KEY RELEASE LIGHT.
   eol
    \n
 line
  comment_line
   comment
    #
   eol
    \n
 line
  comment_line
   comment
    # THE CALLING SEQUENCE IS
   eol
    \n
 line
  comment_line
   comment
    # CAF WAKECADR
   eol
    \n
 line
  comment_line
   comment
    # TC NVSUBUSY
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # AFTER A TC FREEDSP, THE INTERNAL INTERLOCK IS KEPT BUSY FOR 10 SECONDS, 
   eol
    \n
 line
  comment_line
   comment
    # AFTER WHICH A CADR IS CALLED FROM THE LIST. THIS INSURES THAT ALL
   eol
    \n
 line
  comment_line
   comment
    # DISPLAYS WAITING WILL BE VISIBLE.
   eol
    \n\n\n\n
 line
  comment_line
   comment
    # GRABLOCK IS THE INTERNAL INTERLOCK FOR THE USE OF THE KEYBOARD
   eol
    \n
 line
  comment_line
   comment
    # AND DISPLAY SYSTEM.
   eol
    \n
 line
  comment_line
   comment
    # +0  FREE
   eol
    \n
 line
  comment_line
   comment
    # +1  SOME INTERNAL ROUTINE HAS GRABBED DSP SYST
   eol
    \n
 line
  comment_line
   comment
    # +2  SOME INTERNAL ROUTINE HAS GONE TO NVSUBUSY
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 550
   eol
    \n\n
 line
  instruction_line
   label
    GRABDSP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # GRABBED. RETURN TO L+1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # NOT GRABBED. SET TO +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
    ws
     \t
    comment
     # AND RETURN TO L+2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n\n\n\n
 line
  instruction_line
   label
    PREGBSY
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW10
    ws
     \t\t
    comment
     # SPECIAL ENTRANCE FOR ROUTINES IN BANKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # DESIRING THE CADR OF 1 + (LOC FROM WHICH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKREG
    ws
     \t\t
    comment
     # TC PREGBSY WAS DONE) TO BE ENTERED.
   eol
    \n
 line
  instruction_line
   label
    GRABUSY
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABUSYB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDSPMM1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  instruction_line
   label
    GRABUSY1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # STILL GRABBED
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
    ws
     \t\t
    comment
     # NOT GRABBED SO DO DIRECT CALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTPTR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTPTR
    ws
     \t\t
    comment
     # SEARCH LIST FOR FIRST AVAILABLE SPACE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
     \t\t
    comment
     # FROM BOTTOM.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTINLST
    ws
     \t
    comment
     # SPACE FOUND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTPTR
    ws
     \t\t
    comment
     # DECREMENT POINTER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTFULL
   eol
    \n
 line
  instruction_line
   label
    PUTINLST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTPTR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBSLEEP
   eol
    \n\n\n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABUSY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
 line
  instruction_line
   label
    PRENVBSY
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        6K+3
    ws
     \t\t
    comment
     # SPECIAL ENTRANCE FOR ROUTINES IN BANKS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # DESIRING THE CADR OF (LOC FROM WHICH THE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKREG
    ws
     \t\t
    comment
     # TC PRENVBSY WAS DONE) -2 TO BE ENTERED.
   eol
    \n
 line
  instruction_line
   label
    NVSUBUSY
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBSYB
   eol
    \n
 line
  instruction_line
   label
    6K+3
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        6003
    ws
     \t\t
    comment
     # TC PRENVBSY WAS DONE) -2 TO BE ENTERED.
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PUTINLST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n
 line
  instruction_line
   label
    NVSUBSY1
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TSTDSPLK
    ws
     \t
    comment
     # TEST IF REALLY LOCKED OUT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +3
    ws
     \t\t
    comment
     # STILL BUSY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
    ws
     \t\t
    comment
     # DSPLOCK = +0 SO RETURN DIRECTLY
   eol
    \n
 line
  comment_line
   comment
    ## Page 551
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # SET FOR GRABBED STATE AND NVSUBUSY USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t
    comment
     # ENTER CADR INTO FIRST POSITION OF LIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
    ws
     \t
    comment
     # \t(BOTTOM)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTFULL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTFULL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSPON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
 line
  instruction_line
   label
    ENDNVBSY
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBSLEEP
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NVSUBUSY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n\n
 line
  instruction_line
   label
    RELDSP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # SET DSPLOCK TO +0, TURN RELDSP LIGHT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELRET
    ws
     \t\t
    comment
     # OFF,  SEARCH DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # SEARCH LIST ONLY IF GRABLOCK = +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +4
    ws
     \t\t
    comment
     # \t(SOMEONE USED NVSUBUSY)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CCSHOLE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP2
    ws
     \t\t
    comment
     # LIST EMPTY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBWAKE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
 line
  instruction_line
   label
    RELDSP2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLOCK0
    ws
     \t
    comment
     # 0 INTO DSPLOCK (BIT4 OF STATE)
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # RELINT IS DONE IN DSPLOCK0.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELRET
   eol
    \n
 line
  instruction_line
   label
    RELDSP1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # SET DSPLOCK TO +0, RELDSP LIGHT OFF, 
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELRET
    ws
     \t\t
    comment
     # NO LIST SEARCH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RELDSP2
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 552
   eol
    \n\n
 line
  instruction_line
   label
    FREEDSP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FREERET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SHOTIME
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FREEWAIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FREERET
   eol
    \n\n
 line
  instruction_line
   label
    SHOTIME
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        175
    ws
     \t\t
    comment
     # SET FOR 1.75 SECS FOR 501
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         SETLOC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDNVBSY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n\n
 line
  instruction_line
   label
    FREEWAIT
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIO31
    ws
     \t\t
    comment
     # CALLED BY T3RUPT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOVAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FREDSPDO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n\n\n\n
 line
  instruction_line
   label
    FREDSPDO
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # CALLED BY EXECUTIVE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LSTEMPTY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRTEM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        JOBWAKE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # SET FOR GRABBED CONDITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n
 line
  instruction_line
   label
    LSTEMPTY
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # SET FOR FREE CONDITION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -3
   eol
    \n\n\n\n
 line
  instruction_line
   label
    LSTFULL
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ABORT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01206
    ws
     \t\t
    comment
     # PINBALL WAITING LINE FULL.
   eol
    \n
 <EOF>
