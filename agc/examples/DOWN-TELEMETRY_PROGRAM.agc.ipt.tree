(prog (line (blank_line (label prog) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment ### FILE="Main.annotation") (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Copyright:\tPublic domain.) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Filename:\tDOWN-TELEMETRY_PROGRAM.agc) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Purpose:\tPart of the source code for Solarium build 55. This) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment #\t\tis for the Command Module's (CM) Apollo Guidance) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment #\t\tComputer (AGC), for Apollo 4.) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Assembler:\tyaYUL --block1) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Contact:\tJim Lawton <jim DOT lawton AT gmail DOT com>) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Website:\twww.ibiblio.org/apollo/index.html) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Page scans:\twww.ibiblio.org/apollo/ScansForConversion/Solarium055/) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # Mod history:\t2009-09-29 JL\tCreated.) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n\n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment ## Page 151) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n\n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # TELEMETRY PROCESSOR) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # --------- ---------) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment #) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment #\tTHE FOLLOWING TELEMETRY PROGRAM IS DESIGNED TO TRANSMIT TELEMETRY DATA VIA OUT4 WHEN AN ENDPULSE ) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # FROM THE NORTH AMERICAN TELEMETRY PROGRAMMER TRIGGERS INTERRUPT 6, WHICH INITIATES THIS ROUTINE. IT OPERATES) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # IN CONJUNCTION WITH (BUT ASYNCHRONOUSLY FROM) THE T4RUPT PROGRAM, WHICH IS INITIATED EVERY 60 MS, VIA INTERRUPT) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label comment_line) (eol \n))) line (line    ) (line (blank_line (label comment) (eol \n))) (line (comment_line (ws     ) (comment # 3. ) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n\n\n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label instruction_line) (eol \n))) line (line    ) (line (blank_line (label ws) (eol \n))) line (line     ) (line (blank_line (label \t\t) (eol \n))) line (line    ) (line (blank_line (label opcodes) (eol \n))) line (line     ) (line (blank_line (label opcode) (eol \n))) line (line      ) (line (blank_line (label pseudo_opcode) (eol \n))) (line (instruction_line (ws       ) (opcodes (opcode (pseudo_opcode BANK))) argument (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DOWNRUPT))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TELCOUNT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PNZ IS NORMAL SETTING - +0 INDICATES)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DOWNTMOK))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # TM FAILURE SINCE ENDPULSE ARE OCCURING)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMFAIL))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # TOO FREQUENTLY. THE COUNTER IS SET TO +7)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT10))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # BLOCK TM ENDPULSES UNTIL  ERROR RESET)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # COMMAND IS GIVEN.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT10))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable NBRESUME))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # BY DSRUPT EVERY 120 MS.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DOWNTMOK))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TELCOUNT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NORMAL MODE - STORE DECREMENTED COUNT.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # JUMP TO APPROPRIATE DOWNLINK PHASE.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # \tIN PHASE 7, SEND REQUIRED NUMBER OF DUMMY MARKS, ENTERING PHASE 1 WHEN FINISHED. ANY REAL MARKERS)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # OCCURRING HERE WILL NOT BE SENT UNTIL PHASE 3.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE7))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # REDUCE TO ZERO.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DUMMARK))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # \tPHASE 1 SENDS LIST ID AND SETS UP PHASE 2.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LTHCOMA))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF WORDS IN COMMON LIST A.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNLSTADR))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # CHANGES IN DNLSTADR NOT HONORED UNTIL)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode COM)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # THIS PHASE.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LDATALST))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LOW11))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 60K))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # AT FOD'S REQUEST.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable W.O.=1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 152)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tPHASE 2 SENDS COMMON LIST A: DSPTAB, T2, T1, I/O, CDUS, ETC. NO MARKERS ARE INTERSPERSED WITH THE DATA.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SEE IF MORE DATA TO BE SENT.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PHASE2A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE3))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # IF NOT, BEGIN PHASE 3.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable NOMRKRS))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF MARKERS/SECOND.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LTHLSTA))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF WORDS IN PARTICULAR LISTS A.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tPHASE 3 - SEND DOWN PARTICULAR LIST A WITH REAL MARKERS INTER-LEAVED.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMMARKER))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SEE IF ANY MARKERS TO BE SENT.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DOMARKER))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SEND DOWN PART. LIST A ENTRY IF ANY.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PHASE38A))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # (COMMON TO PHASES 3 AND 6.))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE4))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # END OF PHASE 3, START PHASE 4.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # \tPHASE 4: SEND DUMMY MARKERS UNTIL MARKERCT = 0.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # (NONE MAY BE REQUIRED))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DUMMARK))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE5))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # END OF PHASE 4 - BEGIN PHASE 5.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LTHCOMB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF WORDS IN COMMON LIST B - 1.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tPHASE 5: SEND COMMON LIST B WITH NO MARKERS INTER-LEAVED.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable PHASE5A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # (ENTERS HERE FIRST TIME ONLY).)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ A)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable COMLSTB))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 0))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DATADWNF))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NORMAL PHASE 5 ENTRY.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PHASE5A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 153)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tAT END OF PHASE 5, BEGIN PHASE 6. THE ADDRESS OF PARTICULAR LIST B IMMEDIATELY PROCEEDS)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # PARTICULAR LIST A.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE6))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LTHLSTB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF WORDS IN PARTICULAR LISTS B.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable NOMRKRS))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LISTBANK))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # GET ADDRESS OF PART. LIST B.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode XCH)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BANKREG))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode XCH)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LDATALST))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MINUS1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ A)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 0))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SO WE CAN RUN IN ERASABLE.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode COM)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode XCH)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LDATALST))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BANKREG))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tPHASE 6: PARTICULAR LIST B AND REAL MARKERS.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNPHASE6))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMMARKER))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DOMARKER))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PHASE36A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LPHASE7))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SWITCH TO PHASE 7 TO SUPPLY REQUIRED)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNTMGOTO))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NUMBER OF DUMMY MARKS.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE7))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 154)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tOUT OF SEQUENCE ROUTINES.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable PHASE2A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # SELECT DATA WORD FOR COMMON LIST A IN)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ A)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # IN FIXED-FIXED.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable COMLSTA))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 0))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DATADWNF))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode COM)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PHASE 5 (COMMON LIST B) EXITS HERE.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT9))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable NBRESUME))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # NO BANK SWITCH REQUIRED.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable PHASE36A))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PHASES 3 AND 6 (PARTICULAR DATA LISTS))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LISTBANK))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # EXIT HERE)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode XCH)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BANKREG))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BANKRUPT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PARTICULAR LISTS IN SWITCHED BANK.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable LDATALST))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # (SAVES 2 MCT).)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMINDEX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ A)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode INDEX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # (1 COMPENSATES FOR ABOVE CCS.))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 0))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode COM)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT9))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode RESUME)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DOMARKER))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CCS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # COME HERE TO SHIP DOWN REAL MARKER.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PROTECT AGAINST TOO MANY TMMARKERS)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ Q)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment #   BEING SENT DOWN WITHIN ONE SECOND)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DUMMARK))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable MARKERCT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # REDUCE MARKERCT (NEVER IS ZERO ABOVE).)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CAF)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable ZERO))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode XCH)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TMMARKER))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DN74K))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # AT FOD'S REQUEST.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable W.O.=1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT4))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PHASE 1 EXITS HERE.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT9))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT9))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable NBRESUME))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 155)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # CONSTANTS.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE2))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # ADDRESSES FOR DNTMGOTO.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE6))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE6))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LPHASE7))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNPHASE7))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LTHCOMA))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode DEC)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 26))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # LENGTH OF COMMON LIST A.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LTHCOMB))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode DEC)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 13))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # LENGTH OF COMMON LIST B - 1.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LTHLSTA))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode DEC)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 21))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PARTICULAR LIST A.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LTHLSTB))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode DEC)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 32))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # PARTICULAR LIST B.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DN74K))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode OCT)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 74000))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable assignment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable NOMRKRS))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n))) line (line     EQUALS) (line (blank_line (eol \n))) line (line    ) (line (blank_line (label ws) (eol \n))) line (line     ) (line (blank_line (label \t) (eol \n))) line (line    ) (line (blank_line (label expression) (eol \n))) line (line     ) (line (blank_line (label multiplyingExpression) (eol \n))) line (line      ) (line (blank_line (label atom) (eol \n))) line (line       ) (line (blank_line (label variable) (eol \n))) line (line        ) (line (blank_line (label THREE) (eol \n))) line (line    ) (line (blank_line (label eol) (eol \n))) line (line     ) (line (blank_line (label \n\n) (eol \n))) line (line  ) (line (blank_line (label line) (eol \n))) line (line   ) (line (blank_line (label instruction_line) (eol \n))) line (line    ) (line (blank_line (label label) (eol \n))) line (line     ) (line (blank_line (label LDNLST1) (eol \n))) line (line    ) (line (blank_line (label ws) (eol \n))) line (line     ) (line (blank_line (label \t\t) (eol \n))) line (line    ) (line (blank_line (label opcodes) (eol \n))) line (line     ) (line (blank_line (label opcode) (eol \n))) line (line      ) (line (blank_line (label standard_opcode) (eol \n))) (line (instruction_line (ws       ) (opcodes (opcode (standard_opcode ADRES))) argument (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 501LSTA1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LDNLST2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 501LSTA2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable LISTBANK))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CADR)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 501LSTA1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tSUBROUTINE COMMON TO UPLINK AND DOWNLINK TO TURN ON THE TM FAIL LIGHT.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable TMFAIL))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode CS)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode MASK)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode AD)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable BIT4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TS)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode TC)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ Q)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 156)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tCOMMON LISTS A AND B.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable COMLSTA))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ CDUZ)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 27)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ CDUY)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 26)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ CDUX)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 25)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable FLAGWRD2))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 24)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable FLAGWRD1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 23)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STATE))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 22)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable OUT1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 21)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable IN3))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 20)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable IN2))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 19)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable IN0))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 18)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ TIME1)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 17)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable register_))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (register_ TIME2)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 16)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable COMLSTB))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +13D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 15/65)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +12D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 14/64)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +11D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 13/63)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +10D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 12/62)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +9D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 11/61)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +8D))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 10/60)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +7))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 9/59)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +6))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 8/58)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 7/57)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 6/56)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 5/55)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 4/54)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 3/53)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DSPTAB))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # 2/52)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 157)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment #\tPARTICULAR DATA LISTS FOR FLIGHT 501. LIST 1 PROVIDES DATA FOR THE ENTIRE FLIGHT EXCEPT DURING)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment # STATE VECTOR UPDATES, FOR WHICH LIST 2 IS USED.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode SETLOC)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 20000))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 501LSTB2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable 501LSTA2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable COMPNUMB))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable UPOLDMD))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNSPARE))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNSPARE))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNSPARE))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable 501LSTB2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +13D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +12D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +11D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +10D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +9D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +8D))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +7))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +6))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STBUFF))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable STCNTR))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DNSPARE))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable 501LSTB1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # COMMON TO LISTS 1 AND 2)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TAVEGON))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VAVEGON))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RAVEGON))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TCUTOFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # EVENT TIME)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TCUTOFF))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TIME1GR))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TIME2GR))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PIPTIME))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable PIPTIME))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable comment_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws     ) (comment ## Page 158)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VN))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RN))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 501LSTB1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable 501LSTA1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TFF))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable TFF))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable VRECT))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +5))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +3))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable RRECT))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable THETAD))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable THETAD))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +1))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable THETAD))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DELVX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +4))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DELVX))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) argument (eol        \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable +2))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable DELVX))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable standard_opcode))))) (eol \n) (argument (ws          ) (expression (multiplyingExpression (atom (variable (standard_opcode ADRES)))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable REDOCNTR))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n\n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable line))))) (eol \n) (argument (ws   ) (expression (multiplyingExpression (atom (variable instruction_line))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable label))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable DNSPARE))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable opcodes))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable opcode))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable pseudo_opcode))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable (pseudo_opcode OCT)))))) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable argument))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable expression))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable multiplyingExpression))))) (eol \n) (argument (ws       ) (expression (multiplyingExpression (atom (variable atom))))) (eol \n) (argument (ws        ) (expression (multiplyingExpression (atom (variable variable))))) (eol \n) (argument (ws         ) (expression (multiplyingExpression (atom (variable 52525))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable ws))))) (eol \n) (argument (ws      ) (expression (multiplyingExpression (atom (variable \t\t))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable comment))))) (eol \n) (argument (ws      ) (comment # AT FOD'S REQUEST.)) (eol \n) (argument (ws    ) (expression (multiplyingExpression (atom (variable eol))))) (eol \n) (argument (ws     ) (expression (multiplyingExpression (atom (variable \n))))) (eol \n) (argument (ws  ) (expression (multiplyingExpression (atom (variable EOF))))) (eol \n))) <EOF>)