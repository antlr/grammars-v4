prog
 line
  comment_line
   comment
    ### FILE="Main.annotation"
   eol
    \n
 line
  comment_line
   comment
    # Copyright:\tPublic domain.
   eol
    \n
 line
  comment_line
   comment
    # Filename:\tDUMMY_501_INITIALIZATION.agc
   eol
    \n
 line
  comment_line
   comment
    # Purpose:\tPart of the source code for Solarium build 55. This
   eol
    \n
 line
  comment_line
   comment
    #\t\tis for the Command Module's (CM) Apollo Guidance
   eol
    \n
 line
  comment_line
   comment
    #\t\tComputer (AGC), for Apollo 4.
   eol
    \n
 line
  comment_line
   comment
    # Assembler:\tyaYUL --block1
   eol
    \n
 line
  comment_line
   comment
    # Contact:\tJim Lawton <jim DOT lawton AT gmail DOT com>
   eol
    \n
 line
  comment_line
   comment
    # Website:\twww.ibiblio.org/apollo/index.html
   eol
    \n
 line
  comment_line
   comment
    # Page scans:\twww.ibiblio.org/apollo/ScansForConversion/Solarium055/
   eol
    \n
 line
  comment_line
   comment
    # Mod history:\t2009-09-14 JL\tCreated.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 697
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      BANK
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        33
   eol
    \n
 line
  instruction_line
   label
    BEGINNER
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
   eol
    \n
 line
  instruction_line
   label
    CADRMODE
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IMUREENT
   eol
    \n\n
 line
  instruction_line
   label
    BEGIN501
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        INTPRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         VMOVE
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         ITC
   eol
    \n
   argument
    ws
     \t\t\t
    expression
     multiplyingExpression
      atom
       variable
        RN
   eol
    \n
   argument
    ws
     \t\t\t
    expression
     multiplyingExpression
      atom
       variable
        CALCGRAV
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         EXIT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASCHNG
    ws
     \t
    comment
     # SETUP SOME PHASE INFO.
   eol
    \n
 line
  instruction_line
   label
    EXITLOC2
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00105
    ws
     \t\t
    comment
     # 5.1 MODE GOES WITH READACCS.
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTDT1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        READACCS
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME1
    ws
     \t\t
    comment
     # SPARE START ROUTINE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTDT2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        START2
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
 line
  instruction_line
   label
    BEGINSW
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # WAIT FOR MODE SWITCH IF NECESSARY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IMUSTALL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t\t\t
    comment
     ## (JL) seems to be an arg missing. Is YUL assuming 0? Generates 07435.
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         DEC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0
   eol
    \n
 line
  instruction_line
   label
    STARTDT1
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        200
   eol
    \n
 line
  instruction_line
   label
    STARTDT2
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        830
   eol
    \n\n
 line
  instruction_line
   label
    START2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIO27
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FINDVAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        S4BSMSEP
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n
 <EOF>
