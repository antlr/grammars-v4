prog
 line
  comment_line
   comment
    ### FILE="Main.annotation"
   eol
    \n
 line
  comment_line
   comment
    # Copyright:\tPublic domain.
   eol
    \n
 line
  comment_line
   comment
    # Filename:\tFRESH_START_AND_RESTART.agc
   eol
    \n
 line
  comment_line
   comment
    # Purpose:\tPart of the source code for Solarium build 55. This
   eol
    \n
 line
  comment_line
   comment
    #\t\tis for the Command Module's (CM) Apollo Guidance
   eol
    \n
 line
  comment_line
   comment
    #\t\tComputer (AGC), for Apollo 4.
   eol
    \n
 line
  comment_line
   comment
    # Assembler:\tyaYUL --block1
   eol
    \n
 line
  comment_line
   comment
    # Contact:\tJim Lawton <jim DOT lawton AT gmail DOT com>
   eol
    \n
 line
  comment_line
   comment
    # Website:\twww.ibiblio.org/apollo/index.html
   eol
    \n
 line
  comment_line
   comment
    # Page scans:\twww.ibiblio.org/apollo/ScansForConversion/Solarium055/
   eol
    \n
 line
  comment_line
   comment
    # Mod history:\t2009-09-28 JL\tCreated.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 140
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      BANK
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        4
   eol
    \n
 line
  comment_line
   comment
    #\tFRESH START - A KEYBOARD REQUEST TO INITIALIZE THE SYSTEM.
   eol
    \n\n
 line
  instruction_line
   label
    SLAP1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
    ws
     \t\t\t
    comment
     # COMES HERE FROM THE PINBALL VERB FAN.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     #  (ZERO FAILREG IN FRESH START ONLY).
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FAILREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MODREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REDOCNTR
    ws
     \t
    comment
     # ZERO ONLY DURING FRESH START.
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT4
    ws
     \t\t
    comment
     # DISABLE IMU FAIL FOR 5 SECS.
   eol
    \n
 line
  instruction_line
   label
    SLAP2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
    ws
     \t\t
    comment
     #  CURTAINS ENTERS HERE FROM THATSALL.
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # DSPLOCK (BIT 4 OF STATE), UPLOCK (BIT2 OF
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # STATE), EXTVBACT (BIT3 OF STATE) ARE
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # ZEROED BELOW (FRESH START ONLY).
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERCOUNT
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTSUB
    ws
     \t
    comment
     # SUBROUTINE DOES MOST OF THE WORK.
   eol
    \n\n
 line
  instruction_line
   label
    NOGO
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MAXPROG
    ws
     \t\t
    comment
     # MAKE ALL RESTART GROUPS INACTIVE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -PHASE1
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
    ws
     \t\t
    comment
     # RESET OUT1 HERE INSTEAD OF IN STARTSUB.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SMODE
    ws
     \t\t
    comment
     # DISABLE SELF-CHECK.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # TELL T4RUPT TO TURN OFF ALL C RELAYS.
   eol
    \n
 line
  instruction_line
   label
    DSP12D
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +12D
   eol
    \n
 line
  instruction_line
   label
    DSP13D
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +13D
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OCT40010
   eol
    \n
 line
  instruction_line
   label
    DSP11D
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +11D
    ws
     \t
    comment
     # LEAVE IMU IN FINE ALIGN
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
    ws
     \t\t
    comment
     # DISABLE KSAMP DURING INITIAL TRANSIENT.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT5
    ws
     \t\t
    comment
     # FOR 160 MS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        KENABLE
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTMODES
   eol
    \n
 line
  comment_line
   comment
    ## Page 141
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWINIT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STATE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWINIT
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STATE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWINIT
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STATE
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTSW
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ALARM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00301
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    STARTSW
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDFRESH
   eol
    \n
 line
  instruction_line
   label
    ESTART
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIO25
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FINDVAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BEGIN501
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDFRESH
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    KENABLE
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OCT50
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT10
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WAITLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IFAILOK
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TASKOVER
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    THATSALL
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFAIL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BITS4&5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SLAP2
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  assignment_line
   variable
    MAXPROG
   ws
    \t\t
   EQUALS
   ws
    \t
   expression
    multiplyingExpression
     atom
      variable
       FIVE
   eol
    \n
 line
  instruction_line
   label
    BITS4&5
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        30
   eol
    \n\n
 line
  instruction_line
   label
    BITS5&7
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        120
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 142
   eol
    \n\n
 line
  comment_line
   comment
    # \tWHENEVER A GO SEQUENCE (GOJAM) IS FIRED,  GOPROG  IS CALLED TO RESTART ANY COMPUTER ACTIVITY THAT
   eol
    \n
 line
  comment_line
   comment
    # MAY HAVE BEEN GOING ON AT THE TIME. (A NUMBER OF ALARMS SUCH AS PARITY FAILURE OR POWER FAILURE CAUSE GOJAM).
   eol
    \n
 line
  comment_line
   comment
    # THE FUNCTION OF GOPROG IS TO INITIALIZE THE COMPUTER SUB-SYSTEM (I.E., NO C RELAYS ARE CHANGED, ETC.) AND
   eol
    \n
 line
  comment_line
   comment
    # RESTART ALL MAJOR ROUTINES WHOSE PHASE BITS INDICATE ACTIVITY.
   eol
    \n\n
 line
  instruction_line
   label
    GOPROG
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERESTORE
    ws
     \t
    comment
     # RESTORE TWO ERASABLE REGISTERS IF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +2
    ws
     \t\t
    comment
     # RESTART OCCURS WHILE SELF-CHECK HAS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOPROG2
    ws
     \t\t
    comment
     # REMOVED CONTENTS OF THESE REGISTERS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1776
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         NDX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1777
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0001
    ws
     \t\t
    comment
     # RESTORE C(X)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1775
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         NDX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        1777
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        0000
    ws
     \t\t
    comment
     # RESTORE C(X-1)
   eol
    \n
 line
  instruction_line
   label
    GOPROG2
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DVMONMSK
    ws
     \t
    comment
     # SHOULD BE SYS FLAG FOR ENGINE ON.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        FLAGWRD1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # SEE IF ENGINE WAS ON.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT13
    ws
     \t\t
    comment
     # YES..PUT IT BACK ON.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OUT1
    ws
     \t\t
    comment
     # NO...ZERO IT.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # SET RESTART FAIL INDICATION, WHICH WILL
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
    ws
     \t\t
    comment
     # BE REMOVED AFTER SUCCESSFUL VERIFICATION
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTSUB
    ws
     \t
    comment
     # OF PHASE TABLE AGREEMENT.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN0
    ws
     \t\t
    comment
     # IF BOTH ERROR RESET AND MARK ARE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HUNGMASK
    ws
     \t
    comment
     # DEPRESSED, FALL INTO FRESH START TO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        HUNGCODE
    ws
     \t
    comment
     # HOPEFULLY PREVENT OR STOP RECURRING GOS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASECHK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # RESTART
   eol
    \n
 line
  instruction_line
   label
    HUNGCODE
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        37775
    ws
     \t\t
    comment
     # COMPLEMENT OF IN0 HUNG SETTING.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASECHK
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
    ws
     \t
    comment
     # RESTART
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MAXPROG
    ws
     \t\t
    comment
     # PHASE BITS ARE KEPT IN TWO COPIES,
   eol
    \n
 line
  instruction_line
   label
    PHASECHK
   ws
    \t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # ONE DIRECT AND ONE COMPLEMENTED. THIS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # SECTION MAKES SURE ALL ENTRIES IN EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASETAB
    ws
     \t
    comment
     # SATISFIES THIS RULE AS AN INDICATION OF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
    ws
     \t\t
    comment
     # THE GOODNESS OF ERASABLE MEMORY. IF THE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
    ws
     \t\t\t
    comment
     # TEST FAILS, DO A FRESH START WITH THE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # MODE LIGHTS SET TO 00 TO TELL THE STORY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASEBAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZEROTEST
    ws
     \t
    comment
     # P.(-P) AND (-P).(--P) SHOULD BOTH BE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
    ws
     \t\t
    comment
     # +0 FOR A LOGICAL MATCH.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASEBAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZEROTEST
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
 line
  comment_line
   comment
    ## Page 143
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASECHK
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DISPCNTR
    ws
     \t
    comment
     # ENABLE VG DISPLAY GRAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
    ws
     \t\t
    comment
     # NO RESTART FAIL.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # INCREMENT REDOCNTR.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REDOCNTR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REDOCNTR
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +13D
    ws
     \t
    comment
     # PICK UP ALL BUT BIT 15.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT15
    ws
     \t\t
    comment
     # SET BIT 15 TO FORCE RESETTING RELAYS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +13D
    ws
     \t
    comment
     # MIGHT TAKE A WHILE TO GET OUT.
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    CHECKIN3
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
    ws
     \t\t
    comment
     # PUT PRESENT MODES INTO WAS  REGISTERS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         XCH
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTMODES
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BITS5&7
    ws
     \t\t
    comment
     # IMU ATTITUDE CONTROL OR ENTRY MODE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASKSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # IS IT IN ONE OF THESE MODES.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # YES.. PUT +0 INTO CDUIND.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
    ws
     \t\t\t
    comment
     # NO... PUT -0 INTO CDUIND.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CDUIND
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IN0
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT12
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        WASOPSET
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 144
   eol
    \n\n
 line
  instruction_line
   label
    GOJUMP
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MAXPROG
    ws
     \t\t
    comment
     # SCAN PHASE TABLE FOR ACTIVITY.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         RELINT
    ws
     \t\t\t
    comment
     # OPEN THE INTERRUPT GATE SO THAT EACH
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INHINT
    ws
     \t\t\t
    comment
     # GO DISPATCH HAS 10 MS.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # GROUP NUMBER IN PROG.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # SEE IF GROUP ACTIVE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASE1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        -1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PROGON
    ws
     \t\t
    comment
     # VALID IF PHASE LESS THAN 127.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOTERM
    ws
     \t\t
    comment
     # DO REQUESTED PHASE TERMINATE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
    ws
     \t\t
    comment
     # INACTIVE IF PHASE = -1.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RSTFAIL2
    ws
     \t
    comment
     # BAD DATA IF -0.
   eol
    \n
 line
  instruction_line
   label
    GORETURN
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOJUMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIO37
    ws
     \t\t
    comment
     # FIRE UP JOB TO DISPLAY FAILREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOVAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DOALARM
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    ENDFRESH
   ws
    \t
   opcodes
    opcode
     standard_opcode
      RELINT
   argument
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BANKCALL
    ws
     \t
    comment
     # DISPLAY MAJOR MODES.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPMM
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSTJUMP
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DUMMYJOB
    ws
     \t
    comment
     # THIS REVERTS TO THE IDLING JOB.
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    ZEROTEST
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CCS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
    ws
     \t\t
    comment
     # RESTART FROM GO IMPOSSIBLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
    ws
     \t\t
    comment
     # OK SO FAR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 145
   eol
    \n\n
 line
  comment_line
   comment
    #   INTERNAL RESTART BY PROGRAM CONTROL TO FLUSH OUT WAITLIST AND EXEC.
   eol
    \n\n
 line
  instruction_line
   label
    ENEMA
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      INHINT
   argument
    ws
     \t\t\t
    comment
     # A STRANGE INSTRUCTION TO BEAR THIS NAME.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STARTSUB
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SFAIL
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CHECKIN3
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 146
   eol
    \n\n
 line
  comment_line
   comment
    #\tDISPATCH OR TERMINATE RESTART GROUPS.
   eol
    \n\n
 line
  instruction_line
   label
    PROGON
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      AD
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # PHASE BITS TO MPAC.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOW7
    ws
     \t\t
    comment
     # CHECK SIZE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         A
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RSTFAIL2
    ws
     \t
    comment
     # RESTART FAIL - OUT OF RANGE.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
    ws
     \t\t
    comment
     # JUMP TO GOCADR LOC.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GOCADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SWCALL
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GORETURN
    ws
     \t
    comment
     # ON RETURN FROM SWCALL.
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    GOTERM
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ONE
    ws
     \t\t
    comment
     # IF A RESTART GROUP HAD BEEN REQUESTED TO
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
    ws
     \t\t
    comment
     # TERMINATE, DO THE TERMINATE NOW.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PHASE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         COM
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LOC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        -PHASE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GORETURN
   eol
    \n
   argument
   eol
    \t\t
    \n
 line
  instruction_line
   label
    RSTFAIL2
   ws
    \t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TWO
    ws
     \t\t
    comment
     # BAD DATA IN RESTART TABLES - FAIL.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OLDERR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOGO
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 147
   eol
    \n\n
 line
  comment_line
   comment
    #\tINITIALIZATION SUBROUTINE, CONTAINING INITIALIZATION COMMON TO BOTH FRESH START (KEYBOARD REQUEST) AND
   eol
    \n
 line
  comment_line
   comment
    # RESTART (IN RESPONSE TO A GO SEQUENCE).
   eol
    \n\n
 line
  instruction_line
   label
    STARTSUB
   ws
    \t
   opcodes
    opcode
     standard_opcode
      XCH
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         Q
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
    ws
     \t\t
    comment
     # EXEC TEMPS ARE AVAILABLE TO US.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        POSMAX
    ws
     \t\t
    comment
     # T3 AND T4 OVERFLOW AS SOON AS POSSIBLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME3
    ws
     \t\t
    comment
     #   (POSMAX IS PSEUDO INTERRUPT SIGNAL IN
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME4
    ws
     \t\t
    comment
     #   CASE RUPT SIGNALLED BEFORE TS TIME3),
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEG1/2
    ws
     \t\t
    comment
     # INITIALIZE WAITLIST DELTA-TS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST1
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDTASK
    ws
     \t\t
    comment
     # SET ALL TASKS TO DUMMY TASK.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +7
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +6
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LST2
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ZERO
    ws
     \t\t
    comment
     # MAKE ALL EXECUTIVE REGISTER SETS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +8D
    ws
     \t
    comment
     # AVAILABLE (EXCEPT THIS ONE).
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +16D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +24D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +32D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +40D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +48D
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +56D
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSRUPTSW
    ws
     \t
    comment
     # -0 GIVES US 40 MS TO GET READY FOR T4.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CDUIND
    ws
     \t\t
    comment
     # MAKE IMU AND OPTICS AVAILABLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTIND
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 148
   eol
    \n\n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CAF
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC1ADRC
    ws
     \t
    comment
     # MAKE ALL VAC AREAS AVAILABLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC1USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LTHVACA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC2USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LTHVACA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC3USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LTHVACA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC4USE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         AD
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LTHVACA
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC5USE
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT10
    ws
     \t\t
    comment
     # THIS REGISTER SET BECOMES DUMMY JOB.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        PRIORITY
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TEN
    ws
     \t\t
    comment
     # TURN OFF ALL DISPLAY SYSTEM RELAYS
   eol
    \n
 line
  instruction_line
   label
    DSPOFF
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT12
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         INDEX
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPTAB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CCS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MPAC
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPOFF
   eol
    \n\n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ERESTORE
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        UPLINK
    ws
     \t\t
    comment
     # THESE MIGHT PICK UP AN INCREMENT DURING
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        56
    ws
     \t\t
    comment
     # A GO.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCNT
    ws
     \t\t
    comment
     # SKIPS TO HERE WHEN FINISHED WITH C(A)=0.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NEWJOB
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CADRSTOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REQRET
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        CLPASS
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE
    ws
     \t\t
    comment
     # KILL MONITOR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MONSAVE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GRABLOCK
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VERBREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUNREG
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPLIST
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
 line
  comment_line
   comment
    ## Page 149
   eol
    \n
 line
  instruction_line
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      TS
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LGYRO
    ws
     \t\t
    comment
     # MAKE GYRO ROUTINES AVAILABLE.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
     \t\t
    comment
     # ZERO COMPENSATING GYRO TORQUES.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +2
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +3
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +4
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        GCOMP
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +5
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DESKSET
    ws
     \t\t
    comment
     # NO COMPUTER COMMAND.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DESOPSET
    ws
     \t
    comment
     # (SAME AS IMU).
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        IMUCADR
    ws
     \t\t
    comment
     # INITIALIZE MODE-SWITCHING.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        OPTCADR
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TMMARKER
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        MARKSTAT
    ws
     \t
    comment
     # MAKE MARK SYSTEM AVAILABLE.
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        register_
         TIME1
    ws
     \t\t
    comment
     # SAVE TIME OF LAST RESTART. (MINUS VALUE)
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        REDOTIME
    ws
      
    expression
     multiplyingExpression
      atom
       variable
        +1
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        SIX
    ws
     \t\t
    comment
     # (MAY NOT GET ANY ENDPULSES BEFORE T4).
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        TELCOUNT
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LPHASE1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DNTMGOTO
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        LDNLST1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DNLSTADR
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CAF
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUTCON
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        NOUT
   eol
    \n
   argument
   eol
    \t\t
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BIT3/4
    ws
     \t\t
    comment
     # ZERO ONLY DSPLOCK (BIT4 OF STATE) AND
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         MASK
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STATE
    ws
     \t\t
    comment
     # EXTVBACT (BIT3 OF STATE) FOR RESTART.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        STATE
    ws
     \t\t
    comment
     # UPLOCK (BIT2 OF STATE) IS ZEROED ONLY
   eol
    \n
   argument
    ws
     \t\t\t\t\t
    comment
     # IN FRESH START.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VD1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TS
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DSPCOUNT
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         TC
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        BUF
    ws
     \t\t
    comment
     # DONE.
   eol
    \n\n
 line
  comment_line
   comment
    ## Page 150
   eol
    \n\n
 line
  instruction_line
   label
    HUNGMASK
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40037
    ws
     \t\t
    comment
     # KEYCODE AND MARK BUTTON ONLY
   eol
    \n
 line
  instruction_line
   label
    OPTMODES
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        35000
   eol
    \n\n
 line
  instruction_line
   label
    OCT50
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        50
    ws
     \t\t
    comment
     # FINE ALIGN + TRANSFER SWITCH.
   eol
    \n
 line
  instruction_line
   label
    OCT40010
   ws
    \t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        40010
    ws
     \t\t
    comment
     # IMU FINE ALIGN C-RELAY SETTING.
   eol
    \n
 line
  instruction_line
   label
    LPHASE1
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      ADRES
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        DNPHASE1
   eol
    \n
 line
  instruction_line
   label
    BIT3/4
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        14
   eol
    \n
 line
  instruction_line
   label
    NOUTCON
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        11
   eol
    \n\n\n\n
 line
  instruction_line
   label
    GOCADR
   ws
    \t\t
   opcodes
    opcode
     standard_opcode
      CADR
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        ENDOFJOB
    ws
     \t
    comment
     # FOR 501 ONLY
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RESTARTS
    ws
     \t
    comment
     # GROUP 2 RESTARTS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RESTARTS
    ws
     \t
    comment
     # GROUP 3 RESTARTS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RESTARTS
    ws
     \t
    comment
     # GROUP 4 RESTARTS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RESTARTS
    ws
     \t
    comment
     # GROUP 5 RESTARTS.
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        standard_opcode
         CADR
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        RESTARTS
    ws
     \t
    comment
     # GROUP 6 RESTARTS.
   eol
    \n\n
 line
  instruction_line
   label
    VAC1ADRC
   ws
    \t
   opcodes
    opcode
     standard_opcode
      ADRES
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        VAC1USE
   eol
    \n
 line
  instruction_line
   label
    LTHVACA
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      DEC
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        44
   eol
    \n\n
 line
  instruction_line
   label
    SWINIT
   ws
    \t\t
   opcodes
    opcode
     pseudo_opcode
      OCT
   argument
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        01340
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # STATE +1
   eol
    \n
   argument
    ws
     \t\t
    expression
     multiplyingExpression
      atom
       variable
        pseudo_opcode
         OCT
    ws
     \t
    expression
     multiplyingExpression
      atom
       variable
        00000
    ws
     \t\t
    comment
     # STATE +2
   eol
    \n
 <EOF>
