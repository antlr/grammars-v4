program
 classDefine
  class
  Main
  inherits
  IO
  {
  feature
   main
   (
   )
   :
   SELF_TYPE
   {
   expression
    (
    expression
     let
     c
     :
     Complex
     <-
     expression
      expression
       (
       expression
        new
        Complex
       )
      .
      init
      (
      expression
       1
      ,
      expression
       1
      )
     in
     expression
      if
      expression
       expression
        expression
         expression
          c
         .
         reflect_X
         (
         )
        .
        reflect_Y
        (
        )
       =
       expression
        expression
         c
        .
        reflect_0
        (
        )
      then
      expression
       out_string
       (
       expression
        "=)\n"
       )
      else
      expression
       out_string
       (
       expression
        "=(\n"
       )
      fi
    )
   }
  ;
  }
 ;
 classDefine
  class
  Complex
  inherits
  IO
  {
  feature
   x
   :
   Int
  ;
  feature
   y
   :
   Int
  ;
  feature
   init
   (
   formal
    a
    :
    Int
   ,
   formal
    b
    :
    Int
   )
   :
   Complex
   {
   expression
    {
    expression
     expression
      x
     =
     expression
      a
    ;
    expression
     expression
      y
     =
     expression
      b
    ;
    expression
     self
    ;
    }
   }
  ;
  feature
   print
   (
   )
   :
   Object
   {
   expression
    if
    expression
     expression
      y
     =
     expression
      0
    then
    expression
     out_int
     (
     expression
      x
     )
    else
    expression
     expression
      expression
       expression
        out_int
        (
        expression
         x
        )
       .
       out_string
       (
       expression
        "+"
       )
      .
      out_int
      (
      expression
       y
      )
     .
     out_string
     (
     expression
      "I"
     )
    fi
   }
  ;
  feature
   reflect_0
   (
   )
   :
   Complex
   {
   expression
    {
    expression
     expression
      x
     =
     expression
      ~
      expression
       x
    ;
    expression
     expression
      y
     =
     expression
      ~
      expression
       y
    ;
    expression
     self
    ;
    }
   }
  ;
  feature
   reflect_X
   (
   )
   :
   Complex
   {
   expression
    {
    expression
     expression
      y
     =
     expression
      ~
      expression
       y
    ;
    expression
     self
    ;
    }
   }
  ;
  feature
   reflect_Y
   (
   )
   :
   Complex
   {
   expression
    {
    expression
     expression
      x
     =
     expression
      ~
      expression
       x
    ;
    expression
     self
    ;
    }
   }
  ;
  }
 ;
 <EOF>
