program
 programHeading
  Program
  identifier
   PassOrFailSystem
  ;
 block
  variableDeclarationPart
   Var
   variableDeclaration
    identifierList
     identifier
      ActualMark
    :
    type_
     simpleType
      typeIdentifier
       Integer
   ;
   variableDeclaration
    identifierList
     identifier
      PossibleMark
    :
    type_
     simpleType
      typeIdentifier
       Integer
   ;
   variableDeclaration
    identifierList
     identifier
      PercentageMark
    :
    type_
     simpleType
      typeIdentifier
       Real
   ;
  compoundStatement
   Begin
   statements
    statement
     unlabelledStatement
      simpleStatement
       procedureStatement
        identifier
         Writeln
        (
        parameterList
         actualParameter
          expression
           simpleExpression
            term
             signedFactor
              factor
               unsignedConstant
                string
                 'Please type the student''s actual mark: '
        )
    ;
    statement
     unlabelledStatement
      simpleStatement
       procedureStatement
        identifier
         Readln
        (
        parameterList
         actualParameter
          expression
           simpleExpression
            term
             signedFactor
              factor
               variable
                identifier
                 ActualMark
        )
    ;
    statement
     unlabelledStatement
      simpleStatement
       procedureStatement
        identifier
         Writeln
        (
        parameterList
         actualParameter
          expression
           simpleExpression
            term
             signedFactor
              factor
               unsignedConstant
                string
                 'Please type the total possible mark of the exam : '
        )
    ;
    statement
     unlabelledStatement
      simpleStatement
       procedureStatement
        identifier
         Readln
        (
        parameterList
         actualParameter
          expression
           simpleExpression
            term
             signedFactor
              factor
               variable
                identifier
                 PossibleMark
        )
    ;
    statement
     unlabelledStatement
      simpleStatement
       assignmentStatement
        variable
         identifier
          PercentageMark
        :=
        expression
         simpleExpression
          term
           signedFactor
            factor
             (
             expression
              simpleExpression
               term
                signedFactor
                 factor
                  variable
                   identifier
                    ActualMark
                multiplicativeoperator
                 /
                term
                 signedFactor
                  factor
                   variable
                    identifier
                     PossibleMark
             )
           multiplicativeoperator
            *
           term
            signedFactor
             factor
              unsignedConstant
               unsignedNumber
                unsignedInteger
                 100
    ;
    statement
     unlabelledStatement
      structuredStatement
       conditionalStatement
        ifStatement
         If
         expression
          simpleExpression
           term
            signedFactor
             factor
              (
              expression
               simpleExpression
                term
                 signedFactor
                  factor
                   variable
                    identifier
                     PercentageMark
               relationaloperator
                >=
               expression
                simpleExpression
                 term
                  signedFactor
                   factor
                    unsignedConstant
                     unsignedNumber
                      unsignedInteger
                       50
              )
         Then
         statement
          unlabelledStatement
           structuredStatement
            compoundStatement
             Begin
             statements
              statement
               unlabelledStatement
                simpleStatement
                 procedureStatement
                  identifier
                   Writeln
              ;
              statement
               unlabelledStatement
                simpleStatement
                 procedureStatement
                  identifier
                   Writeln
                  (
                  parameterList
                   actualParameter
                    expression
                     simpleExpression
                      term
                       signedFactor
                        factor
                         unsignedConstant
                          string
                           'Pass'
                  )
              ;
              statement
               unlabelledStatement
                simpleStatement
                 emptyStatement_
             End
         Else
         statement
          unlabelledStatement
           structuredStatement
            compoundStatement
             Begin
             statements
              statement
               unlabelledStatement
                simpleStatement
                 procedureStatement
                  identifier
                   Writeln
              ;
              statement
               unlabelledStatement
                simpleStatement
                 procedureStatement
                  identifier
                   Writeln
                  (
                  parameterList
                   actualParameter
                    expression
                     simpleExpression
                      term
                       signedFactor
                        factor
                         unsignedConstant
                          string
                           'Fail'
                  )
              ;
              statement
               unlabelledStatement
                simpleStatement
                 emptyStatement_
             End
    ;
    statement
     unlabelledStatement
      simpleStatement
       emptyStatement_
   End
 .
 <EOF>
