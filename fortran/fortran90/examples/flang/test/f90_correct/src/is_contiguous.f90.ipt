program
 executableProgram
  programUnit
   module
    moduleStmt
     module
     moduleName
      ident
       message
    moduleBody
     moduleBody
      moduleBody
       specificationPartConstruct
        declarationConstruct
         derivedTypeDef
          derivedTypeStmt
           type
           ::
           msg_type
          derivedTypeBody
           derivedTypeBodyConstruct
            componentDefStmt
             typeSpec
              integer
             ,
             componentAttrSpecList
              componentAttrSpec
               pointer
             ::
             componentDeclList
              componentDecl
               componentName
                arr
               (
               componentArraySpec
                deferredShapeSpecList
                 deferredShapeSpec
                  :
               )
          endTypeStmt
           end
           type
           msg_type
      moduleSubprogramPartConstruct
       containsStmt
        contains
     moduleSubprogramPartConstruct
      moduleSubprogram
       subroutineSubprogram
        subroutine
        subroutineName
         test
        subroutineRange
         subroutineParList
          (
          subroutinePars
           subroutinePar
            dummyArgName
             msg
           ,
           subroutinePar
            dummyArgName
             res
          )
         body
          bodyConstruct
           specificationPartConstruct
            declarationConstruct
             typeDeclarationStmt
              typeSpec
               type
               (
               typeName
                ident
                 msg_type
               )
              ::
              entityDeclList
               entityDecl
                objectName
                 name
                  msg
          bodyConstruct
           specificationPartConstruct
            declarationConstruct
             typeDeclarationStmt
              typeSpec
               integer
              attrSpecSeq
               ,
               attrSpec
                intent
                (
                intentSpec
                 out
                )
              ::
              entityDeclList
               entityDecl
                objectName
                 name
                  res
          bodyConstruct
           executableConstruct
            actionStmt
             assignmentStmt
              res
              =
              expression
               level5Expr
                equivOperand
                 orOperand
                  andOperand
                   level4Expr
                    level3Expr
                     level2Expr
                      addOperand
                       multOperand
                        level1Expr
                         primary
                          nameDataRef
                           name
                            is_contiguous
                           complexDataRefTail
                            sectionSubscriptRef
                             (
                             sectionSubscriptList
                              sectionSubscript
                               expression
                                level5Expr
                                 equivOperand
                                  orOperand
                                   andOperand
                                    level4Expr
                                     level3Expr
                                      level2Expr
                                       addOperand
                                        multOperand
                                         level1Expr
                                          primary
                                           nameDataRef
                                            name
                                             msg
                                            complexDataRefTail
                                             %
                                             arr
                             )
         endSubroutineStmt
          end
          subroutine
    endModuleStmt
     end
     module
  programUnit
   mainProgram
    programStmt
     program
     prog
    mainRange
     body
      bodyConstruct
       specificationPartConstruct
        useStmt
         use
         message
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          attrSpecSeq
           ,
           attrSpec
            parameter
          ::
          entityDeclList
           entityDecl
            objectName
             name
              num
            =
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         1
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          entityDeclList
           entityDecl
            objectName
             name
              rslts
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            nameDataRef
                             name
                              num
            )
           ,
           entityDecl
            objectName
             name
              expect
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            nameDataRef
                             name
                              num
            )
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         specificationStmt
          dataStmt
           data
           dataStmtSet
            dse1
             dataStmtObject
              variable
               variableName
                expect
             /
            dse2
             dataStmtValue
              constant
               namedConstantUse
                true
             /
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           type
           (
           typeName
            ident
             msg_type
           )
          ::
          entityDeclList
           entityDecl
            objectName
             name
              my_msg
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          ::
          entityDeclList
           entityDecl
            objectName
             name
              res_test
      bodyConstruct
       executableConstruct
        actionStmt
         callStmt
          call
          subroutineNameUse
           test
          (
          subroutineArgList
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          my_msg
           ,
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          res_test
          )
      bodyConstruct
       executableConstruct
        actionStmt
         assignmentStmt
          rslts
          sFExprListRef
           (
           sFExprList
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         1
           )
          =
          expression
           level5Expr
            equivOperand
             orOperand
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        res_test
      bodyConstruct
       executableConstruct
        actionStmt
         callStmt
          call
          subroutineNameUse
           check
          (
          subroutineArgList
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          rslts
           ,
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          expect
           ,
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          num
          )
      bodyConstruct
       executableConstruct
        actionStmt
         printStmt
          print
          formatIdentifier
           *
          ,
          outputItemList
           expression
            level5Expr
             equivOperand
              orOperand
               andOperand
                level4Expr
                 level3Expr
                  level2Expr
                   addOperand
                    multOperand
                     level1Expr
                      primary
                       "PASSED"
     endProgramStmt
      end
      program
      prog
 <EOF>
