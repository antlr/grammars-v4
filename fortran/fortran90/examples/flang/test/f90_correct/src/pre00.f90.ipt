program
 executableProgram
  programUnit
   mainProgram
    programStmt
     program
     p
    mainRange
     body
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           logical
          ::
          entityDeclList
           entityDecl
            objectName
             name
              res
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            unsignedArithmeticConstant
                             1
            )
            =
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        logicalConstant
                         .false.
           ,
           entityDecl
            objectName
             name
              expect
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            unsignedArithmeticConstant
                             1
            )
            =
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        logicalConstant
                         .true.
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           character
           lengthSelector
            (
            typeParamValue
             expression
              level5Expr
               equivOperand
                orOperand
                 andOperand
                  level4Expr
                   level3Expr
                    level2Expr
                     addOperand
                      multOperand
                       level1Expr
                        primary
                         unsignedArithmeticConstant
                          32
            )
          ::
          entityDeclList
           entityDecl
            objectName
             name
              word1
            =
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        "Foo"
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           character
           lengthSelector
            (
            typeParamValue
             expression
              level5Expr
               equivOperand
                orOperand
                 andOperand
                  level4Expr
                   level3Expr
                    level2Expr
                     addOperand
                      multOperand
                       level1Expr
                        primary
                         unsignedArithmeticConstant
                          32
            )
          ::
          entityDeclList
           entityDecl
            objectName
             name
              word2
            =
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        "Bar"
      bodyConstruct
       executableConstruct
        ifConstruct
         ifThenStmt
          if
          (
          expression
           level5Expr
            equivOperand
             orOperand
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        word1
                relOp
                 ==
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      'Foo'
              .and.
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        word2
                relOp
                 ==
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      'Bar'
          )
          then
         conditionalBody
          executionPartConstruct
           executableConstruct
            actionStmt
             assignmentStmt
              res
              sFExprListRef
               (
               sFExprList
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            unsignedArithmeticConstant
                             1
               )
              =
              expression
               level5Expr
                equivOperand
                 orOperand
                  andOperand
                   level4Expr
                    level3Expr
                     level2Expr
                      addOperand
                       multOperand
                        level1Expr
                         primary
                          logicalConstant
                           .true.
         endIfStmt
          endif
      bodyConstruct
       executableConstruct
        actionStmt
         callStmt
          call
          subroutineNameUse
           check
          (
          subroutineArgList
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          res
           ,
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        nameDataRef
                         name
                          expect
           ,
           subroutineArg
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         1
          )
     endProgramStmt
      end
      program
 <EOF>
