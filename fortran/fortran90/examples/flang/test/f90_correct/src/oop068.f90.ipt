program
 executableProgram
  programUnit
   module
    moduleStmt
     module
     moduleName
      ident
       tmod
    moduleBody
     specificationPartConstruct
      declarationConstruct
       derivedTypeDef
        derivedTypeStmt
         type
         my_type
        derivedTypeBody
         derivedTypeBodyConstruct
          componentDefStmt
           typeSpec
            integer
           ::
           componentDeclList
            componentDecl
             componentName
              x
             (
             componentArraySpec
              explicitShapeSpecList
               explicitShapeSpec
                upperBound
                 expression
                  level5Expr
                   equivOperand
                    orOperand
                     andOperand
                      level4Expr
                       level3Expr
                        level2Expr
                         addOperand
                          multOperand
                           level1Expr
                            primary
                             unsignedArithmeticConstant
                              10
             )
        endTypeStmt
         end
         type
         my_type
    endModuleStmt
     end
     module
  programUnit
   subroutineSubprogram
    subroutine
    subroutineName
     sub
    subroutineRange
     subroutineParList
      (
      subroutinePars
       subroutinePar
        dummyArgName
         x
       ,
       subroutinePar
        dummyArgName
         r
       ,
       subroutinePar
        dummyArgName
         y
      )
     body
      bodyConstruct
       specificationPartConstruct
        useStmt
         use
         tmod
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           type
           (
           typeName
            ident
             my_type
           )
          attrSpecSeq
           ,
           attrSpec
            pointer
          ::
          entityDeclList
           entityDecl
            objectName
             name
              x
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          entityDeclList
           entityDecl
            objectName
             name
              r
            (
            arraySpec
             deferredShapeSpecList
              deferredShapeSpec
               :
            )
      bodyConstruct
       executableConstruct
        actionStmt
         assignmentStmt
          r
          sFExprListRef
           (
           sFExprList
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         1
           )
          =
          expression
           level5Expr
            equivOperand
             orOperand
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        extends_type_of
                       complexDataRefTail
                        sectionSubscriptRef
                         (
                         sectionSubscriptList
                          sectionSubscript
                           expression
                            level5Expr
                             equivOperand
                              orOperand
                               andOperand
                                level4Expr
                                 level3Expr
                                  level2Expr
                                   addOperand
                                    multOperand
                                     level1Expr
                                      primary
                                       nameDataRef
                                        name
                                         x
                          ,
                          sectionSubscript
                           expression
                            level5Expr
                             equivOperand
                              orOperand
                               andOperand
                                level4Expr
                                 level3Expr
                                  level2Expr
                                   addOperand
                                    multOperand
                                     level1Expr
                                      primary
                                       nameDataRef
                                        name
                                         y
                         )
      bodyConstruct
       executableConstruct
        actionStmt
         assignmentStmt
          r
          sFExprListRef
           (
           sFExprList
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         3
           )
          =
          expression
           level5Expr
            equivOperand
             orOperand
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        same_type_as
                       complexDataRefTail
                        sectionSubscriptRef
                         (
                         sectionSubscriptList
                          sectionSubscript
                           expression
                            level5Expr
                             equivOperand
                              orOperand
                               andOperand
                                level4Expr
                                 level3Expr
                                  level2Expr
                                   addOperand
                                    multOperand
                                     level1Expr
                                      primary
                                       nameDataRef
                                        name
                                         x
                          ,
                          sectionSubscript
                           expression
                            level5Expr
                             equivOperand
                              orOperand
                               andOperand
                                level4Expr
                                 level3Expr
                                  level2Expr
                                   addOperand
                                    multOperand
                                     level1Expr
                                      primary
                                       nameDataRef
                                        name
                                         y
                         )
     endSubroutineStmt
      end
      subroutine
  programUnit
   mainProgram
    programStmt
     program
     p
    mainRange
     body
      bodyConstruct
       specificationPartConstruct
        useStmt
         USE
         CHECK_MOD
      bodyConstruct
       specificationPartConstruct
        useStmt
         use
         tmod
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         interfaceBlock
          interfaceStmt
           interface
          interfaceBlockBody
           interfaceBodyPartConstruct
            interfaceBody
             subroutine
             sub
             subroutineInterfaceRange
              subroutineParList
               (
               subroutinePars
                subroutinePar
                 dummyArgName
                  w
                ,
                subroutinePar
                 dummyArgName
                  s
                ,
                subroutinePar
                 dummyArgName
                  z
               )
              subprogramInterfaceBody
               subprogramInterfaceBody
                subprogramInterfaceBody
                 specificationPartConstruct
                  useStmt
                   use
                   tmod
                specificationPartConstruct
                 declarationConstruct
                  typeDeclarationStmt
                   typeSpec
                    type
                    (
                    typeName
                     ident
                      my_type
                    )
                   attrSpecSeq
                    ,
                    attrSpec
                     pointer
                   ::
                   entityDeclList
                    entityDecl
                     objectName
                      name
                       w
               specificationPartConstruct
                declarationConstruct
                 typeDeclarationStmt
                  typeSpec
                   integer
                  entityDeclList
                   entityDecl
                    objectName
                     name
                      s
                    (
                    arraySpec
                     deferredShapeSpecList
                      deferredShapeSpec
                       :
                    )
              endSubroutineStmt
               end
               subroutine
          endInterfaceStmt
           end
           interface
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           type
           (
           typeName
            ident
             my_type
           )
          attrSpecSeq
           attrSpecSeq
            ,
            attrSpec
             target
           ,
           attrSpec
            allocatable
          ::
          entityDeclList
           entityDecl
            objectName
             name
              x
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           type
           (
           typeName
            ident
             my_type
           )
          ::
          entityDeclList
           entityDecl
            objectName
             name
              y
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          entityDeclList
           entityDecl
            objectName
             name
              results
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            unsignedArithmeticConstant
                             3
            )
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           integer
          entityDeclList
           entityDecl
            objectName
             name
              expect
            (
            arraySpec
             explicitShapeSpecList
              explicitShapeSpec
               upperBound
                expression
                 level5Expr
                  equivOperand
                   orOperand
                    andOperand
                     level4Expr
                      level3Expr
                       level2Expr
                        addOperand
                         multOperand
                          level1Expr
                           primary
                            unsignedArithmeticConstant
                             3
            )
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         specificationStmt
          dataStmt
           data
           dataStmtSet
            dse1
             dataStmtObject
              variable
               variableName
                expect
             /
            dse2
             dataStmtValue
              constant
               logicalConstant
                .true.
             ,
             dataStmtValue
              constant
               logicalConstant
                .true.
             ,
             dataStmtValue
              constant
               logicalConstant
                .true.
             /
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         specificationStmt
          dataStmt
           data
           dataStmtSet
            dse1
             dataStmtObject
              variable
               variableName
                results
             /
            dse2
             dataStmtValue
              constant
               logicalConstant
                .false.
             ,
             dataStmtValue
              constant
               logicalConstant
                .false.
             ,
             dataStmtValue
              constant
               logicalConstant
                .false.
             /
      bodyConstruct
       specificationPartConstruct
        declarationConstruct
         typeDeclarationStmt
          typeSpec
           type
           (
           typeName
            ident
             my_type
           )
          attrSpecSeq
           ,
           attrSpec
            pointer
          ::
          entityDeclList
           entityDecl
            objectName
             name
              ptr
      bodyConstruct
       executableConstruct
        actionStmt
         allocateStmt
          allocate
          (
          allocationList
           allocation
            allocateObject
             variableName
              x
          )
      bodyConstruct
       executableConstruct
        actionStmt
         pointerAssignmentStmt
          ptr
          =>
          target
           expression
            level5Expr
             equivOperand
              orOperand
               andOperand
                level4Expr
                 level3Expr
                  level2Expr
                   addOperand
                    multOperand
                     level1Expr
                      primary
                       nameDataRef
                        name
                         x
      bodyConstruct
       executableConstruct
        actionStmt
         assignmentStmt
          results
          sFExprListRef
           (
           sFExprList
            expression
             level5Expr
              equivOperand
               orOperand
                andOperand
                 level4Expr
                  level3Expr
                   level2Expr
                    addOperand
                     multOperand
                      level1Expr
                       primary
                        unsignedArithmeticConstant
                         2
           )
          =
          expression
           level5Expr
            equivOperand
             orOperand
              andOperand
               level4Expr
                level3Expr
                 level2Expr
                  addOperand
                   multOperand
                    level1Expr
                     primary
                      nameDataRef
                       name
                        allocated
                       complexDataRefTail
                        sectionSubscriptRef
                         (
                         sectionSubscriptList
                          sectionSubscript
                           expression
                            level5Expr
                             equivOperand
                              orOperand
                               andOperand
                                level4Expr
                                 level3Expr
                                  level2Expr
                                   addOperand
                                    multOperand
                                     level1Expr
                                      primary
                                       nameDataRef
                                        name
                                         x
                         )
     endProgramStmt
      end
 <EOF>
