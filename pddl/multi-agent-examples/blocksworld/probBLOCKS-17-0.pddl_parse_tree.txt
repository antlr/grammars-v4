(pddlDoc (problem ( define (problemDecl ( problem (name BLOCKS-4-0) )) (problemDomain ( :domain (name blocks) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName a) - (objectType block)) (objectDeclaration (objectName c) - (objectType block)) (objectDeclaration (objectName b) - (objectType block)) (objectDeclaration (objectName e) - (objectType block)) (objectDeclaration (objectName d) - (objectType block)) (objectDeclaration (objectName g) - (objectType block)) (objectDeclaration (objectName f) - (objectType block)) (objectDeclaration (objectName i) - (objectType block)) (objectDeclaration (objectName h) - (objectType block)) (objectDeclaration (objectName k) - (objectType block)) (objectDeclaration (objectName j) - (objectType block)) (objectDeclaration (objectName m) - (objectType block)) (objectDeclaration (objectName l) - (objectType block)) (objectDeclaration (objectName o) - (objectType block)) (objectDeclaration (objectName n) - (objectType block)) (objectDeclaration (objectName q) - (objectType block)) (objectDeclaration (objectName p) - (objectType block)) (objectDeclaration ( :private (objectName a1) (objectList (objectDeclaration (objectName a1) - (objectType agent))) )) (objectDeclaration ( :private (objectName a2) (objectList (objectDeclaration (objectName a2) - (objectType agent))) )) (objectDeclaration ( :private (objectName a3) (objectList (objectDeclaration (objectName a3) - (objectType agent))) )) (objectDeclaration ( :private (objectName a4) (objectList (objectDeclaration (objectName a4) - (objectType agent))) ))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name a1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name a2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name a3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name a4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clear)) (name q) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clear)) (name l) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clear)) (name g) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clear)) (name h) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clear)) (name p) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name m) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name k) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name o) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name n) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name p) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name q) (name a) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name a) (name j) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name j) (name i) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name i) (name b) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name b) (name m) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name l) (name f) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name f) (name e) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name e) (name k) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name g) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name d) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name c) (name o) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on)) (name h) (name n) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name q)) (term (name n)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name n)) (term (name l)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name l)) (term (name o)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name o)) (term (name j)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name j)) (term (name h)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name h)) (term (name c)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name c)) (term (name e)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name e)) (term (name m)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name m)) (term (name p)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name p)) (term (name a)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name a)) (term (name g)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name g)) (term (name b)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name b)) (term (name i)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name i)) (term (name k)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name k)) (term (name f)) ))) (goalDesc (atomicTermFormula ( (predicate (name on)) (term (name f)) (term (name d)) ))) )) )) )) <EOF>)
