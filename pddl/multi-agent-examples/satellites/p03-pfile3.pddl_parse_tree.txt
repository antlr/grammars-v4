(pddlDoc (problem ( define (problemDecl ( problem (name strips-sat-x-1) )) (problemDomain ( :domain (name satellite) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName star4) - (objectType direction)) (objectDeclaration (objectName infrared0) - (objectType mode)) (objectDeclaration (objectName phenomenon6) - (objectType direction)) (objectDeclaration (objectName phenomenon7) - (objectType direction)) (objectDeclaration (objectName phenomenon5) - (objectType direction)) (objectDeclaration (objectName star1) - (objectType direction)) (objectDeclaration (objectName star0) - (objectType direction)) (objectDeclaration (objectName star3) - (objectType direction)) (objectDeclaration (objectName star2) - (objectType direction)) (objectDeclaration (objectName spectrograph2) - (objectType mode)) (objectDeclaration (objectName image1) - (objectType mode)) (objectDeclaration (objectName satellite0) - (objectType satellite)) (objectDeclaration ( :private (objectName satellite0) (objectList (objectDeclaration (objectName instrument2) - (objectType instrument)) (objectDeclaration (objectName instrument0) - (objectType instrument)) (objectDeclaration (objectName instrument1) - (objectType instrument))) )) (objectDeclaration ( :private (objectName satellite1) (objectList (objectDeclaration (objectName instrument3) - (objectType instrument)) (objectDeclaration (objectName satellite1) - (objectType satellite))) ))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name spectrograph2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name infrared0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument0) (name star1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument1) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument1) (name star2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name infrared0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument2) (name star0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument0) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument1) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument2) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite0) (name star4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name spectrograph2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name infrared0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument3) (name star0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument3) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite1) (name star0) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name pointing)) (term (name satellite0)) (term (name phenomenon5)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star3)) (term (name infrared0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star4)) (term (name spectrograph2)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name phenomenon5)) (term (name spectrograph2)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name phenomenon7)) (term (name spectrograph2)) ))) )) )) )) <EOF>)
