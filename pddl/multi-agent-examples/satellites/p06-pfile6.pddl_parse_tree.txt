(pddlDoc (problem ( define (problemDecl ( problem (name strips-sat-x-1) )) (problemDomain ( :domain (name satellite) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName star10) - (objectType direction)) (objectDeclaration (objectName star9) - (objectType direction)) (objectDeclaration (objectName thermograph2) - (objectType mode)) (objectDeclaration (objectName infrared1) - (objectType mode)) (objectDeclaration (objectName infrared3) - (objectType mode)) (objectDeclaration (objectName planet5) - (objectType direction)) (objectDeclaration (objectName planet4) - (objectType direction)) (objectDeclaration (objectName star7) - (objectType direction)) (objectDeclaration (objectName spectrograph0) - (objectType mode)) (objectDeclaration (objectName star1) - (objectType direction)) (objectDeclaration (objectName star0) - (objectType direction)) (objectDeclaration (objectName star2) - (objectType direction)) (objectDeclaration (objectName star6) - (objectType direction)) (objectDeclaration (objectName groundstation3) - (objectType direction)) (objectDeclaration (objectName phenomenon8) - (objectType direction)) (objectDeclaration ( :private (objectName satellite0) (objectList (objectDeclaration (objectName instrument0) - (objectType instrument)) (objectDeclaration (objectName satellite0) - (objectType satellite))) )) (objectDeclaration ( :private (objectName satellite1) (objectList (objectDeclaration (objectName instrument2) - (objectType instrument)) (objectDeclaration (objectName instrument3) - (objectType instrument)) (objectDeclaration (objectName satellite1) - (objectType satellite)) (objectDeclaration (objectName instrument1) - (objectType instrument))) )) (objectDeclaration ( :private (objectName satellite2) (objectList (objectDeclaration (objectName satellite2) - (objectType satellite)) (objectDeclaration (objectName instrument4) - (objectType instrument))) ))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name infrared1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name spectrograph0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument0) (name star1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument0) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite0) (name phenomenon8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument1) (name infrared3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument1) (name star2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name infrared1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name infrared3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name thermograph2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument2) (name star2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name infrared1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name infrared3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name spectrograph0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument3) (name star2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument1) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument2) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument3) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite1) (name star6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument4) (name infrared3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument4) (name star0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument4) (name satellite2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite2) (name star6) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet4)) (term (name thermograph2)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet5)) (term (name spectrograph0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star6)) (term (name thermograph2)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star7)) (term (name infrared3)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name phenomenon8)) (term (name spectrograph0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star9)) (term (name infrared1)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star10)) (term (name infrared3)) ))) )) )) )) <EOF>)
