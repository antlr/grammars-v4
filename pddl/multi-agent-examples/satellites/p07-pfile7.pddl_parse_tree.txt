(pddlDoc (problem ( define (problemDecl ( problem (name strips-sat-x-1) )) (problemDomain ( :domain (name satellite) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName planet11) - (objectType direction)) (objectDeclaration (objectName planet10) - (objectType direction)) (objectDeclaration (objectName phenomenon5) - (objectType direction)) (objectDeclaration (objectName image2) - (objectType mode)) (objectDeclaration (objectName image3) - (objectType mode)) (objectDeclaration (objectName satellite2) - (objectType satellite)) (objectDeclaration (objectName image1) - (objectType mode)) (objectDeclaration (objectName image0) - (objectType mode)) (objectDeclaration (objectName planet9) - (objectType direction)) (objectDeclaration (objectName satellite1) - (objectType satellite)) (objectDeclaration (objectName planet8) - (objectType direction)) (objectDeclaration (objectName star7) - (objectType direction)) (objectDeclaration (objectName star6) - (objectType direction)) (objectDeclaration (objectName star1) - (objectType direction)) (objectDeclaration (objectName star3) - (objectType direction)) (objectDeclaration (objectName groundstation4) - (objectType direction)) (objectDeclaration (objectName groundstation2) - (objectType direction)) (objectDeclaration (objectName groundstation0) - (objectType direction)) (objectDeclaration ( :private (objectName satellite0) (objectList (objectDeclaration (objectName instrument2) - (objectType instrument)) (objectDeclaration (objectName instrument0) - (objectType instrument)) (objectDeclaration (objectName instrument1) - (objectType instrument)) (objectDeclaration (objectName satellite0) - (objectType satellite))) )) (objectDeclaration ( :private (objectName satellite1) (objectList (objectDeclaration (objectName instrument3) - (objectType instrument))) )) (objectDeclaration ( :private (objectName satellite2) (objectList (objectDeclaration (objectName instrument4) - (objectType instrument)) (objectDeclaration (objectName instrument5) - (objectType instrument))) )) (objectDeclaration ( :private (objectName satellite3) (objectList (objectDeclaration (objectName satellite3) - (objectType satellite)) (objectDeclaration (objectName instrument6) - (objectType instrument)) (objectDeclaration (objectName instrument7) - (objectType instrument))) ))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument0) (name image3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument0) (name star1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument1) (name image3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument1) (name groundstation0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument2) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument2) (name groundstation2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument0) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument1) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument2) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite0) (name star6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument3) (name image2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument3) (name groundstation4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument3) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite1) (name groundstation0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument4) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument4) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument4) (name star1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument5) (name image2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument5) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument5) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument5) (name star1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument4) (name satellite2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument5) (name satellite2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite2) (name star6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument6) (name image2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument6) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument6) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument6) (name groundstation4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument7) (name image3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument7) (name image0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name supports)) (name instrument7) (name image1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name calibration_target)) (name instrument7) (name groundstation0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument6) (name satellite3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name on_board)) (name instrument7) (name satellite3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name power_avail)) (name satellite3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name pointing)) (name satellite3) (name groundstation2) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name pointing)) (term (name satellite1)) (term (name star1)) ))) (goalDesc (atomicTermFormula ( (predicate (name pointing)) (term (name satellite2)) (term (name phenomenon5)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name phenomenon5)) (term (name image0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star6)) (term (name image1)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name star7)) (term (name image0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet8)) (term (name image0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet9)) (term (name image3)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet10)) (term (name image0)) ))) (goalDesc (atomicTermFormula ( (predicate (name have_image)) (term (name planet11)) (term (name image2)) ))) )) )) )) <EOF>)
