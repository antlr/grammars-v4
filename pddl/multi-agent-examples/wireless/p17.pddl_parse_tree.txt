(pddlDoc (problem ( define (problemDecl ( problem (name wireless-17) )) (problemDomain ( :domain (name wireless) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName base) - (objectType base)) (objectDeclaration (objectName node1) <missing '-'> (objectType node2)) (objectDeclaration (objectName node3) <missing '-'> (objectType node5)) (objectDeclaration (objectName node6) <missing '-'> (objectType node7)) (objectDeclaration (objectName node8) <missing '-'> (objectType node9)) (objectDeclaration (objectName node11) - (objectType sensor)) (objectDeclaration (objectName msg1-1) <missing '-'> (objectType msg2-1)) (objectDeclaration (objectName msg3-1) <missing '-'> (objectType msg4-1)) (objectDeclaration (objectName msg5-1) <missing '-'> (objectType msg6-1)) (objectDeclaration (objectName msg7-1) <missing '-'> (objectType msg8-1)) (objectDeclaration (objectName msg9-1) <missing '-'> (objectType msg10-1)) (objectDeclaration (objectName msg11-1) <missing '-'> (objectType msg12-1)) (objectDeclaration (objectName msg1-2) <missing '-'> (objectType msg2-2)) (objectDeclaration (objectName msg3-2) <missing '-'> (objectType msg4-2)) (objectDeclaration (objectName msg5-2) <missing '-'> (objectType msg6-2)) (objectDeclaration (objectName msg7-2) <missing '-'> (objectType msg8-2)) (objectDeclaration (objectName msg9-2) <missing '-'> (objectType msg10-2)) (objectDeclaration (objectName msg11-2) msg12-2 - (objectType message)) (objectDeclaration (objectName Very-High) - (objectType level))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Very-High) (name High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Very-High) (name Low) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Very-High) (name Normal) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Very-High) (name Zero) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name High) (name Low) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name High) (name Normal) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name High) (name Zero) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Normal) (name Low) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Normal) (name Zero) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name higher)) (name Low) (name Zero) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name Very-High) (name High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name High) (name Normal) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name Normal) (name Low) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name Low) (name Zero) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node1) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg1-1) (name node1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg1-2) (name node1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node2) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg2-1) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg2-2) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node3) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg3-1) (name node3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg3-2) (name node3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node5) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg5-1) (name node5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg5-2) (name node5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node6) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg6-1) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg6-2) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node7) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg7-1) (name node7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg7-2) (name node7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node8) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg8-1) (name node8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg8-2) (name node8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node9) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg9-1) (name node9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg9-2) (name node9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name energy)) (name node11) (name Very-High) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg11-1) (name node11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name is-message-at)) (name msg11-2) (name node11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node1) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node1) (name node9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node2) (name node1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node2) (name node3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node2) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node2) (name node9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node3) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node3) (name node5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node3) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node5) (name node3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node5) (name base) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node5) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name base) (name node5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name base) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name base) (name node7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name base) (name node11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name base) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node6) (name node9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node7) (name base) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node7) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node7) (name node8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node8) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node8) (name node7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node9) (name node1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node9) (name node2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node9) (name node6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name neighbor)) (name node11) (name base) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node1)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node2)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node3)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node5)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node6)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node7)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node8)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node9)) ))) (goalDesc (atomicTermFormula ( (predicate (name has-data)) (term (name base)) (term (name node11)) ))) )) )) )) <EOF>)
