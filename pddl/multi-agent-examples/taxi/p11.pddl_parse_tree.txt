(pddlDoc (problem ( define (problemDecl ( problem (name taxi-11) )) (problemDomain ( :domain (name taxi) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName t1) t2 - (objectType taxi)) (objectDeclaration (objectName p1) <missing '-'> (objectType p2)) (objectDeclaration (objectName p3) p4 - (objectType passenger)) (objectDeclaration (objectName g1) <missing '-'> (objectType g2)) (objectDeclaration (objectName g3) <missing '-'> (objectType c)) (objectDeclaration (objectName d) <missing '-'> (objectType h1)) (objectDeclaration (objectName h2) h3 - (objectType location))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g1) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g1) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g2) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g2) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g3) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name g3) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name g1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name g2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name g3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name c) (name h3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name g1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name g2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name g3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name d) (name h3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h1) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h1) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h1) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h2) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h2) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h2) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h2) (name h3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h3) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h3) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name directly-connected)) (name h3) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name t1) (name g1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name t2) (name g2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name t1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name t2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name t3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name p1) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name p2) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name p3) (name h3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name p4) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name g3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name h3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name c) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name goal-of)) (name p1) (name d) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name goal-of)) (name p2) (name h1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name goal-of)) (name p3) (name h2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name goal-of)) (name p4) (name h3) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name t1)) (term (name g1)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name t2)) (term (name g2)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name p1)) (term (name d)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name p2)) (term (name h1)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name p3)) (term (name h2)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name p4)) (term (name h3)) ))) )) )) )) <EOF>)
