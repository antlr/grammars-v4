(pddlDoc (problem ( define (problemDecl ( problem (name ZTRAVEL-5-20) )) (problemDomain ( :domain (name zeno-travel) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName person14) - (objectType person)) (objectDeclaration (objectName person15) - (objectType person)) (objectDeclaration (objectName person16) - (objectType person)) (objectDeclaration (objectName person17) - (objectType person)) (objectDeclaration (objectName person10) - (objectType person)) (objectDeclaration (objectName person11) - (objectType person)) (objectDeclaration (objectName person12) - (objectType person)) (objectDeclaration (objectName person13) - (objectType person)) (objectDeclaration (objectName person18) - (objectType person)) (objectDeclaration (objectName person19) - (objectType person)) (objectDeclaration (objectName person2) - (objectType person)) (objectDeclaration (objectName person3) - (objectType person)) (objectDeclaration (objectName city8) - (objectType city)) (objectDeclaration (objectName city9) - (objectType city)) (objectDeclaration (objectName person6) - (objectType person)) (objectDeclaration (objectName person7) - (objectType person)) (objectDeclaration (objectName person4) - (objectType person)) (objectDeclaration (objectName person5) - (objectType person)) (objectDeclaration (objectName city2) - (objectType city)) (objectDeclaration (objectName city3) - (objectType city)) (objectDeclaration (objectName person8) - (objectType person)) (objectDeclaration (objectName person9) - (objectType person)) (objectDeclaration (objectName city6) - (objectType city)) (objectDeclaration (objectName city0) - (objectType city)) (objectDeclaration (objectName city4) - (objectType city)) (objectDeclaration (objectName city5) - (objectType city)) (objectDeclaration (objectName city1) - (objectType city)) (objectDeclaration (objectName fl1) - (objectType flevel)) (objectDeclaration (objectName fl0) - (objectType flevel)) (objectDeclaration (objectName fl3) - (objectType flevel)) (objectDeclaration (objectName fl2) - (objectType flevel)) (objectDeclaration (objectName fl5) - (objectType flevel)) (objectDeclaration (objectName fl4) - (objectType flevel)) (objectDeclaration (objectName fl6) - (objectType flevel)) (objectDeclaration (objectName plane5) - (objectType aircraft)) (objectDeclaration (objectName plane1) - (objectType aircraft)) (objectDeclaration (objectName plane3) - (objectType aircraft)) (objectDeclaration (objectName person20) - (objectType person)) (objectDeclaration (objectName city7) - (objectType city)) (objectDeclaration (objectName city14) - (objectType city)) (objectDeclaration (objectName city15) - (objectType city)) (objectDeclaration (objectName city10) - (objectType city)) (objectDeclaration (objectName city11) - (objectType city)) (objectDeclaration (objectName city12) - (objectType city)) (objectDeclaration (objectName city13) - (objectType city)) (objectDeclaration (objectName person1) - (objectType person)) (objectDeclaration ( :private (objectName plane2) (objectList (objectDeclaration (objectName plane2) - (objectType aircraft))) )) (objectDeclaration ( :private (objectName plane4) (objectList (objectDeclaration (objectName plane4) - (objectType aircraft))) ))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name plane1) (name city14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name fuel-level)) (name plane1) (name fl5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name plane2) (name city11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name fuel-level)) (name plane2) (name fl0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name plane3) (name city4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name fuel-level)) (name plane3) (name fl5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name plane4) (name city11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name fuel-level)) (name plane4) (name fl3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name plane5) (name city15) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name fuel-level)) (name plane5) (name fl2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person1) (name city0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person2) (name city14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person3) (name city12) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person4) (name city7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person5) (name city4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person6) (name city14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person7) (name city4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person8) (name city0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person9) (name city3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person10) (name city7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person11) (name city3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person12) (name city15) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person13) (name city10) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person14) (name city1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person15) (name city7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person16) (name city9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person17) (name city7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person18) (name city5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person19) (name city11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name person20) (name city0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl0) (name fl1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl1) (name fl2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl2) (name fl3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl3) (name fl4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl4) (name fl5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name fl5) (name fl6) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name plane1)) (term (name city14)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name plane3)) (term (name city7)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name plane5)) (term (name city12)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person1)) (term (name city4)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person2)) (term (name city11)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person3)) (term (name city0)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person4)) (term (name city12)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person5)) (term (name city12)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person6)) (term (name city0)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person7)) (term (name city5)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person8)) (term (name city13)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person9)) (term (name city9)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person10)) (term (name city7)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person11)) (term (name city7)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person12)) (term (name city6)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person13)) (term (name city2)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person14)) (term (name city10)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person15)) (term (name city14)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person16)) (term (name city12)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person17)) (term (name city1)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person18)) (term (name city1)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person19)) (term (name city5)) ))) (goalDesc (atomicTermFormula ( (predicate (name at)) (term (name person20)) (term (name city13)) ))) )) )) )) <EOF>)
