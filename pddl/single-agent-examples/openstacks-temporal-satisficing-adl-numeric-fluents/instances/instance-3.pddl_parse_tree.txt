(pddlDoc (problem ( define (problemDecl ( problem (name os-time-p7_1) )) (problemDomain ( :domain (name openstacks-time-numeric-ADL) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName o1) <missing '-'> (objectType o2)) (objectDeclaration (objectName o3) <missing '-'> (objectType o4)) (objectDeclaration (objectName o5) <missing '-'> (objectType o6)) (objectDeclaration (objectName o7) - (objectType order)) (objectDeclaration (objectName p1) <missing '-'> (objectType p2)) (objectDeclaration (objectName p3) <missing '-'> (objectType p4)) (objectDeclaration (objectName p5) <missing '-'> (objectType p6)) (objectDeclaration (objectName p7) - (objectType product))) )) (init ( :init (initEl ( = (fHead ( (functionSymbol (name stacks-in-use)) )) 0 )) (initEl ( = (fHead ( (functionSymbol (name max-stacks)) )) 6 )) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o1) (name p2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o2) (name p2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o3) (name p3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o4) (name p4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o5) (name p5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o5) (name p7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o6) (name p1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name waiting)) (name o7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name includes)) (name o7) (name p6) )))) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p1)) )) 10 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p2)) )) 80 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p3)) )) 60 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p4)) )) 10 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p5)) )) 10 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p6)) )) 80 )) (initEl ( = (fHead ( (functionSymbol (name make-time)) (term (name p7)) )) 60 )) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o1)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o2)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o3)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o4)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o5)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o6)) ))) (goalDesc (atomicTermFormula ( (predicate (name shipped)) (term (name o7)) ))) )) )) (metricSpec ( :metric (optimization minimize) (metricFExp ( total-time) )) )) ) <EOF>)
