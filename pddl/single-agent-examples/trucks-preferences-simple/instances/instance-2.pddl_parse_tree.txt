(pddlDoc (problem ( define (problemDecl ( problem (name truck-2) )) (problemDomain ( :domain (name Trucks-SimplePreferences) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName truck1) - (objectType truck)) (objectDeclaration (objectName package1) - (objectType package)) (objectDeclaration (objectName package2) - (objectType package)) (objectDeclaration (objectName package3) - (objectType package)) (objectDeclaration (objectName package4) - (objectType package)) (objectDeclaration (objectName l1) - (objectType location)) (objectDeclaration (objectName l2) - (objectType location)) (objectDeclaration (objectName l3) - (objectType location)) (objectDeclaration (objectName t0) - (objectType time)) (objectDeclaration (objectName t1) - (objectType time)) (objectDeclaration (objectName t2) - (objectType time)) (objectDeclaration (objectName t3) - (objectType time)) (objectDeclaration (objectName t4) - (objectType time)) (objectDeclaration (objectName t5) - (objectType time)) (objectDeclaration (objectName t6) - (objectType time)) (objectDeclaration (objectName t7) - (objectType time)) (objectDeclaration (objectName t8) - (objectType time)) (objectDeclaration (objectName a1) - (objectType truckarea)) (objectDeclaration (objectName a2) - (objectType truckarea))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name truck1) (name l2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name a1) (name truck1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name free)) (name a2) (name truck1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name closer)) (name a1) (name a2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name package1) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name package2) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name package3) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name at)) (name package4) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l1) (name l2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l1) (name l3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l2) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l2) (name l3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l3) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name connected)) (name l3) (name l2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name time-now)) (name t0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t1) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t2) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t3) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t4) (name t4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t4) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t4) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t4) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t4) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t5) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t5) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t5) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t5) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t6) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t6) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t6) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t7) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t7) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name le)) (name t8) (name t8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t0) (name t1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t1) (name t2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t2) (name t3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t3) (name t4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t4) (name t5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t5) (name t6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t6) (name t7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name t7) (name t8) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name at-destination)) (term (name package1)) (term (name l2)) ))) goalDesc (goalDesc ( preference p1A) (goalDesc ( exists ( (typedVariableList (singleTypeVarList ?t - (r_type (primType (name time))))) ) (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name delivered)) (term (name package1)) (term (name l2)) (term ?t) ))) (goalDesc (atomicTermFormula ( (predicate (name le)) (term ?t) (term (name t2)) ))) )) )) )) <missing ')'>) ( preference p2A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t3 ) ) ) ) ( preference p3A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t4 ) ) ) ) ( preference p4A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t5 ) ) ) ) ( preference p5A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t6 ) ) ) ) ( preference p6A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t7 ) ) ) ) ( preference p7A ( exists ( ?t - time ) ( and ( delivered package1 l2 ?t ) ( le ?t t8 ) ) ) ) ( at-destination package2 l2 ) ( preference p1B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t2 ) ) ) ) ( preference p2B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t3 ) ) ) ) ( preference p3B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t4 ) ) ) ) ( preference p4B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t5 ) ) ) ) ( preference p5B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t6 ) ) ) ) ( preference p6B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t7 ) ) ) ) ( preference p7B ( exists ( ?t - time ) ( and ( delivered package2 l2 ?t ) ( le ?t t8 ) ) ) ) ( at-destination package3 l2 ) ( at-destination package4 l3 ) ( preference p1C ( exists ( ?t - time ) ( and ( delivered package4 l3 ?t ) ( le ?t t4 ) ) ) ) ( preference p2C ( exists ( ?t - time ) ( and ( delivered package4 l3 ?t ) ( le ?t t5 ) ) ) ) ( preference p3C ( exists ( ?t - time ) ( and ( delivered package4 l3 ?t ) ( le ?t t6 ) ) ) ) ( preference p4C ( exists ( ?t - time ) ( and ( delivered package4 l3 ?t ) ( le ?t t7 ) ) ) ) ( preference p5C ( exists ( ?t - time ) ( and ( delivered package4 l3 ?t ) ( le ?t t8 ) ) ) ) ) ) ( :metric minimize ( + ( * 1 ( is-violated p1A ) ) ( * 1 ( is-violated p1B ) ) ( * 1 ( is-violated p1C ) ) ( * 2 ( is-violated p2A ) ) ( * 2 ( is-violated p2B ) ) ( * 2 ( is-violated p2C ) ) ( * 3 ( is-violated p3A ) ) ( * 3 ( is-violated p3B ) ) ( * 3 ( is-violated p3C ) ) ( * 4 ( is-violated p4A ) ) ( * 4 ( is-violated p4B ) ) ( * 4 ( is-violated p4C ) ) ( * 5 ( is-violated p5A ) ) ( * 5 ( is-violated p5B ) ) ( * 5 ( is-violated p5C ) ) ( * 6 ( is-violated p6A ) ) ( * 6 ( is-violated p6B ) ) ( * 7 ( is-violated p7A ) ) ( * 7 ( is-violated p7B ) ) ) ) )) <EOF>)
