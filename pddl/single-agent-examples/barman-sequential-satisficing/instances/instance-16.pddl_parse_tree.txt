(pddlDoc (problem ( define (problemDecl ( problem (name prob) )) (problemDomain ( :domain (name barman) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName shaker1) - (objectType shaker)) (objectDeclaration (objectName left) right - (objectType hand)) (objectDeclaration (objectName shot1) <missing '-'> (objectType shot2)) (objectDeclaration (objectName shot3) <missing '-'> (objectType shot4)) (objectDeclaration (objectName shot5) <missing '-'> (objectType shot6)) (objectDeclaration (objectName shot7) <missing '-'> (objectType shot8)) (objectDeclaration (objectName shot9) <missing '-'> (objectType shot10)) (objectDeclaration (objectName shot11) <missing '-'> (objectType shot12)) (objectDeclaration (objectName shot13) shot14 - (objectType shot)) (objectDeclaration (objectName ingredient1) <missing '-'> (objectType ingredient2)) (objectDeclaration (objectName ingredient3) ingredient4 - (objectType ingredient)) (objectDeclaration (objectName cocktail1) <missing '-'> (objectType cocktail2)) (objectDeclaration (objectName cocktail3) <missing '-'> (objectType cocktail4)) (objectDeclaration (objectName cocktail5) <missing '-'> (objectType cocktail6)) (objectDeclaration (objectName cocktail7) <missing '-'> (objectType cocktail8)) (objectDeclaration (objectName cocktail9) <missing '-'> (objectType cocktail10)) (objectDeclaration (objectName cocktail11) - (objectType cocktail)) (objectDeclaration (objectName dispenser1) <missing '-'> (objectType dispenser2)) (objectDeclaration (objectName dispenser3) dispenser4 - (objectType dispenser)) (objectDeclaration (objectName l0) <missing '-'> (objectType l1)) (objectDeclaration (objectName l2) - (objectType level))) )) (init ( :init (initEl ( = (fHead ( (functionSymbol (name total-cost)) )) 0 )) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shaker1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot10) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot12) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot13) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name ontable)) (name shot14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name dispenses)) (name dispenser1) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name dispenses)) (name dispenser2) (name ingredient2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name dispenses)) (name dispenser3) (name ingredient3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name dispenses)) (name dispenser4) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shaker1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot10) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot12) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot13) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name clean)) (name shot14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shaker1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot8) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot9) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot10) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot11) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot12) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot13) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name empty)) (name shot14) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name left) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name handempty)) (name right) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name shaker-empty-level)) (name shaker1) (name l0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name shaker-level)) (name shaker1) (name l0) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name l0) (name l1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name next)) (name l1) (name l2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail1) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail1) (name ingredient2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail2) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail2) (name ingredient3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail3) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail3) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail4) (name ingredient3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail4) (name ingredient2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail5) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail5) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail6) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail6) (name ingredient3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail7) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail7) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail8) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail8) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail9) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail9) (name ingredient1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail10) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail10) (name ingredient3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part1)) (name cocktail11) (name ingredient4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name cocktail-part2)) (name cocktail11) (name ingredient1) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot1)) (term (name cocktail6)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot2)) (term (name cocktail9)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot3)) (term (name cocktail4)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot4)) (term (name cocktail5)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot5)) (term (name cocktail7)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot6)) (term (name cocktail3)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot7)) (term (name cocktail10)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot8)) (term (name cocktail11)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot9)) (term (name cocktail8)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot10)) (term (name cocktail2)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot11)) (term (name cocktail1)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot12)) (term (name ingredient2)) ))) (goalDesc (atomicTermFormula ( (predicate (name contains)) (term (name shot13)) (term (name ingredient3)) ))) )) )) (metricSpec ( :metric (optimization minimize) (metricFExp ( (functionSymbol (name total-cost)) )) )) )) <EOF>)
