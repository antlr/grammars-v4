(pddlDoc (problem ( define (problemDecl ( problem (name mixed-f8-p4-u0-v0-g0-a0-n0-A0-B0-N0-F0-r0) )) (problemDomain ( :domain (name miconic) )) (objectDecl ( :objects (objectList (objectDeclaration (objectName p0) <missing '-'> (objectType p1)) (objectDeclaration (objectName p2) p3 - (objectType passenger)) (objectDeclaration (objectName f0) <missing '-'> (objectType f1)) (objectDeclaration (objectName f2) <missing '-'> (objectType f3)) (objectDeclaration (objectName f4) <missing '-'> (objectType f5)) (objectDeclaration (objectName f6) f7 - (objectType floor))) )) (init ( :init (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f0) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f1) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f2) (name f3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f2) (name f4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f2) (name f5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f2) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f2) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f3) (name f4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f3) (name f5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f3) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f3) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f4) (name f5) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f4) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f4) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f5) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f5) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name above)) (name f6) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name origin)) (name p0) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name destin)) (name p0) (name f6) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name origin)) (name p1) (name f1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name destin)) (name p1) (name f3) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name origin)) (name p2) (name f1) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name destin)) (name p2) (name f7) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name origin)) (name p3) (name f2) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name destin)) (name p3) (name f4) )))) (initEl (nameLiteral (atomicNameFormula ( (predicate (name lift-at)) (name f0) )))) )) (goal ( :goal (goalDesc ( and (goalDesc (atomicTermFormula ( (predicate (name served)) (term (name p0)) ))) (goalDesc (atomicTermFormula ( (predicate (name served)) (term (name p1)) ))) (goalDesc (atomicTermFormula ( (predicate (name served)) (term (name p2)) ))) (goalDesc (atomicTermFormula ( (predicate (name served)) (term (name p3)) ))) )) )) )) <EOF>)
