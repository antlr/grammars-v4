alloyModule
 paragraph
  sigDecl
   sig
   name
    FSObject
   {
   decl
    name
     parent
    :
    expr
     unOp
      mult
       lone
     expr
      qualName
       name
        Dir
   }
 paragraph
  sigDecl
   sig
   name
    Dir
   sigExt
    extends
    qualName
     name
      FSObject
   {
   decl
    name
     contents
    :
    expr
     unOp
      set
     expr
      qualName
       name
        FSObject
   }
 paragraph
  sigDecl
   sig
   name
    File
   sigExt
    extends
    qualName
     name
      FSObject
   {
   }
 paragraph
  factDecl
   fact
   block
    {
    expr
     quant
      all
     decl
      name
       d
      :
      expr
       qualName
        name
         Dir
     ,
     decl
      name
       o
      :
      expr
       expr
        qualName
         name
          d
       binOp
        .
       expr
        qualName
         name
          contents
     blockOrBar
      |
      expr
       expr
        expr
         qualName
          name
           o
        binOp
         .
        expr
         qualName
          name
           parent
       compareOp
        =
       expr
        qualName
         name
          d
    }
 paragraph
  factDecl
   fact
   block
    {
    expr
     expr
      expr
       qualName
        name
         File
      binOp
       +
      expr
       qualName
        name
         Dir
     compareOp
      =
     expr
      qualName
       name
        FSObject
    }
 paragraph
  sigDecl
   mult
    one
   sig
   name
    Root
   sigExt
    extends
    qualName
     name
      Dir
   {
   }
   block
    {
    expr
     unOp
      no
     expr
      qualName
       name
        parent
    }
 paragraph
  factDecl
   fact
   block
    {
    expr
     expr
      qualName
       name
        FSObject
     compareOp
      in
     expr
      expr
       qualName
        name
         Root
      binOp
       .
      expr
       unOp
        *
       expr
        qualName
         name
          contents
    }
 paragraph
  assertDecl
   assert
   name
    acyclic
   block
    {
    expr
     quant
      no
     decl
      name
       d
      :
      expr
       qualName
        name
         Dir
     blockOrBar
      |
      expr
       expr
        qualName
         name
          d
       compareOp
        in
       expr
        expr
         qualName
          name
           d
        binOp
         .
        expr
         unOp
          ^
         expr
          qualName
           name
            contents
    }
 paragraph
  cmdDecl
   check
   qualName
    name
     acyclic
   scope
    for
    number
     5
 paragraph
  assertDecl
   assert
   name
    oneRoot
   block
    {
    expr
     quant
      mult
       one
     decl
      name
       d
      :
      expr
       qualName
        name
         Dir
     blockOrBar
      |
      expr
       expr
        unOp
         no
        expr
         qualName
          name
           d
       binOp
        .
       expr
        qualName
         name
          parent
    }
 <EOF>
