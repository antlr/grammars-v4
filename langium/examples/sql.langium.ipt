file_
 start_
  grammar
  Sql
  abstractRule
   parserRule_
    entry
    ruleNameAndParams
     SqlFile
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            statements
           +=
           assignableTerminal
            ruleCall
             Statement
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     Statement
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   ruleCall
                    DefinitionRule
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   ruleCall
                    RootLevelSelectStatement
            )
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ';'
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     DefinitionRule
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            CatalogDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            SchemaDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            TableDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FunctionDefinition
    ;
  type
   type
   Definition
   =
   typeDefinition
    unionType
     arrayType
      referenceType
       simpleType
        CatalogDefinition
     |
     arrayType
      referenceType
       simpleType
        SchemaDefinition
     |
     arrayType
      referenceType
       simpleType
        TableLike
     |
     arrayType
      referenceType
       simpleType
        FunctionDefinition
   ;
  type
   type
   ReferenceDefinition
   =
   typeDefinition
    unionType
     arrayType
      referenceType
       simpleType
        SchemaDefinition
     |
     arrayType
      referenceType
       simpleType
        TableDefinition
     |
     arrayType
      referenceType
       simpleType
        FunctionDefinition
   ;
  abstractRule
   parserRule_
    ruleNameAndParams
     CatalogDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CREATE'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    catalogSyntax
                   ?=
                   assignableTerminal
                    keyword
                     'CATALOG'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'DATABASE'
            )
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SchemaDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CREATE'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'SCHEMA'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ReferenceNamed
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     TableDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CREATE'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'TABLE'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ReferenceNamed
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    columns
                   +=
                   assignableTerminal
                    ruleCall
                     TableContentDefinition
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          abstractTerminal
                           keyword
                            ','
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            columns
                           +=
                           assignableTerminal
                            ruleCall
                             TableContentDefinition
                    )
                  *
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    trailingComma
                   ?=
                   assignableTerminal
                    keyword
                     ','
                  ?
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  abstractRule
   parserRule_
    fragment
    ruleNameAndParams
     ReferenceNamed
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            reference
           =
           assignableTerminal
            ruleCall
             GlobalReference
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     GlobalReference
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            element
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               Definition
             :
             crossReferenceableTerminal
              ruleCall
               Identifier
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   GlobalReference
                  .
                  featureName
                   previous
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    '.'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    element
                   =
                   assignableTerminal
                    crossReference
                     [
                     crossReferenceableTerminal
                      ruleCall
                       Definition
                     :
                     crossReferenceableTerminal
                      ruleCall
                       Identifier
                     ]
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     TableContentDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ColumnDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            PrimaryKeyDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            IndexDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            KeyDefinition
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ConstraintDefinition
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     ColumnDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            dataType
           =
           assignableTerminal
            ruleCall
             Type
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    negated
                   ?=
                   assignableTerminal
                    keyword
                     'NOT'
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    null
                   ?=
                   assignableTerminal
                    keyword
                     'NULL'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     PrimaryKeyDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'PRIMARY'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'KEY'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            primaryKeys
           +=
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnDefinition
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    primaryKeys
                   +=
                   assignableTerminal
                    crossReference
                     [
                     crossReferenceableTerminal
                      ruleCall
                       ColumnDefinition
                     ]
            )
          *
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     IndexDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'INDEX'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            indexes
           +=
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnDefinition
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    indexes
                   +=
                   assignableTerminal
                    crossReference
                     [
                     crossReferenceableTerminal
                      ruleCall
                       ColumnDefinition
                     ]
            )
          *
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     KeyDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            unique
           ?=
           assignableTerminal
            keyword
             'UNIQUE'
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'KEY'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            keys
           +=
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnDefinition
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    keys
                   +=
                   assignableTerminal
                    crossReference
                     [
                     crossReferenceableTerminal
                      ruleCall
                       ColumnDefinition
                     ]
            )
          *
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     ConstraintDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CONSTRAINT'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'FOREIGN'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'KEY'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            from
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnDefinition
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'REFERENCES'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            table
           =
           assignableTerminal
            ruleCall
             GlobalReference
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            to
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnDefinition
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ON'
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'DELETE'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    cascadeDeletion
                   ?=
                   assignableTerminal
                    keyword
                     'CASCADE'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FunctionDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CREATE'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'OR'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    replace
                   ?=
                   assignableTerminal
                    keyword
                     'REPLACE'
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'FUNCTION'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ReferenceNamed
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    params
                   +=
                   assignableTerminal
                    ruleCall
                     FormalParameterDefinition
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          abstractTerminal
                           keyword
                            ','
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            params
                           +=
                           assignableTerminal
                            ruleCall
                             FormalParameterDefinition
                    )
                  *
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'AS'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            returnType
           =
           assignableTerminal
            ruleCall
             Type
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FormalParameterDefinition
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            dataType
           =
           assignableTerminal
            ruleCall
             Type
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     RootLevelSelectStatement
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            with
           =
           assignableTerminal
            ruleCall
             WithClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            select
           =
           assignableTerminal
            ruleCall
             SelectStatementRootExpression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectStatementRootExpression
    inferredType
     infers
     SelectTableExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            SelectStatementUnionExpression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectStatementUnionExpression
    inferredType
     infers
     SelectTableExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            SelectStatementIntersectExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryTableExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    ruleCall
                     UnionSetOperator
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     SelectStatementIntersectExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectStatementIntersectExpression
    inferredType
     infers
     SelectTableExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            SelectStatementPrimaryExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryTableExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    ruleCall
                     IntersectSetOperator
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     SelectStatementPrimaryExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectStatementPrimaryExpression
    inferredType
     infers
     SelectTableExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           SimpleSelectTableExpression
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            select
           =
           assignableTerminal
            ruleCall
             SimpleSelectStatement
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           ParenthesesSelectTableExpression
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             SelectStatementRootExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     UnionSetOperator
    inferredType
     infers
     SetOperator
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            operator
           =
           assignableTerminal
            parenthesizedAssignableElement
             (
             assignableAlternatives
              assignableTerminal
               keyword
                'UNION'
              |
              assignableTerminal
               keyword
                'EXCEPT'
              |
              assignableTerminal
               keyword
                'MINUS'
             )
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ALL'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    distinct
                   ?=
                   assignableTerminal
                    keyword
                     'DISTINCT'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     IntersectSetOperator
    inferredType
     infers
     SetOperator
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            operator
           =
           assignableTerminal
            keyword
             'INTERSECT'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ALL'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    distinct
                   ?=
                   assignableTerminal
                    keyword
                     'DISTINCT'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SimpleSelectStatement
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'SELECT'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            top
           =
           assignableTerminal
            ruleCall
             TopClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            select
           =
           assignableTerminal
            ruleCall
             SelectElements
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            from
           =
           assignableTerminal
            ruleCall
             FromClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            where
           =
           assignableTerminal
            ruleCall
             WhereClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            groupBy
           =
           assignableTerminal
            ruleCall
             GroupByClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            having
           =
           assignableTerminal
            ruleCall
             HavingClause
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            orderBy
           =
           assignableTerminal
            ruleCall
             OrderByClause
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    limit
                   =
                   assignableTerminal
                    ruleCall
                     LimitClause
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    fetchFirst
                   =
                   assignableTerminal
                    ruleCall
                     FetchFirstClause
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     TopClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'TOP'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             NUMBER
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            percent
           ?=
           assignableTerminal
            keyword
             'PERCENT'
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     LimitClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'LIMIT'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    offset
                   =
                   assignableTerminal
                    ruleCall
                     NUMBER
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    limit
                   =
                   assignableTerminal
                    ruleCall
                     NUMBER
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    limit
                   =
                   assignableTerminal
                    ruleCall
                     NUMBER
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          abstractTerminal
                           keyword
                            'OFFSET'
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            offset
                           =
                           assignableTerminal
                            ruleCall
                             NUMBER
                    )
                  ?
            )
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FetchFirstClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'OFFSET'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    offset
                   =
                   assignableTerminal
                    ruleCall
                     NUMBER
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    offsetRows
                   ?=
                   assignableTerminal
                    keyword
                     'ROWS'
                  ?
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'FETCH'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    first
                   ?=
                   assignableTerminal
                    keyword
                     'FIRST'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'NEXT'
            )
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            limit
           =
           assignableTerminal
            ruleCall
             NUMBER
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'ROWS'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    only
                   ?=
                   assignableTerminal
                    keyword
                     'ONLY'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'WITH'
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'TIES'
            )
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     WithClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'WITH'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'RECURSIVE'
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            ctes
           +=
           assignableTerminal
            ruleCall
             CommonTableExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    ctes
                   +=
                   assignableTerminal
                    ruleCall
                     CommonTableExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     CteColumnName
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     CommonTableExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    '('
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    columnNames
                   +=
                   assignableTerminal
                    ruleCall
                     CteColumnName
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          abstractTerminal
                           keyword
                            ','
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            columnNames
                           +=
                           assignableTerminal
                            ruleCall
                             CteColumnName
                    )
                  *
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ')'
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'AS'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            statement
           =
           assignableTerminal
            ruleCall
             SelectStatementRootExpression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     WhereClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'WHERE'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            rowCondition
           =
           assignableTerminal
            ruleCall
             Expression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     HavingClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'HAVING'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            groupCondition
           =
           assignableTerminal
            ruleCall
             Expression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     GroupByClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'GROUP'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'BY'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            specs
           +=
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    specs
                   +=
                   assignableTerminal
                    ruleCall
                     Expression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     OrderByClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'ORDER'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'BY'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            specs
           +=
           assignableTerminal
            ruleCall
             OrderBySpec
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    specs
                   +=
                   assignableTerminal
                    ruleCall
                     OrderBySpec
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     OrderBySpec
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            scalar
           =
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ASC'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'DESC'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectElements
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ALL'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    distinct
                   ?=
                   assignableTerminal
                    keyword
                     'DISTINCT'
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            elements
           +=
           assignableTerminal
            ruleCall
             SelectElement
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    elements
                   +=
                   assignableTerminal
                    ruleCall
                     SelectElement
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SelectElement
    inferredType
     infers
     SelectElement
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           AllStar
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '*'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           AllTable
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            variableName
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               TableVariableSource
             :
             crossReferenceableTerminal
              ruleCall
               Identifier
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '.'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '*'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           ExpressionQuery
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            expr
           =
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'AS'
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    name
                   =
                   assignableTerminal
                    ruleCall
                     Identifier
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FromClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'FROM'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            sources
           =
           assignableTerminal
            ruleCall
             TableSources
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     TableSources
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            list
           +=
           assignableTerminal
            ruleCall
             TableSource
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    list
                   +=
                   assignableTerminal
                    ruleCall
                     TableSource
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     TableSource
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            item
           =
           assignableTerminal
            ruleCall
             SourceItem
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            joins
           +=
           assignableTerminal
            ruleCall
             JoinPart
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     JoinPart
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    leftJoin
                   ?=
                   assignableTerminal
                    keyword
                     'LEFT'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    rightJoin
                   ?=
                   assignableTerminal
                    keyword
                     'RIGHT'
            )
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'JOIN'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            nextItem
           =
           assignableTerminal
            ruleCall
             SourceItem
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'ON'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    joinOn
                   =
                   assignableTerminal
                    ruleCall
                     Expression
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'USING'
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    '('
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    usingOn
                   =
                   assignableTerminal
                    ruleCall
                     Expression
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ')'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     SourceItem
    inferredType
     infers
     SourceItem
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           TableSourceItem
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            table
           =
           assignableTerminal
            ruleCall
             GlobalReference
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'AS'
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    name
                   =
                   assignableTerminal
                    ruleCall
                     Identifier
            )
          ?
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           SubQuerySourceItem
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            subQuery
           =
           assignableTerminal
            ruleCall
             SelectStatementRootExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'AS'
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    name
                   =
                   assignableTerminal
                    ruleCall
                     Identifier
            )
          ?
    ;
  type
   type
   TableVariableSource
   =
   typeDefinition
    unionType
     arrayType
      referenceType
       simpleType
        TableSourceItem
     |
     arrayType
      referenceType
       simpleType
        SubQuerySourceItem
   ;
  type
   type
   TableLike
   =
   typeDefinition
    unionType
     arrayType
      referenceType
       simpleType
        TableDefinition
     |
     arrayType
      referenceType
       simpleType
        CommonTableExpression
   ;
  abstractRule
   parserRule_
    ruleNameAndParams
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ConcatExpression
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     ConcatExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            OrExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    keyword
                     '||'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     OrExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     OrExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            AndExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    keyword
                     'OR'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     AndExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     AndExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            EqExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    keyword
                     'AND'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     EqExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     EqExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            RelationalExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       keyword
                        '='
                      |
                      assignableTerminal
                       keyword
                        '<>'
                     )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     RelationalExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     RelationalExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            NegatableExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       keyword
                        '<='
                      |
                      assignableTerminal
                       keyword
                        '>='
                      |
                      assignableTerminal
                       keyword
                        '<'
                      |
                      assignableTerminal
                       keyword
                        '>'
                     )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     NegatableExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     NegatableExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            AdditiveExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   NegatableExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            operator
                           =
                           assignableTerminal
                            parenthesizedAssignableElement
                             (
                             assignableAlternatives
                              assignableTerminal
                               keyword
                                'IS'
                             )
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            negated
                           ?=
                           assignableTerminal
                            keyword
                             'NOT'
                          ?
                     |
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            negated
                           ?=
                           assignableTerminal
                            keyword
                             'NOT'
                          ?
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            operator
                           =
                           assignableTerminal
                            parenthesizedAssignableElement
                             (
                             assignableAlternatives
                              assignableTerminal
                               keyword
                                'IN'
                              |
                              assignableTerminal
                               keyword
                                'LIKE'
                             )
                    )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     AdditiveExpression
            )
          *
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            AdditiveExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BetweenExpression
                  .
                  featureName
                   subExpr
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    negated
                   ?=
                   assignableTerminal
                    keyword
                     'NOT'
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'BETWEEN'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    left
                   =
                   assignableTerminal
                    ruleCall
                     AdditiveExpression
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'AND'
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     AdditiveExpression
            )
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     AdditiveExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            MultiplicativeExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       keyword
                        '+'
                      |
                      assignableTerminal
                       keyword
                        '-'
                     )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     MultiplicativeExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     MultiplicativeExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            JsonExtractExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       keyword
                        '*'
                      |
                      assignableTerminal
                       keyword
                        '/'
                      |
                      assignableTerminal
                       keyword
                        '%'
                     )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    ruleCall
                     JsonExtractExpression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     JsonExtractExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            PrimaryExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 action
                  {
                  inferredType
                   infer
                   BinaryExpression
                  .
                  featureName
                   left
                  =
                  current
                  }
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    operator
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       keyword
                        '::$'
                      |
                      assignableTerminal
                       keyword
                        '::%'
                      |
                      assignableTerminal
                       keyword
                        '::'
                     )
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    right
                   =
                   assignableTerminal
                    parenthesizedAssignableElement
                     (
                     assignableAlternatives
                      assignableTerminal
                       ruleCall
                        StringLiteral
                      |
                      assignableTerminal
                       ruleCall
                        NumberLiteral
                      |
                      assignableTerminal
                       ruleCall
                        IdentifierAsStringLiteral
                     )
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     IdentifierAsStringLiteral
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           IdentifierAsStringLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             Identifier
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     PrimaryExpression
    inferredType
     infers
     Expression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           StringLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            StringLiteral
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           TableRelatedColumnExpression
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            variableName
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               SourceItem
             :
             crossReferenceableTerminal
              ruleCall
               Identifier
             ]
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '.'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            columnName
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnNameSource
             :
             crossReferenceableTerminal
              ruleCall
               Identifier
             ]
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           NumberLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            NumberLiteral
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           BooleanLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            BooleanLiteral
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           CastExpression
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            CastExpression
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           UnaryExpression
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            operator
           =
           assignableTerminal
            parenthesizedAssignableElement
             (
             assignableAlternatives
              assignableTerminal
               keyword
                'NOT'
              |
              assignableTerminal
               keyword
                '-'
              |
              assignableTerminal
               keyword
                '+'
             )
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             PrimaryExpression
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           ParenthesisOrListExpression
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            items
           +=
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    items
                   +=
                   assignableTerminal
                    ruleCall
                     Expression
            )
          *
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           SubQueryExpression
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            subQuery
           =
           assignableTerminal
            ruleCall
             SelectStatementRootExpression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           FunctionCall
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            function
           =
           assignableTerminal
            ruleCall
             GlobalReference
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            params
           =
           assignableTerminal
            ruleCall
             SelectElements
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            overClause
           =
           assignableTerminal
            ruleCall
             OverClause
          ?
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           ColumnNameExpression
          }
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            columnName
           =
           assignableTerminal
            crossReference
             [
             crossReferenceableTerminal
              ruleCall
               ColumnNameSource
             :
             crossReferenceableTerminal
              ruleCall
               Identifier
             ]
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           NullLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'NULL'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         action
          {
          inferredType
           infer
           HexStringLiteral
          }
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            HexStringLiteral
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     OverClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'OVER'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    '('
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    spec
                   =
                   assignableTerminal
                    ruleCall
                     WindowSpec
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ')'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    windowName
                   =
                   assignableTerminal
                    crossReference
                     [
                     crossReferenceableTerminal
                      ruleCall
                       WindowSpec
                     :
                     crossReferenceableTerminal
                      ruleCall
                       Identifier
                     ]
            )
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     WindowSpec
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            name
           =
           assignableTerminal
            ruleCall
             Identifier
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            PartitionClause
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            OrderByClause
          ?
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FrameClause
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FrameClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            units
           =
           assignableTerminal
            ruleCall
             FrameUnits
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            extent
           =
           assignableTerminal
            ruleCall
             FrameExtent
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FrameUnits
    returns
    primitiveType
     string
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'ROWS'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'RANGE'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FrameExtent
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FrameRange
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FrameBetween
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FrameBetween
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'BETWEEN'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FrameRange
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'AND'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            FrameRange
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     FrameRange
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CURRENT'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'ROW'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'UNBOUNDED'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'PRECEDING'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'FOLLOWING'
            )
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'PRECEDING'
             |
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    'FOLLOWING'
            )
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     PartitionClause
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'PARTITION'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'BY'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            exprs
           +=
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ','
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    exprs
                   +=
                   assignableTerminal
                    ruleCall
                     Expression
            )
          *
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     CastExpression
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'CAST'
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            '('
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            expr
           =
           assignableTerminal
            ruleCall
             Expression
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'AS'
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            type
           =
           assignableTerminal
            ruleCall
             Type
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            ')'
    ;
  type
   type
   ColumnNameSource
   =
   typeDefinition
    unionType
     arrayType
      referenceType
       simpleType
        ColumnDefinition
     |
     arrayType
      referenceType
       simpleType
        ExpressionQuery
   ;
  abstractRule
   parserRule_
    ruleNameAndParams
     Identifier
    returns
    primitiveType
     string
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            ID
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            QUOTED_ID
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            TICK_STRING
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            BRACKET_STRING
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     NumberLiteral
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             NUMBER
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     StringLiteral
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             STRING
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     BooleanLiteral
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           ?=
           assignableTerminal
            keyword
             'TRUE'
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           keyword
            'FALSE'
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     HexStringLiteral
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            value
           =
           assignableTerminal
            ruleCall
             HEX_STRING
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     Type
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            DataType
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     DataType
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          assignment
           featureName
            dataTypeNames
           +=
           assignableTerminal
            ruleCall
             ID
          +
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           parenthesizedElement
            (
            alternatives
             conditionalBranch
              unorderedGroup
               group
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    '('
                abstractToken
                 abstractTokenWithCardinality
                  assignment
                   featureName
                    arguments
                   +=
                   assignableTerminal
                    ruleCall
                     DataTypeArgument
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   parenthesizedElement
                    (
                    alternatives
                     conditionalBranch
                      unorderedGroup
                       group
                        abstractToken
                         abstractTokenWithCardinality
                          abstractTerminal
                           keyword
                            ','
                        abstractToken
                         abstractTokenWithCardinality
                          assignment
                           featureName
                            arguments
                           +=
                           assignableTerminal
                            ruleCall
                             DataTypeArgument
                    )
                  ?
                abstractToken
                 abstractTokenWithCardinality
                  abstractTerminal
                   keyword
                    ')'
            )
          ?
    ;
  abstractRule
   parserRule_
    ruleNameAndParams
     DataTypeArgument
    :
    alternatives
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            NumberLiteral
     |
     conditionalBranch
      unorderedGroup
       group
        abstractToken
         abstractTokenWithCardinality
          abstractTerminal
           ruleCall
            StringLiteral
    ;
  abstractRule
   terminalRule
    hidden
    terminal
    WS
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\s+/
    ;
  abstractRule
   terminalRule
    terminal
    HEX_STRING
    returns
    returnType
     primitiveType
      string
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /x\'[A-Fa-f0-9]+\'/
    ;
  abstractRule
   terminalRule
    terminal
    STRING
    returns
    returnType
     primitiveType
      string
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /'(\\.|[^'\\])*'/
    ;
  abstractRule
   terminalRule
    terminal
    TICK_STRING
    returns
    returnType
     primitiveType
      string
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\`(\\.|\\\\|[^`\\])*\`/
    ;
  abstractRule
   terminalRule
    terminal
    BRACKET_STRING
    returns
    returnType
     primitiveType
      string
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\[(\\.|\\\\|[^[\\])*\]/
    ;
  abstractRule
   terminalRule
    terminal
    QUOTED_ID
    returns
    returnType
     primitiveType
      string
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\"(\\.|\\\\|[^"\\])*\"/
    ;
  abstractRule
   terminalRule
    terminal
    ID
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /[_a-zA-Z][\w_]*/
    ;
  abstractRule
   terminalRule
    terminal
    NUMBER
    returns
    returnType
     primitiveType
      number
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\d+((\.\d+)?([eE][\-+]?\d+)?)?/
    ;
  abstractRule
   terminalRule
    hidden
    terminal
    ML_COMMENT
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\/\*[\s\S]*?\*\//
    ;
  abstractRule
   terminalRule
    hidden
    terminal
    TICK_COMMENT
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\-\-[^\n\r]*/
    ;
  abstractRule
   terminalRule
    hidden
    terminal
    SL_COMMENT
    :
    terminalAlternatives
     terminalGroup
      terminalToken
       terminalTokenElement
        regexToken
         /\/\/[^\n\r]*/
    ;
 <EOF>
