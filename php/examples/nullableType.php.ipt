htmlDocument
 phpBlock
  topStatement
   functionDeclaration
    function
    identifier
     testReturn
    (
    formalParameterList
    )
    :
    ?
    typeHint
     qualifiedStaticTypeRef
      qualifiedNamespaceName
       namespaceNameList
        identifier
         string
    blockStatement
     {
     innerStatementList
      innerStatement
       statement
        returnStatement
         return
         expression
          string
           'elePHPant'
         ;
     }
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             var_dump
         actualArguments
          arguments
           (
           actualArgument
            expression
             chain
              chainOrigin
               functionCall
                functionCallName
                 qualifiedNamespaceName
                  namespaceNameList
                   identifier
                    testReturn
                actualArguments
                 arguments
                  (
                  )
           )
     ;
  topStatement
   functionDeclaration
    function
    identifier
     testReturn
    (
    formalParameterList
    )
    :
    ?
    typeHint
     qualifiedStaticTypeRef
      qualifiedNamespaceName
       namespaceNameList
        identifier
         string
    blockStatement
     {
     innerStatementList
      innerStatement
       statement
        returnStatement
         return
         expression
          constant
           null
         ;
     }
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             var_dump
         actualArguments
          arguments
           (
           actualArgument
            expression
             chain
              chainOrigin
               functionCall
                functionCallName
                 qualifiedNamespaceName
                  namespaceNameList
                   identifier
                    testReturn
                actualArguments
                 arguments
                  (
                  )
           )
     ;
  topStatement
   functionDeclaration
    function
    identifier
     test
    (
    formalParameterList
     formalParameter
      ?
      typeHint
       qualifiedStaticTypeRef
        qualifiedNamespaceName
         namespaceNameList
          identifier
           string
      variableInitializer
       $name
    )
    blockStatement
     {
     innerStatementList
      innerStatement
       statement
        expressionStatement
         expression
          chain
           chainOrigin
            functionCall
             functionCallName
              qualifiedNamespaceName
               namespaceNameList
                identifier
                 var_dump
             actualArguments
              arguments
               (
               actualArgument
                expression
                 chain
                  chainOrigin
                   chainBase
                    keyedVariable
                     $name
               )
         ;
     }
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             test
         actualArguments
          arguments
           (
           actualArgument
            expression
             string
              'elePHPant'
           )
     ;
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             test
         actualArguments
          arguments
           (
           actualArgument
            expression
             constant
              null
           )
     ;
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             test
         actualArguments
          arguments
           (
           )
     ;
 <EOF>
