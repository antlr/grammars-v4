htmlDocument
 phpBlock
  topStatement
   statement
    expressionStatement
     expression
      assignable
       chain
        chainOrigin
         chainBase
          keyedVariable
           $a
      assignmentOperator
       =
      expression
       constant
        literalConstant
         numericConstant
          42
     ;
  topStatement
   statement
    expressionStatement
     expression
      assignable
       chain
        chainOrigin
         chainBase
          keyedVariable
           $b
      assignmentOperator
       =
      expression
       string
        "
        interpolatedStringPart
         ð ®·
        "
     ;
  topStatement
   classDeclaration
    classEntryType
     class
    identifier
     C
    {
    classStatement
     propertyModifiers
      memberModifiers
       memberModifier
        public
     variableInitializer
      $fn
      =
      constantInitializer
       constant
        literalConstant
         numericConstant
          0
     ;
    }
  topStatement
   statement
    expressionStatement
     expression
      assignable
       chain
        chainOrigin
         chainBase
          keyedVariable
           $c
      assignmentOperator
       =
      expression
       newExpr
        new
        typeRef
         qualifiedNamespaceName
          namespaceNameList
           identifier
            C
        arguments
         (
         )
     ;
  topStatement
   statement
    expressionStatement
     expression
      assignable
       chain
        chainOrigin
         chainBase
          keyedVariable
           $c
        memberAccess
         ->
         keyedFieldName
          keyedSimpleFieldName
           identifier
            fn
      assignmentOperator
       =
      expression
       constant
        literalConstant
         numericConstant
          1
     ;
  topStatement
   classDeclaration
    classEntryType
     class
    identifier
     CM
    {
    classStatement
     const
     identifierInitializer
      identifier
       match
      =
      constantInitializer
       constant
        literalConstant
         numericConstant
          1
     ;
    }
  topStatement
   enumDeclaration
    enum
    identifier
     EM
    {
    enumItem
     case
     identifier
      match
     ;
    }
 <EOF>
