htmlDocument
 phpBlock
  topStatement
   classDeclaration
    interface
    identifier
     Logger
    {
    classStatement
     memberModifiers
      memberModifier
       public
     function
     identifier
      log
     (
     formalParameterList
      formalParameter
       typeHint
        qualifiedStaticTypeRef
         qualifiedNamespaceName
          namespaceNameList
           identifier
            string
       variableInitializer
        $msg
     )
     methodBody
      ;
    }
  topStatement
   classDeclaration
    classEntryType
     class
    identifier
     Application
    {
    classStatement
     propertyModifiers
      memberModifiers
       memberModifier
        private
     variableInitializer
      $logger
     ;
    classStatement
     memberModifiers
      memberModifier
       public
     function
     identifier
      getLogger
     (
     formalParameterList
     )
     baseCtorCall
      :
      identifier
       Logger
     methodBody
      blockStatement
       {
       innerStatementList
        innerStatement
         statement
          returnStatement
           return
           expression
            chain
             chainOrigin
              chainBase
               keyedVariable
                $this
             memberAccess
              ->
              keyedFieldName
               keyedSimpleFieldName
                identifier
                 logger
           ;
       }
    classStatement
     memberModifiers
      memberModifier
       public
     function
     identifier
      setLogger
     (
     formalParameterList
      formalParameter
       typeHint
        qualifiedStaticTypeRef
         qualifiedNamespaceName
          namespaceNameList
           identifier
            Logger
       variableInitializer
        $logger
     )
     methodBody
      blockStatement
       {
       innerStatementList
        innerStatement
         statement
          expressionStatement
           expression
            assignable
             chain
              chainOrigin
               chainBase
                keyedVariable
                 $this
              memberAccess
               ->
               keyedFieldName
                keyedSimpleFieldName
                 identifier
                  logger
            assignmentOperator
             =
            expression
             chain
              chainOrigin
               chainBase
                keyedVariable
                 $logger
           ;
       }
    }
  topStatement
   statement
    expressionStatement
     expression
      assignable
       chain
        chainOrigin
         chainBase
          keyedVariable
           $app
      assignmentOperator
       =
      expression
       newExpr
        new
        typeRef
         qualifiedNamespaceName
          namespaceNameList
           identifier
            Application
     ;
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        chainBase
         keyedVariable
          $app
       memberAccess
        ->
        keyedFieldName
         keyedSimpleFieldName
          identifier
           setLogger
        actualArguments
         arguments
          (
          actualArgument
           expression
            newExpr
             new
             typeRef
              anonymousClass
               classEntryType
                class
               implements
               interfaceList
                qualifiedStaticTypeRef
                 qualifiedNamespaceName
                  namespaceNameList
                   identifier
                    Logger
               {
               classStatement
                memberModifiers
                 memberModifier
                  public
                function
                identifier
                 log
                (
                formalParameterList
                 formalParameter
                  typeHint
                   qualifiedStaticTypeRef
                    qualifiedNamespaceName
                     namespaceNameList
                      identifier
                       string
                  variableInitializer
                   $msg
                )
                methodBody
                 blockStatement
                  {
                  innerStatementList
                   innerStatement
                    statement
                     echoStatement
                      echo
                      expressionList
                       expression
                        chain
                         chainOrigin
                          chainBase
                           keyedVariable
                            $msg
                      ;
                  }
               }
          )
     ;
  topStatement
   statement
    expressionStatement
     expression
      chain
       chainOrigin
        functionCall
         functionCallName
          qualifiedNamespaceName
           namespaceNameList
            identifier
             var_dump
         actualArguments
          arguments
           (
           actualArgument
            expression
             chain
              chainOrigin
               chainBase
                keyedVariable
                 $app
              memberAccess
               ->
               keyedFieldName
                keyedSimpleFieldName
                 identifier
                  getLogger
               actualArguments
                arguments
                 (
                 )
           )
     ;
  topStatement
   statement
    emptyStatement_
     ?>
 <EOF>
