proto
 syntax
  syntax
  =
  "proto3"
  ;
 importStatement
  import
  public
  strLit
   "other.proto"
  ;
 optionStatement
  option
  optionName
   fullIdent
    ident
     java_package
  =
  constant
   strLit
    "com.example.foo"
  ;
 topLevelDef
  enumDef
   enum
   enumName
    ident
     EnumAllowingAlias
   enumBody
    {
    enumElement
     optionStatement
      option
      optionName
       fullIdent
        ident
         allow_alias
      =
      constant
       fullIdent
        ident
         keywords
          true
      ;
    enumElement
     enumField
      ident
       UNKNOWN
      =
      intLit
       0
      ;
    enumElement
     enumField
      ident
       STARTED
      =
      intLit
       1
      ;
    enumElement
     enumField
      ident
       RUNNING
      =
      intLit
       2
      enumValueOptions
       [
       enumValueOption
        optionName
         (
         fullIdent
          ident
           custom_option
         )
        =
        constant
         strLit
          "hello world"
       ]
      ;
    }
 topLevelDef
  messageDef
   message
   messageName
    ident
     outer
   messageBody
    {
    messageElement
     optionStatement
      option
      optionName
       (
       fullIdent
        ident
         my_option
       )
       .
       fullIdent
        ident
         a
      =
      constant
       fullIdent
        ident
         keywords
          true
      ;
    messageElement
     messageDef
      message
      messageName
       ident
        inner
      messageBody
       {
       messageElement
        field
         type_
          int64
         fieldName
          ident
           ival
         =
         fieldNumber
          intLit
           1
         ;
       }
    messageElement
     field
      fieldLabel
       repeated
      type_
       messageType
        messageName
         ident
          inner
      fieldName
       ident
        inner_message
      =
      fieldNumber
       intLit
        2
      ;
    messageElement
     field
      type_
       messageType
        messageName
         ident
          EnumAllowingAlias
      fieldName
       ident
        enum_field
      =
      fieldNumber
       intLit
        3
      ;
    messageElement
     mapField
      map
      <
      keyType
       int32
      ,
      type_
       string
      >
      mapName
       ident
        my_map
      =
      fieldNumber
       intLit
        4
      ;
    messageElement
     field
      fieldLabel
       optional
      type_
       int32
      fieldName
       ident
        optional_field
      =
      fieldNumber
       intLit
        5
      ;
    }
 topLevelDef
  messageDef
   message
   messageName
    ident
     Foo
   messageBody
    {
    messageElement
     reserved
      reserved
      ranges
       range_
        intLit
         2
       ,
       range_
        intLit
         15
       ,
       range_
        intLit
         9
        to
        intLit
         11
      ;
    messageElement
     reserved
      reserved
      reservedFieldNames
       strLit
        "foo"
       ,
       strLit
        "bar"
      ;
    }
 topLevelDef
  serviceDef
   service
   serviceName
    ident
     SearchService
   {
   serviceElement
    rpc
     rpc
     rpcName
      ident
       Search
     (
     messageType
      messageName
       ident
        SearchRequest
     )
     returns
     (
     messageType
      messageName
       ident
        SearchResponse
     )
     ;
   }
 <EOF>
