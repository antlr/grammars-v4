preds
 pred
  BEG_G
  {
  program
   statement_list
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        dist
       array
        [
        declare
         node_t
        ]
    ;
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        n
      ,
      dcl_item
       dcl_name
        curn
    ;
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        src
       initialize_
        assign
         =
         expr
          function
           node
          (
          args
           arg_list
            expr
             expr
              variable
               $G
             ,
             expr
              array_
               ARGV
              [
              args
               arg_list
                expr
                 constant
                  0
              ]
          )
    ;
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        dst
       initialize_
        assign
         =
         expr
          function
           node
          (
          args
           arg_list
            expr
             expr
              variable
               $G
             ,
             expr
              array_
               ARGV
              [
              args
               arg_list
                expr
                 constant
                  1
              ]
          )
    ;
    statement
     expr
      variable
       $tvroot
      assign
       =
       expr
        variable
         src
    ;
    statement
     expr
      variable
       $tvtype
      assign
       =
       expr
        variable
         TV_bfs
    ;
  }
 pred
  N
  {
  program
   statement_list
    statement
     expr
      variable
       curn
      assign
       =
       expr
        variable
         $
    ;
    statement
     if
     (
     expr
      expr
       variable
        $
      ==
      expr
       variable
        dst
     )
     statement
      {
      statement_list
       statement
        expr
         print_
          printf
         (
         args
          arg_list
           expr
            expr
             expr
              expr
               constant
                "dist from %s to %s is %d\n"
              ,
              expr
               variable
                src
                members
                 .
                 name
             ,
             expr
              variable
               dst
               members
                .
                name
            ,
            expr
             array_
              dist
             [
             args
              arg_list
               expr
                variable
                 dst
             ]
         )
       ;
       statement
        expr
         exit
         (
         expr
          constant
           0
         )
       ;
      }
  }
 pred
  E
  {
  program
   statement_list
    statement
     if
     (
     expr
      expr
       variable
        $
        members
         .
         head
      ==
      expr
       variable
        curn
     )
     statement
      expr
       variable
        n
       assign
        =
        expr
         variable
          $
          members
           .
           tail
     ;
     else_
      else
      statement
       expr
        variable
         n
        assign
         =
         expr
          variable
           $
           members
            .
            head
    ;
    statement
     if
     (
     expr
      expr
       array_
        dist
       [
       args
        arg_list
         expr
          variable
           n
       ]
      ==
      expr
       constant
        0
     )
     statement
      expr
       variable
        dist
        index
         [
         expr
          variable
           n
         ]
       assign
        =
        expr
         expr
          array_
           dist
          [
          args
           arg_list
            expr
             variable
              curn
          ]
         +
         expr
          constant
           1
    ;
  }
 <EOF>
