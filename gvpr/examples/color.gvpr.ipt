preds
 pred
  BEGIN
  {
  program
   statement_list
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        lens
       array
        [
        declare
         edge_t
        ]
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        maxlen
      ,
      dcl_item
       dcl_name
        len
      ,
      dcl_item
       dcl_name
        minlen
       initialize_
        assign
         =
         expr
          constant
           1.7976931348623157e+308
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        alpha
      ,
      dcl_item
       dcl_name
        x0
      ,
      dcl_item
       dcl_name
        y0
      ,
      dcl_item
       dcl_name
        x1
      ,
      dcl_item
       dcl_name
        y1
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        h0
      ,
      dcl_item
       dcl_name
        s0
      ,
      dcl_item
       dcl_name
        v0
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        i
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        ncolors
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        lim
       array
        [
        declare
         int
        ]
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        h
       array
        [
        declare
         int
        ]
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        s
       array
        [
        declare
         int
        ]
    ;
    statement
     declare
      double
     dcl_list
      dcl_item
       dcl_name
        v
       array
        [
        declare
         int
        ]
    ;
    statement
     expr
      variable
       ncolors
      assign
       =
       expr
        constant
         2
    ;
    statement
     expr
      variable
       lim
       index
        [
        expr
         constant
          0
        ]
      assign
       =
       expr
        constant
         0
    ;
    statement
     expr
      variable
       lim
       index
        [
        expr
         constant
          1
        ]
      assign
       =
       expr
        constant
         1
    ;
    statement
     expr
      variable
       h
       index
        [
        expr
         constant
          0
        ]
      assign
       =
       expr
        constant
         0
    ;
    statement
     expr
      variable
       h
       index
        [
        expr
         constant
          1
        ]
      assign
       =
       expr
        constant
         0.67
    ;
    statement
     expr
      variable
       s
       index
        [
        expr
         constant
          0
        ]
      assign
       =
       expr
        constant
         1
    ;
    statement
     expr
      variable
       s
       index
        [
        expr
         constant
          1
        ]
      assign
       =
       expr
        constant
         1
    ;
    statement
     expr
      variable
       v
       index
        [
        expr
         constant
          0
        ]
      assign
       =
       expr
        constant
         1
    ;
    statement
     expr
      variable
       v
       index
        [
        expr
         constant
          1
        ]
      assign
       =
       expr
        constant
         1
    ;
  }
 pred
  E
  {
  program
   statement_list
    statement
     expr
      scan
       sscanf
      (
      args
       arg_list
        expr
         expr
          expr
           expr
            variable
             $
             members
              .
              tail
              .
              pos
           ,
           expr
            constant
             "%f,%f"
          ,
          expr
           &
           variable
            x0
         ,
         expr
          &
          variable
           y0
      )
    ;
    statement
     expr
      scan
       sscanf
      (
      args
       arg_list
        expr
         expr
          expr
           expr
            variable
             $
             members
              .
              head
              .
              pos
           ,
           expr
            constant
             "%f,%f"
          ,
          expr
           &
           variable
            x1
         ,
         expr
          &
          variable
           y1
      )
    ;
    statement
     expr
      variable
       len
      assign
       =
       expr
        function
         sqrt
        (
        args
         arg_list
          expr
           expr
            expr
             (
             expr
              expr
               variable
                x0
              -
              expr
               variable
                x1
             )
            *
            expr
             (
             expr
              expr
               variable
                x0
              -
              expr
               variable
                x1
             )
           +
           expr
            expr
             (
             expr
              expr
               variable
                y0
              -
              expr
               variable
                y1
             )
            *
            expr
             (
             expr
              expr
               variable
                y0
              -
              expr
               variable
                y1
             )
        )
    ;
    statement
     expr
      variable
       lens
       index
        [
        expr
         variable
          $
        ]
      assign
       =
       expr
        variable
         len
    ;
    statement
     if
     (
     expr
      expr
       variable
        len
      >
      expr
       variable
        maxlen
     )
     statement
      expr
       variable
        maxlen
       assign
        =
        expr
         variable
          len
    ;
    statement
     if
     (
     expr
      expr
       variable
        len
      <
      expr
       variable
        minlen
     )
     statement
      expr
       variable
        minlen
       assign
        =
        expr
         variable
          len
    ;
  }
 pred
  BEG_G
  {
  program
   statement_list
    statement
     if
     (
     expr
      !
      expr
       function
        isAttr
       (
       args
        arg_list
         expr
          expr
           expr
            variable
             $
           ,
           expr
            constant
             "E"
          ,
          expr
           constant
            "color"
       )
     )
     statement
      expr
       function
        setDflt
       (
       args
        arg_list
         expr
          expr
           expr
            expr
             variable
              $
            ,
            expr
             constant
              "E"
           ,
           expr
            constant
             "color"
          ,
          expr
           constant
            ""
       )
    ;
  }
 pred
  E
  {
  program
   statement_list
    statement
     if
     (
     expr
      expr
       variable
        $
        members
         .
         color
      !=
      expr
       constant
        ""
     )
     statement
      return
    ;
    statement
     expr
      variable
       alpha
      assign
       =
       expr
        expr
         (
         expr
          expr
           array_
            lens
           [
           args
            arg_list
             expr
              variable
               $
           ]
          -
          expr
           variable
            minlen
         )
        /
        expr
         (
         expr
          expr
           variable
            maxlen
          -
          expr
           variable
            minlen
         )
    ;
    statement
     for
     (
     expr
      variable
       i
      assign
       =
       expr
        constant
         1
     ;
     expr
      expr
       variable
        i
      <
      expr
       variable
        ncolors
     ;
     expr
      variable
       i
      ++
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         expr
          variable
           alpha
         <
         expr
          array_
           lim
          [
          args
           arg_list
            expr
             variable
              i
          ]
        )
        statement
         break
       ;
      }
    statement
     expr
      variable
       alpha
      assign
       =
       expr
        expr
         (
         expr
          expr
           variable
            alpha
          -
          expr
           array_
            lim
           [
           args
            arg_list
             expr
              expr
               variable
                i
              -
              expr
               constant
                1
           ]
         )
        /
        expr
         (
         expr
          expr
           array_
            lim
           [
           args
            arg_list
             expr
              variable
               i
           ]
          -
          expr
           array_
            lim
           [
           args
            arg_list
             expr
              expr
               variable
                i
              -
              expr
               constant
                1
           ]
         )
    ;
    statement
     expr
      variable
       h0
      assign
       =
       expr
        expr
         expr
          (
          expr
           expr
            constant
             1
           -
           expr
            variable
             alpha
          )
         *
         expr
          array_
           h
          [
          args
           arg_list
            expr
             expr
              variable
               i
             -
             expr
              constant
               1
          ]
        +
        expr
         expr
          variable
           alpha
         *
         expr
          array_
           h
          [
          args
           arg_list
            expr
             variable
              i
          ]
    ;
    statement
     expr
      variable
       s0
      assign
       =
       expr
        expr
         expr
          (
          expr
           expr
            constant
             1
           -
           expr
            variable
             alpha
          )
         *
         expr
          array_
           s
          [
          args
           arg_list
            expr
             expr
              variable
               i
             -
             expr
              constant
               1
          ]
        +
        expr
         expr
          variable
           alpha
         *
         expr
          array_
           s
          [
          args
           arg_list
            expr
             variable
              i
          ]
    ;
    statement
     expr
      variable
       v0
      assign
       =
       expr
        expr
         expr
          (
          expr
           expr
            constant
             1
           -
           expr
            variable
             alpha
          )
         *
         expr
          array_
           v
          [
          args
           arg_list
            expr
             expr
              variable
               i
             -
             expr
              constant
               1
          ]
        +
        expr
         expr
          variable
           alpha
         *
         expr
          array_
           v
          [
          args
           arg_list
            expr
             variable
              i
          ]
    ;
    statement
     expr
      variable
       $
       members
        .
        color
      assign
       =
       expr
        print_
         sprintf
        (
        args
         arg_list
          expr
           expr
            expr
             expr
              constant
               "%.02f %.02f %.02f"
             ,
             expr
              variable
               h0
            ,
            expr
             variable
              s0
           ,
           expr
            variable
             v0
        )
    ;
  }
 <EOF>
