preds
 pred
  BEGIN
  {
  program
   statement_list
    statement
     declare
      char
      *
     dcl_list
      dcl_item
       dcl_name
        ename
    ;
    statement
     declare
      char
      *
     dcl_list
      dcl_item
       dcl_name
        n
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        doDir
      ,
      dcl_item
       dcl_name
        cnt
       array
        [
        ]
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        loopcnt
       array
        [
        ]
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        nloops
      ,
      dcl_item
       dcl_name
        nmulti
    ;
    statement
     if
     (
     expr
      expr
       (
       expr
        expr
         variable
          ARGC
        >
        expr
         constant
          0
       )
      &&
      expr
       (
       expr
        expr
         array_
          ARGV
         [
         args
          arg_list
           expr
            constant
             0
         ]
        ==
        expr
         constant
          "-d"
       )
     )
     statement
      expr
       variable
        doDir
       assign
        =
        expr
         constant
          1
     ;
     else_
      else
      statement
       expr
        variable
         doDir
        assign
         =
         expr
          constant
           0
    ;
  }
 pred
  BEG_G
  {
  program
   statement_list
    statement
     unset
     (
     cnt
     )
    ;
    statement
     unset
     (
     loopcnt
     )
    ;
    statement
     expr
      variable
       nloops
      assign
       =
       expr
        variable
         nmulti
        assign
         =
         expr
          constant
           0
    ;
  }
 pred
  E
  {
  program
   statement_list
    statement
     if
     (
     expr
      expr
       variable
        doDir
      ||
      expr
       (
       expr
        expr
         variable
          tail
          members
           .
           name
        <=
        expr
         variable
          head
          members
           .
           name
       )
     )
     statement
      expr
       variable
        ename
       assign
        =
        expr
         expr
          variable
           tail
           members
            .
            name
         +
         expr
          expr
           constant
            "_"
          +
          expr
           variable
            head
            members
             .
             name
     ;
     else_
      else
      statement
       expr
        variable
         ename
        assign
         =
         expr
          expr
           variable
            head
            members
             .
             name
          +
          expr
           expr
            constant
             "_"
           +
           expr
            variable
             tail
             members
              .
              name
    ;
    statement
     if
     (
     expr
      expr
       variable
        tail
      ==
      expr
       variable
        head
     )
     statement
      {
      statement_list
       statement
        expr
         variable
          loopcnt
          index
           [
           expr
            variable
             ename
           ]
         assign
          +=
          expr
           constant
            1
       ;
       statement
        if
        (
        expr
         expr
          array_
           loopcnt
          [
          args
           arg_list
            expr
             variable
              ename
          ]
         ==
         expr
          constant
           1
        )
        statement
         expr
          variable
           nloops
          assign
           +=
           expr
            constant
             1
       ;
      }
     else_
      else
      statement
       {
       statement_list
        statement
         expr
          variable
           cnt
           index
            [
            expr
             variable
              ename
            ]
          assign
           +=
           expr
            constant
             1
        ;
        statement
         if
         (
         expr
          expr
           array_
            cnt
           [
           args
            arg_list
             expr
              variable
               ename
           ]
          ==
          expr
           constant
            2
         )
         statement
          expr
           variable
            nmulti
           assign
            +=
            expr
             constant
              1
        ;
       }
  }
 pred
  END_G
  {
  program
   statement_list
    statement
     expr
      print_
       printf
      (
      args
       arg_list
        expr
         expr
          expr
           expr
            constant
             "graph %s: %d loops %d multiedges\n"
           ,
           expr
            variable
             $
             members
              .
              name
          ,
          expr
           variable
            nloops
         ,
         expr
          variable
           nmulti
      )
    ;
    statement
     for
     (
     variable
      cnt
      index
       [
       expr
        variable
         n
       ]
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         expr
          array_
           cnt
          [
          args
           arg_list
            expr
             variable
              n
          ]
         >
         expr
          constant
           1
        )
        statement
         expr
          print_
           printf
          (
          args
           arg_list
            expr
             expr
              expr
               constant
                "%s : %d\n"
              ,
              expr
               variable
                n
             ,
             expr
              array_
               cnt
              [
              args
               arg_list
                expr
                 variable
                  n
              ]
          )
       ;
      }
    statement
     for
     (
     variable
      loopcnt
      index
       [
       expr
        variable
         n
       ]
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         expr
          array_
           loopcnt
          [
          args
           arg_list
            expr
             variable
              n
          ]
         >
         expr
          constant
           0
        )
        statement
         expr
          print_
           printf
          (
          args
           arg_list
            expr
             expr
              expr
               constant
                "%s : %d\n"
              ,
              expr
               variable
                n
             ,
             expr
              array_
               loopcnt
              [
              args
               arg_list
                expr
                 variable
                  n
              ]
          )
       ;
      }
  }
 <EOF>
