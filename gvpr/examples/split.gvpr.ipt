preds
 pred
  BEGIN
  {
  program
   statement_list
    statement
     declare
      graph_t
     fdcl_item
      dcl_name
       find_owner
      finitialize_
       (
       formals
        formal_list
         formal_list
          formal_item
           declare
            obj_t
           name
            o
         ,
         formal_item
          declare
           graph_t
          name
           g
       )
       {
       statement_list
        statement
         declare
          graph_t
         dcl_list
          dcl_item
           dcl_name
            g1
        ;
        statement
         for
         (
         expr
          variable
           g1
          assign
           =
           expr
            function
             fstsubg
            (
            args
             arg_list
              expr
               variable
                g
            )
         ;
         expr
          variable
           g1
         ;
         expr
          variable
           g1
          assign
           =
           expr
            function
             nxtsubg
            (
            args
             arg_list
              expr
               variable
                g1
            )
         )
         statement
          if
          (
          expr
           function
            isIn
           (
           args
            arg_list
             expr
              expr
               variable
                g1
              ,
              expr
               variable
                o
           )
          )
          statement
           return
           expr
            variable
             g1
        ;
        statement
         return
         expr
          variable
           NULL
        ;
       }
  }
 pred
  BEG_G
  {
  program
   statement_list
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        calls
       array
        [
        ]
    ;
    statement
     declare
      graph_t
     dcl_list
      dcl_item
       dcl_name
        g
      ,
      dcl_item
       dcl_name
        g2
    ;
    statement
     declare
      edge_t
     dcl_list
      dcl_item
       dcl_name
        e
      ,
      dcl_item
       dcl_name
        e2
    ;
    statement
     declare
      string
     dcl_list
      dcl_item
       dcl_name
        idx
    ;
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        n
      ,
      dcl_item
       dcl_name
        n2
    ;
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        i
    ;
    statement
     expr
      variable
       $tvtype
      assign
       =
       expr
        variable
         TV_en
    ;
  }
 pred
  E
  [
  program
   statement_list
    statement
     expr
      expr
       expr
        variable
         op
       ==
       expr
        constant
         "call"
      &&
      expr
       expr
        variable
         tail
         members
          .
          split
       !=
       expr
        constant
         1
  ]
  {
  program
   statement_list
    statement
     declare
      int
     dcl_list
      dcl_item
       dcl_name
        offset
       initialize_
        assign
         =
         expr
          constant
           0
    ;
    statement
     expr
      variable
       label
      assign
       =
       expr
        constant
         ""
    ;
    statement
     expr
      variable
       g
      assign
       =
       expr
        function
         find_owner
        (
        args
         arg_list
          expr
           expr
            variable
             tail
           ,
           expr
            variable
             $G
        )
    ;
    statement
     expr
      variable
       n
      assign
       =
       expr
        variable
         tail
    ;
    statement
     for
     (
     expr
      variable
       e
      assign
       =
       expr
        function
         fstout
        (
        args
         arg_list
          expr
           variable
            tail
        )
     ;
     expr
      variable
       e
     ;
     expr
      variable
       e
      assign
       =
       expr
        function
         nxtout
        (
        args
         arg_list
          expr
           variable
            e
        )
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         expr
          variable
           e
           members
            .
            op
         ==
         expr
          constant
           "call"
        )
        statement
         {
         statement_list
          statement
           expr
            variable
             n2
            assign
             =
             expr
              function
               node
              (
              args
               arg_list
                expr
                 expr
                  variable
                   g
                 ,
                 expr
                  print_
                   sprintf
                  (
                  args
                   arg_list
                    expr
                     expr
                      expr
                       expr
                        constant
                         "%s%s%d"
                       ,
                       expr
                        variable
                         tail
                         members
                          .
                          name
                      ,
                      expr
                       constant
                        "x"
                     ,
                     expr
                      variable
                       offset
                      ++
                  )
              )
          ;
          statement
           expr
            function
             copyA
            (
            args
             arg_list
              expr
               expr
                variable
                 tail
               ,
               expr
                variable
                 n2
            )
          ;
          statement
           expr
            variable
             n2
             members
              .
              line
            assign
             =
             expr
              variable
               e
               members
                .
                line
          ;
          statement
           expr
            variable
             n2
             members
              .
              label
            assign
             =
             expr
              variable
               e
               members
                .
                line
          ;
          statement
           expr
            variable
             n2
             members
              .
              col
            assign
             =
             expr
              variable
               e
               members
                .
                col
          ;
          statement
           expr
            variable
             n2
             members
              .
              split
            assign
             =
             expr
              constant
               1
          ;
          statement
           expr
            variable
             n2
             members
              .
              op
            assign
             =
             expr
              constant
               "target"
          ;
          statement
           expr
            variable
             g2
            assign
             =
             expr
              function
               find_owner
              (
              args
               arg_list
                expr
                 expr
                  variable
                   e
                   members
                    .
                    head
                 ,
                 expr
                  variable
                   $G
              )
          ;
          statement
           expr
            variable
             i
            assign
             =
             expr
              constant
               0
          ;
          statement
           while
           (
           expr
            array_
             calls
            [
            args
             arg_list
              expr
               print_
                sprintf
               (
               args
                arg_list
                 expr
                  expr
                   expr
                    constant
                     "%s%d"
                   ,
                   expr
                    variable
                     g2
                     members
                      .
                      name
                  ,
                  expr
                   ++
                   variable
                    i
               )
            ]
           )
           statement
            {
            }
          statement
           expr
            variable
             calls
             index
              [
              expr
               print_
                sprintf
               (
               args
                arg_list
                 expr
                  expr
                   expr
                    constant
                     "%s%d"
                   ,
                   expr
                    variable
                     g2
                     members
                      .
                      name
                  ,
                  expr
                   variable
                    i
               )
              ]
            assign
             =
             expr
              variable
               n2
          ;
          statement
           expr
            variable
             e2
            assign
             =
             expr
              function
               edge
              (
              args
               arg_list
                expr
                 expr
                  expr
                   variable
                    n
                  ,
                  expr
                   variable
                    n2
                 ,
                 expr
                  constant
                   "call"
              )
          ;
          statement
           expr
            variable
             e2
             members
              .
              style
            assign
             =
             expr
              constant
               "dotted"
          ;
          statement
           expr
            variable
             e2
             members
              .
              weight
            assign
             =
             expr
              constant
               50
          ;
          statement
           if
           (
           expr
            expr
             variable
              n
            !=
            expr
             variable
              tail
           )
           statement
            {
            statement_list
             statement
              expr
               variable
                e2
               assign
                =
                expr
                 function
                  edge
                 (
                 args
                  arg_list
                   expr
                    expr
                     expr
                      variable
                       n
                     ,
                     expr
                      variable
                       e
                       members
                        .
                        head
                    ,
                    expr
                     constant
                      "transformed-call"
                 )
             ;
             statement
              expr
               function
                copyA
               (
               args
                arg_list
                 expr
                  expr
                   variable
                    e
                  ,
                  expr
                   variable
                    e2
               )
             ;
             statement
              expr
               variable
                e2
                members
                 .
                 label
               assign
                =
                expr
                 constant
                  ""
             ;
             statement
              expr
               function
                delete
               (
               args
                arg_list
                 expr
                  expr
                   variable
                    $G
                  ,
                  expr
                   variable
                    e
               )
             ;
            }
          statement
           expr
            variable
             n
            assign
             =
             expr
              variable
               n2
          ;
         }
      }
    statement
     for
     (
     expr
      variable
       e
      assign
       =
       expr
        function
         fstout
        (
        args
         arg_list
          expr
           variable
            tail
        )
     ;
     expr
      variable
       e
     ;
     expr
      variable
       e
      assign
       =
       expr
        function
         nxtout
        (
        args
         arg_list
          expr
           variable
            e
        )
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         expr
          variable
           e
           members
            .
            op
         ==
         expr
          constant
           "br"
        )
        statement
         {
         statement_list
          statement
           expr
            variable
             e2
            assign
             =
             expr
              function
               edge
              (
              args
               arg_list
                expr
                 expr
                  expr
                   variable
                    n
                  ,
                  expr
                   variable
                    e
                    members
                     .
                     head
                 ,
                 expr
                  constant
                   "transformed"
              )
          ;
          statement
           expr
            function
             copyA
            (
            args
             arg_list
              expr
               expr
                variable
                 e
               ,
               expr
                variable
                 e2
            )
          ;
          statement
           expr
            function
             delete
            (
            args
             arg_list
              expr
               expr
                variable
                 $G
               ,
               expr
                variable
                 e
            )
          ;
         }
      }
  }
 pred
  N
  [
  program
   statement_list
    statement
     expr
      expr
       variable
        op
      ==
      expr
       constant
        "ret"
  ]
  {
  program
   statement_list
    statement
     for
     (
     expr
      variable
       g
      assign
       =
       expr
        function
         fstsubg
        (
        args
         arg_list
          expr
           variable
            $G
        )
     ;
     expr
      variable
       g
     ;
     expr
      variable
       g
      assign
       =
       expr
        function
         nxtsubg
        (
        args
         arg_list
          expr
           variable
            g
        )
     )
     statement
      {
      statement_list
       statement
        if
        (
        expr
         function
          isIn
         (
         args
          arg_list
           expr
            expr
             variable
              g
            ,
            expr
             variable
              $
         )
        )
        statement
         {
         statement_list
          statement
           expr
            variable
             i
            assign
             =
             expr
              constant
               0
          ;
          statement
           while
           (
           expr
            array_
             calls
            [
            args
             arg_list
              expr
               print_
                sprintf
               (
               args
                arg_list
                 expr
                  expr
                   expr
                    constant
                     "%s%d"
                   ,
                   expr
                    variable
                     g
                     members
                      .
                      name
                  ,
                  expr
                   ++
                   variable
                    i
               )
            ]
           )
           statement
            {
            statement_list
             statement
              expr
               variable
                e
               assign
                =
                expr
                 function
                  edge
                 (
                 args
                  arg_list
                   expr
                    expr
                     expr
                      variable
                       $
                     ,
                     expr
                      array_
                       calls
                      [
                      args
                       arg_list
                        expr
                         print_
                          sprintf
                         (
                         args
                          arg_list
                           expr
                            expr
                             expr
                              constant
                               "%s%d"
                             ,
                             expr
                              variable
                               g
                               members
                                .
                                name
                            ,
                            expr
                             variable
                              i
                         )
                      ]
                    ,
                    expr
                     constant
                      "return"
                 )
             ;
             statement
              expr
               variable
                e
                members
                 .
                 style
               assign
                =
                expr
                 constant
                  "dotted"
             ;
             statement
              expr
               variable
                e
                members
                 .
                 op
               assign
                =
                expr
                 constant
                  "ret"
             ;
             statement
              expr
               variable
                e
                members
                 .
                 line
               assign
                =
                expr
                 variable
                  e
                  members
                   .
                   tail
                   .
                   line
             ;
             statement
              expr
               variable
                e
                members
                 .
                 weight
               assign
                =
                expr
                 constant
                  5
             ;
            }
         }
      }
  }
 pred
  END_G
  {
  program
   statement_list
    statement
     expr
      function
       write
      (
      args
       arg_list
        expr
         variable
          $
      )
    ;
  }
 <EOF>
