preds
 pred
  BEGIN
  {
  program
   statement_list
    statement
     if
     (
     expr
      expr
       variable
        ARGC
      !=
      expr
       constant
        2
     )
     statement
      {
      statement_list
       statement
        expr
         print_
          print
         (
         args
          arg_list
           expr
            constant
             "This script takes exactly two parameter. 1: name of node, 2: number of hops"
         )
       ;
       statement
        expr
         exit
         (
         expr
          constant
           1
         )
       ;
      }
    statement
     declare
      void
     fdcl_item
      dcl_name
       reduce_in
      finitialize_
       (
       formals
        formal_list
         formal_list
          formal_list
           formal_list
            formal_item
             declare
              graph_t
             name
              _g
           ,
           formal_item
            declare
             node_t
            name
             _n
          ,
          formal_item
           declare
            edge_t
           name
            _e
         ,
         formal_item
          declare
           int
          name
           _d
       )
       {
       statement_list
        statement
         expr
          variable
           _e
          assign
           =
           expr
            function
             fstin
            (
            args
             arg_list
              expr
               variable
                _n
            )
        ;
        statement
         while
         (
         expr
          expr
           variable
            _e
          !=
          expr
           variable
            NULL
         )
         statement
          {
          statement_list
           statement
            expr
             function
              clone
             (
             args
              arg_list
               expr
                expr
                 variable
                  _g
                ,
                expr
                 variable
                  _e
             )
           ;
           statement
            if
            (
            expr
             expr
              variable
               _d
             <
             expr
              function
               atoi
              (
              args
               arg_list
                expr
                 array_
                  ARGV
                 [
                 args
                  arg_list
                   expr
                    constant
                     1
                 ]
              )
            )
            statement
             {
             statement_list
              statement
               expr
                function
                 reduce_in
                (
                args
                 arg_list
                  expr
                   expr
                    expr
                     expr
                      variable
                       _g
                     ,
                     expr
                      variable
                       _e
                       members
                        .
                        tail
                    ,
                    expr
                     variable
                      NULL
                   ,
                   expr
                    expr
                     variable
                      _d
                    +
                    expr
                     constant
                      1
                )
              ;
             }
           statement
            expr
             variable
              _e
             assign
              =
              expr
               function
                nxtin
               (
               args
                arg_list
                 expr
                  variable
                   _e
               )
           ;
          }
       }
    statement
     declare
      void
     fdcl_item
      dcl_name
       reduce_out
      finitialize_
       (
       formals
        formal_list
         formal_list
          formal_list
           formal_list
            formal_item
             declare
              graph_t
             name
              _g
           ,
           formal_item
            declare
             node_t
            name
             _n
          ,
          formal_item
           declare
            edge_t
           name
            _e
         ,
         formal_item
          declare
           int
          name
           _d
       )
       {
       statement_list
        statement
         expr
          variable
           _e
          assign
           =
           expr
            function
             fstout
            (
            args
             arg_list
              expr
               variable
                _n
            )
        ;
        statement
         while
         (
         expr
          expr
           variable
            _e
          !=
          expr
           variable
            NULL
         )
         statement
          {
          statement_list
           statement
            expr
             function
              clone
             (
             args
              arg_list
               expr
                expr
                 variable
                  _g
                ,
                expr
                 variable
                  _e
             )
           ;
           statement
            if
            (
            expr
             expr
              variable
               _d
             <
             expr
              function
               atoi
              (
              args
               arg_list
                expr
                 array_
                  ARGV
                 [
                 args
                  arg_list
                   expr
                    constant
                     1
                 ]
              )
            )
            statement
             {
             statement_list
              statement
               expr
                function
                 reduce_out
                (
                args
                 arg_list
                  expr
                   expr
                    expr
                     expr
                      variable
                       _g
                     ,
                     expr
                      variable
                       _e
                       members
                        .
                        head
                    ,
                    expr
                     variable
                      NULL
                   ,
                   expr
                    expr
                     variable
                      _d
                    +
                    expr
                     constant
                      1
                )
              ;
             }
           statement
            expr
             variable
              _e
             assign
              =
              expr
               function
                nxtout
               (
               args
                arg_list
                 expr
                  variable
                   _e
               )
           ;
          }
       }
  }
 pred
  BEG_G
  {
  program
   statement_list
    statement
     declare
      graph_t
     dcl_list
      dcl_item
       dcl_name
        g
       initialize_
        assign
         =
         expr
          function
           graph
          (
          args
           arg_list
            expr
             expr
              constant
               "G"
             ,
             expr
              constant
               "S"
          )
    ;
    statement
     expr
      variable
       g
       members
        .
        rankdir
      assign
       =
       expr
        constant
         "RL"
    ;
  }
 pred
  N
  [
  program
   statement_list
    statement
     expr
      expr
       variable
        name
      ==
      expr
       array_
        ARGV
       [
       args
        arg_list
         expr
          constant
           0
       ]
  ]
  {
  program
   statement_list
    statement
     declare
      node_t
     dcl_list
      dcl_item
       dcl_name
        n
       initialize_
        assign
         =
         expr
          function
           clone
          (
          args
           arg_list
            expr
             expr
              variable
               g
             ,
             expr
              variable
               $
          )
    ;
    statement
     expr
      variable
       n
       members
        .
        color
      assign
       =
       expr
        constant
         "red"
    ;
    statement
     expr
      function
       reduce_in
      (
      args
       arg_list
        expr
         expr
          expr
           expr
            variable
             g
           ,
           expr
            variable
             $
          ,
          expr
           variable
            NULL
         ,
         expr
          constant
           1
      )
    ;
    statement
     expr
      function
       reduce_out
      (
      args
       arg_list
        expr
         expr
          expr
           expr
            variable
             g
           ,
           expr
            variable
             $
          ,
          expr
           variable
            NULL
         ,
         expr
          constant
           1
      )
    ;
  }
 pred
  END_G
  {
  program
   statement_list
    statement
     expr
      variable
       $O
      assign
       =
       expr
        variable
         g
    ;
  }
 <EOF>
