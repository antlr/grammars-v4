(compilationUnit (typeDeclaration (classOrInterfaceModifier public) (classDeclaration class (identifier Switch) (classBody { (classBodyDeclaration (modifier (classOrInterfaceModifier public)) (modifier (classOrInterfaceModifier static)) (memberDeclaration (methodDeclaration (typeTypeOrVoid void) (identifier main) (formalParameters ( (formalParameterList (formalParameter (typeType (classOrInterfaceType (typeIdentifier String)) [ ]) (variableDeclaratorId (identifier args)))) )) (methodBody (block { (blockStatement (localVariableDeclaration (typeType (classOrInterfaceType (typeIdentifier String))) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier myString)) = (variableInitializer (expression (primary (literal "some_text"))))))) ;) (blockStatement (localVariableDeclaration (typeType (primitiveType int)) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier j)) = (variableInitializer (expression (switchExpression switch (parExpression ( (expression (primary (identifier myString))) )) { (switchLabeledRule case (expressionList (expression (primary (literal "some_text")))) -> (switchRuleOutcome (blockStatement (statement (expression (primary (literal (integerLiteral 0)))) ;)))) (switchLabeledRule default -> (switchRuleOutcome (block { (blockStatement (localVariableDeclaration (typeType (primitiveType int)) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier result)) = (variableInitializer (expression (primary (literal (integerLiteral 10)))))))) ;) (blockStatement (statement yield (expression (primary (identifier result))) ;)) }))) })))))) ;) }))))) }))))