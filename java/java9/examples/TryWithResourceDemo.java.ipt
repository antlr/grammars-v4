compilationUnit
 ordinaryCompilation
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      TryWithResourceDemo
     superinterfaces
      implements
      interfaceTypeList
       interfaceType
        classType
         identifier
          AutoCloseable
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          result
           void
          methodDeclarator
           identifier
            main
           (
           formalParameterList
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    String
                 dims
                  [
                  ]
              variableDeclaratorId
               identifier
                args
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    TryWithResourceDemo
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   demo
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    classInstanceCreationExpression_lfno_primary
                                     new
                                     identifier
                                      TryWithResourceDemo
                                     (
                                     )
              ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               tryStatement
                tryWithResourcesStatement
                 try
                 resourceSpecification
                  (
                  resourceList
                   resource
                    variableAccess
                     expressionName
                      identifier
                       demo
                  )
                 block
                  {
                  blockStatements
                   blockStatement
                    statement
                     statementWithoutTrailingSubstatement
                      expressionStatement
                       statementExpression
                        methodInvocation
                         typeName
                          identifier
                           demo
                         .
                         identifier
                          doSomething
                         (
                         )
                       ;
                  }
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodHeader
          result
           void
          methodDeclarator
           identifier
            doSomething
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  typeName
                   packageOrTypeName
                    identifier
                     System
                   .
                   identifier
                    out
                  .
                  identifier
                   println
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     literal
                                      "Hello world!"
                  )
                ;
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Override
         methodModifier
          public
         methodHeader
          result
           void
          methodDeclarator
           identifier
            close
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  typeName
                   packageOrTypeName
                    identifier
                     System
                   .
                   identifier
                    out
                  .
                  identifier
                   println
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     literal
                                      "I am going to be closed"
                  )
                ;
           }
      }
 <EOF>
