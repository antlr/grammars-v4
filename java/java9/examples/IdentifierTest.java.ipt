compilationUnit
 ordinaryCompilation
  packageDeclaration
   package
   packageName
    packageName
     packageName
      identifier
       open
     .
     identifier
      module
    .
    identifier
     module
   ;
  importDeclaration
   singleTypeImportDeclaration
    import
    typeName
     packageOrTypeName
      packageOrTypeName
       identifier
        java
      .
      identifier
       module
     .
     identifier
      moduleTest
    ;
  importDeclaration
   singleTypeImportDeclaration
    import
    typeName
     packageOrTypeName
      packageOrTypeName
       identifier
        java
      .
      identifier
       open
     .
     identifier
      openTest
    ;
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     class
     identifier
      module
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodHeader
          result
           unannType
            unannReferenceType
             unannClassOrInterfaceType
              unannClassType_lfno_unannClassOrInterfaceType
               identifier
                java
              unannClassType_lf_unannClassOrInterfaceType
               .
               identifier
                module
              unannClassType_lf_unannClassOrInterfaceType
               .
               identifier
                moduleTest
          methodDeclarator
           identifier
            module
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                primary
                                 primaryNoNewArray_lfno_primary
                                  methodInvocation_lfno_primary
                                   methodName
                                    identifier
                                     module
                                   (
                                   )
                ;
           }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     class
     identifier
      open
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodHeader
          result
           unannType
            unannReferenceType
             unannClassOrInterfaceType
              unannClassType_lfno_unannClassOrInterfaceType
               identifier
                java
              unannClassType_lf_unannClassOrInterfaceType
               .
               identifier
                module
              unannClassType_lf_unannClassOrInterfaceType
               .
               identifier
                moduleTest
          methodDeclarator
           identifier
            module
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                primary
                                 primaryNoNewArray_lfno_primary
                                  methodInvocation_lfno_primary
                                   methodName
                                    identifier
                                     module
                                   (
                                   )
                ;
           }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      to
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        fieldDeclaration
         unannType
          unannReferenceType
           unannClassOrInterfaceType
            unannClassType_lfno_unannClassOrInterfaceType
             identifier
              to
         variableDeclaratorList
          variableDeclarator
           variableDeclaratorId
            identifier
             with
           =
           variableInitializer
            expression
             assignmentExpression
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            primary
                             primaryNoNewArray_lfno_primary
                              literal
                               null
         ;
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodHeader
          result
           unannType
            unannReferenceType
             unannClassOrInterfaceType
              unannClassType_lfno_unannClassOrInterfaceType
               identifier
                to
          methodDeclarator
           identifier
            to
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                primary
                                 primaryNoNewArray_lfno_primary
                                  methodInvocation_lfno_primary
                                   typeName
                                    identifier
                                     with
                                   .
                                   identifier
                                    to
                                   (
                                   )
                ;
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodHeader
          result
           unannType
            unannReferenceType
             unannClassOrInterfaceType
              unannClassType_lfno_unannClassOrInterfaceType
               identifier
                to
          methodDeclarator
           identifier
            to
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    to
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   exports
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    to
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   provides
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    to
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   requires
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    to
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   uses
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
              ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                primary
                                 primaryNoNewArray_lfno_primary
                                  methodInvocation_lfno_primary
                                   methodName
                                    identifier
                                     to
                                   (
                                   )
                ;
           }
      }
 <EOF>
