compilationUnit
 ordinaryCompilation
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      Lambdas
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          result
           void
          methodDeclarator
           identifier
            main
           (
           formalParameterList
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    String
                 dims
                  [
                  ]
              variableDeclaratorId
               identifier
                args
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    List
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Name
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   list
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    classInstanceCreationExpression_lfno_primary
                                     new
                                     identifier
                                      ArrayList
                                     typeArgumentsOrDiamond
                                      <
                                      >
                                     (
                                     )
              ;
            blockStatement
             statement
              forStatement
               enhancedForStatement
                for
                (
                unannType
                 unannReferenceType
                  unannClassOrInterfaceType
                   unannClassType_lfno_unannClassOrInterfaceType
                    identifier
                     Name
                variableDeclaratorId
                 identifier
                  name
                :
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                expressionName
                                 identifier
                                  NAMES
                )
                statement
                 statementWithoutTrailingSubstatement
                  block
                   {
                   blockStatements
                    blockStatement
                     statement
                      statementWithoutTrailingSubstatement
                       expressionStatement
                        statementExpression
                         methodInvocation
                          typeName
                           identifier
                            list
                          .
                          identifier
                           add
                          (
                          argumentList
                           expression
                            assignmentExpression
                             conditionalExpression
                              conditionalOrExpression
                               conditionalAndExpression
                                inclusiveOrExpression
                                 exclusiveOrExpression
                                  andExpression
                                   equalityExpression
                                    relationalExpression
                                     shiftExpression
                                      additiveExpression
                                       multiplicativeExpression
                                        unaryExpression
                                         unaryExpressionNotPlusMinus
                                          postfixExpression
                                           expressionName
                                            identifier
                                             name
                          )
                        ;
                   }
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Predicate
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Name
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   pred1
                 =
                 variableInitializer
                  expression
                   lambdaExpression
                    lambdaParameters
                     identifier
                      name
                    ->
                    lambdaBody
                     expression
                      assignmentExpression
                       conditionalExpression
                        conditionalOrExpression
                         conditionalAndExpression
                          inclusiveOrExpression
                           exclusiveOrExpression
                            andExpression
                             equalityExpression
                              relationalExpression
                               shiftExpression
                                additiveExpression
                                 multiplicativeExpression
                                  unaryExpression
                                   unaryExpressionNotPlusMinus
                                    postfixExpression
                                     primary
                                      primaryNoNewArray_lfno_primary
                                       literal
                                        "Sally"
                                      primaryNoNewArray_lf_primary
                                       methodInvocation_lf_primary
                                        .
                                        identifier
                                         equals
                                        (
                                        argumentList
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name
                                                          .
                                                          identifier
                                                           firstName
                                        )
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Predicate
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Name
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   pred2
                 =
                 variableInitializer
                  expression
                   lambdaExpression
                    lambdaParameters
                     identifier
                      name
                    ->
                    lambdaBody
                     expression
                      assignmentExpression
                       conditionalExpression
                        conditionalOrExpression
                         conditionalAndExpression
                          inclusiveOrExpression
                           exclusiveOrExpression
                            andExpression
                             equalityExpression
                              relationalExpression
                               shiftExpression
                                additiveExpression
                                 multiplicativeExpression
                                  unaryExpression
                                   unaryExpressionNotPlusMinus
                                    postfixExpression
                                     primary
                                      primaryNoNewArray_lfno_primary
                                       literal
                                        "Queue"
                                      primaryNoNewArray_lf_primary
                                       methodInvocation_lf_primary
                                        .
                                        identifier
                                         equals
                                        (
                                        argumentList
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name
                                                          .
                                                          identifier
                                                           lastName
                                        )
              ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  typeName
                   identifier
                    list
                  .
                  identifier
                   removeIf
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     methodInvocation_lfno_primary
                                      typeName
                                       identifier
                                        pred1
                                      .
                                      identifier
                                       or
                                      (
                                      argumentList
                                       expression
                                        assignmentExpression
                                         conditionalExpression
                                          conditionalOrExpression
                                           conditionalAndExpression
                                            inclusiveOrExpression
                                             exclusiveOrExpression
                                              andExpression
                                               equalityExpression
                                                relationalExpression
                                                 shiftExpression
                                                  additiveExpression
                                                   multiplicativeExpression
                                                    unaryExpression
                                                     unaryExpressionNotPlusMinus
                                                      postfixExpression
                                                       expressionName
                                                        identifier
                                                         pred2
                                      )
                  )
                ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  methodName
                   identifier
                    printNames
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     literal
                                      "Names filtered by predicate:"
                   ,
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     methodInvocation_lfno_primary
                                      typeName
                                       identifier
                                        list
                                      .
                                      identifier
                                       toArray
                                      (
                                      argumentList
                                       expression
                                        assignmentExpression
                                         conditionalExpression
                                          conditionalOrExpression
                                           conditionalAndExpression
                                            inclusiveOrExpression
                                             exclusiveOrExpression
                                              andExpression
                                               equalityExpression
                                                relationalExpression
                                                 shiftExpression
                                                  additiveExpression
                                                   multiplicativeExpression
                                                    unaryExpression
                                                     unaryExpressionNotPlusMinus
                                                      postfixExpression
                                                       primary
                                                        arrayCreationExpression
                                                         new
                                                         classOrInterfaceType
                                                          classType_lfno_classOrInterfaceType
                                                           identifier
                                                            Name
                                                         dimExprs
                                                          dimExpr
                                                           [
                                                           expression
                                                            assignmentExpression
                                                             conditionalExpression
                                                              conditionalOrExpression
                                                               conditionalAndExpression
                                                                inclusiveOrExpression
                                                                 exclusiveOrExpression
                                                                  andExpression
                                                                   equalityExpression
                                                                    relationalExpression
                                                                     shiftExpression
                                                                      additiveExpression
                                                                       multiplicativeExpression
                                                                        unaryExpression
                                                                         unaryExpressionNotPlusMinus
                                                                          postfixExpression
                                                                           primary
                                                                            primaryNoNewArray_lfno_primary
                                                                             methodInvocation_lfno_primary
                                                                              typeName
                                                                               identifier
                                                                                list
                                                                              .
                                                                              identifier
                                                                               size
                                                                              (
                                                                              )
                                                           ]
                                      )
                  )
                ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Comparator
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Name
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   com1
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       Comparator
                                     .
                                     identifier
                                      comparing
                                     (
                                     argumentList
                                      expression
                                       lambdaExpression
                                        lambdaParameters
                                         (
                                         formalParameterList
                                          lastFormalParameter
                                           formalParameter
                                            unannType
                                             unannReferenceType
                                              unannClassOrInterfaceType
                                               unannClassType_lfno_unannClassOrInterfaceType
                                                identifier
                                                 Name
                                            variableDeclaratorId
                                             identifier
                                              name1
                                         )
                                        ->
                                        lambdaBody
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name1
                                                          .
                                                          identifier
                                                           lastName
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodInvocation_lf_primary
                                     .
                                     identifier
                                      thenComparing
                                     (
                                     argumentList
                                      expression
                                       lambdaExpression
                                        lambdaParameters
                                         identifier
                                          name2
                                        ->
                                        lambdaBody
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name2
                                                          .
                                                          identifier
                                                           firstName
                                     )
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Comparator
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Name
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   com2
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       Comparator
                                     .
                                     typeArguments
                                      <
                                      typeArgumentList
                                       typeArgument
                                        referenceType
                                         classOrInterfaceType
                                          classType_lfno_classOrInterfaceType
                                           identifier
                                            Name
                                       ,
                                       typeArgument
                                        referenceType
                                         classOrInterfaceType
                                          classType_lfno_classOrInterfaceType
                                           identifier
                                            String
                                      >
                                     identifier
                                      comparing
                                     (
                                     argumentList
                                      expression
                                       lambdaExpression
                                        lambdaParameters
                                         identifier
                                          name1
                                        ->
                                        lambdaBody
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name1
                                                          .
                                                          identifier
                                                           lastName
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodInvocation_lf_primary
                                     .
                                     identifier
                                      thenComparing
                                     (
                                     argumentList
                                      expression
                                       lambdaExpression
                                        lambdaParameters
                                         identifier
                                          name2
                                        ->
                                        lambdaBody
                                         expression
                                          assignmentExpression
                                           conditionalExpression
                                            conditionalOrExpression
                                             conditionalAndExpression
                                              inclusiveOrExpression
                                               exclusiveOrExpression
                                                andExpression
                                                 equalityExpression
                                                  relationalExpression
                                                   shiftExpression
                                                    additiveExpression
                                                     multiplicativeExpression
                                                      unaryExpression
                                                       unaryExpressionNotPlusMinus
                                                        postfixExpression
                                                         expressionName
                                                          ambiguousName
                                                           identifier
                                                            name2
                                                          .
                                                          identifier
                                                           firstName
                                     )
              ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 assignment
                  leftHandSide
                   expressionName
                    identifier
                     copy
                  assignmentOperator
                   =
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       Arrays
                                     .
                                     identifier
                                      copyOf
                                     (
                                     argumentList
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      expressionName
                                                       identifier
                                                        NAMES
                                      ,
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      expressionName
                                                       ambiguousName
                                                        identifier
                                                         NAMES
                                                       .
                                                       identifier
                                                        length
                                     )
                ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  typeName
                   identifier
                    Arrays
                  .
                  identifier
                   sort
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   expressionName
                                    identifier
                                     copy
                   ,
                   expression
                    lambdaExpression
                     lambdaParameters
                      (
                      inferredFormalParameterList
                       identifier
                        a
                       ,
                       identifier
                        b
                      )
                     ->
                     lambdaBody
                      expression
                       assignmentExpression
                        conditionalExpression
                         conditionalOrExpression
                          conditionalAndExpression
                           inclusiveOrExpression
                            exclusiveOrExpression
                             andExpression
                              equalityExpression
                               relationalExpression
                                shiftExpression
                                 additiveExpression
                                  multiplicativeExpression
                                   unaryExpression
                                    unaryExpressionNotPlusMinus
                                     postfixExpression
                                      primary
                                       primaryNoNewArray_lfno_primary
                                        methodInvocation_lfno_primary
                                         typeName
                                          identifier
                                           a
                                         .
                                         identifier
                                          compareTo
                                         (
                                         argumentList
                                          expression
                                           assignmentExpression
                                            conditionalExpression
                                             conditionalOrExpression
                                              conditionalAndExpression
                                               inclusiveOrExpression
                                                exclusiveOrExpression
                                                 andExpression
                                                  equalityExpression
                                                   relationalExpression
                                                    shiftExpression
                                                     additiveExpression
                                                      multiplicativeExpression
                                                       unaryExpression
                                                        unaryExpressionNotPlusMinus
                                                         postfixExpression
                                                          expressionName
                                                           identifier
                                                            b
                                         )
                  )
                ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  methodName
                   identifier
                    printNames
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     literal
                                      "Names sorted with lambda expression:"
                   ,
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   expressionName
                                    identifier
                                     copy
                  )
                ;
           }
      }
  typeDeclaration
   interfaceDeclaration
    normalInterfaceDeclaration
     interface
     identifier
      Formula
     interfaceBody
      {
      interfaceMemberDeclaration
       interfaceMethodDeclaration
        methodHeader
         result
          unannType
           unannPrimitiveType
            numericType
             floatingPointType
              double
         methodDeclarator
          identifier
           calculate
          (
          formalParameterList
           lastFormalParameter
            formalParameter
             unannType
              unannPrimitiveType
               numericType
                integralType
                 int
             variableDeclaratorId
              identifier
               a
          )
        methodBody
         ;
      interfaceMemberDeclaration
       interfaceMethodDeclaration
        interfaceMethodModifier
         default
        methodHeader
         result
          unannType
           unannPrimitiveType
            numericType
             floatingPointType
              double
         methodDeclarator
          identifier
           sqrt
          (
          formalParameterList
           lastFormalParameter
            formalParameter
             unannType
              unannPrimitiveType
               numericType
                integralType
                 int
             variableDeclaratorId
              identifier
               a
          )
        methodBody
         block
          {
          blockStatements
           blockStatement
            statement
             statementWithoutTrailingSubstatement
              returnStatement
               return
               expression
                assignmentExpression
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               primary
                                primaryNoNewArray_lfno_primary
                                 methodInvocation_lfno_primary
                                  typeName
                                   identifier
                                    Math
                                  .
                                  identifier
                                   sqrt
                                  (
                                  argumentList
                                   expression
                                    assignmentExpression
                                     conditionalExpression
                                      conditionalOrExpression
                                       conditionalAndExpression
                                        inclusiveOrExpression
                                         exclusiveOrExpression
                                          andExpression
                                           equalityExpression
                                            relationalExpression
                                             shiftExpression
                                              additiveExpression
                                               multiplicativeExpression
                                                unaryExpression
                                                 unaryExpressionNotPlusMinus
                                                  postfixExpression
                                                   expressionName
                                                    identifier
                                                     a
                                  )
               ;
          }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      For
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodHeader
          result
           void
          methodDeclarator
           identifier
            bar
           (
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAge
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodReference_lfno_primary
                                     expressionName
                                      identifier
                                       Computer
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Integer
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   computerAge
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       getAge
                                     .
                                     identifier
                                      apply
                                     (
                                     argumentList
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      expressionName
                                                       identifier
                                                        c1
                                     )
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    this
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt2
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    typeName
                                     identifier
                                      MyClass
                                    .
                                    this
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt3
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     methodName
                                      identifier
                                       generate
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt4
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       MyClass
                                     .
                                     identifier
                                      generate
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt5
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       MyClass
                                     .
                                     identifier
                                      twice
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodInvocation_lf_primary
                                     .
                                     identifier
                                      nested
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt6
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     methodName
                                      identifier
                                       twice
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodInvocation_lf_primary
                                     .
                                     identifier
                                      nested
                                     (
                                     )
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      getAge
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   getAgeAlt7
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    this
                                   primaryNoNewArray_lf_primary
                                    fieldAccess_lf_primary
                                     .
                                     identifier
                                      singletonInstanceMethod
                                   primaryNoNewArray_lf_primary
                                    methodReference_lf_primary
                                     ::
                                     identifier
                                      get
              ;
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  methodName
                   identifier
                    autodetect
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     this
                                    primaryNoNewArray_lf_primary
                                     fieldAccess_lf_primary
                                      .
                                      identifier
                                       beans
                   ,
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     (
                                     expression
                                      assignmentExpression
                                       conditionalExpression
                                        conditionalOrExpression
                                         conditionalAndExpression
                                          inclusiveOrExpression
                                           exclusiveOrExpression
                                            andExpression
                                             equalityExpression
                                              relationalExpression
                                               shiftExpression
                                                additiveExpression
                                                 multiplicativeExpression
                                                  unaryExpression
                                                   unaryExpressionNotPlusMinus
                                                    castExpression
                                                     (
                                                     referenceType
                                                      classOrInterfaceType
                                                       classType_lfno_classOrInterfaceType
                                                        identifier
                                                         AutodetectCapableMBeanInfoAssembler
                                                     )
                                                     unaryExpressionNotPlusMinus
                                                      postfixExpression
                                                       primary
                                                        primaryNoNewArray_lfno_primary
                                                         this
                                                        primaryNoNewArray_lf_primary
                                                         fieldAccess_lf_primary
                                                          .
                                                          identifier
                                                           assembler
                                     )
                                    primaryNoNewArray_lf_primary
                                     methodReference_lf_primary
                                      ::
                                      identifier
                                       includeBean
                  )
                ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    TriFunction
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          String
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                     ,
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Computer
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   c6Function
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodReference_lfno_primary
                                     classType
                                      identifier
                                       Computer
                                     ::
                                     new
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Computer
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   c3
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       c6Function
                                     .
                                     identifier
                                      apply
                                     (
                                     argumentList
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      primary
                                                       primaryNoNewArray_lfno_primary
                                                        literal
                                                         2008
                                      ,
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      primary
                                                       primaryNoNewArray_lfno_primary
                                                        literal
                                                         "black"
                                      ,
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      primary
                                                       primaryNoNewArray_lfno_primary
                                                        literal
                                                         90
                                     )
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    Function
                   typeArguments
                    <
                    typeArgumentList
                     typeArgument
                      referenceType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         identifier
                          Integer
                     ,
                     typeArgument
                      referenceType
                       arrayType
                        classOrInterfaceType
                         classType_lfno_classOrInterfaceType
                          identifier
                           Computer
                        dims
                         [
                         ]
                    >
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   computerCreator
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodReference_lfno_primary
                                     arrayType
                                      classOrInterfaceType
                                       classType_lfno_classOrInterfaceType
                                        identifier
                                         Computer
                                      dims
                                       [
                                       ]
                                     ::
                                     new
              ;
            blockStatement
             localVariableDeclarationStatement
              localVariableDeclaration
               unannType
                unannReferenceType
                 unannArrayType
                  unannClassOrInterfaceType
                   unannClassType_lfno_unannClassOrInterfaceType
                    identifier
                     Computer
                  dims
                   [
                   ]
               variableDeclaratorList
                variableDeclarator
                 variableDeclaratorId
                  identifier
                   computerArray
                 =
                 variableInitializer
                  expression
                   assignmentExpression
                    conditionalExpression
                     conditionalOrExpression
                      conditionalAndExpression
                       inclusiveOrExpression
                        exclusiveOrExpression
                         andExpression
                          equalityExpression
                           relationalExpression
                            shiftExpression
                             additiveExpression
                              multiplicativeExpression
                               unaryExpression
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    methodInvocation_lfno_primary
                                     typeName
                                      identifier
                                       computerCreator
                                     .
                                     identifier
                                      apply
                                     (
                                     argumentList
                                      expression
                                       assignmentExpression
                                        conditionalExpression
                                         conditionalOrExpression
                                          conditionalAndExpression
                                           inclusiveOrExpression
                                            exclusiveOrExpression
                                             andExpression
                                              equalityExpression
                                               relationalExpression
                                                shiftExpression
                                                 additiveExpression
                                                  multiplicativeExpression
                                                   unaryExpression
                                                    unaryExpressionNotPlusMinus
                                                     postfixExpression
                                                      primary
                                                       primaryNoNewArray_lfno_primary
                                                        literal
                                                         5
                                     )
              ;
           }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      Annotations
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        fieldDeclaration
         fieldModifier
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Valid
         fieldModifier
          private
         unannType
          unannReferenceType
           unannClassOrInterfaceType
            unannClassType_lfno_unannClassOrInterfaceType
             identifier
              List
             typeArguments
              <
              typeArgumentList
               typeArgument
                referenceType
                 classOrInterfaceType
                  classType_lfno_classOrInterfaceType
                   annotation
                    markerAnnotation
                     @
                     typeName
                      identifier
                       NotNull
                   identifier
                    String
              >
         variableDeclaratorList
          variableDeclarator
           variableDeclaratorId
            identifier
             property
         ;
      }
  typeDeclaration
   interfaceDeclaration
    normalInterfaceDeclaration
     interfaceModifier
      public
     interface
     identifier
      CallableProcessingInterceptor
     interfaceBody
      {
      interfaceMemberDeclaration
       interfaceMethodDeclaration
        interfaceMethodModifier
         default
        methodHeader
         typeParameters
          <
          typeParameterList
           typeParameter
            identifier
             T
          >
         result
          void
         methodDeclarator
          identifier
           beforeConcurrentHandling
          (
          formalParameterList
           formalParameters
            formalParameter
             unannType
              unannReferenceType
               unannClassOrInterfaceType
                unannClassType_lfno_unannClassOrInterfaceType
                 identifier
                  NativeWebRequest
             variableDeclaratorId
              identifier
               request
           ,
           lastFormalParameter
            formalParameter
             unannType
              unannReferenceType
               unannClassOrInterfaceType
                unannClassType_lfno_unannClassOrInterfaceType
                 identifier
                  Callable
                 typeArguments
                  <
                  typeArgumentList
                   typeArgument
                    referenceType
                     classOrInterfaceType
                      classType_lfno_classOrInterfaceType
                       identifier
                        T
                  >
             variableDeclaratorId
              identifier
               task
          )
         throws_
          throws
          exceptionTypeList
           exceptionType
            classType
             identifier
              Exception
        methodBody
         block
          {
          }
      }
  typeDeclaration
   interfaceDeclaration
    normalInterfaceDeclaration
     interfaceModifier
      annotation
       markerAnnotation
        @
        typeName
         identifier
          FunctionalInterface
     interfaceModifier
      public
     interface
     identifier
      RouterFunction
     typeParameters
      <
      typeParameterList
       typeParameter
        identifier
         T
        typeBound
         extends
         typeVariable
          identifier
           ServerResponse
      >
     interfaceBody
      {
      interfaceMemberDeclaration
       interfaceMethodDeclaration
        interfaceMethodModifier
         default
        methodHeader
         typeParameters
          <
          typeParameterList
           typeParameter
            identifier
             S
            typeBound
             extends
             typeVariable
              identifier
               ServerResponse
          >
         result
          unannType
           unannReferenceType
            unannClassOrInterfaceType
             unannClassType_lfno_unannClassOrInterfaceType
              identifier
               RouterFunction
              typeArguments
               <
               typeArgumentList
                typeArgument
                 referenceType
                  classOrInterfaceType
                   classType_lfno_classOrInterfaceType
                    identifier
                     S
               >
         methodDeclarator
          identifier
           filter
          (
          formalParameterList
           lastFormalParameter
            formalParameter
             unannType
              unannReferenceType
               unannClassOrInterfaceType
                unannClassType_lfno_unannClassOrInterfaceType
                 identifier
                  HandlerFilterFunction
                 typeArguments
                  <
                  typeArgumentList
                   typeArgument
                    referenceType
                     classOrInterfaceType
                      classType_lfno_classOrInterfaceType
                       identifier
                        T
                   ,
                   typeArgument
                    referenceType
                     classOrInterfaceType
                      classType_lfno_classOrInterfaceType
                       identifier
                        S
                  >
             variableDeclaratorId
              identifier
               filterFunction
          )
        methodBody
         block
          {
          blockStatements
           blockStatement
            statement
             statementWithoutTrailingSubstatement
              returnStatement
               return
               expression
                assignmentExpression
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               primary
                                primaryNoNewArray_lfno_primary
                                 classInstanceCreationExpression_lfno_primary
                                  new
                                  identifier
                                   RouterFunctions
                                  .
                                  identifier
                                   FilteredRouterFunction
                                  typeArgumentsOrDiamond
                                   <
                                   >
                                  (
                                  argumentList
                                   expression
                                    assignmentExpression
                                     conditionalExpression
                                      conditionalOrExpression
                                       conditionalAndExpression
                                        inclusiveOrExpression
                                         exclusiveOrExpression
                                          andExpression
                                           equalityExpression
                                            relationalExpression
                                             shiftExpression
                                              additiveExpression
                                               multiplicativeExpression
                                                unaryExpression
                                                 unaryExpressionNotPlusMinus
                                                  postfixExpression
                                                   primary
                                                    primaryNoNewArray_lfno_primary
                                                     this
                                   ,
                                   expression
                                    assignmentExpression
                                     conditionalExpression
                                      conditionalOrExpression
                                       conditionalAndExpression
                                        inclusiveOrExpression
                                         exclusiveOrExpression
                                          andExpression
                                           equalityExpression
                                            relationalExpression
                                             shiftExpression
                                              additiveExpression
                                               multiplicativeExpression
                                                unaryExpression
                                                 unaryExpressionNotPlusMinus
                                                  postfixExpression
                                                   expressionName
                                                    identifier
                                                     filterFunction
                                  )
               ;
          }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     class
     identifier
      Unicode
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          result
           void
          methodDeclarator
           identifier
            main
           (
           formalParameterList
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    String
                 dims
                  [
                  ]
              variableDeclaratorId
               identifier
                args
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               expressionStatement
                statementExpression
                 methodInvocation
                  typeName
                   packageOrTypeName
                    identifier
                     System
                   .
                   identifier
                    out
                  .
                  identifier
                   println
                  (
                  argumentList
                   expression
                    assignmentExpression
                     conditionalExpression
                      conditionalOrExpression
                       conditionalAndExpression
                        inclusiveOrExpression
                         exclusiveOrExpression
                          andExpression
                           equalityExpression
                            relationalExpression
                             shiftExpression
                              additiveExpression
                               multiplicativeExpression
                                unaryExpression
                                 unaryExpressionNotPlusMinus
                                  postfixExpression
                                   primary
                                    primaryNoNewArray_lfno_primary
                                     literal
                                      "A = \uuu0041"
                  )
                ;
           }
      }
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     classModifier
      public
     class
     identifier
      Annos
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy4
          annotationTypeBody
           {
           annotationTypeMemberDeclaration
            annotationTypeElementDeclaration
             unannType
              unannReferenceType
               unannArrayType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   String
                dims
                 [
                 ]
             identifier
              value
             (
             )
             ;
           }
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           annotation
            markerAnnotation
             @
             typeName
              identifier
               Documented
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Retention
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            expressionName
                             ambiguousName
                              identifier
                               RetentionPolicy
                             .
                             identifier
                              RUNTIME
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Target
             (
             elementValue
              elementValueArrayInitializer
               {
               elementValueList
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_USE
                ,
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_PARAMETER
               }
             )
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy03
          annotationTypeBody
           {
           annotationTypeMemberDeclaration
            annotationTypeElementDeclaration
             unannType
              unannReferenceType
               unannArrayType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   Dummy3
                dims
                 [
                 ]
             identifier
              value
             (
             )
             ;
           }
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           annotation
            markerAnnotation
             @
             typeName
              identifier
               Documented
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Retention
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            expressionName
                             ambiguousName
                              identifier
                               RetentionPolicy
                             .
                             identifier
                              RUNTIME
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Target
             (
             elementValue
              elementValueArrayInitializer
               {
               elementValueList
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_USE
                ,
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_PARAMETER
               }
             )
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy01
          annotationTypeBody
           {
           annotationTypeMemberDeclaration
            annotationTypeElementDeclaration
             unannType
              unannReferenceType
               unannArrayType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   Dummy1
                dims
                 [
                 ]
             identifier
              value
             (
             )
             ;
           }
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           annotation
            markerAnnotation
             @
             typeName
              identifier
               Documented
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Retention
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            expressionName
                             ambiguousName
                              identifier
                               RetentionPolicy
                             .
                             identifier
                              RUNTIME
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Target
             (
             elementValue
              elementValueArrayInitializer
               {
               elementValueList
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_USE
                ,
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_PARAMETER
               }
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Repeatable
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            primary
                             primaryNoNewArray_lfno_primary
                              typeName
                               identifier
                                Dummy01
                              .
                              class
             )
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy1
          annotationTypeBody
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           annotation
            markerAnnotation
             @
             typeName
              identifier
               Documented
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Retention
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            expressionName
                             ambiguousName
                              identifier
                               RetentionPolicy
                             .
                             identifier
                              RUNTIME
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Target
             (
             elementValue
              elementValueArrayInitializer
               {
               elementValueList
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_USE
                ,
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_PARAMETER
               }
             )
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy2
          annotationTypeBody
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        interfaceDeclaration
         annotationTypeDeclaration
          interfaceModifier
           annotation
            markerAnnotation
             @
             typeName
              identifier
               Documented
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Retention
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            expressionName
                             ambiguousName
                              identifier
                               RetentionPolicy
                             .
                             identifier
                              RUNTIME
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Target
             (
             elementValue
              elementValueArrayInitializer
               {
               elementValueList
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_USE
                ,
                elementValue
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         shiftExpression
                          additiveExpression
                           multiplicativeExpression
                            unaryExpression
                             unaryExpressionNotPlusMinus
                              postfixExpression
                               expressionName
                                ambiguousName
                                 identifier
                                  ElementType
                                .
                                identifier
                                 TYPE_PARAMETER
               }
             )
          interfaceModifier
           annotation
            singleElementAnnotation
             @
             typeName
              identifier
               Repeatable
             (
             elementValue
              conditionalExpression
               conditionalOrExpression
                conditionalAndExpression
                 inclusiveOrExpression
                  exclusiveOrExpression
                   andExpression
                    equalityExpression
                     relationalExpression
                      shiftExpression
                       additiveExpression
                        multiplicativeExpression
                         unaryExpression
                          unaryExpressionNotPlusMinus
                           postfixExpression
                            primary
                             primaryNoNewArray_lfno_primary
                              typeName
                               identifier
                                Dummy03
                              .
                              class
             )
          interfaceModifier
           public
          @
          interface
          identifier
           Dummy3
          annotationTypeBody
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodModifier
          annotation
           singleElementAnnotation
            @
            typeName
             identifier
              Dummy4
            (
            elementValue
             conditionalExpression
              conditionalOrExpression
               conditionalAndExpression
                inclusiveOrExpression
                 exclusiveOrExpression
                  andExpression
                   equalityExpression
                    relationalExpression
                     shiftExpression
                      additiveExpression
                       multiplicativeExpression
                        unaryExpression
                         unaryExpressionNotPlusMinus
                          postfixExpression
                           primary
                            primaryNoNewArray_lfno_primary
                             literal
                              "#1"
            )
         methodModifier
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy1
         methodModifier
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy3
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             identifier
              T
             typeBound
              extends
              typeVariable
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy2
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy3
               identifier
                Object
           >
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy1
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy3
          result
           unannType
            unannReferenceType
             unannArrayType
              unannClassOrInterfaceType
               unannClassType_lfno_unannClassOrInterfaceType
                identifier
                 T
              dims
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy3
               [
               ]
          methodDeclarator
           identifier
            foo
           (
           formalParameterList
            formalParameters
             formalParameter
              variableModifier
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    T
                 dims
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy2
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy3
                  [
                  ]
              variableDeclaratorId
               identifier
                arr
            ,
            lastFormalParameter
             variableModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy1
             variableModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             unannType
              unannReferenceType
               unannClassOrInterfaceType
                unannClassType_lfno_unannClassOrInterfaceType
                 identifier
                  T
             annotation
              markerAnnotation
               @
               typeName
                identifier
                 Dummy1
             annotation
              markerAnnotation
               @
               typeName
                identifier
                 Dummy3
             ...
             variableDeclaratorId
              identifier
               t
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               castExpression
                                (
                                referenceType
                                 arrayType
                                  classOrInterfaceType
                                   classType_lfno_classOrInterfaceType
                                    annotation
                                     markerAnnotation
                                      @
                                      typeName
                                       identifier
                                        Dummy1
                                    annotation
                                     markerAnnotation
                                      @
                                      typeName
                                       identifier
                                        Dummy3
                                    identifier
                                     T
                                  dims
                                   [
                                   ]
                                )
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
                ;
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodModifier
          annotation
           singleElementAnnotation
            @
            typeName
             identifier
              Dummy4
            (
            elementValue
             conditionalExpression
              conditionalOrExpression
               conditionalAndExpression
                inclusiveOrExpression
                 exclusiveOrExpression
                  andExpression
                   equalityExpression
                    relationalExpression
                     shiftExpression
                      additiveExpression
                       multiplicativeExpression
                        unaryExpression
                         unaryExpressionNotPlusMinus
                          postfixExpression
                           primary
                            primaryNoNewArray_lfno_primary
                             literal
                              ""
            )
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy1
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy2
             identifier
              T
             typeBound
              extends
              typeVariable
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy3
               identifier
                Object
           >
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy1
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy3
          result
           unannType
            unannReferenceType
             unannArrayType
              unannClassOrInterfaceType
               unannClassType_lfno_unannClassOrInterfaceType
                identifier
                 T
              dims
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy3
               [
               ]
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy2
               [
               ]
          methodDeclarator
           identifier
            foo2
           (
           formalParameterList
            lastFormalParameter
             formalParameter
              variableModifier
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy1
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    T
                 dims
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy2
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy3
                  [
                  ]
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy1
                  annotation
                   markerAnnotation
                    @
                    typeName
                     identifier
                      Dummy3
                  [
                  ]
              variableDeclaratorId
               identifier
                arr
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               castExpression
                                (
                                referenceType
                                 arrayType
                                  classOrInterfaceType
                                   classType_lfno_classOrInterfaceType
                                    annotation
                                     markerAnnotation
                                      @
                                      typeName
                                       identifier
                                        Dummy1
                                    annotation
                                     markerAnnotation
                                      @
                                      typeName
                                       identifier
                                        Dummy2
                                    identifier
                                     T
                                  dims
                                   [
                                   ]
                                   annotation
                                    markerAnnotation
                                     @
                                     typeName
                                      identifier
                                       Dummy1
                                   annotation
                                    markerAnnotation
                                     @
                                     typeName
                                      identifier
                                       Dummy2
                                   [
                                   ]
                                )
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
                ;
           }
      classBodyDeclaration
       classMemberDeclaration
        classDeclaration
         normalClassDeclaration
          class
          identifier
           Gen
          typeParameters
           <
           typeParameterList
            typeParameter
             identifier
              T
           >
          classBody
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        classDeclaration
         normalClassDeclaration
          class
          identifier
           A
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy1
             identifier
              T
             typeBound
              extends
              classOrInterfaceType
               classType_lfno_classOrInterfaceType
                annotation
                 markerAnnotation
                  @
                  typeName
                   identifier
                    Dummy1
                identifier
                 Gen
                typeArguments
                 <
                 typeArgumentList
                  typeArgument
                   referenceType
                    classOrInterfaceType
                     classType_lfno_classOrInterfaceType
                      annotation
                       markerAnnotation
                        @
                        typeName
                         identifier
                          Dummy1
                      identifier
                       T
                 >
           >
          classBody
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             identifier
              T
           >
          result
           void
          methodDeclarator
           identifier
            foo3
           (
           formalParameterList
            formalParameters
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   T
              variableDeclaratorId
               identifier
                t
            ,
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   Gen
                  typeArguments
                   <
                   typeArgumentList
                    typeArgument
                     wildcard
                      annotation
                       markerAnnotation
                        @
                        typeName
                         identifier
                          Dummy1
                      annotation
                       markerAnnotation
                        @
                        typeName
                         identifier
                          Dummy3
                      ?
                      wildcardBounds
                       super
                       referenceType
                        classOrInterfaceType
                         classType_lfno_classOrInterfaceType
                          annotation
                           markerAnnotation
                            @
                            typeName
                             identifier
                              Dummy1
                          annotation
                           markerAnnotation
                            @
                            typeName
                             identifier
                              Dummy3
                          identifier
                           T
                   >
              variableDeclaratorId
               identifier
                c
           )
         methodBody
          block
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             identifier
              T
           >
          result
           void
          methodDeclarator
           identifier
            foo33
           (
           formalParameterList
            formalParameters
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   T
              variableDeclaratorId
               identifier
                t
            ,
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   Gen
                  typeArguments
                   <
                   typeArgumentList
                    typeArgument
                     wildcard
                      annotation
                       markerAnnotation
                        @
                        typeName
                         identifier
                          Dummy1
                      annotation
                       markerAnnotation
                        @
                        typeName
                         identifier
                          Dummy3
                      ?
                   >
              variableDeclaratorId
               identifier
                c
           )
         methodBody
          block
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             identifier
              T
            ,
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy1
             identifier
              S
           >
          result
           void
          methodDeclarator
           identifier
            foo333
           (
           formalParameterList
            formalParameters
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   T
              variableDeclaratorId
               identifier
                t
            ,
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannClassOrInterfaceType
                 unannClassType_lfno_unannClassOrInterfaceType
                  identifier
                   Gen
                  typeArguments
                   <
                   typeArgumentList
                    typeArgument
                     referenceType
                      arrayType
                       classOrInterfaceType
                        classType_lfno_classOrInterfaceType
                         annotation
                          markerAnnotation
                           @
                           typeName
                            identifier
                             Dummy1
                         annotation
                          markerAnnotation
                           @
                           typeName
                            identifier
                             Dummy3
                         identifier
                          T
                       dims
                        annotation
                         markerAnnotation
                          @
                          typeName
                           identifier
                            Dummy1
                        [
                        ]
                   >
              variableDeclaratorId
               identifier
                c
           )
         methodBody
          block
           {
           }
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodModifier
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy3
         methodHeader
          typeParameters
           <
           typeParameterList
            typeParameter
             typeParameterModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             identifier
              T
             typeBound
              extends
              classOrInterfaceType
               classType_lfno_classOrInterfaceType
                annotation
                 markerAnnotation
                  @
                  typeName
                   identifier
                    Dummy3
                identifier
                 Gen
                typeArguments
                 <
                 typeArgumentList
                  typeArgument
                   wildcard
                    annotation
                     markerAnnotation
                      @
                      typeName
                       identifier
                        Dummy1
                    ?
                    wildcardBounds
                     super
                     referenceType
                      classOrInterfaceType
                       classType_lfno_classOrInterfaceType
                        annotation
                         markerAnnotation
                          @
                          typeName
                           identifier
                            Dummy1
                        identifier
                         T
                 >
           >
          annotation
           markerAnnotation
            @
            typeName
             identifier
              Dummy3
          result
           unannType
            unannReferenceType
             unannArrayType
              unannClassOrInterfaceType
               unannClassType_lfno_unannClassOrInterfaceType
                identifier
                 T
              dims
               annotation
                markerAnnotation
                 @
                 typeName
                  identifier
                   Dummy3
               [
               ]
          methodDeclarator
           identifier
            f
           (
           formalParameterList
            lastFormalParameter
             variableModifier
              annotation
               markerAnnotation
                @
                typeName
                 identifier
                  Dummy3
             unannType
              unannReferenceType
               unannClassOrInterfaceType
                unannClassType_lfno_unannClassOrInterfaceType
                 identifier
                  T
             annotation
              markerAnnotation
               @
               typeName
                identifier
                 Dummy3
             ...
             variableDeclaratorId
              identifier
               t
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              statementWithoutTrailingSubstatement
               returnStatement
                return
                expression
                 assignmentExpression
                  conditionalExpression
                   conditionalOrExpression
                    conditionalAndExpression
                     inclusiveOrExpression
                      exclusiveOrExpression
                       andExpression
                        equalityExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               castExpression
                                (
                                referenceType
                                 arrayType
                                  classOrInterfaceType
                                   classType_lfno_classOrInterfaceType
                                    annotation
                                     markerAnnotation
                                      @
                                      typeName
                                       identifier
                                        Dummy3
                                    identifier
                                     T
                                  dims
                                   annotation
                                    markerAnnotation
                                     @
                                     typeName
                                      identifier
                                       Dummy3
                                   [
                                   ]
                                )
                                unaryExpressionNotPlusMinus
                                 postfixExpression
                                  primary
                                   primaryNoNewArray_lfno_primary
                                    literal
                                     null
                ;
           }
      }
 <EOF>
