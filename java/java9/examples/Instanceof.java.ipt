compilationUnit
 ordinaryCompilation
  typeDeclaration
   classDeclaration
    normalClassDeclaration
     class
     identifier
      InstanceOf
     classBody
      {
      classBodyDeclaration
       classMemberDeclaration
        methodDeclaration
         methodModifier
          public
         methodModifier
          static
         methodHeader
          result
           void
          methodDeclarator
           identifier
            main
           (
           formalParameterList
            lastFormalParameter
             formalParameter
              unannType
               unannReferenceType
                unannArrayType
                 unannClassOrInterfaceType
                  unannClassType_lfno_unannClassOrInterfaceType
                   identifier
                    String
                 dims
                  [
                  ]
              variableDeclaratorId
               identifier
                args
           )
         methodBody
          block
           {
           blockStatements
            blockStatement
             statement
              ifThenStatement
               if
               (
               expression
                assignmentExpression
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                expressionName
                                 identifier
                                  args
                         instanceof
                         referenceType
                          arrayType
                           classOrInterfaceType
                            classType_lfno_classOrInterfaceType
                             identifier
                              String
                           dims
                            [
                            ]
               )
               statement
                statementWithoutTrailingSubstatement
                 block
                  {
                  }
            blockStatement
             statement
              ifThenStatement
               if
               (
               expression
                assignmentExpression
                 conditionalExpression
                  conditionalOrExpression
                   conditionalAndExpression
                    inclusiveOrExpression
                     exclusiveOrExpression
                      andExpression
                       equalityExpression
                        relationalExpression
                         relationalExpression
                          shiftExpression
                           additiveExpression
                            multiplicativeExpression
                             unaryExpression
                              unaryExpressionNotPlusMinus
                               postfixExpression
                                expressionName
                                 identifier
                                  args
                         instanceof
                         referenceType
                          arrayType
                           classOrInterfaceType
                            classType_lfno_classOrInterfaceType
                             identifier
                              a
                            classType_lf_classOrInterfaceType
                             .
                             identifier
                              String
                           dims
                            [
                            ]
               )
               statement
                statementWithoutTrailingSubstatement
                 block
                  {
                  }
           }
      }
 <EOF>
