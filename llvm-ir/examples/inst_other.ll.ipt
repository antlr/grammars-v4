compilationUnit
 topLevelEntity
  funcDef
   define
   funcHeader
    type
     intType
      i32
    @g
    (
    params
    )
   funcBody
    {
    basicBlock
     0:
     terminator
      retTerm
       ret
       concreteType
        intType
         i32
       value
        constant
         intConst
          42
    }
 topLevelEntity
  funcDef
   define
   funcHeader
    type
     void
    @h
    (
    params
     param
      type
       intType
        i32
      %x
    )
   funcBody
    {
    basicBlock
     0:
     terminator
      retTerm
       ret
       void
    }
 topLevelEntity
  funcDef
   define
   funcHeader
    type
     void
    @f
    (
    params
    )
   funcBody
    {
    basicBlock
     0:
     instruction
      localDefInst
       %1
       =
       valueInstruction
        iCmpInst
         icmp
         iPred
          eq
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           constant
            intConst
             1
         ,
         value
          constant
           intConst
            2
     terminator
      condBrTerm
       br
       i1
       value
        %1
       ,
       label
        label
        %foo
       ,
       label
        label
        %baz
    basicBlock
     foo:
     instruction
      localDefInst
       %2
       =
       valueInstruction
        fCmpInst
         fcmp
         fPred
          oeq
         typeValue
          firstClassType
           concreteType
            floatType
             floatKind
              double
          value
           constant
            floatConst
             3.0
         ,
         value
          constant
           floatConst
            4.0
     terminator
      condBrTerm
       br
       i1
       value
        %2
       ,
       label
        label
        %bar
       ,
       label
        label
        %baz
    basicBlock
     bar:
     terminator
      brTerm
       br
       label
        label
        %baz
    basicBlock
     baz:
     instruction
      localDefInst
       %3
       =
       valueInstruction
        phiInst
         phi
         type
          intType
           i32
         inc
          [
          value
           constant
            intConst
             10
          ,
          %foo
          ]
         ,
         inc
          [
          value
           constant
            intConst
             20
          ,
          %bar
          ]
         ,
         inc
          [
          value
           constant
            intConst
             30
          ,
          %baz
          ]
     instruction
      localDefInst
       %4
       =
       valueInstruction
        selectInst
         select
         typeValue
          firstClassType
           concreteType
            intType
             i1
          value
           constant
            boolConst
             true
         ,
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           constant
            intConst
             11
         ,
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           constant
            intConst
             22
     instruction
      localDefInst
       %5
       =
       valueInstruction
        callInst
         call
         type
          intType
           i32
         value
          constant
           @g
         (
         args
         )
     instruction
      valueInstruction
       callInst
        call
        type
         void
        value
         constant
          @h
        (
        args
         arg
          concreteType
           intType
            i32
          value
           constant
            intConst
             30
        )
     instruction
      localDefInst
       %6
       =
       valueInstruction
        vaargInst
         va_arg
         typeValue
          firstClassType
           concreteType
            pointerType
             type
              intType
               i8
             *
          value
           constant
            nullConst
             null
         ,
         type
          intType
           i32
     instruction
      localDefInst
       %7
       =
       valueInstruction
        landingPadInst
         landingpad
         type
          structType
           {
           type
            type
             intType
              i8
            *
           ,
           type
            intType
             i32
           }
         clause
          catch
          typeValue
           firstClassType
            concreteType
             pointerType
              type
               type
                intType
                 i8
               *
              *
           value
            constant
             nullConst
              null
     terminator
      retTerm
       ret
       void
    basicBlock
     handler0:
     instruction
      localDefInst
       %8
       =
       valueInstruction
        catchPadInst
         catchpad
         within
         %cs
         [
         exceptionArg
          concreteType
           pointerType
            type
             type
              intType
               i8
             *
            *
          value
           constant
            nullConst
             null
         ]
     terminator
      retTerm
       ret
       void
    basicBlock
     handler1:
     instruction
      localDefInst
       %9
       =
       valueInstruction
        cleanupPadInst
         cleanuppad
         within
         exceptionPad
          %cs
         [
         exceptionArg
          concreteType
           pointerType
            type
             type
              intType
               i8
             *
            *
          value
           constant
            nullConst
             null
         ]
     terminator
      retTerm
       ret
       void
    basicBlock
     dispatch:
     terminator
      localDefTerm
       %cs
       =
       valueTerminator
        catchSwitchTerm
         catchswitch
         within
         exceptionPad
          noneConst
           none
         [
         handlers
          label
           label
           %handler0
          ,
          label
           label
           %handler1
         ]
         unwind
         unwindTarget
          to
          caller
    }
 <EOF>
