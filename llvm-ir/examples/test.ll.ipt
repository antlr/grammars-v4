compilationUnit
 topLevelEntity
  targetDef
   targetTriple
    target
    triple
    =
    "x86_64-pc-linux-gnu"
 topLevelEntity
  globalDef
   @.fmtstr
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     5
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "%d \0A\00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  globalDef
   @.fizz
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     6
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "Fizz \00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  globalDef
   @.buzz
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     6
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "Buzz \00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  globalDef
   @.nl
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     2
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "\0A\00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  globalDef
   @0
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     13
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "Hello world!\00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  globalDef
   @"ðŸ˜Ž"
   =
   internalLinkage
    private
   unnamedAddr
    unnamed_addr
   immutable
    constant
   type
    arrayType
     [
     15
     x
     type
      intType
       i8
     ]
   constant
    arrayConst
     c
     "Goodbye world!\00"
   ,
   globalField
    align
     align
     1
 topLevelEntity
  funcDecl
   declare
   funcHeader
    returnAttribute
     returnAttr
      noundef
    type
     intType
      i32
    @printf
    (
    params
     param
      type
       type
        intType
         i8
       *
      paramAttribute
       paramAttr
        nocapture
      paramAttribute
       paramAttr
        noundef
      paramAttribute
       paramAttr
        readonly
     ,
     ...
    )
    unnamedAddr
     local_unnamed_addr
 topLevelEntity
  funcDef
   define
   funcHeader
    type
     intType
      i32
    @main
    (
    params
    )
   funcBody
    {
    basicBlock
     terminator
      brTerm
       br
       label
        label
        %"funny:label"
    basicBlock
     "funny:label":
     terminator
      brTerm
       br
       label
        label
        %"ðŸ˜Š"
    basicBlock
     "ðŸ˜Š":
     terminator
      brTerm
       br
       label
        label
        %"\68ello"
    basicBlock
     hello:
     terminator
      brTerm
       br
       label
        label
        %before
    basicBlock
     before:
     instruction
      localDefInst
       %pfout
       =
       valueInstruction
        callInst
         call
         type
          type
           intType
            i32
          (
          params
           param
            type
             type
              intType
               i8
             *
           ,
           ...
          )
         value
          constant
           @printf
         (
         args
          arg
           concreteType
            pointerType
             type
              intType
               i8
             *
           value
            constant
             constantExpr
              getElementPtrExpr
               getelementptr
               (
               type
                arrayType
                 [
                 5
                 x
                 type
                  intType
                   i8
                 ]
               ,
               typeConst
                firstClassType
                 concreteType
                  pointerType
                   type
                    arrayType
                     [
                     5
                     x
                     type
                      intType
                       i8
                     ]
                   *
                constant
                 @.fmtstr
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               )
          ,
          arg
           concreteType
            intType
             i32
           value
            constant
             intConst
              69
         )
     terminator
      brTerm
       br
       label
        label
        %loopbegin
    basicBlock
     loopbegin:
     instruction
      localDefInst
       %i
       =
       valueInstruction
        phiInst
         phi
         type
          intType
           i32
         inc
          [
          value
           constant
            intConst
             0
          ,
          %before
          ]
         ,
         inc
          [
          value
           %nexti
          ,
          %loopend
          ]
     instruction
      localDefInst
       %fbcount
       =
       valueInstruction
        addInst
         add
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           constant
            intConst
             0
         ,
         value
          constant
           intConst
            0
     instruction
      localDefInst
       %loopcond
       =
       valueInstruction
        iCmpInst
         icmp
         iPred
          ule
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %i
         ,
         value
          constant
           intConst
            50
     terminator
      condBrTerm
       br
       i1
       value
        %loopcond
       ,
       label
        label
        %loopbody
       ,
       label
        label
        %loopout
    basicBlock
     loopbody:
     instruction
      localDefInst
       %fizzrem
       =
       valueInstruction
        uRemInst
         urem
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %i
         ,
         value
          constant
           intConst
            3
     instruction
      localDefInst
       %fizzcond
       =
       valueInstruction
        iCmpInst
         icmp
         iPred
          eq
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %fizzrem
         ,
         value
          constant
           intConst
            0
     terminator
      condBrTerm
       br
       i1
       value
        %fizzcond
       ,
       label
        label
        %fizz
       ,
       label
        label
        %afterfizz
    basicBlock
     fizz:
     instruction
      localDefInst
       %pfoutF
       =
       valueInstruction
        callInst
         call
         type
          type
           intType
            i32
          (
          params
           param
            type
             type
              intType
               i8
             *
           ,
           ...
          )
         value
          constant
           @printf
         (
         args
          arg
           concreteType
            pointerType
             type
              intType
               i8
             *
           value
            constant
             constantExpr
              getElementPtrExpr
               getelementptr
               (
               type
                arrayType
                 [
                 6
                 x
                 type
                  intType
                   i8
                 ]
               ,
               typeConst
                firstClassType
                 concreteType
                  pointerType
                   type
                    arrayType
                     [
                     6
                     x
                     type
                      intType
                       i8
                     ]
                   *
                constant
                 @.fizz
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               )
         )
     terminator
      brTerm
       br
       label
        label
        %afterfizz
    basicBlock
     afterfizz:
     instruction
      localDefInst
       %didfizz
       =
       valueInstruction
        phiInst
         phi
         type
          intType
           i1
         inc
          [
          value
           constant
            intConst
             0
          ,
          %loopbody
          ]
         ,
         inc
          [
          value
           constant
            intConst
             1
          ,
          %fizz
          ]
     instruction
      localDefInst
       %buzzrem
       =
       valueInstruction
        uRemInst
         urem
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %i
         ,
         value
          constant
           intConst
            5
     instruction
      localDefInst
       %buzzcond
       =
       valueInstruction
        iCmpInst
         icmp
         iPred
          eq
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %buzzrem
         ,
         value
          constant
           intConst
            0
     terminator
      condBrTerm
       br
       i1
       value
        %buzzcond
       ,
       label
        label
        %buzz
       ,
       label
        label
        %afterbuzz
    basicBlock
     buzz:
     instruction
      localDefInst
       %pfoutB
       =
       valueInstruction
        callInst
         call
         type
          type
           intType
            i32
          (
          params
           param
            type
             type
              intType
               i8
             *
           ,
           ...
          )
         value
          constant
           @printf
         (
         args
          arg
           concreteType
            pointerType
             type
              intType
               i8
             *
           value
            constant
             constantExpr
              getElementPtrExpr
               getelementptr
               (
               type
                arrayType
                 [
                 6
                 x
                 type
                  intType
                   i8
                 ]
               ,
               typeConst
                firstClassType
                 concreteType
                  pointerType
                   type
                    arrayType
                     [
                     6
                     x
                     type
                      intType
                       i8
                     ]
                   *
                constant
                 @.buzz
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               )
         )
     terminator
      brTerm
       br
       label
        label
        %afterbuzz
    basicBlock
     afterbuzz:
     instruction
      localDefInst
       %didbuzz
       =
       valueInstruction
        phiInst
         phi
         type
          intType
           i1
         inc
          [
          value
           constant
            intConst
             0
          ,
          %afterfizz
          ]
         ,
         inc
          [
          value
           constant
            intConst
             1
          ,
          %buzz
          ]
     instruction
      localDefInst
       %didfizzorbuzz
       =
       valueInstruction
        orInst
         or
         typeValue
          firstClassType
           concreteType
            intType
             i1
          value
           %didfizz
         ,
         value
          %didbuzz
     terminator
      condBrTerm
       br
       i1
       value
        %didfizzorbuzz
       ,
       label
        label
        %printnl
       ,
       label
        label
        %printi
    basicBlock
     printnl:
     instruction
      localDefInst
       %pfoutNL
       =
       valueInstruction
        callInst
         call
         type
          type
           intType
            i32
          (
          params
           param
            type
             type
              intType
               i8
             *
           ,
           ...
          )
         value
          constant
           @printf
         (
         args
          arg
           concreteType
            pointerType
             type
              intType
               i8
             *
           value
            constant
             constantExpr
              getElementPtrExpr
               getelementptr
               (
               type
                arrayType
                 [
                 2
                 x
                 type
                  intType
                   i8
                 ]
               ,
               typeConst
                firstClassType
                 concreteType
                  pointerType
                   type
                    arrayType
                     [
                     2
                     x
                     type
                      intType
                       i8
                     ]
                   *
                constant
                 @.nl
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               )
         )
     terminator
      brTerm
       br
       label
        label
        %loopend
    basicBlock
     printi:
     instruction
      localDefInst
       %pfoutnum
       =
       valueInstruction
        callInst
         call
         type
          type
           intType
            i32
          (
          params
           param
            type
             type
              intType
               i8
             *
           ,
           ...
          )
         value
          constant
           @printf
         (
         args
          arg
           concreteType
            pointerType
             type
              intType
               i8
             *
           value
            constant
             constantExpr
              getElementPtrExpr
               getelementptr
               (
               type
                arrayType
                 [
                 5
                 x
                 type
                  intType
                   i8
                 ]
               ,
               typeConst
                firstClassType
                 concreteType
                  pointerType
                   type
                    arrayType
                     [
                     5
                     x
                     type
                      intType
                       i8
                     ]
                   *
                constant
                 @.fmtstr
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               ,
               gepIndex
                typeConst
                 firstClassType
                  concreteType
                   intType
                    i64
                 constant
                  intConst
                   0
               )
          ,
          arg
           concreteType
            intType
             i32
           value
            %i
         )
     terminator
      brTerm
       br
       label
        label
        %loopend
    basicBlock
     loopend:
     instruction
      localDefInst
       %nexti
       =
       valueInstruction
        addInst
         add
         typeValue
          firstClassType
           concreteType
            intType
             i32
          value
           %i
         ,
         value
          constant
           intConst
            1
     terminator
      brTerm
       br
       label
        label
        %loopbegin
    basicBlock
     loopout:
     terminator
      retTerm
       ret
       concreteType
        intType
         i32
       value
        constant
         intConst
          20
    }
 <EOF>
