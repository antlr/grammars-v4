module
 pragmas
  pragma
   language_pragma
    {-#
    LANGUAGE
    extension_
     DataKinds
    ,
    extension_
     PolyKinds
    ,
    extension_
     TypeOperators
    ,
    extension_
     TypeFamilies
    ,
    extension_
     TypeApplications
    #-}
 module_content
  module
  modid
   conid
    DumpTypecheckedAst
  where_module
   where
   module_body
    open_
     VOCURLY
    body
     impdecls
      impdecl
       import
       modid
        conid
         Data
        .
        conid
         Kind
       semi
        SEMI
     topdecls
      topdecl
       ty_decl
        data
        tycl_hdr
         type_
          btype
           tyapps
            tyapp
             atype
              ntgtycon
               oqtycon
                qtycon
                 tycon
                  conid
                   Peano
        constrs
         =
         constrs1
          constr
           constr_stuff
            constr_tyapps
             constr_tyapp
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     Zero
             constr_tyapp
              tyapp
               qtyconop
                qtyconsym
                 qvarsym
                  varsym
                   varsym_no_minus
                    ascSymbol
                     |
             constr_tyapp
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     Succ
             constr_tyapp
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     Peano
      semi
       SEMI
      topdecl
       ty_decl
        type
        family
        type_
         btype
          tyapps
           tyapp
            atype
             ntgtycon
              oqtycon
               qtycon
                tycon
                 conid
                  Length
           tyapp
            atype
             (
             ktype
              ctype
               var_
                varid
                 special_id
                  as
               ::
               type_
                btype
                 tyapps
                  tyapp
                   atype
                    [
                    ktype
                     ctype
                      type_
                       btype
                        tyapps
                         tyapp
                          atype
                           tyvar
                            varid
                             k
                    ]
             )
        opt_tyfam_kind_sig
         ::
         kind
          ctype
           type_
            btype
             tyapps
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     Peano
        where_type_family
         where
         ty_fam_inst_eqn_list
          open_
           VOCURLY
          ty_fam_inst_eqns
           ty_fam_inst_eqn
            type_
             btype
              tyapps
               tyapp
                atype
                 ntgtycon
                  oqtycon
                   qtycon
                    tycon
                     conid
                      Length
               tyapp
                atype
                 (
                 ktype
                  ctype
                   type_
                    btype
                     tyapps
                      tyapp
                       atype
                        tyvar
                         varid
                          a
                      tyapp
                       qtyconop
                        qtyconsym
                         qconsym
                          consym
                           :
                      tyapp
                       atype
                        tyvar
                         varid
                          special_id
                           as
                 )
            =
            ktype
             ctype
              type_
               btype
                tyapps
                 tyapp
                  atype
                   ntgtycon
                    oqtycon
                     qtycon
                      tycon
                       conid
                        Succ
                 tyapp
                  atype
                   (
                   ktype
                    ctype
                     type_
                      btype
                       tyapps
                        tyapp
                         atype
                          ntgtycon
                           oqtycon
                            qtycon
                             tycon
                              conid
                               Length
                        tyapp
                         atype
                          tyvar
                           varid
                            special_id
                             as
                   )
           semi
            SEMI
           ty_fam_inst_eqn
            type_
             btype
              tyapps
               tyapp
                atype
                 ntgtycon
                  oqtycon
                   qtycon
                    tycon
                     conid
                      Length
               tyapp
                atype
                 '
                 [
                 ]
            =
            ktype
             ctype
              type_
               btype
                tyapps
                 tyapp
                  atype
                   ntgtycon
                    oqtycon
                     qtycon
                      tycon
                       conid
                        Zero
           semi
            SEMI
          close
           VCCURLY
      semi
       SEMI
      topdecl
       ty_decl
        data
        tycl_hdr
         type_
          btype
           tyapps
            tyapp
             atype
              ntgtycon
               oqtycon
                qtycon
                 tycon
                  conid
                   T
            tyapp
             atype
              tyvar
               varid
                f
            tyapp
             atype
              (
              ktype
               ctype
                var_
                 varid
                  a
                ::
                type_
                 btype
                  tyapps
                   tyapp
                    atype
                     tyvar
                      varid
                       k
              )
        constrs
         =
         constrs1
          constr
           constr_stuff
            constr_tyapps
             constr_tyapp
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     MkT
             constr_tyapp
              tyapp
               atype
                (
                ktype
                 ctype
                  type_
                   btype
                    tyapps
                     tyapp
                      atype
                       tyvar
                        varid
                         f
                     tyapp
                      atype
                       tyvar
                        varid
                         a
                )
      semi
       SEMI
      topdecl
       ty_decl
        type
        family
        type_
         btype
          tyapps
           tyapp
            atype
             ntgtycon
              oqtycon
               qtycon
                tycon
                 conid
                  F
           tyapp
            atype
             (
             ktype
              ctype
               var_
                varid
                 a
               ::
               type_
                btype
                 tyapps
                  tyapp
                   atype
                    tyvar
                     varid
                      k
             )
           tyapp
            atype
             (
             ktype
              ctype
               var_
                varid
                 f
               ::
               type_
                btype
                 tyapps
                  tyapp
                   atype
                    tyvar
                     varid
                      k
                ->
                ctype
                 type_
                  btype
                   tyapps
                    tyapp
                     atype
                      ntgtycon
                       oqtycon
                        qtycon
                         tycon
                          conid
                           Type
             )
        opt_tyfam_kind_sig
         ::
         kind
          ctype
           type_
            btype
             tyapps
              tyapp
               atype
                ntgtycon
                 oqtycon
                  qtycon
                   tycon
                    conid
                     Type
        where_type_family
         where
         ty_fam_inst_eqn_list
          open_
           VOCURLY
          ty_fam_inst_eqns
           ty_fam_inst_eqn
            type_
             btype
              tyapps
               tyapp
                atype
                 ntgtycon
                  oqtycon
                   qtycon
                    tycon
                     conid
                      F
               tyapp
                @
                atype
                 ntgtycon
                  oqtycon
                   qtycon
                    tycon
                     conid
                      Peano
               tyapp
                atype
                 tyvar
                  varid
                   a
               tyapp
                atype
                 tyvar
                  varid
                   f
            =
            ktype
             ctype
              type_
               btype
                tyapps
                 tyapp
                  atype
                   ntgtycon
                    oqtycon
                     qtycon
                      tycon
                       conid
                        T
                 tyapp
                  @
                  atype
                   ntgtycon
                    oqtycon
                     qtycon
                      tycon
                       conid
                        Peano
                 tyapp
                  atype
                   tyvar
                    varid
                     f
                 tyapp
                  atype
                   tyvar
                    varid
                     a
           semi
            SEMI
          close
           VCCURLY
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 main
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              aexp1
               aexp2
                qvar
                 qvarid
                  varid
                   putStrLn
             aexp
              aexp1
               aexp2
                literal
                 pstring
                  "hello"
      semi
       SEMI
    close
     VCCURLY
 <EOF>
