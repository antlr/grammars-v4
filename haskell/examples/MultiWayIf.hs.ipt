module
 pragmas
  pragma
   language_pragma
    {-#
    LANGUAGE
    extension_
     MultiWayIf
    #-}
 module_content
  module
  modid
   conid
    Main
  where_module
   where
   module_body
    open_
     VOCURLY
    body
     topdecls
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              aexp1
               aexp2
                literal
                 integer
                  10
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x1
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            x
                    qop
                     qvarop
                      qvarsym
                       varsym
                        varsym_no_minus
                         ascSymbol
                          <
                    exp10p
                     exp10
                      fexp
                       aexp
                        aexp1
                         aexp2
                          literal
                           integer
                            10
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          "< 10"
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            otherwise
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          ""
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x2
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            x
                    qop
                     qvarop
                      qvarsym
                       varsym
                        varsym_no_minus
                         ascSymbol
                          <
                    exp10p
                     exp10
                      fexp
                       aexp
                        aexp1
                         aexp2
                          literal
                           integer
                            10
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          "< 10"
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            otherwise
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          ""
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x3
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            x
                    qop
                     qvarop
                      qvarsym
                       varsym
                        varsym_no_minus
                         ascSymbol
                          <
                    exp10p
                     exp10
                      fexp
                       aexp
                        aexp1
                         aexp2
                          literal
                           integer
                            10
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          "< 10"
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            otherwise
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          ""
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x4
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qcon
                          gen_qcon
                           qconid
                            conid
                             True
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      aexp1
                       aexp2
                        literal
                         pstring
                          "yes"
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x5
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qcon
                          gen_qcon
                           qconid
                            conid
                             True
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      if
                      ifgdpats
                       gdpats
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qcon
                                  gen_qcon
                                   qconid
                                    conid
                                     False
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 integer
                                  1
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qcon
                                  gen_qcon
                                   qconid
                                    conid
                                     True
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 integer
                                  2
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x6
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              if
              ifgdpats
               gdpats
                gdpat
                 |
                 guards
                  guard_
                   infixexp
                    exp10
                     fexp
                      aexp
                       aexp1
                        aexp2
                         qvar
                          qvarid
                           varid
                            x
                    qop
                     qvarop
                      qvarsym
                       varsym
                        varsym_no_minus
                         ascSymbol
                          <
                    exp10p
                     exp10
                      fexp
                       aexp
                        aexp1
                         aexp2
                          literal
                           integer
                            10
                 ->
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      if
                      ifgdpats
                       gdpats
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qcon
                                  gen_qcon
                                   qconid
                                    conid
                                     True
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 pstring
                                  "yes"
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qcon
                                  gen_qcon
                                   qconid
                                    conid
                                     False
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 pstring
                                  "no"
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qvar
                                  qvarid
                                   varid
                                    otherwise
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 pstring
                                  "maybe"
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 x7
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              aexp1
               aexp2
                (
                texp
                 exp
                  infixexp
                   exp10
                    fexp
                     aexp
                      if
                      ifgdpats
                       gdpats
                        gdpat
                         |
                         guards
                          guard_
                           infixexp
                            exp10
                             fexp
                              aexp
                               aexp1
                                aexp2
                                 qcon
                                  gen_qcon
                                   qconid
                                    conid
                                     True
                         ->
                         exp
                          infixexp
                           exp10
                            fexp
                             aexp
                              aexp1
                               aexp2
                                literal
                                 integer
                                  0
                )
      semi
       SEMI
      topdecl
       decl_no_th
        infixexp
         exp10
          fexp
           aexp
            aexp1
             aexp2
              qvar
               qvarid
                varid
                 main
        rhs
         =
         exp
          infixexp
           exp10
            fexp
             aexp
              aexp1
               aexp2
                qvar
                 qvarid
                  varid
                   print
             aexp
              aexp1
               aexp2
                splice_untyped
                 $
                 aexp
                  aexp1
                   aexp2
                    qvar
                     qvarid
                      varid
                       x5
           qop
            qvarop
             qvarsym
              varsym
               varsym_no_minus
                ascSymbol
                 =
                ascSymbol
                 =
           exp10p
            exp10
             fexp
              aexp
               aexp1
                aexp2
                 literal
                  integer
                   2
           qop
            qvarop
             qvarsym
              varsym
               varsym_no_minus
                ascSymbol
                 &
                ascSymbol
                 &
           exp10p
            exp10
             fexp
              aexp
               aexp1
                aexp2
                 qvar
                  qvarid
                   varid
                    x6
           qop
            qvarop
             qvarsym
              varsym
               varsym_no_minus
                ascSymbol
                 =
                ascSymbol
                 =
           exp10p
            exp10
             fexp
              aexp
               aexp1
                aexp2
                 literal
                  pstring
                   "maybe"
           qop
            qvarop
             qvarsym
              varsym
               varsym_no_minus
                ascSymbol
                 &
                ascSymbol
                 &
           exp10p
            exp10
             fexp
              aexp
               aexp1
                aexp2
                 qvar
                  qvarid
                   varid
                    x7
           qop
            qvarop
             qvarsym
              varsym
               varsym_no_minus
                ascSymbol
                 =
                ascSymbol
                 =
           exp10p
            exp10
             fexp
              aexp
               aexp1
                aexp2
                 literal
                  integer
                   0
      semi
       SEMI
    close
     VCCURLY
 <EOF>
