module
 pragmas
  pragma
   language_pragma
    {-#
    LANGUAGE
    extension_
     TemplateHaskell
    #-}
  pragma
   language_pragma
    {-#
    LANGUAGE
    extension_
     OverloadedStrings
    #-}
  pragma
   language_pragma
    {-#
    LANGUAGE
    extension_
     OverloadedLists
    #-}
    semi
     SEMI
 body
  impdecls
   impdecl
    import
    modid
     conid
      System
     .
     conid
      IO
    semi
     SEMI
   impdecl
    import
    modid
     conid
      Proposal229f_instances
    semi
     SEMI
  topdecls
   topdecl
    decl_no_th
     infixexp
      exp10
       fexp
        aexp
         aexp1
          aexp2
           qvar
            qvarid
             varid
              main
     rhs
      =
      exp
       infixexp
        exp10
         fexp
          aexp
           do
           stmtlist
            open_
             VOCURLY
            stmts
             stmt
              qual
               exp
                infixexp
                 exp10
                  fexp
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         hPutStrLn
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         stderr
                   aexp
                    aexp1
                     aexp2
                      splice_untyped
                       $
                       aexp
                        aexp1
                         aexp2
                          [
                          list_
                           lexps
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '1'
                            ,
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '2'
                            ,
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '3'
                          ]
             semi
              SEMI
             stmt
              qual
               exp
                infixexp
                 exp10
                  fexp
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         hPutStrLn
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         stderr
                   aexp
                    aexp1
                     aexp2
                      splice_typed
                       $$
                       aexp
                        aexp1
                         aexp2
                          [
                          list_
                           lexps
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '1'
                            ,
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '2'
                            ,
                            texp
                             exp
                              infixexp
                               exp10
                                fexp
                                 aexp
                                  aexp1
                                   aexp2
                                    literal
                                     pchar
                                      '3'
                          ]
             semi
              SEMI
             stmt
              qual
               exp
                infixexp
                 exp10
                  fexp
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         hPutStrLn
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         stderr
                   aexp
                    aexp1
                     aexp2
                      splice_untyped
                       $
                       aexp
                        aexp1
                         aexp2
                          literal
                           pstring
                            "123"
             semi
              SEMI
             stmt
              qual
               exp
                infixexp
                 exp10
                  fexp
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         hPutStrLn
                   aexp
                    aexp1
                     aexp2
                      qvar
                       qvarid
                        varid
                         stderr
                   aexp
                    aexp1
                     aexp2
                      splice_typed
                       $$
                       aexp
                        aexp1
                         aexp2
                          literal
                           pstring
                            "123"
             semi
              SEMI
            close
             VCCURLY
   semi
    SEMI
 <EOF>
