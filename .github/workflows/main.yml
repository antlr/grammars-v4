name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build-pwsh:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        language: [ CSharp, Dart, Java, JavaScript, Go, Python3, TypeScript ]
    steps:
    - name: Info
      shell: bash
      run: |
        arch
        uname -a
        if [ -f /proc/cpuinfo ]; then cat /proc/cpuinfo; fi
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Dotnet
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: '7.0.x'
    - name: Do not trust Dotnet env
      run: |
        dotnet --version
        dotnet --info
        dotnet --list-runtimes
        dotnet --list-sdks
    - name: Install Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Do not trust Java env
      run: |
        dotnet --version
        java --version
        javac --version
    - name: Install Dart
      if: ${{ matrix.language == 'Dart' }}
      uses: dart-lang/setup-dart@v1
    - name: Do not trust Dart env
      if: ${{ matrix.language == 'Dart' }}
      run: |
        dart --version
    - name: Install Go
      if: ${{ matrix.language == 'Go' }}
      uses: actions/setup-go@v4
      with:
        go-version: '^1.18.0'
    - name: Do not trust Go env
      if: ${{ matrix.language == 'Go' }}
      run: |
        go version
    - name: Install Python
      if: ${{ matrix.language == 'Python3' }}
      uses: actions/setup-python@v4.6.0
      with:
        python-version: '3.10'
    - name: Do not trust Python env
      if: ${{ matrix.language == 'Python3' }}
      run: |
        python --version
    - name: Install JavaScript
      if: ${{ matrix.language == 'JavaScript' }}
      uses: actions/setup-node@v3.6.0
      with:
        node-version: '16.13.0'
    - name: Do not trust JavaScript env
      if: ${{ matrix.language == 'JavaScript' }}
      run: |
        node --version
    - name: Download ANTLR
      shell: pwsh
      run: |
        $antlrPath = _scripts/get-antlr.ps1 "4.12.0"
        echo "$antlrPath" | Write-Host
        echo "antlr_path=$antlrPath" >> $env:GITHUB_ENV
        If(!(test-path -PathType container /tmp)) {
           New-Item -Path '/tmp' -ItemType Directory
        }
        copy $antlrPath /tmp/antlr4-complete.jar
    - name: Update paths
      shell: pwsh
      run: |
        if ("${{ matrix.os }}" -eq "ubuntu-latest") {
            echo "$HOME/.dotnet/tools" >> $env:GITHUB_PATH
        }
    - name: Install trgen
      shell: bash
      run: |
        for i in trgen triconv trwdog trxml trxml2; do dotnet tool install -g $i --version 0.20.15; done
    - name: Test
      shell: pwsh
      run: |
        if ("${{ github.event_name }}" -eq "pull_request") {
            $Before = "${{ github.event.pull_request.base.sha }}"
            $After = "${{ github.event.pull_request.head.sha }}"
        }
        else {
            $Before = "${{ github.event.before }}"
            $After = "${{ github.event.after }}"
        }
        $env:ANTLR_JAR_PATH="${{ env.antlr_path }}"
        _scripts/test.ps1 -antlrjar /tmp/antlr4-complete.jar -target ${{ matrix.language }} -pc "$Before" -cc "$After"

  build-bash:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        language: [ CSharp, Dart, Java, JavaScript, Go, Python3, TypeScript ]
    steps:
    - name: Info
      shell: bash
      run: |
        arch
        uname -a
        if [ -f /proc/cpuinfo ]; then cat /proc/cpuinfo; fi
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Dotnet
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: '7.0.x'
    - name: Do not trust Dotnet env
      run: |
        dotnet --version
        dotnet --info
        dotnet --list-runtimes
        dotnet --list-sdks
    - name: Install Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Do not trust Java env
      run: |
        dotnet --version
        java --version
        javac --version
    - name: Install Dart
      if: ${{ matrix.language == 'Dart' }}
      uses: dart-lang/setup-dart@v1
    - name: Do not trust Dart env
      if: ${{ matrix.language == 'Dart' }}
      run: |
        dart --version
    - name: Install Go
      if: ${{ matrix.language == 'Go' }}
      uses: actions/setup-go@v4
      with:
        go-version: '^1.18.0'
    - name: Do not trust Go env
      if: ${{ matrix.language == 'Go' }}
      run: |
        go version
    - name: Install Python
      if: ${{ matrix.language == 'Python3' }}
      uses: actions/setup-python@v4.6.0
      with:
        python-version: '3.10'
    - name: Do not trust Python env
      if: ${{ matrix.language == 'Python3' }}
      run: |
        python --version
    - name: Install JavaScript
      if: ${{ matrix.language == 'JavaScript' }}
      uses: actions/setup-node@v3.6.0
      with:
        node-version: '16.13.0'
    - name: Do not trust JavaScript env
      if: ${{ matrix.language == 'JavaScript' }}
      run: |
        node --version
    - name: Download ANTLR
      shell: pwsh
      run: |
        $antlrPath = _scripts/get-antlr.ps1 "4.12.0"
        echo "$antlrPath" | Write-Host
        echo "antlr_path=$antlrPath" >> $env:GITHUB_ENV
        If(!(test-path -PathType container /tmp)) {
           New-Item -Path '/tmp' -ItemType Directory
        }
        copy $antlrPath /tmp/antlr4-complete.jar
    - name: Install trgen
      shell: bash
      run: |
        for i in trgen triconv trwdog trxml trxml2; do dotnet tool install -g $i --version 0.20.15; done
    - name: Test
      shell: bash
      run: |
        if [ "${{github.event_name}}" == "pull_request" ]; then
            Before="${{github.event.pull_request.base.sha}}"
            After="${{github.event.pull_request.head.sha}}"
        else
            Before="${{github.event.before}}"
            After="${{github.event.after}}"
        fi
        bash _scripts/test.sh -a /tmp/antlr4-complete.jar -t ${{matrix.language}} -f diff $Before $After
