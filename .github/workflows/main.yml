name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#         java: [11, 12 ]
#       fail-fast: false
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK
#       uses: actions/setup-java@v1
#       with:
#         java-version: ${{ matrix.java }}
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#   build-csharp:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#     steps:
#     - uses: actions/checkout@v2
#     - name: Test C# target
#       run: |
#         bash _scripts/regtest.sh CSharp
  build-csharp-pwsh:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Prepare environments
      shell: pwsh
      run: |
        if ("${{ github.event_name }}" -eq "pull_request") {
            $Before = "${{ github.event.pull_request.base.sha }}"
            $After = "${{ github.event.pull_request.head.sha }}"
        }
        else {
            $Before = "${{ github.event.before }}"
            $After = "${{ github.event.after }}"
        }
        echo "before=$Before" >> $env:GITHUB_ENV
        echo "after=$After" >> $env:GITHUB_ENV

        dotnet tool install -g dotnet-antlr --version 2.1.0
    - name: Test C# target with PowerShell
      shell: pwsh
      run: |
        _scripts/test.ps1 CSharp ${{ env.before }} ${{ env.after }}
