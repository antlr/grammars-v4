prog
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  masmdirectives
   masmdirective
    .386P
  \n
 line
  masmdirectives
   masmdirective
    .model
    expressionlist
     expression
      multiplyingExpression
       argument
        name
         flat
  \n
 line
  assemblerdirective
   extern_
    extern
    expression
     multiplyingExpression
      argument
       name
        _ExitProcess@4
       :
       name
        near
  \n
 line
  assemblerdirective
   extern_
    extern
    expression
     multiplyingExpression
      argument
       name
        _GetStdHandle@4
       :
       name
        near
  \n
 line
  assemblerdirective
   extern_
    extern
    expression
     multiplyingExpression
      argument
       name
        _WriteConsoleA@20
       :
       name
        near
  \n
 line
  assemblerdirective
   public_
    public
    expression
     multiplyingExpression
      argument
       name
        _go
  \n\n
 line
  masmdirectives
   masmdirective
    .data
  \n
 line
  lbl
   label
    name
     msg
  assemblerdirective
   type_
    byte
   expressionlist
    expression
     multiplyingExpression
      argument
       string
        'Hello, World'
    ,
    expression
     multiplyingExpression
      argument
       number
        10
  \n
 line
  lbl
   label
    name
     handle
  assemblerdirective
   type_
    dword
   expressionlist
    expression
     multiplyingExpression
      argument
       ques
        ?
  \n
 line
  lbl
   label
    name
     written
  assemblerdirective
   type_
    dword
   expressionlist
    expression
     multiplyingExpression
      argument
       ques
        ?
  \n\n
 line
  masmdirectives
   masmdirective
    .stack
  \n\n
 line
  masmdirectives
   masmdirective
    .code
  \n
 line
  lbl
   label
    name
     _go
   :
  \n
 line
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       number
        -
        11
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        _GetStdHandle@4
  \n
 line
  instruction
   opcode
    mov
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        handle
    ,
    expression
     multiplyingExpression
      argument
       name
        eax
  \n\n
 line
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           written
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       number
        13
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       offset
       expression
        multiplyingExpression
         argument
          name
           msg
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        handle
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        _WriteConsoleA@20
  \n\n
 line
  \n
 line
  instruction
   opcode
    push
   expressionlist
    expression
     multiplyingExpression
      argument
       number
        0
  \n
 line
  instruction
   opcode
    call
   expressionlist
    expression
     multiplyingExpression
      argument
       name
        _ExitProcess@4
  \n\n
 line
  endlbl
   end
  \n\n
 <EOF>
