prog
 line
  assemblerdirective
   directives
    .align
    number
     2
  \n
 line
  assemblerdirective
   directives
    .include
    string
     "cfg.inc"
  \n
 line
  assemblerdirective
   directives
    .equ
    label
     UART_REG_TXFIFO
    ,
    number
     0
  \n\n
 line
  assemblerdirective
   directives
    .section
    .text
  \n
 line
  assemblerdirective
   directives
    .globl
    label
     _start
  \n\n
 line
  lbl
   label
    _start
   :
  \n
 line
  instruction
   csrtype
    csrr
    xregs
     t0
    ,
    csrregs
     mhartid
  \n
 line
  instruction
   btype
    bnez
    xregs
     t0
    ,
    label
     halt
  \n\n
 line
  instruction
   rtype
    la
    xregs
     sp
    ,
    label
     stack_top
  \n\n
 line
  instruction
   rtype
    la
    xregs
     a0
    ,
    label
     msg
  \n
 line
  instruction
   jtype
    jal
    label
     puts
  \n\n
 line
  lbl
   label
    halt
   :
  instruction
   jtype
    j
    label
     halt
  \n\n
 line
  lbl
   label
    puts
   :
  \n
 line
  \n
 line
  \n\n
 line
  instruction
   itype
    li
    xregs
     t0
    ,
    label
     UART_BASE
  \n
 line
  lbl
   label
    1
   :
  instruction
   itype
    lbu
    xregs
     t1
    ,
    (
    xregs
     a0
    )
  \n
 line
  instruction
   btype
    beqz
    xregs
     t1
    ,
    label
     3f
  \n\n
 line
  \n
 line
  lbl
   label
    2
   :
  instruction
   itype
    lw
    xregs
     t2
    ,
    number
     0
    (
    xregs
     t0
    )
  \n
 line
  instruction
   btype
    bltz
    xregs
     t2
    ,
    label
     2b
  \n
 line
  instruction
   stype
    sw
    xregs
     t1
    ,
    number
     0
    (
    xregs
     t0
    )
  \n\n
 line
  instruction
   itype
    addi
    xregs
     a0
    ,
    xregs
     a0
    ,
    number
     1
  \n
 line
  instruction
   jtype
    j
    label
     1b
  \n\n
 line
  lbl
   label
    3
   :
  instruction
   itype
    ret
  \n\n
 line
  assemblerdirective
   directives
    .section
    .rodata
  \n
 line
  lbl
   label
    msg
   :
  \n
 line
  assemblerdirective
   directives
    .string
    string
     "Hello."
  \n
 <EOF>
