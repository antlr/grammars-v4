program
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  directive
   extern
    extern
   extern_params
    name
     printf
  \n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  directive
   global
    global
   global_params
    name
     main
  \n\n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  label
   name
    fmta
   :
  pseudoinstruction
   dx
    db
   value
    atom
     string
      "a  %ld"
   ,
   value
    atom
     integer
      10
   ,
   value
    atom
     integer
      0
  \n
 line
  label
   name
    fmtaa
   :
  pseudoinstruction
   dx
    db
   value
    atom
     string
      "aa %ld"
   ,
   value
    atom
     integer
      10
   ,
   value
    atom
     integer
      0
  \n
 line
  label
   name
    fmtflt
   :
  pseudoinstruction
   dx
    db
   value
    atom
     string
      "af %e"
   ,
   value
    atom
     integer
      10
   ,
   value
    atom
     integer
      0
  \n\n
 line
  directive
   section
    section
   section_params
    name
     .text
  \n
 line
  label
   name
    main
   :
  instruction
   opcode
    push
   operand
    register
     rbp
  \n\n
 line
  \n\n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  label
   name
    a
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     integer
      2
   ,
   value
    atom
     integer
      5
   ,
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    integer
                     7
   ,
   value
    atom
     integer
      22
   ,
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    integer
                     9
  \n
 line
  label
   name
    X
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     integer
      7
  \n
 line
  \n
 line
  directive
   section
    section
   section_params
    name
     .text
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rdi
   ,
   operand
    integer
     1
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rcx
   ,
   operand
    integer
     4
  \n
 line
  label
   name
    h3loop
   :
  instruction
   opcode
    imul
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  X
    ]
  \n
 line
  instruction
   opcode
    add
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
               +
               multiplicativeExpression
                castExpression
                 integer
                  8
                *
                castExpression
                 register
                  rdi
    ]
  \n
 line
  instruction
   opcode
    inc
   operand
    register
     rdi
  \n
 line
  instruction
   opcode
    loop
   operand
    name
     h3loop
  \n\n
 line
  instruction
   opcode
    mov
   operand
    register
     rsi
   ,
   operand
    register
     rax
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rdi
   ,
   operand
    name
     fmta
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     0
  \n
 line
  instruction
   opcode
    call
   operand
    name
     printf
  \n\n\n
 line
  \n
 line
  \n
 line
  \n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  label
   name
    aa
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    integer
                     9
   ,
   value
    atom
     integer
      22
   ,
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    integer
                     7
   ,
   value
    atom
     integer
      5
   ,
   value
    atom
     integer
      2
  \n
 line
  label
   name
    n
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     integer
      4
  \n
 line
  directive
   section
    section
   section_params
    name
     .text
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  aa
               +
               multiplicativeExpression
                castExpression
                 integer
                  4
                *
                castExpression
                 integer
                  8
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rcx
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  n
    ]
  \n
 line
  label
   name
    h4loop
   :
  instruction
   opcode
    imul
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  X
    ]
  \n
 line
  instruction
   opcode
    add
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  aa
               +
               multiplicativeExpression
                castExpression
                 integer
                  8
                *
                castExpression
                 register
                  rcx
               -
               multiplicativeExpression
                castExpression
                 integer
                  8
    ]
  \n
 line
  instruction
   opcode
    loop
   operand
    name
     h4loop
  \n\n
 line
  instruction
   opcode
    mov
   operand
    register
     rsi
   ,
   operand
    register
     rax
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rdi
   ,
   operand
    name
     fmtaa
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     0
  \n
 line
  instruction
   opcode
    call
   operand
    name
     printf
  \n\n
 line
  \n
 line
  \n
 line
  \n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  label
   name
    af
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    float_number
                     9.0
   ,
   value
    atom
     float_number
      22.0
   ,
   value
    atom
     expression
      conditionalExpression
       booleanOrExpression
        booleanAndExpression
         inclusiveOrExpression
          exclusiveOrExpression
           andExpression
            equalityExpression
             relationalExpression
              shiftExpression
               additiveExpression
                multiplicativeExpression
                 castExpression
                  unaryExpression
                   unaryOperator
                    -
                   castExpression
                    float_number
                     7.0
   ,
   value
    atom
     float_number
      5.0
   ,
   value
    atom
     float_number
      2.0
  \n
 line
  label
   name
    XF
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     float_number
      7.0
  \n
 line
  label
   name
    Y
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     float_number
      0.0
  \n
 line
  label
   name
    N
   :
  pseudoinstruction
   dx
    dd
   value
    atom
     integer
      4
  \n\n
 line
  directive
   section
    section
   section_params
    name
     .text
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rcx
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  N
    ]
  \n
 line
  instruction
   opcode
    fld
   operand
    size
     qword
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  af
               +
               multiplicativeExpression
                castExpression
                 integer
                  8
                *
                castExpression
                 register
                  rcx
    ]
  \n
 line
  label
   name
    h5loop
   :
  instruction
   opcode
    fmul
   operand
    size
     qword
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  XF
    ]
  \n
 line
  instruction
   opcode
    fadd
   operand
    size
     qword
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  af
               +
               multiplicativeExpression
                castExpression
                 integer
                  8
                *
                castExpression
                 register
                  rcx
               -
               multiplicativeExpression
                castExpression
                 integer
                  8
    ]
  \n
 line
  instruction
   opcode
    loop
   operand
    name
     h5loop
  \n\n
 line
  instruction
   opcode
    fstp
   operand
    size
     qword
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  Y
    ]
  \n
 line
  instruction
   opcode
    movq
   operand
    register
     xmm0
   ,
   operand
    size
     qword
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  Y
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rdi
   ,
   operand
    name
     fmtflt
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     1
  \n
 line
  instruction
   opcode
    call
   operand
    name
     printf
  \n\n
 line
  instruction
   opcode
    pop
   operand
    register
     rbp
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     0
  \n
 line
  instruction
   opcode
    ret
  \n
 <EOF>
