program
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n
 line
  \n\n
 line
  directive
   extern
    extern
   extern_params
    name
     printf
  \n\n
 line
  \n
 line
  \n
 line
  directive
   section
    section
   section_params
    name
     .data
  \n
 line
  label
   name
    a
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     integer
      3
  \n
 line
  label
   name
    b
   :
  pseudoinstruction
   dx
    dq
   value
    atom
     integer
      5
  \n
 line
  label
   name
    fmt
   :
  pseudoinstruction
   dx
    db
   value
    atom
     string
      "%s, a=%ld, b=%ld, c=%ld"
   ,
   value
    atom
     integer
      10
   ,
   value
    atom
     integer
      0
  \n
 line
  \n
 line
  directive
   section
    section
   section_params
    name
     .bss
  \n
 line
  label
   name
    c
   :
  pseudoinstruction
   resx
    resq
   integer
    1
  \n\n
 line
  directive
   section
    section
   section_params
    name
     .text
  \n
 line
  directive
   global
    global
   global_params
    name
     main
  \n
 line
  label
   name
    main
   :
  \n
 line
  instruction
   opcode
    push
   operand
    register
     rbp
  \n
 line
  \n
 line
  label
   name
    lit5
   :
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     15
  \n
 line
  instruction
   opcode
    mov
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  c
    ]
   ,
   operand
    register
     rax
  \n
 line
  instruction
   macro_call
    name
     pabc
    macro_param
     string
      "c=5  "
  \n
 line
  \n
 line
  label
   name
    andb
   :
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
    ]
  \n
 line
  instruction
   opcode
    and
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  b
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  c
    ]
   ,
   operand
    register
     rax
  \n
 line
  instruction
   macro_call
    name
     pabc
    macro_param
     string
      "c=a&b"
  \n
 line
  \n
 line
  label
   name
    orw
   :
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
    ]
  \n
 line
  instruction
   opcode
    or
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  b
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  c
    ]
   ,
   operand
    register
     rax
  \n
 line
  instruction
   macro_call
    name
     pabc
    macro_param
     string
      "c=a|b"
  \n
 line
  \n
 line
  label
   name
    xorw
   :
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
    ]
  \n
 line
  instruction
   opcode
    xor
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  b
    ]
  \n
 line
  instruction
   opcode
    mov
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  c
    ]
   ,
   operand
    register
     rax
  \n
 line
  instruction
   macro_call
    name
     pabc
    macro_param
     string
      "c=a^b"
  \n
 line
  \n
 line
  label
   name
    notw
   :
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  a
    ]
  \n
 line
  instruction
   opcode
    not
   operand
    register
     rax
  \n
 line
  instruction
   opcode
    mov
   operand
    [
    expression
     conditionalExpression
      booleanOrExpression
       booleanAndExpression
        inclusiveOrExpression
         exclusiveOrExpression
          andExpression
           equalityExpression
            relationalExpression
             shiftExpression
              additiveExpression
               multiplicativeExpression
                castExpression
                 name
                  c
    ]
   ,
   operand
    register
     rax
  \n
 line
  instruction
   macro_call
    name
     pabc
    macro_param
     string
      "c=~a "
  \n\n
 line
  instruction
   opcode
    pop
   operand
    register
     rbp
  \n
 line
  instruction
   opcode
    mov
   operand
    register
     rax
   ,
   operand
    integer
     0
  \n
 line
  instruction
   opcode
    ret
  \n
 <EOF>
