prog
 line
  comment
   "** 05-1-4.pdf page 32
 eol
  \n
 line
  comment
   " as
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           init1
  comment
   " initialize for pass 1
 eol
  \n\n
 line
  declarations
   declaration
    label
     assm1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           eofflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " saw EOF?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm2
  comment
   "  no.
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
  comment
   " yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " pass==0?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           finis
  comment
   "  no, pass 2: done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           init2
  comment
   " initialize for pass 2
 eol
  \n\n
 line
  declarations
   declaration
    label
     assm2:
  comment
   " main loop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " comma space or tab?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  yes, ignore
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " newline or ';'??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  yes, ignore
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " no, push back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d6
  comment
   " plus, minus, space comma tab or semi?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm3
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           expr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " pass 1?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           process
  comment
   "  no, process on pass 2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " increment "."
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       nop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " overflow?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        >>
  comment
   " '>' error: past end of memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " start again at zero!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
 eol
  \n\n
 line
  declarations
   declaration
    label
     assm3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm4
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " fetch operator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " ":"?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm6
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d10
  comment
   " numeric and 0..9?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm6
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
  comment
   " yes, save as name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbxp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " get fbx entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " save in second word of name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " increment fbx entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o146
  comment
   " get 'f'
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          2
  comment
   " save in third word of name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          3
  comment
   " clear fourth word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
  comment
   " look it up
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 33
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbflg
  comment
   " set fbflg to -1
 eol
  \n
 line
  declarations
   declaration
    label
     assm4:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " get operator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " ':'?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm5
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
  comment
   " load dot type
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
  comment
   " save as r type
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " get dot value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
  comment
   " save as r value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n\n
 line
  declarations
   declaration
    label
     assm5:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           expr
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " fb flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbflg
  comment
   " clear fb flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o142
  comment
   " get 'b'
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm4
 eol
  \n\n
 line
  declarations
   declaration
    label
     assm6:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        x>
  comment
   " "x" error -- various errors
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
 eol
  \n\n
 line
  declarations
   declaration
    label
     init1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " init for pass 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2f
      -
      multiplyingExpression
       atom
        1f
  comment
   " output I, newline
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
  comment
   " clear passno
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o56040
  comment
   " load ". "
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        -
        multiplyingExpression
         atom
          4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o56056
  comment
   " load ".."
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        -
        multiplyingExpression
         atom
          4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40040
  comment
   " pad ". " and ".." names with spaces
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        -
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        -
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        -
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        -
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        -
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        -
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
    declarationRight
     instruction
      opcode
       iof
  comment
   " clear input fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           init
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           init1
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0111012
  comment
   " I\n
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n\n
 line
  declarations
   declaration
    label
     init2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " start pass 2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 34
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
  comment
   " passno = 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2f
      -
      multiplyingExpression
       atom
        1f
  comment
   " output II\n
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           init
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           creat
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2f
  comment
   " create a.out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfo
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           open
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2f
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " open a.out for read too!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufadd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         buf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " clear buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           init2
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0111111
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        012000
  comment
   " II\n
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0141056
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0157165
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0164040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
  comment
   " a.out
 eol
  \n\n
 line
  declarations
   declaration
    label
     init:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " common init for both passes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          017777
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           narg
  comment
   " save arg count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          017777
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fname
  comment
   " point to first file name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           eofflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextfil
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           ioinit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " clear saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           comflg
  comment
   " clear line comment flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
  comment
   " set "." type to one??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " clear "." value??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
  comment
   " set ".." type to zero??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4096
  comment
   " set ".." value to 4K
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbflg
  comment
   " clear f/b flag and array
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    label
     fbxp:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         fbx
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           init
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     finis:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
    declarationRight
     instruction
      opcode
       iof
  comment
   " close input file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufwr
  comment
   " flush output buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
  comment
   " close a.out input fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfo
  comment
   " close a.out output fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           namsiz
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " get positive count of namelist entries
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rcl
  comment
   " multiply by 6 to get words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rcl
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17
  comment
   " ?? creat mode bits??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           creat
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         n.out
  comment
   " create "n.out"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         namlst
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " write name list
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   " close n.out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
 eol
  \n\n
 line
  comment
   "** 05-1-4.pdf page 35
 eol
  \n
 line
  declarations
   declaration
    label
     n.out:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0156056
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0157165
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0164040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
  comment
   " n.out
 eol
  \n\n
 line
  declarations
   declaration
    label
     process:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " get "." value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
  comment
   " get "." type??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
  comment
   " three (user defined symbol?)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc4
  comment
   "  yes, give "." error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc1
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " yes (".." type)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " get "." - ".."
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n\n
 line
  declarations
   declaration
    label
     proc1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " is relocated value positive?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc4
  comment
   "  no, give "." error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17700
  comment
   " mask to block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufadd
  comment
   " same block as buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc2
  comment
   "  yes, same block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufwr
  comment
   " different block, write out current block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         buf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " clear buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17700
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufadd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           seek
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " seek to current block from file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           read
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         buf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
 eol
  \n\n
 line
  declarations
   declaration
    label
     proc2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " destination address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o77
  comment
   " word within block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         maxsto
  comment
   " inside buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxsto
  comment
   "  no, increment buffer size
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufp
  comment
   " add pointer to buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " save buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
  comment
   " get r type?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " non-zero ("." or label)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc3
  comment
   "  no: zero (..)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
  comment
   " three (user label)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc5
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmflx
        +
        multiplyingExpression
         atom
          1
  comment
   " get ".." value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
  comment
   " add to r value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n\n
 line
  declarations
   declaration
    label
     proc3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
  comment
   " get r value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lvrand
  comment
   " save in buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           process
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     proc4:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .>
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
  comment
   " set '.' type to 1
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 36
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           dot
        +
        multiplyingExpression
         atom
          1
  comment
   " clear dot value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           skip
 eol
  \n\n
 line
  declarations
   declaration
    label
     proc5:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        u>
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           proc3
 eol
  \n\n
 line
  declarations
   declaration
    label
     bufwr:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " write current buffer to a.out file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfo
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           seek
   ;
   declaration
    label
     bufadd:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxsto
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bfo
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     bufp:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         buf
   ;
   declaration
    label
     maxsto:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxsto
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           bufwr
 eol
  \n\n
 line
  declarations
   declaration
    label
     number:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " print decimal number: append to buffer at index 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " save number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " save divisor
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          3f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       idiv
   ;
   declaration
    label
     2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          3f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o60
  comment
   " add ascii '0'
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       idiv
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           number
 eol
  \n
 line
  declarations
   declaration
    label
     3:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n\n
 line
  comment
   " get character from buffer (two characters per word)
 eol
  \n
 line
  comment
   " call with:
 eol
  \n
 line
  comment
   "   jms getsc; pointer_pointer
 eol
  \n
 line
  comment
   " where pointer_pointer refers to a pointer to buffer
 eol
  \n
 line
  comment
   " high bit in pointer indicates low char is next
 eol
  \n
 line
  declarations
   declaration
    label
     getsc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           getsc
  comment
   " get pointer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           getsc
  comment
   " skip pointer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " fetch pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       add
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " toggle high bit, increment on wrap
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " save pointer back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " rotate high bit into link reg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " load word from buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       szl
  comment
   " skip if link zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lrss
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   "  link set: get high char from word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " strip to 7 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           getsc
  comment
   " return
 eol
  \n\n
 line
  comment
   " save characters: word after call is addr of pointer, -count pair
 eol
  \n
 line
  comment
   " high bit in pointer used to indicate high/low
 eol
  \n
 line
  declarations
   declaration
    label
     putsc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " strip character to 7 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
  comment
   " get address of pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
  comment
   " skip over pointer to pointer
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 37
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " get pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       add
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " toggle pointer sign bit, increment on wrap
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctalp
  comment
   " save pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
      argument
       expression
        multiplyingExpression
         atom
          variable
           cla
  comment
   " skip if minus & clear AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  AC positive
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       llss
      argument
       expression
        multiplyingExpression
         atom
          27
  comment
   " get char in high 9 bits, zero in low
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " store word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lrss
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   " shift char back down
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " load target word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       omq
  comment
   " or in low char from MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           sctal
  comment
   " save word back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " restore character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     sctalp:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     sctal:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n\n
 line
  comment
   " test if between two values (low,high]
 eol
  \n
 line
  comment
   " call with value in AC
 eol
  \n
 line
  comment
   "    jms betwen; lowptr; highptr
 eol
  \n
 line
  comment
   " skip returns if AC in range
 eol
  \n
 line
  comment
   " AC returned unmodified
 eol
  \n
 line
  comment
   " NOTE!
 eol
  \n
 line
  comment
   " the test appears to be non-inclusive
 eol
  \n
 line
  comment
   " on the low side, and inclusive on the high side
 eol
  \n\n
 line
  declarations
   declaration
    label
     betwen:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " save value to test
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " load range start addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " increment return PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " load range start
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " complement
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " AC = AC - start - 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " still positive?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " load range end addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " skip range high on return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " load range high
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " negate AC (~AC + 1)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " add test value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " if not positive, don't skip on return!!
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " discard "high" (or skip return)!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " restore AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     3:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n\n
 line
  comment
   " zero a block of memory
 eol
  \n
 line
  comment
   " call with:
 eol
  \n
 line
  comment
   "   jms copyz; ptr; count
 eol
  \n
 line
  declarations
   declaration
    label
     copyz:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " get address-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " store in first "index register"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " skip over address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " load count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " get -count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " skip over count
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " increment index, clear word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " increment count, skip if done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  not done, loop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " done: return
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 38
 eol
  \n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n\n
 line
  declarations
   declaration
    label
     error:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
  comment
   " get pass number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " pass one?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no, pass two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " pass one: skip error char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           mesp
  comment
   " get mes-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save as index
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " get error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save in mess
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
  comment
   " get space
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save in mess
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " get operator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " word break (semi, newline)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " no, get saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " newline?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lineno
  comment
   " get lineno
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           lineno
  comment
   " get lineno -1
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           number
  comment
   " convert line number to ascii
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " get newline
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " append to mess
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           mesp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     mesp:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         mes
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
 eol
  \n\n
 line
  declarations
   declaration
    label
     skip:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " get operator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " EOL?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  yes, start from top
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " loop until ';' or NL seen
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " EOL?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           assm1
  comment
   "  yes, start from top
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n\n
 line
  declarations
   declaration
    label
     ioinit:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         iobuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " clear iobuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
    declarationRight
     instruction
      opcode
       iof
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           read
   ;
   declaration
    label
     iobufp:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         iobuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " read from input
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " EOF?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextfil
  comment
   "  yes, skip to next file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           iobufp
  comment
   " load iobuf pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tal
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         129
  comment
   " get -bytecount-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           talc
  comment
   " save as count
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 39
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           ioinit
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     nextfil:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " advance to next file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lineno
  comment
   " reset lineno to 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
    declarationRight
     instruction
      opcode
       iof
  comment
   " load input fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   "  no: close
 eol
  \n
 line
  declarations
   declaration
    label
     nf1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           narg
  comment
   " load arg count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " ==4? (done)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes, skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "   no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           eofflg
  comment
   " flag eof (set to zero)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextfil
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dm4
  comment
   " subtract 4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           narg
  comment
   " store narg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fname
  comment
   " get fname pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " subtract 4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fname
  comment
   " save fname
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           open
   ;
   declaration
    label
     fname:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " open fname
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
    declarationRight
     instruction
      opcode
       iof
  comment
   " save fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " open ok?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           passno
  comment
   "  yes: load pass number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " no: open failed: skip or open ok, pass 2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextfil
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  pass 1, open OK, return.
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fname
  comment
   " load filename pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " save for write
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " stdout
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " output filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
    declarationRight
     instruction
      opcode
       iof
  comment
   " load fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " open ok?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes, continue
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         emes
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2
  comment
   " output "? \n"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
  comment
   " quit.
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         emes
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " output newline after filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextfil
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     emes:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040077
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        012000
  comment
   " question mark, space, newline
 eol
  \n\n
 line
  declarations
   declaration
    label
     gchar:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " load saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " clear saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " was there a saved char?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gch3
  comment
   "  yes, process it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           eofflg
  comment
   " no: get eof flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " seen eof (zero if true)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no.
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " yes: get NL
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gch3
  comment
   " process it
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           talc
  comment
   " increment (negative count): is it zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  non-zero: skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           ioinit
  comment
   "   count was zero: call ioinit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getsc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         tal
  comment
   " fetch character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " is char non-zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
        +
        multiplyingExpression
         atom
          1
  comment
   "  no: char is zero, get another
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 40
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " is char 0177
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
        +
        multiplyingExpression
         atom
          1
  comment
   "  yes, ignore it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " is char newline?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "   no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           comflg
  comment
   " saw newline: clear comflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           lineno
  comment
   " increment line number
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o42
  comment
   " is char '"'?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           comflg
  comment
   "  yes, set comflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           comflg
  comment
   " load comflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " comflg clear?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
        +
        multiplyingExpression
         atom
          1
  comment
   "  no: ignore reset of line
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " get char
 eol
  \n\n
 line
  declarations
   declaration
    label
     gch3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save char in char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o200
  comment
   " legal char?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   "  no, clear
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           lactab
  comment
   " add to "lac labtab+1"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
  comment
   " save as next instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          0
  comment
   " get character class in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     gsymb:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " save class
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           jmpsw1
  comment
   " add table base instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " save for later
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " what was it?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o74
  comment
   " '<'??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           lqot
  comment
   "  yes: process as "left quote"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namc
  comment
   " no, save as namc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get another
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " what was it?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o76
  comment
   " '>'?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           rqot
  comment
   "  yes: process "right quote"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " no: save as savchr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namc
  comment
   " restore first char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " resave as "char"
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          0
  comment
   " jmpsw1[0] + class
 eol
  \n
 line
  declarations
   declaration
    label
     jmpsw1:
  comment
   " indexed by character class
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
  comment
   " base instruction (added to class)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " 0: ":" return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " 1: "=" return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " 2: "+" return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " 3: "-" return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gs1
  comment
   " 4: comma, space, tab
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " 5: EOL (semi, newline)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gs2
  comment
   " 6: dot, star, letter
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gs3
  comment
   " 7: digits
 eol
  \n\n
 line
  declarations
   declaration
    label
     badchr:
  comment
   " here with bad char (class 8)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        g>
  comment
   " error "g"
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " discard until newline
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 41
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " push newline back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
        +
        multiplyingExpression
         atom
          1
  comment
   " restart gsymb
 eol
  \n\n
 line
  declarations
   declaration
    label
     lqot:
  comment
   " left quote (<)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get another char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " put a space in savchr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " get quoted character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       alss
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   " shift up 9 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " join with right quote
 eol
  \n\n
 line
  declarations
   declaration
    label
     rqot:
  comment
   " right quote (>)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namc
  comment
   " get previous(?) char
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " save value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d7
  comment
   " return as literal
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
 eol
  \n\n
 line
  declarations
   declaration
    label
     gs1:
  comment
   " here with space, tab, comma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get another char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " another space?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gs1
  comment
   "  yes, loop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " no, save for later
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     gs2:
  comment
   " here with dot, star, letter
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namep
  comment
   " load name buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tal1
  comment
   " save in temp pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         7
  comment
   " load negative char count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tal1c
  comment
   " save as temp counter
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " restore char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         tal1
  comment
   " save it in name buffer
 eol
  \n\n
 line
  declarations
   declaration
    label
     gnam1:
  comment
   " here to collect a name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d5
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d8
  comment
   " alphanumeric?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gnam3
  comment
   "  no, done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         tal1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           tal1c
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gnam1
 eol
  \n\n
 line
  declarations
   declaration
    label
     gnam2:
  comment
   " here when 8 characters read, eat the rest
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " next char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d5
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d8
  comment
   " alphanumeric?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gnam2
  comment
   "   yes, loop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " push last char back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
  comment
   " look up symbol
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " return
 eol
  \n\n
 line
  declarations
   declaration
    label
     gnam3:
  comment
   " here before 8 characters
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " push last char back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
  comment
   " pad to 8 with spaces
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 42
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putsc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         tal1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           tal1c
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
 eol
  \n\n
 line
  declarations
   declaration
    label
     gs3:
  comment
   " here with digit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " clear number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o60
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d10
  comment
   " no: process as decimal
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d8
  comment
   " leading zero: process as octal
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           num2
  comment
   " save radix
 eol
  \n\n
 line
  declarations
   declaration
    label
     num1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " get number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
  comment
   " clear link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       mul
  comment
   " mutiply by radix
 eol
  \n
 line
  declarations
   declaration
    label
     num2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " (radix stored here)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get multiply result
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " add char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dm48
  comment
   " subtract '0'
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get another
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d7
  comment
   " digit?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           num1
  comment
   "  yes: process
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " no: get it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " push back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " get number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d10
  comment
   " between 0..9?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   "  no, return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           fbxp
  comment
   " make index into "fbx" array
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " save for indirect fetch
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " fetch fbx array entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " save fbx count in name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " get break character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o146
  comment
   " was it 'f'?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o142
  comment
   " 'b'?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   "   not f or b, return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " 'b': clear loaded fbx entry????
 eol
  \n
 line
  declarations
   declaration
    label
     1:
  comment
   " here with DIGITS[fb]
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          2
  comment
   " save f/b in third word of name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          3
  comment
   " clear last word of name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d6
  comment
   " class 6: alpha, dot star
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " save as (ope)rator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
  comment
   " lookup (create) symbol entry????
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
  comment
   " clear saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
 eol
  \n\n
 line
  comment
   " symbol lookup/creation
 eol
  \n
 line
  comment
   " tlookup doesn't create new entries???
 eol
  \n
 line
  declarations
   declaration
    label
     tlookup:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    label
     lookup:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
  comment
   " NOT a tlookup call
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 43
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           namlstp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " get namelist ptr in index reg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namsiz
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namc
  comment
   " negative namelist size in namc
 eol
  \n
 line
  declarations
   declaration
    label
     lu1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " get first word of namelist entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
  comment
   " match name?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " no, skip next 5 words
 eol
  \n
 line
  declarations
   declaration
    label
     lu2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           namc
  comment
   " at end of list?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           lu1
  comment
   "  no, keep going
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
  comment
   " yes, reached end
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " was tlookup?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  no, was lookup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fnamep
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " set rand+1 (value?) to fakename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
  comment
   " make new entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save word one of name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save word two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save word three
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save word four
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " set type(?) to three
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " clear value??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " decrement namsiz
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           namsiz
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           namsiz
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     1:
  comment
   " here when first word matched
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          1
  comment
   " check second word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  matched, keep going
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " no match: skip ahead four words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           lu2
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          2
  comment
   " does third word match?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes, keep going
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
  comment
   " no, skip ahead three words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           lu2
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
        +
        multiplyingExpression
         atom
          3
  comment
   " final word match?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
  comment
   " no, skip two words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           lu2
 eol
  \n
 line
  declarations
   declaration
    label
     1:
  comment
   " name matched
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " get next word minus three
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
  comment
   " return as value
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 44
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           tlookup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookup
 eol
  \n
 line
  declarations
   declaration
    label
     namep:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
 eol
  \n\n
 line
  declarations
   declaration
    label
     gpair:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
  comment
   " get a symbol
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
  comment
   " get operator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " space tab or comma?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
        +
        multiplyingExpression
         atom
          1
  comment
   "  yes, get another
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d6
  comment
   " plus, minus, comma, semi?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gp1
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
  comment
   " clear "rand"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     gp1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d7
  comment
   " digit??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   "  yes: switch to space??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dm4
  comment
   " subtract 4??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
  comment
   " save as operand??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " whitespace?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gp2
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d6
  comment
   " anything but digit?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  no, a digit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
  comment
   "   yes, return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        x>
  comment
   " here with digit: give 'x' error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           skip
 eol
  \n
 line
  declarations
   declaration
    label
     gp2:
  comment
   " here after whitespace
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gchar
  comment
   " get next char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d5
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d8
  comment
   " alphanumeric?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           gp3
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " yes, push back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
 eol
  \n
 line
  declarations
   declaration
    label
     gp3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " push back break char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           savchr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gsymb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
 eol
  \n\n
 line
  declarations
   declaration
    label
     expr:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           grand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           srand
 eol
  \n
 line
  declarations
   declaration
    label
     exp5:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    label
     exp1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d5
  comment
   " plus, minus, comma, space, tab or comma?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exp3
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           orator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           gpair
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           grand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           orator
  comment
   " get operator back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " comma space or tab?
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 45
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exp2
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         rand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exp1
 eol
  \n
 line
  declarations
   declaration
    label
     exp2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           pickup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           srand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           srand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exp5
 eol
  \n
 line
  declarations
   declaration
    label
     exp3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exp4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        x>
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           skip
 eol
  \n
 line
  declarations
   declaration
    label
     exp4:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           pickup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           expr
 eol
  \n\n
 line
  declarations
   declaration
    label
     pickup:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           srand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           pickup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         srand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           pickup
 eol
  \n\n
 line
  declarations
   declaration
    label
     grand:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           grand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           rand
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           grand
 eol
  \n\n
 line
  comment
   " called with
 eol
  \n
 line
  comment
   "    jms oper; argument
 eol
  \n
 line
  declarations
   declaration
    label
     oper:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           opsw
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
  comment
   " pick up argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " store as index
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
  comment
   " skip argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper2
 eol
  \n
 line
  declarations
   declaration
    label
     oper1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          0
 eol
  \n
 line
  declarations
   declaration
    label
     opsw:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           oplus
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           ominus
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 46
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       omq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           oret
 eol
  \n
 line
  declarations
   declaration
    label
     oplus:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           oret
 eol
  \n
 line
  declarations
   declaration
    label
     ominus:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    label
     oret:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dm1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        r>
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
 eol
  \n
 line
  declarations
   declaration
    label
     oper2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           r
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           oper
 eol
  \n\n
 line
  declarations
   declaration
    label
     d0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     d1:
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    label
     d4096:
    declarationRight
     expression
      multiplyingExpression
       atom
        4096
 eol
  \n
 line
  declarations
   declaration
    label
     d2:
    declarationRight
     expression
      multiplyingExpression
       atom
        2
 eol
  \n
 line
  declarations
   declaration
    label
     d3:
    declarationRight
     expression
      multiplyingExpression
       atom
        3
 eol
  \n
 line
  declarations
   declaration
    label
     d4:
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    label
     d5:
    declarationRight
     expression
      multiplyingExpression
       atom
        5
 eol
  \n
 line
  declarations
   declaration
    label
     d6:
    declarationRight
     expression
      multiplyingExpression
       atom
        6
 eol
  \n
 line
  declarations
   declaration
    label
     d7:
    declarationRight
     expression
      multiplyingExpression
       atom
        7
 eol
  \n
 line
  declarations
   declaration
    label
     d8:
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    label
     o12:
    label
     d10:
    declarationRight
     expression
      multiplyingExpression
       atom
        10
 eol
  \n
 line
  declarations
   declaration
    label
     dm1:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    label
     o40:
    declarationRight
     expression
      multiplyingExpression
       atom
        040
 eol
  \n
 line
  declarations
   declaration
    label
     o60:
    declarationRight
     expression
      multiplyingExpression
       atom
        060
 eol
  \n
 line
  declarations
   declaration
    label
     dm48:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         48
 eol
  \n
 line
  declarations
   declaration
    label
     o400000:
    declarationRight
     expression
      multiplyingExpression
       atom
        0400000
 eol
  \n
 line
  declarations
   declaration
    label
     o177:
    declarationRight
     expression
      multiplyingExpression
       atom
        0177
 eol
  \n
 line
  declarations
   declaration
    label
     dm4:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         4
 eol
  \n
 line
  declarations
   declaration
    label
     o200:
    declarationRight
     expression
      multiplyingExpression
       atom
        0200
 eol
  \n
 line
  declarations
   declaration
    label
     o42:
    declarationRight
     expression
      multiplyingExpression
       atom
        042
 eol
  \n
 line
  declarations
   declaration
    label
     o142:
    declarationRight
     expression
      multiplyingExpression
       atom
        0142
 eol
  \n
 line
  declarations
   declaration
    label
     o40040:
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
  comment
   " space, space
 eol
  \n
 line
  declarations
   declaration
    label
     o56056:
    declarationRight
     expression
      multiplyingExpression
       atom
        056056
  comment
   " ".."
 eol
  \n
 line
  declarations
   declaration
    label
     o56040:
    declarationRight
     expression
      multiplyingExpression
       atom
        056040
  comment
   " ". "
 eol
  \n
 line
  comment
   "** 05-1-4.pdf page 47
 eol
  \n
 line
  declarations
   declaration
    label
     o146:
    declarationRight
     expression
      multiplyingExpression
       atom
        0146
 eol
  \n
 line
  declarations
   declaration
    label
     o17777:
    declarationRight
     expression
      multiplyingExpression
       atom
        017777
 eol
  \n
 line
  declarations
   declaration
    label
     d1000:
    declarationRight
     expression
      multiplyingExpression
       atom
        1000
 eol
  \n
 line
  declarations
   declaration
    label
     o17:
    declarationRight
     expression
      multiplyingExpression
       atom
        017
 eol
  \n
 line
  declarations
   declaration
    label
     o17700:
    declarationRight
     expression
      multiplyingExpression
       atom
        017700
 eol
  \n
 line
  declarations
   declaration
    label
     o77:
    declarationRight
     expression
      multiplyingExpression
       atom
        077
 eol
  \n
 line
  declarations
   declaration
    label
     o74:
    declarationRight
     expression
      multiplyingExpression
       atom
        074
 eol
  \n
 line
  declarations
   declaration
    label
     o76:
    declarationRight
     expression
      multiplyingExpression
       atom
        076
 eol
  \n\n
 line
  declarations
   declaration
    label
     namsiz:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         2
  comment
   " negative numberof namelist entries
 eol
  \n
 line
  declarations
   declaration
    label
     namlstp:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         namlst
  comment
   " pointer to namelist
 eol
  \n
 line
  declarations
   declaration
    label
     fnamep:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         fakename
  comment
   " pointer to fake namelist entry
 eol
  \n
 line
  declarations
   declaration
    label
     lactab:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
  comment
   " character (operator) class table (8 unless noted)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        5
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
  comment
   " TAB=4 NL=5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
  comment
   " SP=4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        3
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
  comment
   " *=6 +=2 ,=4 -=3 .=6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
  comment
   " digits=7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        5
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
  comment
   " :=0 ;=5 ==1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
  comment
   " A-Z=6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
  comment
   " a-z=6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n\n
 line
  declarations
   declaration
    label
     fbflg:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " f/b label flag
 eol
  \n
 line
  declarations
   declaration
    label
     tal:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " iobuf pointer
 eol
  \n
 line
  declarations
   declaration
    label
     talc:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " -bytecount-1
 eol
  \n
 line
  declarations
   declaration
    label
     tal1:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " namebuf pointer
 eol
  \n
 line
  declarations
   declaration
    label
     tal1c:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " -bytecount-1
 eol
  \n
 line
  declarations
   declaration
    label
     narg:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " argc
 eol
  \n
 line
  declarations
   declaration
    label
     lvrand:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " numeric constant, word address
 eol
  \n
 line
  declarations
   declaration
    label
     eofflg:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " 0 on EOF??
 eol
  \n
 line
  declarations
   declaration
    label
     namc:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " saved char, temporary
 eol
  \n
 line
  declarations
   declaration
    label
     passno:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " 0=pass1, 1=pass2
 eol
  \n
 line
  declarations
   declaration
    label
     char:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " current character
 eol
  \n
 line
  declarations
   declaration
    label
     savchr:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " pushed back char
 eol
  \n
 line
  declarations
   declaration
    label
     comflg:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " comment flag
 eol
  \n
 line
  declarations
   declaration
    label
     rator:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " (opo)rator (char type)
 eol
  \n
 line
  declarations
   declaration
    label
     orator:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " ?? (op)orator
 eol
  \n
 line
  declarations
   declaration
    label
     rand:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         2
  comment
   " ?? (ope)rand (type/address pair)
 eol
  \n
 line
  declarations
   declaration
    label
     srand:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         2
  comment
   " ?? another operand
 eol
  \n
 line
  declarations
   declaration
    label
     r:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         2
  comment
   " ?? yet another??
 eol
  \n
 line
  declarations
   declaration
    label
     name:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         4
  comment
   " buffer for accumulating names
 eol
  \n
 line
  declarations
   declaration
    label
     buf:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         64
  comment
   " a.out output buffer
 eol
  \n
 line
  declarations
   declaration
    label
     iobuf:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         64
  comment
   " input buffer
 eol
  \n
 line
  declarations
   declaration
    label
     fbx:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         10
  comment
   " forward/backward counters
 eol
  \n
 line
  declarations
   declaration
    label
     mes:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         20
  comment
   " (error) message buffer
 eol
  \n
 line
  declarations
   declaration
    label
     iof:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " source file fd
 eol
  \n
 line
  declarations
   declaration
    label
     bfi:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " a.out input fd
 eol
  \n
 line
  declarations
   declaration
    label
     bfo:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " a.out output fd
 eol
  \n
 line
  declarations
   declaration
    label
     lineno:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " source file line number
 eol
  \n\n
 line
  declarations
   declaration
    label
     fakename:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         6
  comment
   " dummy namelist entry returned by tlookup??
 eol
  \n
 line
  declarations
   declaration
    label
     namlst:
  comment
   " symbol table
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         4
  comment
   " dot name
 eol
  \n
 line
  declarations
   declaration
    label
     dot:
  comment
   " dot type, value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         6
  comment
   " dot dot name
 eol
  \n
 line
  declarations
   declaration
    label
     cmflx:
  comment
   " dotdot type, value
 eol
  \n
 line
  comment
   " namelist (symbol table) entries are 6 words.
 eol
  \n
 line
  comment
   " four words of symbol (space padded) name
 eol
  \n
 line
  comment
   " next word is type??
 eol
  \n
 line
  comment
   "   0: initial dotdot type
 eol
  \n
 line
  comment
   "   1: initial dot type (reset on error)
 eol
  \n
 line
  comment
   "   3: set by "lookup" (user symbol)
 eol
  \n
 line
  comment
   " last word is value??
 eol
  \n
 <EOF>
