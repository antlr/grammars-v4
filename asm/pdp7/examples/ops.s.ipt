prog
 line
  comment
   " ops and system calls from as7; as.s has no initial symbol table
 eol
  \n
 line
  comment
   " so this needs to be included in any assembly of user programs
 eol
  \n\n
 line
  comment
   " "sys" has it's own sop.s which includes I/O instructions, but lacks
 eol
  \n
 line
  comment
   " system call definitions, and lacks some instructions used in
 eol
  \n
 line
  comment
   " commands but not in the kernel, so it can't have been the file used
 eol
  \n
 line
  comment
   " for user assemblies.
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        save
      =
      expression
       multiplyingExpression
        atom
         1
  comment
   " saves core dump & user area!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        getuid
      =
      expression
       multiplyingExpression
        atom
         2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        open
      =
      expression
       multiplyingExpression
        atom
         3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        read
      =
      expression
       multiplyingExpression
        atom
         4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        write
      =
      expression
       multiplyingExpression
        atom
         5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        creat
      =
      expression
       multiplyingExpression
        atom
         6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        seek
      =
      expression
       multiplyingExpression
        atom
         7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        tell
      =
      expression
       multiplyingExpression
        atom
         8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        close
      =
      expression
       multiplyingExpression
        atom
         9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        link
      =
      expression
       multiplyingExpression
        atom
         10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        unlink
      =
      expression
       multiplyingExpression
        atom
         11
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        setuid
      =
      expression
       multiplyingExpression
        atom
         12
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        rename
      =
      expression
       multiplyingExpression
        atom
         13
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        exit
      =
      expression
       multiplyingExpression
        atom
         14
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        time
      =
      expression
       multiplyingExpression
        atom
         15
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        intrp
      =
      expression
       multiplyingExpression
        atom
         16
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        chdir
      =
      expression
       multiplyingExpression
        atom
         17
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        chmod
      =
      expression
       multiplyingExpression
        atom
         18
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        chown
      =
      expression
       multiplyingExpression
        atom
         19
 eol
  \n
 line
  comment
   " 20 removed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        sysloc
      =
      expression
       multiplyingExpression
        atom
         21
  comment
   " return system addresses
 eol
  \n
 line
  comment
   " 22 removed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        capt
      =
      expression
       multiplyingExpression
        atom
         23
  comment
   " capture display?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        rele
      =
      expression
       multiplyingExpression
        atom
         24
  comment
   " release display?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        status
      =
      expression
       multiplyingExpression
        atom
         25
  comment
   " "stat"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        smes
      =
      expression
       multiplyingExpression
        atom
         27
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        rmes
      =
      expression
       multiplyingExpression
        atom
         28
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        fork
      =
      expression
       multiplyingExpression
        atom
         29
 eol
  \n\n
 line
  comment
   " List of instruction names and machine code values
 eol
  \n
 line
  comment
   " These come from https://raw.githubusercontent.com/simh/
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        sys
      =
      expression
       multiplyingExpression
        atom
         0020000
  comment
   " "cal i" instruction (trap indirect thru 020)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        i
      =
      expression
       multiplyingExpression
        atom
         0020000
  comment
   " indirect bit
 eol
  \n\n
 line
  comment
   " memory reference instructions
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        dac
      =
      expression
       multiplyingExpression
        atom
         0040000
  comment
   " deposit AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        jms
      =
      expression
       multiplyingExpression
        atom
         0100000
  comment
   " jump to subroutine
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        dzm
      =
      expression
       multiplyingExpression
        atom
         0140000
  comment
   " deposit zero in memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lac
      =
      expression
       multiplyingExpression
        atom
         0200000
  comment
   " load AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        xor
      =
      expression
       multiplyingExpression
        atom
         0240000
  comment
   " exclusive or
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        add
      =
      expression
       multiplyingExpression
        atom
         0300000
  comment
   " one's complement add
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        tad
      =
      expression
       multiplyingExpression
        atom
         0340000
  comment
   " two's complement add
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        xct
      =
      expression
       multiplyingExpression
        atom
         0400000
  comment
   " execute
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        isz
      =
      expression
       multiplyingExpression
        atom
         0440000
  comment
   " increment and skip if zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        and
      =
      expression
       multiplyingExpression
        atom
         0500000
  comment
   " AND with contents of Y
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        sad
      =
      expression
       multiplyingExpression
        atom
         0540000
  comment
   " skip if AC different from content of Y
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        jmp
      =
      expression
       multiplyingExpression
        atom
         0600000
  comment
   " jump to Y
 eol
  \n\n
 line
  comment
   " Type 177 Extended Arithmetic Element (EAE)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        eae
      =
      expression
       multiplyingExpression
        atom
         0640000
  comment
   " base instruction (nop)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        osc
      =
      expression
       multiplyingExpression
        atom
         0640001
  comment
   " OR SC into AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        omq
      =
      expression
       multiplyingExpression
        atom
         0640002
  comment
   " OR MQ into AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        cmq
      =
      expression
       multiplyingExpression
        atom
         0640004
  comment
   " Complement MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        div
      =
      expression
       multiplyingExpression
        atom
         0640323
  comment
   " divide
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        norm
      =
      expression
       multiplyingExpression
        atom
         0640444
  comment
   " normalize unsigned
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lls
      =
      expression
       multiplyingExpression
        atom
         0640600
  comment
   " long left shift
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        als
      =
      expression
       multiplyingExpression
        atom
         0640700
  comment
   " AC shift
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lrs
      =
      expression
       multiplyingExpression
        atom
         0640500
  comment
   " long right shift
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        lacs
      =
      expression
       multiplyingExpression
        atom
         0641001
  comment
   " load AC with SC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lacq
      =
      expression
       multiplyingExpression
        atom
         0641002
  comment
   " load AC with MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        abs
      =
      expression
       multiplyingExpression
        atom
         0644000
  comment
   " absolute value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        divs
      =
      expression
       multiplyingExpression
        atom
         0644323
  comment
   " divide signed
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        clq
      =
      expression
       multiplyingExpression
        atom
         0650000
  comment
   " clear MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        frdiv
      =
      expression
       multiplyingExpression
        atom
         0650323
  comment
   " fractional divide
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lmq
      =
      expression
       multiplyingExpression
        atom
         0652000
  comment
   " load MQ from AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        mul
      =
      expression
       multiplyingExpression
        atom
         0653122
  comment
   " multiply
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        idiv
      =
      expression
       multiplyingExpression
        atom
         0653323
  comment
   " integer divide
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        idivs
      =
      expression
       multiplyingExpression
        atom
         0657323
  comment
   " integer divide signed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        frdivs
      =
      expression
       multiplyingExpression
        atom
         0654323
  comment
   " fractional divide signed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        muls
      =
      expression
       multiplyingExpression
        atom
         0657122
  comment
   " multiply signed
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        norms
      =
      expression
       multiplyingExpression
        atom
         0660444
  comment
   " normalize signed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        gsm
      =
      expression
       multiplyingExpression
        atom
         0664000
  comment
   " get sign and magnitude
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        lrss
      =
      expression
       multiplyingExpression
        atom
         0660500
  comment
   " long right shift signed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        llss
      =
      expression
       multiplyingExpression
        atom
         0660600
  comment
   " long left shift signed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        alss
      =
      expression
       multiplyingExpression
        atom
         0660700
  comment
   " AC left shift signed
 eol
  \n\n
 line
  comment
   " Operate Instructions
 eol
  \n\n
 line
  comment
   " Group 1 (OPR 1) instructions
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        opr
      =
      expression
       multiplyingExpression
        atom
         0740000
  comment
   " base operate instruction (nop)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        nop
      =
      expression
       multiplyingExpression
        atom
         0740000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        cma
      =
      expression
       multiplyingExpression
        atom
         0740001
  comment
   " complement accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        cml
      =
      expression
       multiplyingExpression
        atom
         0740002
  comment
   " complement link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        oas
      =
      expression
       multiplyingExpression
        atom
         0740004
  comment
   " inclusive or accumulator switches
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        ral
      =
      expression
       multiplyingExpression
        atom
         0740010
  comment
   " rotate (ac link) left
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        rar
      =
      expression
       multiplyingExpression
        atom
         0740020
  comment
   " rotate (ac link) right
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        hlt
      =
      expression
       multiplyingExpression
        atom
         0740040
  comment
   " HALT
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        xx
      =
      expression
       multiplyingExpression
        atom
         0740040
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        sma
      =
      expression
       multiplyingExpression
        atom
         0740100
  comment
   " skip on minus accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        sza
      =
      expression
       multiplyingExpression
        atom
         0740200
  comment
   " skip on zero accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        snl
      =
      expression
       multiplyingExpression
        atom
         0740400
  comment
   " skip on non-zero link
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        skp
      =
      expression
       multiplyingExpression
        atom
         0741000
  comment
   " unconditional skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        spa
      =
      expression
       multiplyingExpression
        atom
         0741100
  comment
   " skip on positive accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        sna
      =
      expression
       multiplyingExpression
        atom
         0741200
  comment
   " skip on negative accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        szl
      =
      expression
       multiplyingExpression
        atom
         0741400
  comment
   " skip on zero link
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        rtl
      =
      expression
       multiplyingExpression
        atom
         0742010
  comment
   " rotate two left (ral*2)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        rtr
      =
      expression
       multiplyingExpression
        atom
         0742020
  comment
   " rotate two right (rar*2)
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        cll
      =
      expression
       multiplyingExpression
        atom
         0744000
  comment
   " clear link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        stl
      =
      expression
       multiplyingExpression
        atom
         0744002
  comment
   " set link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        rcl
      =
      expression
       multiplyingExpression
        atom
         0744010
  comment
   " clear link rotate left
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        rcr
      =
      expression
       multiplyingExpression
        atom
         0744020
  comment
   " clear link rotate right
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        cla
      =
      expression
       multiplyingExpression
        atom
         0750000
  comment
   " clear accumulator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        clc
      =
      expression
       multiplyingExpression
        atom
         0750001
  comment
   " clear and complement acc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        las
      =
      expression
       multiplyingExpression
        atom
         0750004
  comment
   " load acc from switches
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        glk
      =
      expression
       multiplyingExpression
        atom
         0750010
  comment
   " get link
 eol
  \n\n
 line
  comment
   " Group 2 operate
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       opcode
        law
      =
      expression
       multiplyingExpression
        atom
         0760000
  comment
   " load accumulator with (instruction)
 eol
  \n
 <EOF>
