prog
 line
  comment
   " -*-fundamental-*-
 eol
  \n
 line
  comment
   " pbsh -- a shell
 eol
  \n
 line
  comment
   " started by p budne 3/4/2016
 eol
  \n
 line
  comment
   " with code from init.s, cat.s and looking at the v1 (pdp-11) shell
 eol
  \n\n
 line
  comment
   " In particular, the newline/newcom/newarg/newchar processing loop(s)
 eol
  \n
 line
  comment
   " are copied from the v1 shell:
 eol
  \n
 line
  comment
   " 1. Redirection must occur at the start of a name (after whitespace)
 eol
  \n
 line
  comment
   " 2. In parroting the v1 shell code, I did NOT add whitespace removal
 eol
  \n
 line
  comment
   " after > and <
 eol
  \n\n
 line
  comment
   " includes ';' and '&' (which are mentioned as added close after "fork")
 eol
  \n\n
 line
  comment
   " does NOT include quoting (backslash or quotes), which are mentioned
 eol
  \n
 line
  comment
   " in the v1 shell man page: http://man.cat-v.org/unix-1st/1/sh
 eol
  \n\n
 line
  comment
   " does NOT implement >> (not mentioned in the v1 sh man page)
 eol
  \n\n
 line
  comment
   " No "globbing" (performed by /etc/glob in v1 shell); McIlroy's
 eol
  \n
 line
  comment
   " "Reader" paper reports that cp/mv syntax changed in response to the
 eol
  \n
 line
  comment
   " introduction of globbing, the the surviving "cp" command takes src
 eol
  \n
 line
  comment
   " dest pairs.
 eol
  \n\n
 line
  comment
   " v1 shell expects "-" as argument from init or login, will read a
 eol
  \n
 line
  comment
   " filename passed as the first argument.  *BUT* the PDP-7 init.s
 eol
  \n
 line
  comment
   " doesn't set up an arg pointer at the top of memory, so it's unlikely
 eol
  \n
 line
  comment
   " the PDP-7 shell took command line arguments!!!
 eol
  \n\n
 line
  comment
   " cat.s seems to write error output on fd 8, but "init" (which opened
 eol
  \n
 line
  comment
   " stdin and stdout) doesn't set it up, and the shell doesn't know what
 eol
  \n
 line
  comment
   " device is on stdout (passed by init, and init doesn't pass fd 8) and
 eol
  \n
 line
  comment
   " there isn't a "dup" call, or an "indirect" device like /dev/tty
 eol
  \n
 line
  comment
   " (nor does init make an equivalent link), so the shell doesn't have
 eol
  \n
 line
  comment
   " a way to open the correct device).
 eol
  \n\n
 line
  comment
   " Direct exection of "runcom" files _could_ be implemented by reading
 eol
  \n
 line
  comment
   " the first block of the "binary" (into 010000) and seeing if any have
 eol
  \n
 line
  comment
   " any bits in 0300300 set before jumping into the "boostrap" code.
 eol
  \n\n
 line
  comment
   " If that's the case, then the child could open "sh" instead of the
 eol
  \n
 line
  comment
   " command file, close stdin, and open the command file, read the first
 eol
  \n
 line
  comment
   " block of "sh" into 010000, and jumping into the bootstrap, but there
 eol
  \n
 line
  comment
   " isn't any evidence that this was the case.
 eol
  \n\n
 line
  comment
   " Arguments for new processes are located at the end of memory.
 eol
  \n
 line
  comment
   " Location 17777 points to a word with the argument count (argc),
 eol
  \n
 line
  comment
   " followed by blocks of four words with (filename) arguments.
 eol
  \n\n
 line
  comment
   " Currently leave room for ONLY maxargs items.
 eol
  \n
 line
  comment
   " 10 is enough to build "cold start" system (as sop.s s1.s ... s9.s)
 eol
  \n
 line
  comment
   " this could be made dynamic (collect args lower in memory, calculate
 eol
  \n
 line
  comment
   " argptr, and copy the names up).
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        maxargs
      =
      expression
       multiplyingExpression
        atom
         10
 eol
  \n\n
 line
  comment
   " see if reading from a special file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           seek
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " try seeking stdin forward one word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " new offset non-zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no: input is a special file (ttyin,keyboard)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           prompt
  comment
   " yes: regular file, kill prompt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           seek
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " seek file back to start
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newline
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           intrp
  comment
   " make shell uninterruptable
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           getuid
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " <0?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newline
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           hash
  comment
   " yes: superuser
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           prompt
  comment
   " change prompt
 eol
  \n\n
 line
  declarations
   declaration
    label
     newline:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         prompt
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " output prompt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           rline
  comment
   " read (edited) line into lbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ilpt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lpt
  comment
   " reset line pointer
 eol
  \n\n
 line
  comment
   " parse new command from current input line
 eol
  \n
 line
  comment
   " (after ';' or '&')
 eol
  \n
 line
  declarations
   declaration
    label
     newcom:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " clear saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           infile
  comment
   " clear input redirect file name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           outfile
  comment
   " clear output redirect file name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           iopt
  comment
   " reset output buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextarg
 eol
  \n\n
 line
  comment
   " reset high memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
  comment
   " clear arg count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argcptr
  comment
   " (re) set arg pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argptr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
  comment
   " clear out argv0 for chdir comparison
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
        +
        multiplyingExpression
         atom
          2
 eol
  \n\n
 line
  comment
   " NOTE! behavior copied from v1 shell!!!
 eol
  \n
 line
  comment
   " "improvements" here may be non-historic!!
 eol
  \n
 line
  declarations
   declaration
    label
     newarg:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         8
  comment
   " save 8 chars
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bcount
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirect
  comment
   " clear redirect flag
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
  comment
   " save start for print (TEMP)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextarg
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           blank
  comment
   " skip whitespace
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
  comment
   " command sep?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           eoc
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           lt
  comment
   " input redirect?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirin
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           gt
  comment
   " output redirect?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirout
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           savechar
  comment
   " no: save as filename
 eol
  \n\n
 line
  declarations
   declaration
    label
     redirin:
  comment
   " saw <
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirect
  comment
   " flag redirect
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           infilep
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newchar
 eol
  \n\n
 line
  declarations
   declaration
    label
     redirout:
  comment
   " saw >
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirect
  comment
   " flag redirect
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           outfilep
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
 eol
  \n
 line
  comment
   " fall
 eol
  \n\n
 line
  declarations
   declaration
    label
     newchar:
  comment
   " loop reading a file name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
  comment
   " space?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           eoname
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
  comment
   " no: end of line?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           eoname
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    label
     savechar:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putc
  comment
   " no: save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           bcount
  comment
   " loop unless full
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newchar
 eol
  \n\n
 line
  comment
   " here after 8 chars: discard until terminator seen
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
  comment
   " end of line?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save terminator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           full
 eol
  \n\n
 line
  comment
   " name ended (short) with whitespace or delim
 eol
  \n
 line
  comment
   " pad out last name to 8 with spaces
 eol
  \n
 line
  declarations
   declaration
    label
     eoname:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save terminator
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putc
  comment
   " copy into argv
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           bcount
  comment
   " loop until full
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    label
     full:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirect
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " last name was a redirect file, skip increment
 eol
  \n\n
 line
  comment
   " file was not a redirection:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
  comment
   " increment argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextarg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " advance nextarg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextarg
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           redirect
  comment
   " clear redirect flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextarg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
  comment
   " set output pointer
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " get terminator
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
  comment
   " end of command?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           eoc
  comment
   "  yes
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
  comment
   " another arg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxargwords
  comment
   " full up?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newarg
  comment
   "   no: get another
 eol
  \n\n
 line
  comment
   " too many args
 eol
  \n
 line
  declarations
   declaration
    label
     4:
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          4b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         toomany
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         ltoomany
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newline
  comment
   " ignore rest of line
 eol
  \n\n
 line
  comment
   " here at end of command
 eol
  \n
 line
  declarations
   declaration
    label
     eoc:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           delimchar
  comment
   " save command delimiter
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
  comment
   " check for empty command line
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " get anything?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextcmd
  comment
   " no, go back for another
 eol
  \n\n
 line
  comment
   " check for built-in "chdir" command
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           chdirstr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           chdirstr
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           chdirstr
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           changedir
 eol
  \n\n
 line
  comment
   " here to execute command (not a builtin)
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           fork
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           parent
 eol
  \n\n
 line
  declarations
   declaration
    label
     child:
  comment
   " debug symbol
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           open
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " try cwd (no link required)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " error?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           link
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         system
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmderr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           open
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmderr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmdfd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           unlink
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmdfd
  comment
   " save command file descriptor
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " check for input redirection
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           infile
  comment
   " input redirct?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   " close fd 0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           open
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         infile
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " open new stdin
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           inerror
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           outfile
  comment
   " output redirect?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exec
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   " close fd 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           creat
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         outfile
  comment
   " open new stdout
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           outerror
 eol
  \n\n
 line
  comment
   " here to "exec" file open on cmdfd, adapted from init.s
 eol
  \n
 line
  declarations
   declaration
    label
     exec:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           boot
        -
        multiplyingExpression
         atom
          1
  comment
   " Get source addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " set up index (pre-increments)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           bootloc
        -
        multiplyingExpression
         atom
          1
  comment
   " Copy "boot" code into high memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   " set up index
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         variable
          bootlen
  comment
   " isz loop count for bootstrap copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           bootcount
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           bootcount
  comment
   " can only do this once!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cmdfd
  comment
   " get fd for the executable
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " Save the fd into MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           bootloc
  comment
   " and then jump to the code
 eol
  \n\n
 line
  comment
   " copied up to bootloc in high memory (below argc)
 eol
  \n
 line
  declarations
   declaration
    label
     boot:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           read
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         userbase
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         userlen
  comment
   " read executable in (check for non-zero ret?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " Get the fd back and close the file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   " close command file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           userbase
  comment
   " and jump to the beginning of the executable
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        bootlen
      =
      expression
       multiplyingExpression
        atom
         .
       -
       multiplyingExpression
        atom
         variable
          boot
  comment
   " length of bootstrap
 eol
  \n\n
 line
  comment
   " error in child process:
 eol
  \n
 line
  declarations
   declaration
    label
     inerror:
  comment
   " error opening input redirection
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           infilep
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
 eol
  \n
 line
  declarations
   declaration
    label
     outerror:
  comment
   " error opening new stdout (stdout closed!)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           outfilep
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    label
     cmderr:
  comment
   " error opening command
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0p
 eol
  \n
 line
  declarations
   declaration
    label
     error:
  comment
   " error in child: filename pointer in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " save filename to complain about
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         qmnl
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           close
  comment
   " close executable, if any
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
  comment
   " performs implicit rmes
 eol
  \n\n
 line
  comment
   " chdir command: executed in shell process
 eol
  \n
 line
  comment
   " takes a series of directory names to chdir to in turn
 eol
  \n
 line
  declarations
   declaration
    label
     changedir:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           qm
  comment
   " need at least one arg!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argv0p
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " increment dir pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         4
  comment
   " decrement argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " done?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextcmd
  comment
   "  yes: join parent code
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           chdir
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " error?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  no: look for another directory
 eol
  \n\n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          0b
  comment
   " chdir failed: get offending name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " store for write
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " complain
 eol
  \n
 line
  declarations
   declaration
    label
     qm:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         qmnl
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           nextcmd
  comment
   " join parent code
 eol
  \n\n
 line
  comment
   " here in parent, child pid in AC
 eol
  \n
 line
  declarations
   declaration
    label
     parent:
 eol
  \n
 line
  comment
   "\thttps://www.bell-labs.com/usr/dmr/www/hist.html
 eol
  \n
 line
  comment
   "\tThe message facility was used as follows: the parent shell, after
 eol
  \n
 line
  comment
   "\tcreating a process to execute a command, sent a message to the new
 eol
  \n
 line
  comment
   "\tprocess by smes; when the command terminated (assuming it did not
 eol
  \n
 line
  comment
   "\ttry to read any messages) the shell's blocked smes call returned an
 eol
  \n
 line
  comment
   "\terror indication that the target process did not exist. Thus the
 eol
  \n
 line
  comment
   "\tshell's smes became, in effect, the equivalent of wait.
 eol
  \n
 line
  comment
   "
 eol
  \n
 line
  comment
   "\tPLB: The "exit" system call code apears to "fall" into the
 eol
  \n
 line
  comment
   "\trmes code So Dennis' memory of what the shell did may have
 eol
  \n
 line
  comment
   "\tbeen correct, but not for the reason he remembered.
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           pid
  comment
   " save child pid
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           delimchar
  comment
   " get command delimiter
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o46
  comment
   " ampersand?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newcom
  comment
   "  yes: go back without wait
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           pid
  comment
   " no: get pid
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           smes
  comment
   " hang until child exits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       nop
 eol
  \n
 line
  declarations
   declaration
    label
     nextcmd:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           delimchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o73
  comment
   " semi?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newcom
  comment
   "  yes: look for another command on line
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           newline
  comment
   " no: output prompt
 eol
  \n\n
 line
  comment
   " ================
 eol
  \n
 line
  comment
   " subroutines
 eol
  \n\n
 line
  comment
   " eat spaces
 eol
  \n
 line
  comment
   " v1 routine name:
 eol
  \n
 line
  declarations
   declaration
    label
     blank:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           blank
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " give skip return if AC *NOT* a command delimiter
 eol
  \n
 line
  comment
   " v1 routine name:
 eol
  \n
 line
  declarations
   declaration
    label
     delim:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " newline
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o46
  comment
   " ampersand
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o73
  comment
   " semi
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
  comment
   " ran the gauntlet: skip home
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           delim
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " get character from lbuf
 eol
  \n
 line
  declarations
   declaration
    label
     getc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lpt
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " fetch char from line buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           lpt
  comment
   " increment pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           getc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " from init.s rline: read line into lbuf with editing
 eol
  \n
 line
  comment
   " (store one character per word)
 eol
  \n
 line
  declarations
   declaration
    label
     rline:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           lbuf
        -
        multiplyingExpression
         atom
          1
  comment
   " pointer in location 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           quit
  comment
   " EOF
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o100
  comment
   " '@' (kill) character?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           rline
        +
        multiplyingExpression
         atom
          1
  comment
   "  yes: start from scratch
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o43
  comment
   " '#' (erase) character?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  yes: handle below
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Store the character in the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " Newline?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           rline
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " no: keep going
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           lbuf
        -
        multiplyingExpression
         atom
          1
  comment
   " # (erase) handling
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " at start?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  yes: noop, loop back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " no: decrement poiner
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n\n
 line
  declarations
   declaration
    label
     quit:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
   ;
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           smes
  comment
   " wake up init
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
 eol
  \n\n
 line
  comment
   " copied from cat.s
 eol
  \n\n
 line
  comment
   " was "getc"
 eol
  \n
 line
  declarations
   declaration
    label
     readc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ipt
  comment
   " Load the pointer to the next word in the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           eipt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " We've reached the end of the buffer, so read more
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " Save the pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       add
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " Flip the msb and save into ipt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ipt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " Move the msb into the link register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2f
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Load the word from the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       szl
  comment
   " Skip if this is the second character in the word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lrss
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   " It's the first char, shift down the top character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " Keep the lowest 7 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
        +
        multiplyingExpression
         atom
          1
  comment
   " Skip a NUL characters and read another one
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Return the character from the subroutine
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " Buffer is empty, read 64 chars from stdin
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           read
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         iipt
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " No characters read: return without skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           iipt
  comment
   " Add the word count to the base of the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           eipt
  comment
   " and store in the end buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           iipt
  comment
   " Reset the ipt to the base of the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ipt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           readc
        +
        multiplyingExpression
         atom
          1
  comment
   " and loop back to get one character
 eol
  \n\n
 line
  declarations
   declaration
    label
     putc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " Keep the lowest 7 bits and save into 2f+1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
  comment
   " get output buffer pos
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       add
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " Flip the msb (advance) and save back into opt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           opt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " If the bit was set, we already have one
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " character at 2f+1. If no previous character,
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2f
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " merge the old and new character together
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          2f
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   " and go to the "save it in buffer" code
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2f
        +
        multiplyingExpression
         atom
          1
  comment
   " Move the character up into the top half
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       alss
      argument
       expression
        multiplyingExpression
         atom
          9
 eol
  \n
 line
  declarations
   declaration
    label
     3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Save the word into the buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           putc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " No, so return (more room still in the buffer)
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " pointer, char
 eol
  \n
 line
  declarations
   declaration
    label
     ipt:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " Current input buffer base
 eol
  \n
 line
  declarations
   declaration
    label
     eipt:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " Pointer to end of data read in input buffer
 eol
  \n
 line
  declarations
   declaration
    label
     iipt:
    declarationRight
     expression
      multiplyingExpression
       atom
        .
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         64
  comment
   " 64 word input buffer and pointer to it
 eol
  \n
 line
  comment
   " end from cat.s
 eol
  \n\n
 line
  comment
   " literals
 eol
  \n
 line
  declarations
   declaration
    label
     d1:
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    label
     d2:
    declarationRight
     expression
      multiplyingExpression
       atom
        2
 eol
  \n
 line
  declarations
   declaration
    label
     o4:
    label
     d4:
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    label
     dm8:
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         8
 eol
  \n
 line
  declarations
   declaration
    label
     o12:
    declarationRight
     expression
      multiplyingExpression
       atom
        012
  comment
   " newline
 eol
  \n
 line
  declarations
   declaration
    label
     o17:
    declarationRight
     expression
      multiplyingExpression
       atom
        017
 eol
  \n
 line
  declarations
   declaration
    label
     o40:
    declarationRight
     expression
      multiplyingExpression
       atom
        040
  comment
   " space
 eol
  \n
 line
  declarations
   declaration
    label
     o43:
    declarationRight
     expression
      multiplyingExpression
       atom
        043
  comment
   " #
 eol
  \n
 line
  declarations
   declaration
    label
     o46:
    declarationRight
     expression
      multiplyingExpression
       atom
        046
  comment
   " ampersand
 eol
  \n
 line
  declarations
   declaration
    label
     o73:
    declarationRight
     expression
      multiplyingExpression
       atom
        073
  comment
   " semi
 eol
  \n
 line
  declarations
   declaration
    label
     o74:
    label
     lt:
    declarationRight
     expression
      multiplyingExpression
       atom
        074
  comment
   " <
 eol
  \n
 line
  declarations
   declaration
    label
     o76:
    label
     gt:
    declarationRight
     expression
      multiplyingExpression
       atom
        076
  comment
   " >
 eol
  \n
 line
  declarations
   declaration
    label
     o100:
    declarationRight
     expression
      multiplyingExpression
       atom
        0100
  comment
   " @
 eol
  \n
 line
  declarations
   declaration
    label
     o177:
    declarationRight
     expression
      multiplyingExpression
       atom
        0177
  comment
   " 7-bit (ASCII) mask
 eol
  \n
 line
  declarations
   declaration
    label
     o400000:
    declarationRight
     expression
      multiplyingExpression
       atom
        0400000
  comment
   " MSB
 eol
  \n\n
 line
  declarations
   declaration
    label
     hash:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <#
         >
  comment
   " superuser prompt
 eol
  \n
 line
  declarations
   declaration
    label
     qmnl:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <?
         012
  comment
   " question mark, newline
 eol
  \n\n
 line
  declarations
   declaration
    label
     system:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <sy
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <st
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <em
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
 eol
  \n\n
 line
  declarations
   declaration
    label
     chdirstr:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <ch
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <di
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <r
         040
 eol
  \n\n
 line
  comment
   " TEMP FOR DEBUG:
 eol
  \n
 line
  declarations
   declaration
    label
     star:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <*
         >
  comment
   "
 eol
  \n\n
 line
  declarations
   declaration
    label
     toomany:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <to
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <o
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <ma
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <ny
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <
    declarationRight
     expression
      multiplyingExpression
       atom
        a>
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <rg
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <s
         012
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        ltoomany
      =
      expression
       multiplyingExpression
        atom
         .
       -
       multiplyingExpression
        atom
         variable
          toomany
 eol
  \n\n
 line
  declarations
   declaration
    label
     maxargwords:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         maxargs
      +
      multiplyingExpression
       atom
        variable
         maxargs
      +
      multiplyingExpression
       atom
        variable
         maxargs
      +
      multiplyingExpression
       atom
        variable
         maxargs
 eol
  \n
 line
  declarations
   declaration
    label
     argcptr:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argc
 eol
  \n\n
 line
  declarations
   declaration
    label
     infilep:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         infile
 eol
  \n
 line
  declarations
   declaration
    label
     outfilep:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         outfile
 eol
  \n\n
 line
  declarations
   declaration
    label
     ilpt:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         lbuf
  comment
   " initial line buffer pointer
 eol
  \n
 line
  declarations
   declaration
    label
     iopt:
    label
     argv0p:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         argv0
  comment
   " initial value for nextarg, opt
 eol
  \n\n
 line
  comment
   " ################ variables
 eol
  \n\n
 line
  declarations
   declaration
    label
     prompt:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <@
         040
  comment
   " v1 prompt! cleared if input is regular file
 eol
  \n\n
 line
  declarations
   declaration
    label
     redirect:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " last file was a redirect (lt or gt)
 eol
  \n
 line
  declarations
   declaration
    label
     nextarg:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " next slot in argv to fill
 eol
  \n
 line
  declarations
   declaration
    label
     bcount:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " byte counter for current filename
 eol
  \n
 line
  declarations
   declaration
    label
     opt:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " "output pointer" (in/outfile or into argv)
 eol
  \n
 line
  declarations
   declaration
    label
     delimchar:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " character that terminated line
 eol
  \n
 line
  declarations
   declaration
    label
     char:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " char that terminated word (merge w/ delimchar?)
 eol
  \n\n
 line
  declarations
   declaration
    label
     outfile:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         4
  comment
   " buffer for output redirect file name
 eol
  \n
 line
  declarations
   declaration
    label
     infile:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         4
  comment
   " buffer for input redirect file name
 eol
  \n
 line
  declarations
   declaration
    label
     pid:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " "other" pid
 eol
  \n
 line
  declarations
   declaration
    label
     cmdfd:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " fd for executable
 eol
  \n
 line
  declarations
   declaration
    label
     bootcount:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " loop count for "boot" copy
 eol
  \n\n
 line
  declarations
   declaration
    label
     lpt:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " line buf pointer
 eol
  \n
 line
  declarations
   declaration
    label
     lbuf:
  comment
   " edited line, one char per word
 eol
  \n\n
 line
  comment
   " enter addresses into namelist:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         017777
  comment
   " last word points to argc + argv data
 eol
  \n
 line
  declarations
   declaration
    label
     argptr:
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         variable
          argptr
       -
       multiplyingExpression
        atom
         variable
          maxargs
       -
       multiplyingExpression
        atom
         variable
          maxargs
       -
       multiplyingExpression
        atom
         variable
          maxargs
       -
       multiplyingExpression
        atom
         variable
          maxargs
       -
       multiplyingExpression
        atom
         1
  comment
   " argc followed by argv
 eol
  \n
 line
  declarations
   declaration
    label
     argc:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    label
     argv0:
  comment
   " 4 word blocks following argc
 eol
  \n\n
 line
  comment
   " "bootstrap" (reads executable into userbase) copied JUST below argc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         variable
          argc
       -
       multiplyingExpression
        atom
         variable
          bootlen
 eol
  \n
 line
  declarations
   declaration
    label
     bootloc:
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        userbase
      =
      expression
       multiplyingExpression
        atom
         010000
  comment
   " user starts at 4K
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        userlen
      =
      expression
       multiplyingExpression
        atom
         variable
          bootloc
       -
       multiplyingExpression
        atom
         variable
          userbase
  comment
   " max executable
 eol
  \n
 <EOF>
