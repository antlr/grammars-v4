prog
 line
  comment
   "** 01-s1.pdf page 41
 eol
  \n
 line
  comment
   " s7
 eol
  \n\n
 line
  declarations
   declaration
    label
     pibreak:
  comment
   " priority interrupt break processing "chain"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           ac
  comment
   " save interrupt AC
 eol
  \n
 line
  comment
   "** CROSSED OUT....
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dpsf
  comment
   " skip on data phone flag set
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  not set: check next device
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dpcf
  comment
   " clear dataphone flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dprs
  comment
   " read dataphone status
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dpstat
  comment
   " save for user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
    declarationRight
     instruction
      opcode
       ral
  comment
   " REC FLG set? rotate flags left
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dprc
  comment
   " read char (bit zero set if parity correct)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dpchar
  comment
   " save for user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dpread
  comment
   " dpread = -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dpstat
  comment
   " get status back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " rotate up
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " XMIT FLG set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no: return from interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dpwrite
  comment
   " dpwrite = -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "** END OF CROSSOUT
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       clsf
  comment
   " clock overflow (line frequency ticks)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lpb
  comment
   " load display push buttons
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           pbsflgs
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.tim
        +
        multiplyingExpression
         atom
          1
  comment
   " increment low order tick count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  no overflow, skip second increment
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.tim
  comment
   "   low order overflowed, increment high order count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           uquant
  comment
   "    increment user quantum counter
 eol
  \n
 line
  comment
   "** written: ttydelay -> ttyd1
 eol
  \n
 line
  comment
   "** written: ttyrestart -> ttyres1
 eol
  \n\n
 line
  declarations
   declaration
    label
     cnop:
  comment
   " fetched as constant in iread
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       nop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          7
  comment
   " set location 7 to -1 (nothing ever checks/clears it?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       clon
  comment
   " enable clock interrupts, reset flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " tty delay positive?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   "  yes: skip to skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   "   no: done delaying?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "    not done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
  comment
   "     yes: start output
 eol
  \n
 line
  comment
   "** START CROSSED OUT: written: lac tty
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " .dspb != 0?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsptm
  comment
   " increment .dsptm; is zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsprestart
  comment
   " yes: restart display
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
  comment
   " .dspb == 3?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
  comment
   " increment .dspb; is zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no: return from interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsprestart
  comment
   " yes: restart display
 eol
  \n
 line
  comment
   "** END CROSSED OUT
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       dssf
  comment
   " disk flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " set .dskb = -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskb
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 42
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dsrs
  comment
   " get disk status in .dske
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dske
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dscs
  comment
   " clear status register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  comment
   "** BEGIN CROSSED OUT
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         lds
  comment
   " load display status (see 03-scope.pdf pg 25)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
    declarationRight
     instruction
      opcode
       ral
  comment
   " display trap set? (and rotate left)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  not set
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cdf
  comment
   " display done executing; clear display flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   " return now if .dspb == 0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dm3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsprestart
  comment
   " start display if .dspb == 3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
  comment
   " otherwise, .dspb -= 3 and return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n
 line
  declarations
   declaration
    label
     dsprestart:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
  comment
   " set .dspb = 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbufp
  comment
   " load display buf pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       beg
  comment
   " start display processor
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsptm
  comment
   " set .dsptm = -10 (10 ticks)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       sma
    declarationRight
     instruction
      opcode
       ral
  comment
   " edges flag set?? (and rotate)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       raef
  comment
   " "resume after edges flag"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " light pen flag?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lda
  comment
   " G-2: load display address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           lpba
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rlpd
  comment
   " G-2: resume after light pen stop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       ksf
  comment
   " (TTY) keyboard flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " get TTY delay
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " minus (waiting for output)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   "  no: increment??? (make more positive)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       krb
  comment
   " read keyboard buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save in char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o375
  comment
   " interrupt char (TTY ALT MODE?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           intrp1
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          0
  comment
   " get sleep word for ttyin
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
  comment
   " wake processes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          0
  comment
   " clear sleep word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " get character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o212
  comment
   " new line (with parity)??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "   no: done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
  comment
   " get ttyout sleep word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " highest bit set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " no, make it so (why???)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
  comment
   " save back
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 43
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putcr
  comment
   " output CR next
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
  comment
   " start output
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       tsf
  comment
   " TTY output flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tcf
  comment
   " yes: clear flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
  comment
   " transmit next character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     ttyrestart:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " get tty delay
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " positive?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  no: keep waiting
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nttychar
  comment
   " get pending CR, if any
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           nttychar
  comment
   " clear it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " need to send CR?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          3f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " increment ttydelay (make more positive)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
  comment
   " get a character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  none found??
 eol
  \n
 line
  declarations
   declaration
    label
     3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tls
  comment
   " start output
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " newline?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putcr
  comment
   " yes: put CR next
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o15
  comment
   " CR?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "   no: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " get current tty delay
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " bump by 16
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rcr
  comment
   " divide by two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " complement
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttydelay
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
  comment
   " run out of characters to send: wake user(s)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           ttyrestart
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "** written arrow up 2 copies
 eol
  \n\n
 line
  comment
   "** BEGIN CROSSED OUT
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       sck
  comment
   " Graphic-2 keyboard flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no.
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cck
  comment
   " yes: clear flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lck
  comment
   " read character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o33
  comment
   " code 33 (ESCAPE?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           intrp2
  comment
   "  yes: mark interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       nop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       rsf
  comment
   " paper tape reader ready?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n\n
 line
  comment
   "** 01-s1.pdf page 44
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           npptchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " have saved char?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          5
  comment
   "  no: jump to second rrb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " yes: save as current char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rrb
  comment
   " clear flag, read reader buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           npptchar
  comment
   " save as saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rrb
  comment
   " here without saved char: read new
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " save as current
 eol
  \n
 line
  declarations
   declaration
    label
     3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          3f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          4f
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           npptchar
  comment
   " get saved char (if any)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " had saved char?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          4
  comment
   "  no: wake up writer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " yes: save as char to send
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           npptchar
  comment
   " clear saved char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          3b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rsa
  comment
   " reader select alphanumeric mode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
  comment
   " wake sleepers; returns zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " set high bit (rsa before sleep)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n
 line
  declarations
   declaration
    label
     3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           npptchar
 eol
  \n
 line
  declarations
   declaration
    label
     4:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       psf
  comment
   " paper tape punch ready?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       pcf
  comment
   " clear ptp flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
  comment
   " get next char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
  comment
   "  none: wake sleepers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       psa
  comment
   " punch set alphanumeric mode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   " return from interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          4
  comment
   " get sleeper bit vector
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
  comment
   " wake them
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          4
  comment
   " store zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   " return from PI
 eol
  \n\n
 line
  comment
   "** BEGIN CROSSED OUT
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       spb
  comment
   " any graphic-2 push button?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cpb
  comment
   " clear push button flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lpb
  comment
   " load push button value
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           pbsflgs
        +
        multiplyingExpression
         atom
          1
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 45
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o2000
  comment
   " get push button 7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no: done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspinit
  comment
   " yes: reset display buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          6
  comment
   " wake up anyone sleeping on display
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " clear button lights
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       wbl
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "** END CROSSED OUT
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       crsf
  comment
   " card reader flag set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       crrb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           crchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           crread
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       crrb
  comment
   " read card reader buffer??
 eol
  \n\n
 line
  declarations
   declaration
    label
     piret:
  comment
   " return from priority interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          0
  comment
   " get LINK (in bit 0)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " restore LINK
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           ac
  comment
   " restore AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
  comment
   " reenable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          0
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return from interrupt
 eol
  \n\n
 line
  comment
   " wake sleeping processes
 eol
  \n
 line
  comment
   " NOTE!! Called from interrupt service, so avoids indirect!!!
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   " AC/ sfiles word (bit vector of processes to wake)
 eol
  \n
 line
  comment
   "   jms wakeup
 eol
  \n
 line
  comment
   " AC/ 0 (to store in sfiles word)
 eol
  \n
 line
  declarations
   declaration
    label
     wakeup:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save vector in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         variable
          mnproc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   " loop count in t1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           tadu
  comment
   " get "tad ulist"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dacu
  comment
   " get "dac ulist"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " rotate vector up one
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " high bit set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
        +
        multiplyingExpression
         atom
          2
  comment
   "  no: skip the fun
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o700000
  comment
   " yes: decrement process status (wake)
 eol
  \n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " (avoiding indirect)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          ..
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2b
  comment
   " advance tad operand by 4 words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          2b
        +
        multiplyingExpression
         atom
          1
  comment
   " advance tad operand by 4 words
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2b
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   " done?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  no, keep going
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " return zero in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         2
 eol
  \n\n
 line
  comment
   " call to output CR after LF (NL) on TTY
 eol
  \n
 line
  declarations
   declaration
    label
     putcr:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o15
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           nttychar
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 46
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           putcr
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  declarations
   declaration
    label
     intrp1:
  comment
   " here with TTY interrupt character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d6
  comment
   " get keyboard special device number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int1
  comment
   " save as interrupt source
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " drain tty input buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
  comment
   " drain tty output buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          0
  comment
   " wake ttyin sleepers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
  comment
   " wake ttyout sleepers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
  comment
   " check if user interrupted
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no, return from PI
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " yes: return thru system call code (dump core)
 eol
  \n
 line
  declarations
   declaration
    label
     intrp2:
  comment
   " here with display interrupt character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d7
  comment
   " get keyboard special device number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int2
  comment
   " save as interrupt source
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d3
  comment
   " drain keyboard buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          2
  comment
   " wake up any "keyboard" sleepers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          6
  comment
   " wake up any "display" sleepers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           wakeup
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sfiles
        +
        multiplyingExpression
         atom
          6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
  comment
   " check if user interrupted
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           piret
  comment
   "  no, return from PI
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          0
  comment
   " get interrupt PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          020
  comment
   " save as system call return PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           ac
  comment
   " restore AC from interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          021
  comment
   " join system call processing (dump core?)
 eol
  \n
 <EOF>
