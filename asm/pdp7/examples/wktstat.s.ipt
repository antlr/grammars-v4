prog
 line
  comment
   " Warren's version of stat. stat file
 eol
  \n
 line
  comment
   " Like ls -l, except that we don't print out the i-node
 eol
  \n\n
 line
  declarations
   declaration
    label
     main:
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          017777
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Load the pointer pointer in 017777
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " to see if we have any arguments
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           nofiles
  comment
   " No arguments, stop now
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          017777
  comment
   " Move five words past the argument word count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " so that AC points at the first argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           statfile
  comment
   " and save in statfile and name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           statbufptr
  comment
   " Get the file's details into the statbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           status
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         curdir
   ;
   declaration
    label
     statfile:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           badfile
 eol
  \n\n
 line
  comment
   " Ugly code. Improvements welcome!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " See if this is a directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           isdirmask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print a d
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " Not a dir, see if its a large file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           largemask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         l
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print an l
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         s
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Not a dir, not large, print an s
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " Readable by owner?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           ureadmask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         r
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print an r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         minus
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " No, print a - sign
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " Writable by owner?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           uwritemask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         w
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print a w
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         minus
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " No, print a - sign
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " Readable by other?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           oreadmask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         r
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print an r
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         minus
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " No, print a - sign
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.perm
  comment
   " Writable by other?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           owritemask
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         w
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Yes, print a w
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         minus
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " No, print a - sign
 eol
  \n\n
 line
  declarations
   declaration
    label
     2:
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         space
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " Print a space
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nlinks
  comment
   " Print the number of links out
 eol
  \n
 line
  comment
   " but first make it positive
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.uid
  comment
   " Print the user-id out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.size
  comment
   " Print the size out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         5
 eol
  \n\n
 line
  declarations
   declaration
    label
     printname:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     name:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " Write the filename out to stdout
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         newline
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " followed by a newline
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
 eol
  \n\n
 line
  declarations
   declaration
    label
     nofiles:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        5
  comment
   " Write "No files\n" to stderr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
  comment
   " and exit
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <no
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <fi
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <le
         >
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <s
         012
 eol
  \n\n
 line
  declarations
   declaration
    label
     badfile:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           name
  comment
   " Get the pointer to the filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " Store it in 1f below
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d8
  comment
   " Load fd 8 which is stderr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " Write the four words of the filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2
  comment
   " and then write " ?\n"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           exit
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        077012
  comment
   " String literal: " ?\n"
 eol
  \n\n
 line
  comment
   " Octal print code: This code borrowed from ds.s
 eol
  \n
 line
  declarations
   declaration
    label
     octal:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " Move the negative argument into the MQ
 eol
  \n
 line
  comment
   " as we will use shifting to deal with the
 eol
  \n
 line
  comment
   " number by shifting groups of 3 digits.
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d5
  comment
   " By adding 5 to the negative count and
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " complementing it, we set the actual
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " loop count up to 6 - count. So, if we
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           c
  comment
   " want to print 2 digits, we lose 6 - 2 = 4 digits
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       llss
      argument
       expression
        multiplyingExpression
         atom
          3
  comment
   " Lose top 3 bits of the MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           c
  comment
   " Do we have any more to lose?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " Yes, keep looping
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Save the actual number of print digits into c
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           c
  comment
   " as a negative number.
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       llss
      argument
       expression
        multiplyingExpression
         atom
          3
  comment
   " Shift 3 more bits into AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o60
  comment
   " Add AC to ASCII '0'
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           cbuf
  comment
   " and print out the digit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           c
  comment
   " Any more characters to print out?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " Yes, loop back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           fd1
  comment
   " Print out a space
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sys
      argument
       expression
        multiplyingExpression
         atom
          variable
           write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         space
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
  comment
   " Move return address 1 past the argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           octal
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " and return from subroutine
 eol
  \n\n
 line
  declarations
   declaration
    label
     longopt:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " User set the -l option when this is 1
 eol
  \n
 line
  declarations
   declaration
    label
     d1:
    label
     fd1:
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " File descriptor 1, stdout
 eol
  \n
 line
  declarations
   declaration
    label
     d4:
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    label
     d5:
    declarationRight
     expression
      multiplyingExpression
       atom
        5
 eol
  \n
 line
  declarations
   declaration
    label
     d8:
    declarationRight
     expression
      multiplyingExpression
       atom
        8
 eol
  \n
 line
  declarations
   declaration
    label
     o60:
    declarationRight
     expression
      multiplyingExpression
       atom
        060
 eol
  \n
 line
  declarations
   declaration
    label
     count:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " Count of # of directory words read in
 eol
  \n
 line
  declarations
   declaration
    label
     cbuf:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " Used to print out in the octal routing
 eol
  \n
 line
  declarations
   declaration
    label
     c:
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         .
       +
       multiplyingExpression
        atom
         1
  comment
   " Loop counter for printing octal digits
 eol
  \n\n
 line
  declarations
   declaration
    label
     statbufptr:
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         statbuf
  comment
   " Pointer to the statbuf
 eol
  \n
 line
  declarations
   declaration
    label
     statbuf:
  comment
   " Status buffer fields below
 eol
  \n
 line
  declarations
   declaration
    label
     s.perm:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk3:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk4:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk5:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk6:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.blk7:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.uid:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.nlinks:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.size:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     s.uniq:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    label
     largemask:
    declarationRight
     expression
      multiplyingExpression
       atom
        200000
  comment
   " large file, bigger than 4096 words
 eol
  \n
 line
  declarations
   declaration
    label
     isdirmask:
    declarationRight
     expression
      multiplyingExpression
       atom
        000020
  comment
   " is a directory
 eol
  \n
 line
  declarations
   declaration
    label
     ureadmask:
    declarationRight
     expression
      multiplyingExpression
       atom
        000010
  comment
   " user read
 eol
  \n
 line
  declarations
   declaration
    label
     uwritemask:
    declarationRight
     expression
      multiplyingExpression
       atom
        000004
  comment
   " user write
 eol
  \n
 line
  declarations
   declaration
    label
     oreadmask:
    declarationRight
     expression
      multiplyingExpression
       atom
        000002
  comment
   " other read
 eol
  \n
 line
  declarations
   declaration
    label
     owritemask:
    declarationRight
     expression
      multiplyingExpression
       atom
        000001
  comment
   " other write
 eol
  \n\n
 line
  declarations
   declaration
    label
     d:
    declarationRight
     expression
      multiplyingExpression
       atom
        0144
  comment
   " ASCII characters: d, l, s, r, w, -, space, \n
 eol
  \n
 line
  declarations
   declaration
    label
     l:
    declarationRight
     expression
      multiplyingExpression
       atom
        0154
 eol
  \n
 line
  declarations
   declaration
    label
     s:
    declarationRight
     expression
      multiplyingExpression
       atom
        0163
 eol
  \n
 line
  declarations
   declaration
    label
     r:
    declarationRight
     expression
      multiplyingExpression
       atom
        0162
 eol
  \n
 line
  declarations
   declaration
    label
     w:
    declarationRight
     expression
      multiplyingExpression
       atom
        0167
 eol
  \n
 line
  declarations
   declaration
    label
     minus:
    declarationRight
     expression
      multiplyingExpression
       atom
        055
 eol
  \n
 line
  declarations
   declaration
    label
     space:
    declarationRight
     expression
      multiplyingExpression
       atom
        040
 eol
  \n
 line
  declarations
   declaration
    label
     newline:
    declarationRight
     expression
      multiplyingExpression
       atom
        012
 eol
  \n
 line
  declarations
   declaration
    label
     curdir:
    declarationRight
     expression
      multiplyingExpression
       atom
        string
         <.
         040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        040040
  comment
   " i.e. "."
 eol
  \n
 <EOF>
