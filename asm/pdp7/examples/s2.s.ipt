prog
 line
  comment
   "** 01-s1.pdf page 7
 eol
  \n
 line
  comment
   " s2
 eol
  \n\n
 line
  comment
   " file status (stat) system call
 eol
  \n
 line
  comment
   " AC/ pointer to status (inode) buffer + i-num (13 words)
 eol
  \n
 line
  comment
   "   sys status; dir_name_ptr; file_name_ptr
 eol
  \n
 line
  comment
   "   NO_DD version: sys status; file_name_ptr
 eol
  \n
 line
  declarations
   declaration
    label
     .status:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch directory name pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch file name pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          6
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " get current working directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
  comment
   " look up source directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  not found: return error to user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
  comment
   " look up file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  not found: return error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " read file inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " get user buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
  comment
   " truncate to 13 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o10000
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o17762
  comment
   " is user memory (but not last 14 wds)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
  comment
   " save as copy destination
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         inode
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        12
  comment
   " copy inode to user buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.i
  comment
   " copy i-num from last dnode read ??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " save thru index 9 (pre-increment) ??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  comment
   " capture display?
 eol
  \n
 line
  declarations
   declaration
    label
     .capt:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " get user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.dspbuf
  comment
   " save as user display buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           movdsp
  comment
   " switch to user display buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  comment
   " release display?
 eol
  \n
 line
  declarations
   declaration
    label
     .rele:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.dspbuf
  comment
   " clear user display buffer pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbuf
  comment
   " get default display buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           movdsp
  comment
   " change to it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .chmod:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           isown
  comment
   " check if user owns file arg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " get new permissions
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17
  comment
   " mask to read/write bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get file flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o777760
  comment
   " clear permissions
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       omq
  comment
   " or in new permissions from MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " save in inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " write inode back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .chown:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           isown
  comment
   " check if user owns file arg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " get new owner
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uid
  comment
   " save in inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " write inode back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .getuid:
  comment
   " getuid system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " return u.uid in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .seek:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           seektell
  comment
   " fetch offset & whence (return seek base)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " add offset
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " positive?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save position in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " get file flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " get write bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " open for write?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " yes: get position
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         i.size
  comment
   " between zero and size?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dacisize
  comment
   "  no: store new size
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " reading: get position
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         i.size
  comment
   " between zero and size?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.size
  comment
   "  no: get current size
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
  comment
   " save as offset
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " return in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fput
  comment
   " copy fnode back to user area
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
  comment
   " return to user
 eol
  \n\n
 line
  declarations
   declaration
    label
     .tell:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           seektell
  comment
   " fetch offset & whence (return seek base)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " negate base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " add to user offset
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " return in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .link:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " Save the argument pointers in
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   "0f, 1f and 2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d4
  comment
   " Search the directory at i-num 4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " for the first argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " Didn't find it
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " In the i-num found by 1st namei,
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " search for 2nd argument, err not found
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " save in user data
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    label
     2:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " Search the process' current directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
  comment
   " for the third argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " Error if it already exists
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " Save mode bits for access
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " check access (or return error to user)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dslot
  comment
   " allocate directory slot
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get source file i-number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " read inode in
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
  comment
   " get the i-num
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.i
  comment
   " Save the i-num in the directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d.name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " Copy the new link name into the directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uniq
  comment
   " Copy the i-node unique number into
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.uniq
  comment
   " the directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.nlks
  comment
   " Decrement link count, i.e. one more link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.nlks
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " Save the i-node and directory entry for
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dput
  comment
   " the new link
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
  comment
   " and return OK
 eol
  \n\n
 line
  declarations
   declaration
    label
     .unlink:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           argname
  comment
   " fetch filename, inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " save i-number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " write mode bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " save for access call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " check access or return error (reads inode)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.i
  comment
   " clear directory i-num
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dput
  comment
   " write directory entry back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get i-number back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " read inode back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.nlks
  comment
   " increment link count (kept as negative count)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  not zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           itrunc
  comment
   " zero links: free blocks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " clear status (free inode)
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " write inode back to disk
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .setuid:
  comment
   " setuid system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " load current user id
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " negative (super user)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error!!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " load user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " save as new uid
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  comment
   " rename system call:
 eol
  \n
 line
  comment
   "   sys rename; old_name_ptr; new_name_ptr
 eol
  \n
 line
  comment
   " Questions:
 eol
  \n
 line
  comment
   "   when is directory entry read??
 eol
  \n
 line
  comment
   "   is access check on directory or src file??
 eol
  \n
 line
  comment
   "   check for existing file with new name??
 eol
  \n
 line
  comment
   "   when is directory entry written back??
 eol
  \n
 line
  declarations
   declaration
    label
     .rename:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch first arg (old name pointer)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " save for namei
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch second arg (new name pointer)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " save for copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " get CWD
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " search for (old) name
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  not found: return error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " get write mode bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " save for access call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " access OK? (or return error to user)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d.name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " copy new name into directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dput
  comment
   " and write it to disk
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  comment
   " time system call returns line (mains) frequency ticks
 eol
  \n
 line
  comment
   " high order bits returned in AC, low order in MQ
 eol
  \n
 line
  comment
   " s.tim is located in "system" block (written to disk)
 eol
  \n
 line
  comment
   " so this is a running count of uptime since first boot!
 eol
  \n
 line
  comment
   " at 60Hz, 36 bits would last 36+ years!
 eol
  \n
 line
  declarations
   declaration
    label
     .time:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.tim
  comment
   " load high order bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " return in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.tim
        +
        multiplyingExpression
         atom
          1
  comment
   " load low order bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.mq
  comment
   " return in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .chdir:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           argname
  comment
   " fetch argument as filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " (re)read inode(???)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " get directory bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " is a directory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: return error to user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
  comment
   " yes: get i-number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " save as current working directory
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  comment
   " open system call
 eol
  \n
 line
  comment
   "   sys open; filename_ptr; flags (0 for read, 1 for write)
 eol
  \n
 line
  comment
   " returns w/ "fd" in AC (or -1 if not found)
 eol
  \n
 line
  declarations
   declaration
    label
     .open:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " get filename
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " save for namei
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " get flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " zero (read)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   "  no: get write mode bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " non-zero (write)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d2
  comment
   "  no: get read mode bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " save for access call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " get current working directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " search for file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " error: return -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " load inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " check access (may return w/ error to user)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get file flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " get directory bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " is directory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           open1
  comment
   "  no, join common code
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " get access mode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " get write bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " write access?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           open1
  comment
   "  no, continue
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " yes: get uid?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " negative? (-1 is superuser)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: return error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           open1
  comment
   " yes: join common code
 eol
  \n\n
 line
  declarations
   declaration
    label
     .creat:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " mode bit 1 (write)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " save for access call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " get name pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          2
  comment
   " save for copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " copy filename to "name"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
  comment
   " look up in current working directory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  not found
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
  comment
   " file exists: read inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " check access (or return error to user)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " get directory bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " is a directory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          4
  comment
   "  no: skip to truncate
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " get user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " is super user?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           itrunc
  comment
   " yes: truncate
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dacisize
  comment
   " clear i.size
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           open1
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
  comment
   " here if not found
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " get access bits from user AC (zero for lock!)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17
  comment
   " mask to permissions
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           icreat
 eol
  \n
 line
  declarations
   declaration
    label
     open1:
  comment
   " common exit for open/creat
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fassign
  comment
   " assign fd slot
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  none free, return -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 11
 eol
  \n
 line
  declarations
   declaration
    label
     .close:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           finac
  comment
   " get fnode (open file) for fd in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " clear flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fput
  comment
   " write fnode back to u.ofiles
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     .read:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " get argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
  comment
   " mask to address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " save as I/O base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " get second argument
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
  comment
   " save as count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o10000
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o17777
  comment
   " end inside user memory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
  comment
   " get end of buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         u.base
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o17777
  comment
   " inside buffer/user memory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.limit
  comment
   " yes: save as I/O limit
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           finac
  comment
   " get fnode for fd in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " get open file flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " get write bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " open for write?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  yes: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get inode flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
  comment
   " get special file bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " special?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " yes: disable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
  comment
   " get i number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           swr
  comment
   " add to base instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          ..
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " dispatch to read routine
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get user base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
        +
        multiplyingExpression
         atom
          1
  comment
   " save as iread base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
  comment
   " get user count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
        +
        multiplyingExpression
         atom
          2
  comment
   " save as iread count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
  comment
   " get file offset
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iread
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           exitrw
 eol
  \n\n
 line
  comment
   " write system call:
 eol
  \n
 line
  comment
   " AC/ fd
 eol
  \n
 line
  comment
   "   sys write; buffer; count
 eol
  \n
 line
  comment
   " AC/ count or -1 on error
 eol
  \n
 line
  declarations
   declaration
    label
     .write:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " pick up buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
  comment
   " mask to addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " save as I/O base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " pick up count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
  comment
   " save as count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " add base (get limit)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         u.base
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o17777
  comment
   " check between base and end of memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.limit
  comment
   " yes: save as limit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           finac
  comment
   " get fnode with fd from user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " get open file table flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " open for write?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " if yes, skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "   no: error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get inode flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40
  comment
   " get device bit
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 12
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " special?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " yes, special: turn interrupts off
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
  comment
   " get i number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           sww
  comment
   " get write routine entry addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          ..
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " dispatch to write routine
 eol
  \n
 line
  declarations
   declaration
    label
     1:
  comment
   " here with regular file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
        +
        multiplyingExpression
         atom
          1
  comment
   " save as iwrite arg 1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
  comment
   " get count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
        +
        multiplyingExpression
         atom
          2
  comment
   " save as iwrite 2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
  comment
   " get fd offset
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iwrite
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
  comment
   " write to file
 eol
  \n\n
 line
  declarations
   declaration
    label
     exitrw:
  comment
   " common exit for read/write system calls
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " save return in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
  comment
   " update file offset
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " release inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fput
  comment
   " release fnode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
  comment
   " return to user
 eol
  \n
 <EOF>
