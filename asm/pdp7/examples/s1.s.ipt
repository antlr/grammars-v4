prog
 line
  comment
   " S1
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       ..
      =
      expression
       multiplyingExpression
        atom
         0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         0
 eol
  \n
 line
  declarations
   declaration
    label
     orig:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       hlt
  comment
   " overwritten with interrupt return addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           pibreak
  comment
   " dispatch to interrupt processing
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         variable
          orig
       +
       multiplyingExpression
        atom
         7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " only ever set (to -1): never read?!
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         variable
          orig
       +
       multiplyingExpression
        atom
         020
  comment
   " syscall (CAL) and user "interrupt" processing
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
  comment
   " addr for "CAL I": store return here on "CAL"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " interrupts off
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " save user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          020
  comment
   " save user return addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " save as if "CAL I"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          1f
        -
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          020
  comment
   " restore location 20
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " restore user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
        +
        multiplyingExpression
         atom
          1
  comment
   " join "CAL I" processing
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1f
  comment
   " literal to restore location 20
 eol
  \n
 line
  declarations
   declaration
    label
     1:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " "CAL I" PC stored here
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " interrupts off
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " save user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.mq
  comment
   " save user MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
  comment
   " save user auto-index location 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          1
  comment
   " save user auto-index location 9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         u.rq
      +
      multiplyingExpression
       atom
        2
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
  comment
   " save user auto-index locations 10-15
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " load user PC after system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          8
  comment
   " save user PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " load -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           savblk
  comment
   " set "save" flag (cleared by disk I/O?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           insys
  comment
   " set "in system" flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           uquant
  comment
   " load user quantum count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         maxquant
  comment
   " check if between 0 & maxquant??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           swap
  comment
   " no: swap processes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
  comment
   " interrupts on
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          8
  comment
   " get address of system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
  comment
   " load AC indirect??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         o20001
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         swn
  comment
   " range check
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           badcal
  comment
   " bad system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           swp
  comment
   " add system call table base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
  comment
   " save as next instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          ..
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " dispatch system call
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       .
      =
      expression
       multiplyingExpression
        atom
         variable
          orig
       +
       multiplyingExpression
        atom
         0100
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           coldentry
  comment
   " here to start kernel
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
 eol
  \n\n
 line
  declarations
   declaration
    label
     okexit:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " 'OK' system call exit: clear user AC
 eol
  \n
 line
  declarations
   declaration
    label
     sysexit:
  comment
   " common system call exit code
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
  comment
   " enable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           savblk
  comment
   " load "save" flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " is zero (cleared by disk I/O)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " no: no disk I/O done?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         sysdata
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " copy system data to disk buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskio
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        07000
  comment
   " save to disk?
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           insys
  comment
   " clear "in system call" flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
  comment
   " pending user interrupt?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  no, return to user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           save
  comment
   "   yes: dump core
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         u.rq
      +
      multiplyingExpression
       atom
        2
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        6
  comment
   " restore auto-index locations 10-15
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          1
  comment
   " restore auto-index location 9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
  comment
   " restore auto-index location 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.mq
  comment
   " restore MQ register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " restore AC register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return to user
 eol
  \n\n
 line
  comment
   " scheduler / swapper / idle loop
 eol
  \n
 line
  declarations
   declaration
    label
     swap:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookfor
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        3
  comment
   " out/ready
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookfor
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " in/ready
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " loop until a process becomes ready
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxquant
  comment
   " in/ready (self?): come back next tick!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          3f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
  comment
   " here with out/ready process
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save process pointer (swapped out) in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookfor
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        2
  comment
   " in/notready\t" find a swapped in process to swap out?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           lookfor
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        1
  comment
   " in/ready
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           swap
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.swapret
  comment
   " return to caller when swapped back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200000
  comment
   " change status to swapped out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ulistp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ulistp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskswap
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        07000
  comment
   " swap process out
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.dspbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " process using display??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbuf
  comment
   " reset to default display buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           movdsp
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " disable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o600000
  comment
   " change status (1->7?????)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
  comment
   " enable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskswap
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        06000
  comment
   " read process in?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.swapret
  comment
   " set our return addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           swap
  comment
   " to saved return addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " reset maxquant to 16 ticks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           maxquant
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.dspbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " using display?
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           movdsp
  comment
   "  yes. switch to user display bufferx
 eol
  \n
 line
  declarations
   declaration
    label
     3:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           uquant
  comment
   " no. reset process tick count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           swap
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  declarations
   declaration
    label
     swp:
  comment
   " system call dispatch table
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
  comment
   " base instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         save
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         getuid
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         open
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         read
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         write
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         creat
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         seek
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         tell
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         close
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         link
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         unlink
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         setuid
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         rename
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         exit
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         time
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         intrp
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         chdir
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         chmod
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         chown
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         badcal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         sysloc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         badcal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         capt
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         rele
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         status
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         badcal
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         smes
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         rmes
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         fork
 eol
  \n
 line
  declarations
   declaration
    label
     swn:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
      -
      multiplyingExpression
       atom
        variable
         swp
      -
      multiplyingExpression
       atom
        1
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         i
  comment
   " count of system calls, plus indirect!
 eol
  \n\n
 line
  comment
   " AC/ new value for intflg (non-zero to ignore interrupt char)
 eol
  \n
 line
  comment
   "   sys intrp
 eol
  \n
 line
  declarations
   declaration
    label
     .intrp:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.intflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           okexit
 eol
  \n\n
 line
  comment
   " syscall to retrieve system addresses (data & routines!!)
 eol
  \n
 line
  comment
   " AC/ index (1..17)
 eol
  \n
 line
  comment
   "   sys sysloc
 eol
  \n
 line
  comment
   " AC/ address (or -1 on bad index)
 eol
  \n
 line
  declarations
   declaration
    label
     .sysloc:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         locn
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           locsw
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          ..
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  declarations
   declaration
    label
     locsw:
  comment
   " table of system addresses for sysloc
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         iget
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         inode
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         userdata
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         sysdata
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskrd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskwr
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dpdata
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         pbsflgs
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         alloc
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         free
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dspdata
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         crdata
 eol
  \n
 line
  declarations
   declaration
    label
     locn:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        .
      -
      multiplyingExpression
       atom
        variable
         locsw
      -
      multiplyingExpression
       atom
        1
 eol
  \n\n
 line
  comment
   " check if "interrupt" for current process
 eol
  \n
 line
  comment
   " checks .int1 and .int2 (contain i-number of interrupt source)
 eol
  \n
 line
  comment
   " compared against process stdin
 eol
  \n
 line
  comment
   "
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   " .insys/ 0
 eol
  \n
 line
  comment
   "   jms chkint
 eol
  \n
 line
  comment
   "    <already ".insys", no interrupt, or intflg set (ignore interrupt)>
 eol
  \n
 line
  comment
   "   <found user interrupt: PI off, .insys set>
 eol
  \n
 line
  declarations
   declaration
    label
     chkint:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           insys
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " in system?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int1
  comment
   " get inumber of interrupt1 source?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes: skip stdin check
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ofiles
        +
        multiplyingExpression
         atom
          2
  comment
   " non-zero: compare to stdin inumber
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
  comment
   "  same
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int2
  comment
   " get inum of interrupt 2 source?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ofiles
        +
        multiplyingExpression
         atom
          2
  comment
   " non-zero: compare to stdin inumber
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "  match!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "   no match: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int2
  comment
   " clear int2 source
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           int1
  comment
   " clear int1 source
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.intflg
  comment
   " get user intflg
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  no: ignore
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           insys
  comment
   " set "in system" flag
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
  comment
   " enable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           chkint
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 <EOF>
