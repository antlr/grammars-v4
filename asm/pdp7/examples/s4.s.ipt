prog
 line
  comment
   "** 01-s1.pdf page 21
 eol
  \n
 line
  comment
   " s4
 eol
  \n\n
 line
  comment
   " allocate a free disk block for a file (data or indirect)
 eol
  \n
 line
  declarations
   declaration
    label
     alloc:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
  comment
   " decrement the count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
  comment
   " of free blocks at s.fblks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " any left?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
  comment
   " Update the count of free block numbers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           fblksp
  comment
   " get pointer to last valid entry in s.fblks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
  comment
   " fetch the word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " zero dskbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get block number back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskwr
  comment
   " write out the zeros
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           savblk
  comment
   " cancel system block write
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get the block number back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           alloc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Return from routine
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nxfblk
  comment
   " next block with list of free blocks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " any?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
  comment
   " OUT OF DISK
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.fblks
  comment
   " save as first free block #
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskrd
  comment
   " read the block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskbuf
  comment
   " get first word (pointer to next in chain)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nxfblk
  comment
   " save as new "next"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         s.fblks
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        9
  comment
   " copy remaining 9 as free
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d10
  comment
   " reset free count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           alloc
        +
        multiplyingExpression
         atom
          1
 eol
  \n\n
 line
  comment
   " free the disk block whose number is in AC
 eol
  \n
 line
  declarations
   declaration
    label
     free:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save block in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
  comment
   " get number of free blocks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d10
  comment
   " 10?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           fblksp
  comment
   " no: get addr in s.fblks to store new block in
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get block number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " save it in s.fblks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           savblk
  comment
   " cancel system block write
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
  comment
   " increment free count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           free
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nxfblk
  comment
   " get head of free chain
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskbuf
  comment
   " save (as chain ptr) in first word of disk buf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         s.fblks
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
      +
      multiplyingExpression
       atom
        1
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        9
  comment
   " with 9 of the 10 free blocks
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get the newly freed block back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nxfblk
  comment
   " save as new head of free chain
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskwr
  comment
   " write dskbuf to the newly freed block
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           savblk
  comment
   " cancel system block write
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " reset free count to one
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.nfblks
  comment
   " (the first word in s.fblks)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           free
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " Return from the routine
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " load AC indirect (without using indirect!)
 eol
  \n
 line
  comment
   " need to avoid use of indirect in interrupt service routines
 eol
  \n
 line
  comment
   " AC/ address
 eol
  \n
 line
  comment
   "   jms laci
 eol
  \n
 line
  comment
   " AC/ contents of address
 eol
  \n
 line
  declarations
   declaration
    label
     laci:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
  comment
   " clear everything but addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200000
  comment
   " make into "lac addr"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " fetch
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 22
 eol
  \n\n
 line
  comment
   " skip if AC between two values (inclusive)
 eol
  \n
 line
  comment
   "   jms betwen; low_ptr; high_ptr
 eol
  \n
 line
  comment
   "    <not between>
 eol
  \n
 line
  comment
   "  <between>
 eol
  \n
 line
  comment
   " listing has an alternate written in
 eol
  \n
 line
  comment
   "  (which would require 'lac ptr' instead of 'ptr' args?)
 eol
  \n
 line
  declarations
   declaration
    label
     betwen:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
    declarationRight
     instruction
      opcode
       cmq
  comment
   " get ~AC in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get low_ptr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " skip low_ptr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get ~AC (-AC-1) from MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get low-AC-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " negative (AC >= low)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no, return w/o skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " fetch high_ptr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   " skip high_ptr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get -AC-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " add to high value (high-AC-1)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " complement (AC-high)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
    declarationRight
     instruction
      opcode
       sna
  comment
   " AC-high <= 0?
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
  comment
   "  no: give happy (skip) return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " restore ~AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " restore AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return w/o skip
 eol
  \n\n
 line
  comment
   " copy memory
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   "   jms copy; src; dest; count
 eol
  \n
 line
  declarations
   declaration
    label
     copy:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " copy zeroes (clear memory)
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   "   jms copyz; pointer; count
 eol
  \n
 line
  declarations
   declaration
    label
     copyz:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get call PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " save in index (pre-increments)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " skip pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get count-1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
  comment
   " get negative count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
  comment
   " skip count
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " zero word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " done?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  no: loop
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " Character queue management routines
 eol
  \n
 line
  comment
   " (CALLED FROM PI: USE OF INDIRECT AVOIDED!)
 eol
  \n\n
 line
  comment
   " Queue numbers:
 eol
  \n
 line
  comment
   "  0: free list
 eol
  \n
 line
  comment
   "  1: tty input
 eol
  \n
 line
  comment
   "  2: tty output
 eol
  \n
 line
  comment
   "  3: display keyboard
 eol
  \n
 line
  comment
   "  4: paper tape reader
 eol
  \n
 line
  comment
   "  5: paper tape punch
 eol
  \n\n
 line
  comment
   " queue headers are two words: "first" and "last"(??)
 eol
  \n
 line
  comment
   " queue entries are two words: "next" and "char"
 eol
  \n\n
 line
  comment
   " put queued character
 eol
  \n
 line
  comment
   " character to store in "char"
 eol
  \n
 line
  comment
   " queue number in AC
 eol
  \n\n
 line
  declarations
   declaration
    label
     putchar:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 23
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save queue number in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " get entry from free list
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           takeq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " none free: return w/o skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40001
  comment
   " turn into "dac addr+1"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get queue number back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putq
  comment
   " add entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           char
  comment
   " get char
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q2
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " save in second word of queue entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           putchar
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " get queued character
 eol
  \n
 line
  comment
   " queue number in AC
 eol
  \n
 line
  comment
   " returns with skip if something found
 eol
  \n
 line
  declarations
   declaration
    label
     getchar:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           takeq
  comment
   " get entry from head of queue
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
  comment
   "  nothing there: return w/o skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200001
  comment
   " turn into "lac qentry+1" (fetch stored char)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           putq
  comment
   " put qentry on free list
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q2
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " fetch queued character(!!!)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           getchar
 eol
  \n\n
 line
  comment
   " fetch first entry from a queue
 eol
  \n
 line
  comment
   " queue number in AC
 eol
  \n
 line
  comment
   " returns with skip if something dequeued
 eol
  \n
 line
  declarations
   declaration
    label
     takeq:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rcl
  comment
   " multiply queue number by two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           lacq1
  comment
   " add "lac q1"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o640000
  comment
   " turn "lac" into "dac"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          17
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " increment addr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          14
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o500000
  comment
   " turn "dac" into "sad"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          5
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " load queue head
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " non-zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           takeq
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  no: return zero w/o skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lnkaddr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " different from tail(??)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          5
  comment
   "  no -- (last entry?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200000
  comment
   " yes: turn into lac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
  comment
   " save lac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q2
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " get next pointer from queue entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " here with head == tail(??)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " clear tail
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " save (clear) head
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           takeq
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lnkaddr
  comment
   " return queue entry pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           takeq
 eol
  \n\n
 line
  comment
   " save queue entry (at lnkaddr) to a queue (queue number in AC)
 eol
  \n
 line
  declarations
   declaration
    label
     putq:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       rcl
  comment
   " multiply by two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dacq1
  comment
   " turn into "dac qhead"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          14
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " turn into "dac qtail"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          13
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o140000
  comment
   " turn into "lac qtail"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
        -
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " fetch tail
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 24
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " non-zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          6
  comment
   "  no: is zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o40000
  comment
   " turn into "dac qentry" (append to queue)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lnkaddr
  comment
   " get new entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q2
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " append to tail entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           lnkaddr
  comment
   " here with tail == 0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " save new entry as head
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           q1
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          ..
  comment
   " save new tail
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           putq
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " NOTE!! srcdbs, collaps, dskrd, dskwr share the same "temp" vars:
 eol
  \n
 line
  comment
   " "t0" temp!!
 eol
  \n
 line
  comment
   " "t1" contains pointer to (addr, buffer)
 eol
  \n
 line
  comment
   " "t2" contains block number
 eol
  \n
 eol
  \n
 line
  comment
   " check if disk block number in AC in memory
 eol
  \n
 line
  comment
   " give skip return if block NOT found
 eol
  \n\n
 line
  declarations
   declaration
    label
     srcdbs:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          2
  comment
   "* lmq\t\t\t" save block number in t2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         variable
          ndskbs
  comment
   " loop for number of buffers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskbs
  comment
   "* -1 dac 8 written\t" get address of first buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   "* lacq\t\t\t" in t1
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          2
  comment
   "** crossed out\t\t" get desired block number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "** "8 i" written\t" match buffer block?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return without skip
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          65
  comment
   "** crossed out\t\t" no: advance to next buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   "** crossed out isz 8 written
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
  comment
   " block not found: give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  declarations
   declaration
    label
     collapse:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
  comment
   " look for free buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
  comment
   " found?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskbs
  comment
   " no: reuse last buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   "** 9f+t+1 crossed out: 8 written in
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  comment
   "** written: tad dm1
 eol
  \n
 line
  comment
   "** written: dac 8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
  comment
   "** 9f+t+1 crossed out: 8 written in
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
        +
        multiplyingExpression
         atom
          1
  comment
   " save as copy dest
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d65
  comment
   "** crossed out w/ d2\t" get start of next buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " save as copy src
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           edskbsp
  comment
   " subtract from end of buffers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o17777
  comment
   " mask to 13 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " non-zero count?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          0f
        +
        multiplyingExpression
         atom
          3
  comment
   "  no: skip copy
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
        +
        multiplyingExpression
         atom
          2
  comment
   " save as copy length
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
  comment
   " slide buffers up
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         65
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           edskbsp
  comment
   " get addr of last buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " get block data pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          0f
  comment
   " save as copy dest
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
  comment
   " get block number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " save in buffer header
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    label
     0:
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
  comment
   " copy dskbuf to last buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           collapse
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " read logical disk block number (2..7999) in AC into dskbuf
 eol
  \n
 line
  declarations
   declaration
    label
     dskrd:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d2
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d7999
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 25
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
  comment
   " bad block number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
  comment
   " block currently in dskbuf
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskrd
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
  comment
   " save block address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
  comment
   " in memory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
  comment
   " no: read from disk
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskio
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        06000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          2f
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        64
 eol
  \n
 line
  declarations
   declaration
    label
     2:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           collapse
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskrd
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " write a file block (data, inode or indirect)
 eol
  \n
 line
  comment
   " AC/ block
 eol
  \n
 line
  declarations
   declaration
    label
     dskwr:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d2
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d7999
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskio
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        07000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           srcdbs
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           collapse
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskwr
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         3
 eol
  \n\n
 line
  comment
   " called to read/write logical block into "dskbuf"
 eol
  \n
 line
  comment
   " AC/ block
 eol
  \n
 line
  comment
   "   jms dskio; DSLD_BITS
 eol
  \n
 line
  declarations
   declaration
    label
     dskio:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskaddr
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
   ;
   declaration
    declarationRight
     instruction
      opcode
       idiv
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        80
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       idiv
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lls
      argument
       expression
        multiplyingExpression
         atom
          22
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       als
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       idiv
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lls
      argument
       expression
        multiplyingExpression
         atom
          22
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsktrans
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         64
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskbuf
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        9f
      +
      multiplyingExpression
       atom
        variable
         t
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskio
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskio
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskio
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " perform disk I/O (both filesystem buffer and swapping)
 eol
  \n
 line
  comment
   " passed physical (BCD) disk address
 eol
  \n
 line
  comment
   " called:
 eol
  \n
 line
  comment
   "   jms dsktrans; -WC; MAC; addr_ptr; dsld_ptr
 eol
  \n
 line
  declarations
   declaration
    label
     dsktrans:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         10
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsktrans
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          12
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 26
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dscs
  comment
   " clear status register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          12
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dslw
  comment
   " load WC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          12
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dslm
  comment
   " load MAC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          12
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dsld
  comment
   " load TA & SA
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskb
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          12
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           laci
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dsls
  comment
   " load status
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskb
  comment
   " check for interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          2
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dske
  comment
   " get status from interrupt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          12
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
  comment
   " 10 disk errors
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  declarations
   declaration
    label
     halt:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " spin for a while (process interrupts)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
  comment
   " disable interrupts
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       hlt
  comment
   " halt
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     instruction
      opcode
       law
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4096
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4096
  comment
   " continued: copy system up to user memory?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       hlt
   ;
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        -
        multiplyingExpression
         atom
          1
  comment
   " halt for good
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 <EOF>
