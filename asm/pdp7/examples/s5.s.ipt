prog
 line
  comment
   "** 01-s1.pdf page 28
 eol
  \n
 line
  comment
   " s5
 eol
  \n
 line
  comment
   " read/write a process from/to swap space
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   " AC/ first word of process table
 eol
  \n
 line
  comment
   "   jms dskswap; DSLD bits
 eol
  \n
 line
  declarations
   declaration
    label
     dskswap:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
   ;
   declaration
    declarationRight
     instruction
      opcode
       als
      argument
       expression
        multiplyingExpression
         atom
          3
  comment
   " get process disk address
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsktrans
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         64
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         userdata
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        9f
      +
      multiplyingExpression
       atom
        variable
         t
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskswap
  comment
   " read/write user area
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get swap addr back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " advance by 16??
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsktrans
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         4096
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4096
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        9f
      +
      multiplyingExpression
       atom
        variable
         t
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         dskswap
  comment
   " read/write user memory
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskswap
  comment
   " skip bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dskswap
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  declarations
   declaration
    label
     access:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
  comment
   " get inode flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " get user id
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " negative?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: super user, return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uid
  comment
   " compare to file owner
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lrs
      argument
       expression
        multiplyingExpression
         atom
          2
  comment
   "  same: shift flags down two
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
  comment
   " get inode flags back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " AND with mode from system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " access allowed?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           access
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes: return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   " no: return error from system call
 eol
  \n\n
 line
  declarations
   declaration
    label
     fassign:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         10
  comment
   " loop count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " in t0
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d10
  comment
   " turn into fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fget
  comment
   " fetch open file into "fnode"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           halt
  comment
   " will not happen
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " get fnode flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " sign bit set (active)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  no: free
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " increment loop count & loop until zero
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           fassign
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           mode
  comment
   " get mode from system call
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " set sign bit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.flags
  comment
   " save in fnode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
  comment
   " get i-number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.i
  comment
   " save in fnode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d10
  comment
   " get fd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
  comment
   " return in user AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
  comment
   " clear file offset in fnode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           fput
  comment
   " copy fnode back into u.ofiles
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           fassign
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           fassign
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " load fnode (open file entry) from u.ofiles
 eol
  \n
 line
  comment
   " AC/ user fd
 eol
  \n
 line
  comment
   "   jms fget
 eol
  \n
 line
  comment
   "    bad fd
 eol
  \n
 line
  comment
   "   return with fnode set
 eol
  \n
 line
  declarations
   declaration
    label
     fget:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           betwen
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d0
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d9
  comment
   " fd 0..9?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           fget
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  no, return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cll
   ;
   declaration
    declarationRight
     instruction
      opcode
       mul
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        3
  comment
   " multiply by three
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lacq
 eol
  \n
 line
  comment
   "** 01-s1.pdf page 29
 eol
  \n\n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           ofilesp
  comment
   " get pointer into u.ofiles
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          2
  comment
   " save as copy source
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         fnode
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        3
  comment
   " copy to "fnode"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           fget
  comment
   " give skip return
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           fget
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " copy fnode back to u.ofiles
 eol
  \n
 line
  comment
   " uses temp value set by "fget"
 eol
  \n
 line
  comment
   " (fget and fput calls must be paired)
 eol
  \n
 line
  declarations
   declaration
    label
     fput:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         fnode
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           fput
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " helper for special device write routines
 eol
  \n
 line
  comment
   " return to caller with next character to write:
 eol
  \n
 line
  comment
   " when done return character count to user.
 eol
  \n
 line
  declarations
   declaration
    label
     forall:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.limit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   " done
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get base pointer (again?)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ral
  comment
   " rotate MSB into LINK
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " fetch word via base pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       snl
  comment
   " link set?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lrs
      argument
       expression
        multiplyingExpression
         atom
          9
  comment
   "  no: get low 9 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o777
  comment
   " mask to 9 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           forall
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " return char
 eol
  \n
 line
  declarations
   declaration
    label
     fallr:
  comment
   " jump here for subsequent characters
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " get base
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       add
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " advance pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " start from top
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           forall
        +
        multiplyingExpression
         atom
          1
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.count
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ac
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sysexit
 eol
  \n\n
 line
  comment
   " wait for a condition variable
 eol
  \n
 line
  comment
   " call:
 eol
  \n
 line
  comment
   "   jmr sleep; sfiles+N
 eol
  \n
 line
  declarations
   declaration
    label
     sleep:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       law
      argument
       expression
        multiplyingExpression
         atom
          variable
           ulist
        -
        multiplyingExpression
         atom
          1
  comment
   " pointer to process table
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " in index register
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o200000
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " get 200000 in MQ
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ulistp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get current process status word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " compare to next process table entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  match
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " no match: skip other 3 words of process table
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          8
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
   ;
   declaration
    declarationRight
     instruction
      opcode
       lrs
      argument
       expression
        multiplyingExpression
         atom
          1
  comment
   " shift MQ down one
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   " loop
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       tad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o100000
  comment
   " mark process not ready
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.ulistp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           sleep
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get sleep variable pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get sleep variable contents
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       omq
  comment
   " or in MQ (bit vector of processes waiting)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " save
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           sleep
  comment
   " skip sleep variable pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           sleep
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 30
 eol
  \n\n
 line
  comment
   " look for a free directory entry??
 eol
  \n
 line
  declarations
   declaration
    label
     dslot:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           di
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           di
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           di
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dget
  comment
   " get directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.i
  comment
   " get i number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sza
  comment
   " zero (free)?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  no keep looking
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dslot
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " yes: return index
 eol
  \n\n
 line
  comment
   " called with:
 eol
  \n
 line
  comment
   " AC/ mode
 eol
  \n
 line
  comment
   " name/ file name
 eol
  \n
 line
  declarations
   declaration
    label
     icreat:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " save mode in t0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dslot
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o20
  comment
   " look for a free inode starting at 17
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         spa
  comment
   " "in use" bit bit clear?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1b
  comment
   "  no, guess again
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           ii
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         d.name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.uniq
  comment
   " get a new unique number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           s.uniq
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           d.uniq
  comment
   " save in directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uniq
  comment
   " and inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          9f
        +
        multiplyingExpression
         atom
          variable
           t
  comment
   " get mode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       xor
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " set "in use"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.flags
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " get user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uid
  comment
   " set owner
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.nlks
  comment
   " -1 links?!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.size
  comment
   " empty
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copyz
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         i.dskps
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        7
  comment
   " clear disk block numbers
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iput
  comment
   " write inode
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dput
  comment
   " write directory entry
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           icreat
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     assignment
      symbol
       variable
        t
      =
      expression
       multiplyingExpression
        atom
         variable
          t
       +
       multiplyingExpression
        atom
         1
 eol
  \n\n
 line
  comment
   " output character to display
 eol
  \n
 line
  declarations
   declaration
    label
     dspput:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       and
      argument
       expression
        multiplyingExpression
         atom
          variable
           o177
  comment
   " mask to 7 bits
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
  comment
   " discard NUL
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o14
  comment
   " Form Feed?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lmq
  comment
   " save char in MQ
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o12
  comment
   " newline?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspnl
  comment
   "  yes
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " get display word
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " TRAP?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspleft
  comment
   "  yes (first character)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       omq
  comment
   " no: or in second character
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " save both characters
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
  comment
   " advance display pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 31
 eol
  \n\n
 line
  declarations
   declaration
    label
     1:
  comment
   " here on form feed
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspinit
  comment
   " clear display
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  declarations
   declaration
    label
     dspleft:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
  comment
   " get display pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           edspbuf
  comment
   " end of the buffer?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes: light up a button!?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
  comment
   " no: store in index
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " get TRAP instruction
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " store as next
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         cla
   ;
   declaration
    declarationRight
     instruction
      opcode
       llss
      argument
       expression
        multiplyingExpression
         atom
          18
        +
        multiplyingExpression
         atom
          7
  comment
   " shift MQ upto "char1" position
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " store word with char1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  declarations
   declaration
    label
     dspnl:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
  comment
   " only called once!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsplno
  comment
   " get display line number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d33
  comment
   " 33?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          1f
  comment
   "  yes: light a button!
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsplno
  comment
   " no: increment line number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspnl
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    label
     1:
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o2000
  comment
   " get bit for push button 7
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       wbl
  comment
   " write button lights
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspput
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  declarations
   declaration
    label
     dspinit:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbufp3
  comment
   " get pointer to dspbuf+3
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsploc
  comment
   " store location
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           o400000
  comment
   " display "TRAP" instruction (end of list)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbuf
        +
        multiplyingExpression
         atom
          3
  comment
   " save in buffer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dzm
      argument
       expression
        multiplyingExpression
         atom
          variable
           dsplno
  comment
   " clear display line number
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspinit
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " "move display" (change display buffer pointer)
 eol
  \n
 line
  comment
   " called with new buffer pointer in AC
 eol
  \n
 line
  declarations
   declaration
    label
     movdsp:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       iof
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       cdf
  comment
   " clear display flags (stop)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspbufp
  comment
   " save display buf pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        -
        atom
         1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
      argument
       expression
        multiplyingExpression
         atom
          variable
           dspb
  comment
   " .dspb = -1
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       ion
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           movdsp
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " fetch user argument from word after "sys" call, return in AC
 eol
  \n
 line
  declarations
   declaration
    label
     arg:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          8
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   " fetch word after return PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       isz
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.rq
        +
        multiplyingExpression
         atom
          8
  comment
   " bump PC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " fetch user pathname argument from pointer word after "sys" call
 eol
  \n
 line
  comment
   " into "name" and look it up (in current working directory)
 eol
  \n
 line
  comment
   " if lookup fails: returns error to user (not caller)
 eol
  \n
 line
  comment
   " if lookup OK: returns with file i-inode read (into "inode")
 eol
  \n
 line
  comment
   "\tand i-number in AC
 eol
  \n
 line
  declarations
   declaration
    label
     argname:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch name pointer
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          2
  comment
   " save as copy source
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           copy
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        ..
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        4
  comment
   " copy to "name"
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.cdir
  comment
   " get CWD
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           namei
   ;
   declaration
    declarationRight
     expression
      multiplyingExpression
       atom
        variable
         name
  comment
   " look up file
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "  failed: return error directly to user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           argname
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " common code for seek/tell system calls
 eol
  \n
 line
  declarations
   declaration
    label
     seektell:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch 1st arg after sys
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.base
  comment
   " save in u.base
 eol
  \n\n
 line
  comment
   "** 01-s1.pdf page 32
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           arg
  comment
   " fetch 2nd arg (whence??)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       dac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.limit
  comment
   " save in u.limit
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           finac
  comment
   " fetch fnode & inode for fd in AC
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.limit
  comment
   " get whence arg back
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sna
  comment
   " zero?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           seektell
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
  comment
   "  yes, return zero (relative to start)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           d1
  comment
   " one?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          .
        +
        multiplyingExpression
         atom
          3
  comment
   "  yes: return pos (relative to current)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.size
  comment
   " no: return file size (relative to end)
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           seektell
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           f.badd
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           seektell
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 line
  comment
   " system call helper
 eol
  \n
 line
  comment
   " fetch system call argument name pointer from after "sys" call
 eol
  \n
 line
  comment
   " read inode; if current user is not owner, return error to user
 eol
  \n
 line
  declarations
   declaration
    label
     isown:
    declarationRight
     expression
      multiplyingExpression
       atom
        0
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           argname
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           iget
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       lac
      argument
       expression
        multiplyingExpression
         atom
          variable
           u.uid
  comment
   " get user id
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sma
  comment
   " super user?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       sad
      argument
       expression
        multiplyingExpression
         atom
          variable
           i.uid
  comment
   "  no: does user own file?
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       skp
  comment
   "   yes, or super user
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jms
      argument
       expression
        multiplyingExpression
         atom
          variable
           error
  comment
   "    not super user, not owner: return error
 eol
  \n
 line
  declarations
   declaration
    declarationRight
     instruction
      opcode
       jmp
      argument
       expression
        multiplyingExpression
         atom
          variable
           isown
      argument
       expression
        multiplyingExpression
         atom
          variable
           i
 eol
  \n\n
 <EOF>
