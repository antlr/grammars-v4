prog
 version
  .version
  float_
   2.1
 target
  .target
  target_list
   sm_20
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z16firstEigenVectorPf
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_name
       _Z16firstEigenVectorPf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z16firstEigenVectorPf
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z11bestFitLinePK6float3S_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_name
       _Z11bestFitLinePK6float3S_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z11bestFitLinePK6float3S_
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf2__Z11bestFitLinePK6float3S_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z10sortColorsPKfPi
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z10sortColorsPKfPi
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z10sortColorsPKfPi
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z14loadColorBlockPKjP6float3S2_Pii
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf5__Z14loadColorBlockPKjP6float3S2_Pii
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf6__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf7__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z4swapItEvRT_S1_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z4swapItEvRT_S1_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z4swapItEvRT_S1_
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaretf__Z12findMinErrorPf
      )
      func_name
       _Z12findMinErrorPf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z12findMinErrorPf
      )
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z13saveBlockDXT1ttjPiP5uint2i
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf6__Z13saveBlockDXT1ttjPiP5uint2i
      )
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        1
      "dxtc.compute_20.cudafe2.gpu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        2
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        3
      "C:\CUDA\include\crt/device_runtime.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        4
      "C:\CUDA\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        5
      "C:\CUDA\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        6
      "c:\cuda\include\device_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        7
      "c:\cuda\include\driver_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        8
      "c:\cuda\include\surface_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        9
      "c:\cuda\include\texture_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        10
      "c:\cuda\include\vector_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        11
      "c:\cuda\include\builtin_types.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        12
      "c:\cuda\include\host_defines.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        13
      "C:\CUDA\include\device_launch_parameters.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        14
      "c:\cuda\include\crt\storage_class.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        15
      "C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        16
      "c:\ProgramData\NVIDIA Corporation\NVIDIA GPU Computing SDK\C\common\inc\cutil_math.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        17
      "c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\dxtc\CudaMath.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        18
      "c:/ProgramData/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/src/dxtc/dxtc.cu"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        19
      "C:\CUDA\include\common_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        20
      "c:\cuda\include\math_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        21
      "c:\cuda\include\math_constants.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        22
      "c:\cuda\include\device_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        23
      "c:\cuda\include\sm_11_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        24
      "c:\cuda\include\sm_12_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        25
      "c:\cuda\include\sm_13_double_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        26
      "c:\cuda\include\sm_20_atomic_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        27
      "c:\cuda\include\sm_20_intrinsics.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        28
      "c:\cuda\include\surface_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        29
      "c:\cuda\include\texture_fetch_functions.h"
 statement
  unterminated_statement
   unterminated_directive
    debugging_directive
     file
      .file
      integer
       base_10_integer
        30
      "c:\cuda\include\math_functions_dbl_ptx3.h"
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      state_space_specifier
       state_space_specifier_aux
        shared
         .shared
      align
       .align
       byte_count
        base_10_integer
         4
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        __cuda_local_var_502498_34_covariance__0
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           384
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      state_space_specifier
       state_space_specifier_aux
        shared
         .shared
      align
       .align
       byte_count
        base_10_integer
         4
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        __cuda_local_var_503121_32_indices__1
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           256
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      state_space_specifier
       state_space_specifier_aux
        shared
         .shared
      align
       .align
       byte_count
        base_10_integer
         4
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        __cuda_local_var_503059_33_s_permutations__2
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           640
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      state_space_specifier
       state_space_specifier_aux
        shared
         .shared
      align
       .align
       byte_count
        base_10_integer
         4
      type
       fundamental_type
        fundamental_type_aux
         .b8
      variable_declarator
       id_or_opcode
        __cuda_local_var_502865_34_dps__3
       array_spec
        array_spec_aux
         [
         integer
          base_10_integer
           64
         ]
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         4
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          kColorMetric
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             12
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              128
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              63
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              128
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              63
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              128
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              63
           }
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         4
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          alphaTable4
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             16
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              16
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              65
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              192
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           }
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         4
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          alphaTable3
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             16
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              128
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              64
           }
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         4
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          prods4
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             16
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              9
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              9
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              2
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              2
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           }
   ;
 statement
  semicolon_terminated_statement
   semicolon_terminated_directive
    identifier_decl
     identifier_decl_aux
      const_space_specifier
       const_
        .const
      align
       .align
       byte_count
        base_10_integer
         4
      variable_declarator_list_
       type
        fundamental_type
         fundamental_type_aux
          .b8
       variable_declarator_with_initializer
        variable_declarator
         id_or_opcode
          prods3
         array_spec
          array_spec_aux
           [
           integer
            base_10_integer
             16
           ]
        equal_initializer
         =
         variable_initializer
          aggregate_initializer
           {
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              4
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              1
           ,
           variable_initializer
            constant_expression
             constant_expression_aux
              conditional_expression
               conditional_or_expression
                conditional_and_expression
                 inclusive_or_expression
                  exclusive_or_expression
                   and_expression
                    equality_expression
                     relational_expression
                      shift_expression
                       additive_expression
                        multiplicative_expression
                         unary_expression
                          unary_expression_not_plus_minus
                           primary
                            integer
                             base_10_integer
                              0
           }
   ;
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z16firstEigenVectorPf
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_name
       _Z16firstEigenVectorPf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z16firstEigenVectorPf
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                131
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              25
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z16firstEigenVectorPf
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z16firstEigenVectorPf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f16
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                id_or_opcode
                 %f16
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                id_or_opcode
                 %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f26
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f26
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f29
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f30
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f29
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f24
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f33
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f47
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f42
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f49
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f51
              ,
              opr
               opr_aux
                id_or_opcode
                 %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f51
              ,
              opr_register_or_constant
               id_or_opcode
                %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f51
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f51
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f56
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                id_or_opcode
                 %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f57
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f56
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                id_or_opcode
                 %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f63
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f62
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f57
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f64
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f66
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f72
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f86
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f89
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f90
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f89
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f92
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f92
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f87
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f94
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f96
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f101
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f104
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f105
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f97
              ,
              opr
               opr_aux
                id_or_opcode
                 %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f111
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f111
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f111
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f116
              ,
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f116
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f119
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f119
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f123
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              41
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f117
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z16firstEigenVectorPf
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z16firstEigenVectorPf
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z16firstEigenVectorPf
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z16firstEigenVectorPf
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaretf__Z11bestFitLinePK6float3S_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_name
       _Z11bestFitLinePK6float3S_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z11bestFitLinePK6float3S_
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf2__Z11bestFitLinePK6float3S_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                17
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                163
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              72
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z11bestFitLinePK6float3S_
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z11bestFitLinePK6float3S_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvta
            cvta
            i_cvta_type
             .shared
             .u32
            i_cvta_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              90
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r5
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              96
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              97
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f8
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              98
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f18
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f12
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f21
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              99
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f22
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              101
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        label_decl
         $Lt_1_3586
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_3842
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              107
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f25
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f13
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f17
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              109
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f27
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f21
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f28
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f28
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f22
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              111
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f29
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f29
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f23
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              112
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r9
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f24
         ;
       statement
        label_decl
         $Lt_1_3842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_1_3586
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f31
               ,
               id_or_opcode
                %f32
               ,
               id_or_opcode
                %f33
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f35
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v2
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f37
               ,
               id_or_opcode
                %f38
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f40
              ,
              opr
               opr_aux
                id_or_opcode
                 %f39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f42
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f46
              ,
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f47
              ,
              opr
               opr_aux
                id_or_opcode
                 %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f46
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f51
              ,
              opr
               opr_aux
                id_or_opcode
                 %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f48
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f46
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
              ,
              opr
               opr_aux
                id_or_opcode
                 %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f61
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f63
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f61
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f66
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f61
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f63
              ,
              opr_register_or_constant
               id_or_opcode
                %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                id_or_opcode
                 %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f74
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f72
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f81
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f86
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f90
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f91
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f92
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f93
              ,
              opr_register_or_constant
               id_or_opcode
                %f94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f96
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f93
              ,
              opr_register_or_constant
               id_or_opcode
                %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f87
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f97
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f101
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f97
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f97
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f105
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f106
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f110
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f111
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f111
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f111
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f116
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f116
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f119
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f119
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f123
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f117
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f126
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f130
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f128
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f131
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f127
              ,
              opr
               opr_aux
                id_or_opcode
                 %f130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f132
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f129
              ,
              opr
               opr_aux
                id_or_opcode
                 %f131
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f133
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f128
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f128
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f135
              ,
              opr
               opr_aux
                id_or_opcode
                 %f127
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f136
              ,
              opr
               opr_aux
                id_or_opcode
                 %f127
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f137
              ,
              opr
               opr_aux
                id_or_opcode
                 %f129
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f129
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f141
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f141
              ,
              opr_register_or_constant
               id_or_opcode
                %f132
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f142
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f146
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f147
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
              ,
              opr
               opr_aux
                id_or_opcode
                 %f38
              ,
              opr
               opr_aux
                id_or_opcode
                 %f146
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f142
              ,
              opr_register_or_constant
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f149
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f142
              ,
              opr_register_or_constant
               id_or_opcode
                %f34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f150
              ,
              opr
               opr_aux
                id_or_opcode
                 %f31
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
              ,
              opr
               opr_aux
                id_or_opcode
                 %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f151
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
              ,
              opr
               opr_aux
                id_or_opcode
                 %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                id_or_opcode
                 %f33
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
              ,
              opr
               opr_aux
                id_or_opcode
                 %f150
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f153
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
              ,
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                id_or_opcode
                 %f151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f154
              ,
              opr_register_or_constant
               id_or_opcode
                %f147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f156
              ,
              opr
               opr_aux
                id_or_opcode
                 %f155
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f157
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f156
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              119
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f159
              ,
              opr
               opr_aux
                id_or_opcode
                 %f157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f160
              ,
              opr
               opr_aux
                id_or_opcode
                 %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f156
              ,
              opr_register_or_constant
               id_or_opcode
                %f147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z11bestFitLinePK6float3S_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z11bestFitLinePK6float3S_
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z10sortColorsPKfPi
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z10sortColorsPKfPi
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z10sortColorsPKfPi
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                63
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                19
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                5
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              59
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z10sortColorsPKfPi
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z10sortColorsPKfPi
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z10sortColorsPKfPi
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r5
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r7
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r7
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 28
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r9
             ,
             opr_register_or_constant
              id_or_opcode
               %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant
              id_or_opcode
               %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r9
              ,
              opr_register_or_constant
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant
              id_or_opcode
               %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant
              id_or_opcode
               %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant
              id_or_opcode
               %r18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r21
             ,
             opr_register_or_constant
              id_or_opcode
               %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant
              id_or_opcode
               %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r21
              ,
              opr_register_or_constant
               id_or_opcode
                %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r19
              ,
              opr_register_or_constant
               id_or_opcode
                %r24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant
              id_or_opcode
               %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r28
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant
              id_or_opcode
               %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               id_or_opcode
                %r29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               id_or_opcode
                %r32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 36
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r34
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant
              id_or_opcode
               %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r33
              ,
              opr_register_or_constant
               id_or_opcode
                %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 40
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r37
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant
              id_or_opcode
               %r37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 44
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r40
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant
              id_or_opcode
               %r40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r39
              ,
              opr_register_or_constant
               id_or_opcode
                %r41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 48
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r43
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r44
             ,
             opr_register_or_constant
              id_or_opcode
               %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r42
              ,
              opr_register_or_constant
               id_or_opcode
                %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f15
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 52
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r46
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant
              id_or_opcode
               %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f16
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 56
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r49
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant
              id_or_opcode
               %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r48
              ,
              opr_register_or_constant
               id_or_opcode
                %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 60
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r52
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r53
             ,
             opr_register_or_constant
              id_or_opcode
               %r52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r51
              ,
              opr_register_or_constant
               id_or_opcode
                %r53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              94
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r6
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r55
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              24
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_2_4866
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_5378
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r60
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r59
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r60
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_5378
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r56
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r55
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r56
         ;
       statement
        label_decl
         $Lt_2_5378
         :
       statement
        label_decl
         $L_2_3842
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r57
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_2_4866
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z10sortColorsPKfPi
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z14loadColorBlockPKjP6float3S2_Pii
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z14loadColorBlockPKjP6float3S2_Pii
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf5__Z14loadColorBlockPKjP6float3S2_Pii
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                116
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                226
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                8
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              109
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z14loadColorBlockPKjP6float3S2_Pii
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z14loadColorBlockPKjP6float3S2_Pii
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z14loadColorBlockPKjP6float3S2_Pii
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf3__Z14loadColorBlockPKjP6float3S2_Pii
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf4__Z14loadColorBlockPKjP6float3S2_Pii
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf5__Z14loadColorBlockPKjP6float3S2_Pii
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_7938
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              120
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvta
            cvta
            i_cvta_type
             .shared
             .u32
            i_cvta_opr
             opr
              opr_aux
               id_or_opcode
                %r13
             ,
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r15
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r20
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r19
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              122
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r22
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              123
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r25
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              124
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f9
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              132
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r22
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r29
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r30
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r31
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f16
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f18
              ,
              opr_register_or_constant
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r32
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r33
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f20
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r34
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f21
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r34
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f22
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r34
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f24
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f24
              ,
              opr_register_or_constant
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f26
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r35
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f28
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r37
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f29
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r37
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r37
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f32
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f32
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r38
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r39
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f36
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r40
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r40
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f38
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r40
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f38
              ,
              opr_register_or_constant
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f40
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f40
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f42
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f42
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r28
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f43
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              133
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f44
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f45
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f46
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              90
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f47
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f48
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f49
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              96
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f47
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r41
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r42
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              97
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f45
              ,
              opr_register_or_constant
               id_or_opcode
                %f54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f48
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f57
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              98
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f46
              ,
              opr_register_or_constant
               id_or_opcode
                %f58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f49
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f61
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              99
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f62
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              101
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f60
              ,
              opr_register_or_constant
               id_or_opcode
                %f60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        label_decl
         $Lt_3_8962
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_9218
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              107
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r45
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r44
              ,
              opr_register_or_constant
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r46
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r47
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f65
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f53
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f65
              ,
              opr_register_or_constant
               id_or_opcode
                %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f53
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f66
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f66
              ,
              opr_register_or_constant
               id_or_opcode
                %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f57
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              109
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f67
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f67
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f61
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f68
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f68
              ,
              opr_register_or_constant
               id_or_opcode
                %f62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f62
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              111
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f69
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f63
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              112
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f70
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r48
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f70
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f64
         ;
       statement
        label_decl
         $Lt_3_9218
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_8962
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f71
               ,
               id_or_opcode
                %f72
               ,
               id_or_opcode
                %f73
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f74
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f76
              ,
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v2
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f77
               ,
               id_or_opcode
                %f78
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f79
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f84
              ,
              opr
               opr_aux
                id_or_opcode
                 %f83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f88
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f84
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f86
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f91
              ,
              opr
               opr_aux
                id_or_opcode
                 %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f84
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f86
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f100
              ,
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f103
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f101
              ,
              opr_register_or_constant
               id_or_opcode
                %f104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f106
              ,
              opr
               opr_aux
                id_or_opcode
                 %f105
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f101
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f102
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f103
              ,
              opr_register_or_constant
               id_or_opcode
                %f106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f112
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f115
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f116
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f118
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f117
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f119
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f119
              ,
              opr_register_or_constant
               id_or_opcode
                %f118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f121
              ,
              opr
               opr_aux
                id_or_opcode
                 %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f121
              ,
              opr_register_or_constant
               id_or_opcode
                %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f121
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f121
              ,
              opr_register_or_constant
               id_or_opcode
                %f118
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f127
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f124
              ,
              opr
               opr_aux
                id_or_opcode
                 %f126
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f130
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f128
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f131
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f132
              ,
              opr
               opr_aux
                id_or_opcode
                 %f124
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f133
              ,
              opr
               opr_aux
                id_or_opcode
                 %f124
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f134
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f132
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f135
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f133
              ,
              opr_register_or_constant
               id_or_opcode
                %f134
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f136
              ,
              opr
               opr_aux
                id_or_opcode
                 %f135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f132
              ,
              opr_register_or_constant
               id_or_opcode
                %f136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f138
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f133
              ,
              opr_register_or_constant
               id_or_opcode
                %f136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f136
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f142
              ,
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f143
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f144
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f137
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f145
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f146
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f147
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f148
              ,
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f146
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f149
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f147
              ,
              opr_register_or_constant
               id_or_opcode
                %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f149
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f151
              ,
              opr
               opr_aux
                id_or_opcode
                 %f150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f152
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f147
              ,
              opr_register_or_constant
               id_or_opcode
                %f151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f148
              ,
              opr_register_or_constant
               id_or_opcode
                %f151
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f156
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                id_or_opcode
                 %f155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f157
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f156
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f159
              ,
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f160
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f159
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f162
              ,
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f163
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f162
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f164
              ,
              opr_register_or_constant
               id_or_opcode
                %f163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f166
              ,
              opr
               opr_aux
                id_or_opcode
                 %f165
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f163
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f168
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f171
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f167
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f172
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f169
              ,
              opr
               opr_aux
                id_or_opcode
                 %f171
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f173
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f168
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f174
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f168
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f175
              ,
              opr
               opr_aux
                id_or_opcode
                 %f167
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f176
              ,
              opr
               opr_aux
                id_or_opcode
                 %f167
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f177
              ,
              opr
               opr_aux
                id_or_opcode
                 %f169
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f178
              ,
              opr
               opr_aux
                id_or_opcode
                 %f169
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f177
              ,
              opr_register_or_constant
               id_or_opcode
                %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f180
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f181
              ,
              opr
               opr_aux
                id_or_opcode
                 %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f182
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f177
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f183
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f178
              ,
              opr_register_or_constant
               id_or_opcode
                %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f181
              ,
              opr_register_or_constant
               id_or_opcode
                %f172
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f185
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f182
              ,
              opr_register_or_constant
               id_or_opcode
                %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f186
              ,
              opr
               opr_aux
                id_or_opcode
                 %f184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f187
              ,
              opr
               opr_aux
                id_or_opcode
                 %f183
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f186
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f182
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f189
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f182
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f190
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f191
              ,
              opr
               opr_aux
                id_or_opcode
                 %f184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f192
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f183
              ,
              opr
               opr_aux
                id_or_opcode
                 %f190
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f193
              ,
              opr
               opr_aux
                id_or_opcode
                 %f183
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f191
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f192
              ,
              opr_register_or_constant
               id_or_opcode
                %f193
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f195
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f194
              ,
              opr_register_or_constant
               id_or_opcode
                %f187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f196
              ,
              opr
               opr_aux
                id_or_opcode
                 %f195
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f197
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f192
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f198
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f193
              ,
              opr_register_or_constant
               id_or_opcode
                %f196
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              135
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f199
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f200
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f201
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f202
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f196
              ,
              opr_register_or_constant
               id_or_opcode
                %f187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f203
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f198
              ,
              opr_register_or_constant
               id_or_opcode
                %f200
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r11
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f204
              ,
              opr
               opr_aux
                id_or_opcode
                 %f199
              ,
              opr
               opr_aux
                id_or_opcode
                 %f197
              ,
              opr
               opr_aux
                id_or_opcode
                 %f203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f205
              ,
              opr
               opr_aux
                id_or_opcode
                 %f201
              ,
              opr
               opr_aux
                id_or_opcode
                 %f202
              ,
              opr
               opr_aux
                id_or_opcode
                 %f204
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvta
            cvta
            i_cvta_type
             .shared
             .u32
            i_cvta_opr
             opr
              opr_aux
               id_or_opcode
                %r51
             ,
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r50
              ,
              opr_register_or_constant
               id_or_opcode
                %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r52
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f205
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f206
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 28
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r53
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f206
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant
              id_or_opcode
               %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f207
               ,
               id_or_opcode
                %f208
               ,
               id_or_opcode
                %f209
               ,
               id_or_opcode
                %f210
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f207
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant
              id_or_opcode
               %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r54
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f211
               ,
               id_or_opcode
                %f212
               ,
               id_or_opcode
                %f213
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r58
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f212
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant
              id_or_opcode
               %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r60
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f213
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r61
             ,
             opr_register_or_constant
              id_or_opcode
               %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               id_or_opcode
                %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               _
               ,
               id_or_opcode
                %f214
               ,
               id_or_opcode
                %f215
               ,
               id_or_opcode
                %f216
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r63
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f215
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant
              id_or_opcode
               %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f217
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r65
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f217
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant
              id_or_opcode
               %r65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r67
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f214
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant
              id_or_opcode
               %r67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r66
              ,
              opr_register_or_constant
               id_or_opcode
                %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r64
              ,
              opr_register_or_constant
               id_or_opcode
                %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f216
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant
              id_or_opcode
               %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r73
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f211
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant
              id_or_opcode
               %r73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r72
              ,
              opr_register_or_constant
               id_or_opcode
                %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r70
              ,
              opr_register_or_constant
               id_or_opcode
                %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               id_or_opcode
                %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r79
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f208
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant
              id_or_opcode
               %r79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r78
              ,
              opr_register_or_constant
               id_or_opcode
                %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r82
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f209
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r83
             ,
             opr_register_or_constant
              id_or_opcode
               %r82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r81
              ,
              opr_register_or_constant
               id_or_opcode
                %r83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r85
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f210
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant
              id_or_opcode
               %r85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r84
              ,
              opr_register_or_constant
               id_or_opcode
                %r86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f218
               ,
               id_or_opcode
                %f219
               ,
               id_or_opcode
                %f220
               ,
               id_or_opcode
                %f221
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 48
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r88
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f218
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r89
             ,
             opr_register_or_constant
              id_or_opcode
               %r88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r87
              ,
              opr_register_or_constant
               id_or_opcode
                %r89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r91
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f219
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant
              id_or_opcode
               %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r90
              ,
              opr_register_or_constant
               id_or_opcode
                %r92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r94
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f220
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant
              id_or_opcode
               %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r93
              ,
              opr_register_or_constant
               id_or_opcode
                %r95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f221
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r98
             ,
             opr_register_or_constant
              id_or_opcode
               %r97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r96
              ,
              opr_register_or_constant
               id_or_opcode
                %r98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              94
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r50
              ,
              opr_register_or_constant
               id_or_opcode
                %r8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r101
              ,
              opr
               opr_aux
                id_or_opcode
                 %r99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r100
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r99
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              24
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_3_10498
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_11010
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r102
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r105
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r104
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r105
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_11010
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r101
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r100
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r101
         ;
       statement
        label_decl
         $Lt_3_11010
         :
       statement
        label_decl
         $L_3_7426
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r102
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_3_10498
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              143
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f222
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f223
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              149
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f224
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r101
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r108
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r109
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r100
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r109
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r111
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r112
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r100
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r112
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r113
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r114
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f223
         ;
       statement
        label_decl
         $Lt_3_7938
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              151
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z14loadColorBlockPKjP6float3S2_Pii
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf6__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
       ,
       func_param
        func_param_space
         .param
        align
         .align
         byte_count
          base_10_integer
           4
        func_param_type
         fundamental_type
          fundamental_type_aux
           .b8
        __cudaparmf7__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
        array_spec
         array_spec_aux
          [
          integer
           base_10_integer
            12
          ]
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                106
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                269
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                13
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              302
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf3__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf4__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf5__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf6__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf7__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                id_or_opcode
                 %f1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf7__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf7__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f6
              ,
              opr
               opr_aux
                id_or_opcode
                 %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f7f7fffff
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                id_or_opcode
                 prods4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 alphaTable4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvta
            cvta
            i_cvta_type
             .shared
             .u32
            i_cvta_opr
             opr
              opr_aux
               id_or_opcode
                %r17
             ,
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_503059_33_s_permutations__2
         ;
       statement
        label_decl
         $Lt_4_9730
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              312
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  991
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_258
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              315
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r18
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r22
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r21
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r23
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_9986
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r20
              ,
              opr_register_or_constant
               id_or_opcode
                %r17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r24
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r22
         ;
       statement
        label_decl
         $Lt_4_9986
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r25
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r26
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 192
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_4_11010
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              193
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %r25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r30
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               id_or_opcode
                %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r32
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f10
              ,
              opr
               opr_aux
                id_or_opcode
                 %f12
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f13
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                id_or_opcode
                 %f11
              ,
              opr
               opr_aux
                id_or_opcode
                 %f14
              ,
              opr
               opr_aux
                id_or_opcode
                 %f8
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               id_or_opcode
                %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r34
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r33
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r26
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_11010
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              232
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f21
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f22
              ,
              opr
               opr_aux
                id_or_opcode
                 %r36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r38
              ,
              opr
               opr_aux
                id_or_opcode
                 %r37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f16
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f24
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f18
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f27
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f30
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f31
              ,
              opr_register_or_constant
               id_or_opcode
                %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f36
              ,
              opr
               opr_aux
                id_or_opcode
                 %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f33
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f43
              ,
              opr
               opr_aux
                id_or_opcode
                 %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                id_or_opcode
                 %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f46
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f43
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f44
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f50
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f45
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f52
              ,
              opr
               opr_aux
                id_or_opcode
                 %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f53
              ,
              opr
               opr_aux
                id_or_opcode
                 %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f54
              ,
              opr
               opr_aux
                id_or_opcode
                 %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %f52
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %f53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r42
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                id_or_opcode
                 %r42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                id_or_opcode
                 %f54
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              233
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f56
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f58
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f60
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f61
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f58
              ,
              opr_register_or_constant
               id_or_opcode
                %f55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f59
              ,
              opr_register_or_constant
               id_or_opcode
                %f56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f60
              ,
              opr_register_or_constant
               id_or_opcode
                %f57
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f61
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f62
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f63
              ,
              opr_register_or_constant
               id_or_opcode
                %f36
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f71
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f67
              ,
              opr_register_or_constant
               id_or_opcode
                %f70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f68
              ,
              opr_register_or_constant
               id_or_opcode
                %f72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f69
              ,
              opr_register_or_constant
               id_or_opcode
                %f74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f76
              ,
              opr
               opr_aux
                id_or_opcode
                 %f71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f77
              ,
              opr
               opr_aux
                id_or_opcode
                 %f73
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r46
              ,
              opr
               opr_aux
                id_or_opcode
                 %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r46
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r49
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                id_or_opcode
                 %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f79
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f80
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f53
              ,
              opr_register_or_constant
               id_or_opcode
                %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f54
              ,
              opr_register_or_constant
               id_or_opcode
                %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f87
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f86
              ,
              opr_register_or_constant
               id_or_opcode
                %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f88
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f89
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f76
              ,
              opr_register_or_constant
               id_or_opcode
                %f88
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f90
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f89
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f91
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f77
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f93
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f78
              ,
              opr_register_or_constant
               id_or_opcode
                %f94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f95
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f89
              ,
              opr_register_or_constant
               id_or_opcode
                %f80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f92
              ,
              opr_register_or_constant
               id_or_opcode
                %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f95
              ,
              opr_register_or_constant
               id_or_opcode
                %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f80
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f101
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f83
              ,
              opr_register_or_constant
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f86
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f23
              ,
              opr_register_or_constant
               id_or_opcode
                %f89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f24
              ,
              opr_register_or_constant
               id_or_opcode
                %f92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f105
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f25
              ,
              opr_register_or_constant
               id_or_opcode
                %f95
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f22
              ,
              opr_register_or_constant
               id_or_opcode
                %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f106
              ,
              opr_register_or_constant
               id_or_opcode
                %f101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f113
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f107
              ,
              opr_register_or_constant
               id_or_opcode
                %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f114
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f112
              ,
              opr_register_or_constant
               id_or_opcode
                %f104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f119
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f113
              ,
              opr_register_or_constant
               id_or_opcode
                %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f120
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f114
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f109
              ,
              opr_register_or_constant
               id_or_opcode
                %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f116
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f111
              ,
              opr_register_or_constant
               id_or_opcode
                %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f118
              ,
              opr_register_or_constant
               id_or_opcode
                %f118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f119
              ,
              opr_register_or_constant
               id_or_opcode
                %f119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f126
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f120
              ,
              opr_register_or_constant
               id_or_opcode
                %f120
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f121
              ,
              opr_register_or_constant
               id_or_opcode
                %f124
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f128
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f122
              ,
              opr_register_or_constant
               id_or_opcode
                %f125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f129
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f130
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f130
              ,
              opr_register_or_constant
               id_or_opcode
                %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f132
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f133
              ,
              opr
               opr_aux
                id_or_opcode
                 %f128
              ,
              opr
               opr_aux
                id_or_opcode
                 %f132
              ,
              opr
               opr_aux
                id_or_opcode
                 %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f134
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f135
              ,
              opr
               opr_aux
                id_or_opcode
                 %f129
              ,
              opr
               opr_aux
                id_or_opcode
                 %f134
              ,
              opr
               opr_aux
                id_or_opcode
                 %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f136
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3de38e39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f135
              ,
              opr_register_or_constant
               id_or_opcode
                %f136
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f137
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_11522
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %f137
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              323
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r22
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              324
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r45
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r52
         ;
       statement
        label_decl
         $Lt_4_11522
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r13
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_9730
         ;
       statement
        label_decl
         $Lt_4_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r54
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r55
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r54
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_12290
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              48
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r54
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              49
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r56
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              332
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r57
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1431655765
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r58
         ;
       statement
        label_decl
         $Lt_4_12290
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r59
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                id_or_opcode
                 prods3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r61
              ,
              opr
               opr_aux
                id_or_opcode
                 alphaTable3
         ;
       statement
        label_decl
         $Lt_4_13314
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              338
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r62
              ,
              opr_register_or_constant
               id_or_opcode
                %r14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r63
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $LDWendi_rintf_183_2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              341
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r65
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r63
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r67
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r66
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              342
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 192
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f140
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_4_14082
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r67
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r72
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r73
              ,
              opr_register_or_constant
               id_or_opcode
                %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f141
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r74
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f142
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r69
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f140
              ,
              opr
               opr_aux
                id_or_opcode
                 %f142
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f143
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r69
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f144
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r69
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f144
              ,
              opr
               opr_aux
                id_or_opcode
                 %f138
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              255
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r73
              ,
              opr_register_or_constant
               id_or_opcode
                %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r76
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r75
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r76
              ,
              opr_register_or_constant
               id_or_opcode
                %r70
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r68
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r69
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r69
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r69
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_14082
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f145
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f146
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f2
              ,
              opr_register_or_constant
               id_or_opcode
                %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f147
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f149
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f150
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f149
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f151
              ,
              opr
               opr_aux
                id_or_opcode
                 %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f152
              ,
              opr
               opr_aux
                id_or_opcode
                 %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r80
              ,
              opr
               opr_aux
                id_or_opcode
                 %r79
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f153
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f146
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f148
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f150
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f151
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f157
              ,
              opr
               opr_aux
                id_or_opcode
                 %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f159
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f161
              ,
              opr_register_or_constant
               id_or_opcode
                %f156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f163
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f164
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f166
              ,
              opr
               opr_aux
                id_or_opcode
                 %f162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f163
              ,
              opr_register_or_constant
               id_or_opcode
                %f158
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f168
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f164
              ,
              opr_register_or_constant
               id_or_opcode
                %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f165
              ,
              opr_register_or_constant
               id_or_opcode
                %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f166
              ,
              opr_register_or_constant
               id_or_opcode
                %f169
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f173
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f174
              ,
              opr
               opr_aux
                id_or_opcode
                 %f171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f175
              ,
              opr
               opr_aux
                id_or_opcode
                 %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f176
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f177
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f173
              ,
              opr_register_or_constant
               id_or_opcode
                %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f178
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f179
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f174
              ,
              opr_register_or_constant
               id_or_opcode
                %f178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f180
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f175
              ,
              opr_register_or_constant
               id_or_opcode
                %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f182
              ,
              opr
               opr_aux
                id_or_opcode
                 %f177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f183
              ,
              opr
               opr_aux
                id_or_opcode
                 %f179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f181
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f182
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %f183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r85
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f184
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r87
              ,
              opr
               opr_aux
                id_or_opcode
                 %r85
              ,
              opr
               opr_aux
                id_or_opcode
                 %r86
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f185
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f187
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f188
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f189
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f154
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f190
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f155
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f191
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f188
              ,
              opr_register_or_constant
               id_or_opcode
                %f185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f192
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f189
              ,
              opr_register_or_constant
               id_or_opcode
                %f186
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f193
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f190
              ,
              opr_register_or_constant
               id_or_opcode
                %f187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f194
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f191
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f195
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f192
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f196
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f193
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f197
              ,
              opr
               opr_aux
                id_or_opcode
                 %f194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f198
              ,
              opr
               opr_aux
                id_or_opcode
                 %f195
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f199
              ,
              opr
               opr_aux
                id_or_opcode
                 %f196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f200
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f201
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f197
              ,
              opr_register_or_constant
               id_or_opcode
                %f200
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f202
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f203
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f198
              ,
              opr_register_or_constant
               id_or_opcode
                %f202
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f204
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f205
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f199
              ,
              opr_register_or_constant
               id_or_opcode
                %f204
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f206
              ,
              opr
               opr_aux
                id_or_opcode
                 %f201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f207
              ,
              opr
               opr_aux
                id_or_opcode
                 %f203
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f208
              ,
              opr
               opr_aux
                id_or_opcode
                 %f205
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r88
              ,
              opr
               opr_aux
                id_or_opcode
                 %f206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r89
              ,
              opr
               opr_aux
                id_or_opcode
                 %r88
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r90
              ,
              opr
               opr_aux
                id_or_opcode
                 %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r91
              ,
              opr
               opr_aux
                id_or_opcode
                 %r90
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r92
              ,
              opr
               opr_aux
                id_or_opcode
                 %r89
              ,
              opr
               opr_aux
                id_or_opcode
                 %r91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r94
              ,
              opr
               opr_aux
                id_or_opcode
                 %r92
              ,
              opr
               opr_aux
                id_or_opcode
                 %r93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              296
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f209
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f210
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f182
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f211
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f210
              ,
              opr_register_or_constant
               id_or_opcode
                %f210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f212
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f213
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f183
              ,
              opr_register_or_constant
               id_or_opcode
                %f212
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f214
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f213
              ,
              opr_register_or_constant
               id_or_opcode
                %f213
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f215
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f216
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f184
              ,
              opr_register_or_constant
               id_or_opcode
                %f215
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f217
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f216
              ,
              opr_register_or_constant
               id_or_opcode
                %f216
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f218
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f219
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f206
              ,
              opr_register_or_constant
               id_or_opcode
                %f218
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f220
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f219
              ,
              opr_register_or_constant
               id_or_opcode
                %f219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f221
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f207
              ,
              opr_register_or_constant
               id_or_opcode
                %f221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f223
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f222
              ,
              opr_register_or_constant
               id_or_opcode
                %f222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f224
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f208
              ,
              opr_register_or_constant
               id_or_opcode
                %f224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f226
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f225
              ,
              opr_register_or_constant
               id_or_opcode
                %f225
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f227
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f219
              ,
              opr_register_or_constant
               id_or_opcode
                %f210
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f228
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f222
              ,
              opr_register_or_constant
               id_or_opcode
                %f213
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f229
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f225
              ,
              opr_register_or_constant
               id_or_opcode
                %f216
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f230
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f210
              ,
              opr_register_or_constant
               id_or_opcode
                %f140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f231
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f213
              ,
              opr_register_or_constant
               id_or_opcode
                %f139
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f232
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f216
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f233
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f234
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f154
              ,
              opr_register_or_constant
               id_or_opcode
                %f222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f235
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f225
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              342
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f236
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f228
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f237
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f238
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f229
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f239
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f214
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f240
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f211
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f241
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f152
              ,
              opr_register_or_constant
               id_or_opcode
                %f217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f242
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f236
              ,
              opr_register_or_constant
               id_or_opcode
                %f231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f243
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f237
              ,
              opr_register_or_constant
               id_or_opcode
                %f230
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f244
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f238
              ,
              opr_register_or_constant
               id_or_opcode
                %f232
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f245
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f246
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f220
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f247
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f157
              ,
              opr_register_or_constant
               id_or_opcode
                %f226
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f248
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f242
              ,
              opr_register_or_constant
               id_or_opcode
                %f234
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f249
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f243
              ,
              opr_register_or_constant
               id_or_opcode
                %f233
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f250
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f244
              ,
              opr_register_or_constant
               id_or_opcode
                %f235
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f251
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f239
              ,
              opr_register_or_constant
               id_or_opcode
                %f245
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f252
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f240
              ,
              opr_register_or_constant
               id_or_opcode
                %f246
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f253
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f241
              ,
              opr_register_or_constant
               id_or_opcode
                %f247
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f254
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f248
              ,
              opr_register_or_constant
               id_or_opcode
                %f248
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f255
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f249
              ,
              opr_register_or_constant
               id_or_opcode
                %f249
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f256
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f250
              ,
              opr_register_or_constant
               id_or_opcode
                %f250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f257
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f251
              ,
              opr_register_or_constant
               id_or_opcode
                %f254
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f258
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f252
              ,
              opr_register_or_constant
               id_or_opcode
                %f255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f259
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f253
              ,
              opr_register_or_constant
               id_or_opcode
                %f256
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f260
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f261
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f260
              ,
              opr_register_or_constant
               id_or_opcode
                %f257
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f262
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f263
              ,
              opr
               opr_aux
                id_or_opcode
                 %f258
              ,
              opr
               opr_aux
                id_or_opcode
                 %f262
              ,
              opr
               opr_aux
                id_or_opcode
                 %f261
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f264
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f265
              ,
              opr
               opr_aux
                id_or_opcode
                 %f259
              ,
              opr
               opr_aux
                id_or_opcode
                 %f264
              ,
              opr
               opr_aux
                id_or_opcode
                 %f263
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f266
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3e800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f267
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f265
              ,
              opr_register_or_constant
               id_or_opcode
                %f266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f267
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_14594
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              346
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %f267
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              347
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r67
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              348
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r87
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              349
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r96
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r95
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_15106
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              48
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r96
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              49
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r95
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              354
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r97
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b32
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                id_or_opcode
                 %r97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r99
              ,
              opr
               opr_aux
                id_or_opcode
                 %r98
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r99
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1431655765
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r101
              ,
              opr
               opr_aux
                id_or_opcode
                 %r97
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r10
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r101
         ;
       statement
        label_decl
         $Lt_4_15106
         :
       statement
        label_decl
         $Lt_4_14594
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              335
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r102
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r59
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_4_13314
         ;
       statement
        label_decl
         $LDWendi_rintf_183_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              359
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r14
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               id_or_opcode
                %r103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r104
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              360
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z19evalAllPermutationsPK6float3PKjRtS4_RjPfS_
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z4swapItEvRT_S1_
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z4swapItEvRT_S1_
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z4swapItEvRT_S1_
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                8
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              46
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z4swapItEvRT_S1_
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z4swapItEvRT_S1_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z4swapItEvRT_S1_
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              48
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .u16
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r2
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r6
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              49
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .u16
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r4
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              50
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z4swapItEvRT_S1_
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      (
      func_ret_list
       func_ret
        func_ret_space
         .param
        func_ret_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaretf__Z12findMinErrorPf
      )
      func_name
       _Z12findMinErrorPf
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z12findMinErrorPf
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                17
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                9
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                9
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              366
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z12findMinErrorPf
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z12findMinErrorPf
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              370
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r4
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r3
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvta
            cvta
            i_cvta_type
             .shared
             .u32
            i_cvta_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_503121_32_indices__1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              406
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r7
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_10242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r8
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r4
              ,
              opr_register_or_constant
               id_or_opcode
                %r2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f2
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 128
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_10754
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              412
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              413
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 128
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        label_decl
         $Lt_6_10754
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_11266
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              416
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              417
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        label_decl
         $Lt_6_11266
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f4
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_11778
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              420
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f4
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              421
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        label_decl
         $Lt_6_11778
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_12290
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              424
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f5
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              425
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        label_decl
         $Lt_6_12290
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f6
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_12802
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              428
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              429
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r13
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        label_decl
         $Lt_6_12802
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_6_13314
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              432
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f7
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              433
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r14
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r6
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r14
         ;
       statement
        label_decl
         $Lt_6_13314
         :
       statement
        label_decl
         $Lt_6_10242
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              438
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              440
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r15
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_503121_32_indices__1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .param
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                __cudaretf__Z12findMinErrorPf
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z12findMinErrorPf
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    func
     func_aux
      .visible
      .func
      func_name
       _Z13saveBlockDXT1ttjPiP5uint2i
      (
      func_param_list
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf1__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf2__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf3__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf4__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparmf5__Z13saveBlockDXT1ttjPiP5uint2i
       ,
       func_param
        func_param_space
         .param
        func_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparmf6__Z13saveBlockDXT1ttjPiP5uint2i
      )
      func_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                115
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                3
              >
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              447
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z13saveBlockDXT1ttjPiP5uint2i
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r1
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf1__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r3
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf2__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r5
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf3__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf4__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r8
              ,
              opr
               opr_aux
                id_or_opcode
                 %r7
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r9
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf5__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r10
              ,
              opr
               opr_aux
                id_or_opcode
                 %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparmf6__Z13saveBlockDXT1ttjPiP5uint2i
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r12
              ,
              opr
               opr_aux
                id_or_opcode
                 %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .u32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r13
              ,
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 %p1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              460
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r15
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r16
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r15
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r17
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r19
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r19
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r23
              ,
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r18
              ,
              opr
               opr_aux
                id_or_opcode
                 %r23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r25
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r28
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r30
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                id_or_opcode
                 %r32
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r34
              ,
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r35
              ,
              opr
               opr_aux
                id_or_opcode
                 %r29
              ,
              opr
               opr_aux
                id_or_opcode
                 %r34
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r35
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r37
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r37
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r40
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r42
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r42
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r46
              ,
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r47
              ,
              opr
               opr_aux
                id_or_opcode
                 %r41
              ,
              opr
               opr_aux
                id_or_opcode
                 %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                id_or_opcode
                 %r36
              ,
              opr
               opr_aux
                id_or_opcode
                 %r47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r49
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 24
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r49
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                id_or_opcode
                 %r51
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %r52
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r54
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 28
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r55
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r54
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                id_or_opcode
                 %r56
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r58
              ,
              opr
               opr_aux
                id_or_opcode
                 %r57
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r59
              ,
              opr
               opr_aux
                id_or_opcode
                 %r53
              ,
              opr
               opr_aux
                id_or_opcode
                 %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r48
              ,
              opr
               opr_aux
                id_or_opcode
                 %r59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r61
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                id_or_opcode
                 %r63
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r65
              ,
              opr
               opr_aux
                id_or_opcode
                 %r64
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                id_or_opcode
                 %r60
              ,
              opr
               opr_aux
                id_or_opcode
                 %r65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r67
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 36
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r68
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r67
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                id_or_opcode
                 %r69
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r71
              ,
              opr
               opr_aux
                id_or_opcode
                 %r70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                id_or_opcode
                 %r66
              ,
              opr
               opr_aux
                id_or_opcode
                 %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r73
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 40
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r74
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r73
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                id_or_opcode
                 %r75
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r77
              ,
              opr
               opr_aux
                id_or_opcode
                 %r76
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r72
              ,
              opr
               opr_aux
                id_or_opcode
                 %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r79
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 44
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                id_or_opcode
                 %r81
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r83
              ,
              opr
               opr_aux
                id_or_opcode
                 %r82
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                id_or_opcode
                 %r78
              ,
              opr
               opr_aux
                id_or_opcode
                 %r83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r85
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 48
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r86
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r87
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r88
              ,
              opr
               opr_aux
                id_or_opcode
                 %r87
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r89
              ,
              opr
               opr_aux
                id_or_opcode
                 %r88
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r90
              ,
              opr
               opr_aux
                id_or_opcode
                 %r84
              ,
              opr
               opr_aux
                id_or_opcode
                 %r89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r91
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 52
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r91
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r94
              ,
              opr
               opr_aux
                id_or_opcode
                 %r93
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r95
              ,
              opr
               opr_aux
                id_or_opcode
                 %r94
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                id_or_opcode
                 %r90
              ,
              opr
               opr_aux
                id_or_opcode
                 %r95
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r97
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 56
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r97
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r99
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                id_or_opcode
                 %r99
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r101
              ,
              opr
               opr_aux
                id_or_opcode
                 %r100
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r102
              ,
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                id_or_opcode
                 %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r103
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r8
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 60
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r103
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r105
              ,
              opr
               opr_aux
                id_or_opcode
                 %r14
              ,
              opr
               opr_aux
                id_or_opcode
                 %r104
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                id_or_opcode
                 %r105
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 %r102
              ,
              opr
               opr_aux
                id_or_opcode
                 %r106
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              464
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r108
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               id_or_opcode
                %r108
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r109
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               id_or_opcode
                %r10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r112
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r113
              ,
              opr
               opr_aux
                id_or_opcode
                 %r2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .v2
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r111
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r113
               ,
               id_or_opcode
                %r107
               }
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              468
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ret
            ret
            i_ret_type
         ;
       statement
        label_decl
         $LDWend__Z13saveBlockDXT1ttjPiP5uint2i
         :
       }
 statement
  unterminated_statement
   unterminated_directive
    entry
     entry_aux
      .entry
      kernel_name
       _Z8compressPKjS0_P5uint2i
      (
      entry_param_list
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z8compressPKjS0_P5uint2i_permutations
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z8compressPKjS0_P5uint2i_image
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .u32
        __cudaparm__Z8compressPKjS0_P5uint2i_result
       ,
       entry_param
        entry_space
         .param
        entry_param_type
         fundamental_type
          fundamental_type_aux
           .s32
        __cudaparm__Z8compressPKjS0_P5uint2i_blockOffset
      )
      entry_body
       {
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u16
            variable_declarator
             id_or_opcode
              %rh
             parameterized_register_spec
              <
              integer
               base_10_integer
                4
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .u32
            variable_declarator
             id_or_opcode
              %r
             parameterized_register_spec
              <
              integer
               base_10_integer
                314
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .f32
            variable_declarator
             id_or_opcode
              %f
             parameterized_register_spec
              <
              integer
               base_10_integer
                481
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              reg
               .reg
            type
             fundamental_type
              fundamental_type_aux
               .pred
            variable_declarator
             id_or_opcode
              %p
             parameterized_register_spec
              <
              integer
               base_10_integer
                28
              >
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               4
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_503229_35_colors1360
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 192
               ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               16
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_503230_35_sums1552
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 192
               ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               16
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_503231_32_xrefs1744
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 64
               ]
         ;
       statement
        semicolon_terminated_statement
         semicolon_terminated_directive
          identifier_decl
           identifier_decl_aux
            state_space_specifier
             state_space_specifier_aux
              shared
               .shared
            align
             .align
             byte_count
              base_10_integer
               4
            type
             fundamental_type
              fundamental_type_aux
               .b8
            variable_declarator
             id_or_opcode
              __cuda___cuda_local_var_503240_34_errors1808
             array_spec
              array_spec_aux
               [
               integer
                base_10_integer
                 256
               ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              473
            integer
             base_10_integer
              0
       statement
        label_decl
         $LDWbegin__Z8compressPKjS0_P5uint2i
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              481
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .s32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                id_or_opcode
                 %tid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r2
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r3
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p1
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_27394
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              120
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_503229_35_colors1360
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r5
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda_local_var_502498_34_covariance__0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r6
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_503230_35_sums1552
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r7
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8compressPKjS0_P5uint2i_image
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r8
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8compressPKjS0_P5uint2i_blockOffset
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r9
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r10
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r8
              ,
              opr_register_or_constant
               id_or_opcode
                %r9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r11
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r10
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r12
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               id_or_opcode
                %r11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r12
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r7
              ,
              opr_register_or_constant
               id_or_opcode
                %r13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r15
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r14
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              122
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r16
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r17
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r18
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f2
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f3
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f1
              ,
              opr_register_or_constant
               id_or_opcode
                %f2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r18
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              123
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r20
              ,
              opr
               opr_aux
                id_or_opcode
                 %r19
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f4
              ,
              opr
               opr_aux
                id_or_opcode
                 %r20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f5
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f6
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f4
              ,
              opr_register_or_constant
               id_or_opcode
                %f5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r18
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              124
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                id_or_opcode
                 %r15
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r22
              ,
              opr
               opr_aux
                id_or_opcode
                 %r21
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f7
              ,
              opr
               opr_aux
                id_or_opcode
                 %r22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f8
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3b808081
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f9
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f7
              ,
              opr_register_or_constant
               id_or_opcode
                %f8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r18
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f9
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              132
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r23
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r17
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f9
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r24
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r24
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r25
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f10
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f11
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f12
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r26
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f13
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f13
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f14
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f15
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r27
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r28
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r27
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r29
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r28
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f16
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r29
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f17
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r29
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f18
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r29
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f19
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f13
              ,
              opr_register_or_constant
               id_or_opcode
                %f16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f19
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f20
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f14
              ,
              opr_register_or_constant
               id_or_opcode
                %f17
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f21
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f15
              ,
              opr_register_or_constant
               id_or_opcode
                %f18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f21
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r30
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r30
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r31
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f22
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r32
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f23
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r32
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f24
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r32
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f25
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f19
              ,
              opr_register_or_constant
               id_or_opcode
                %f22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f26
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f20
              ,
              opr_register_or_constant
               id_or_opcode
                %f23
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f27
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f21
              ,
              opr_register_or_constant
               id_or_opcode
                %f24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f27
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r33
              ,
              opr
               opr_aux
                id_or_opcode
                 %r1
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r34
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r33
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r35
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r34
              ,
              opr_register_or_constant
               id_or_opcode
                %r6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f28
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r35
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f29
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r35
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f30
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r35
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f31
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f30
              ,
              opr_register_or_constant
               id_or_opcode
                %f25
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f32
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f26
              ,
              opr_register_or_constant
               id_or_opcode
                %f28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f33
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f27
              ,
              opr_register_or_constant
               id_or_opcode
                %f29
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r23
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f33
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f34
               ,
               id_or_opcode
                %f35
               ,
               id_or_opcode
                %f36
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503230_35_sums1552
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              96
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f37
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f34
              ,
              opr_register_or_constant
               id_or_opcode
                %f37
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r36
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r1
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r37
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r36
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r38
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r37
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f39
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f3
              ,
              opr_register_or_constant
               id_or_opcode
                %f38
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              97
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f41
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f35
              ,
              opr_register_or_constant
               id_or_opcode
                %f41
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f42
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              98
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f45
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f46
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f36
              ,
              opr_register_or_constant
               id_or_opcode
                %f45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f9
              ,
              opr_register_or_constant
               id_or_opcode
                %f46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f39
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              99
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f43
              ,
              opr_register_or_constant
               id_or_opcode
                %f43
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f43
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f50
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              101
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f47
              ,
              opr_register_or_constant
               id_or_opcode
                %f47
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        label_decl
         $Lt_8_28418
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p2
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p2
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_28674
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              107
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r39
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r41
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r40
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r42
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r41
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r43
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r42
              ,
              opr_register_or_constant
               id_or_opcode
                %r5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f52
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f40
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f52
              ,
              opr_register_or_constant
               id_or_opcode
                %f40
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f40
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              108
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f53
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f44
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f53
              ,
              opr_register_or_constant
               id_or_opcode
                %f44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f44
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              109
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f54
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f48
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f54
              ,
              opr_register_or_constant
               id_or_opcode
                %f48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f48
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              110
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f55
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f49
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f55
              ,
              opr_register_or_constant
               id_or_opcode
                %f49
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f49
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              111
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f56
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f50
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f56
              ,
              opr_register_or_constant
               id_or_opcode
                %f50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f50
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              112
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f57
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r43
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f51
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f57
              ,
              opr_register_or_constant
               id_or_opcode
                %f51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r38
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 20
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f51
         ;
       statement
        label_decl
         $Lt_8_28674
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              103
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                id_or_opcode
                 %r39
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r44
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p3
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r39
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r44
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p3
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_28418
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              119
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r45
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_503231_32_xrefs1744
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f58
               ,
               id_or_opcode
                %f59
               ,
               id_or_opcode
                %f60
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f61
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f63
              ,
              opr
               opr_aux
                id_or_opcode
                 %f62
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v2
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f64
               ,
               id_or_opcode
                %f65
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502498_34_covariance__0
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f66
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f67
              ,
              opr
               opr_aux
                id_or_opcode
                 %f66
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f69
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f68
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f70
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f71
              ,
              opr
               opr_aux
                id_or_opcode
                 %f70
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f73
              ,
              opr
               opr_aux
                id_or_opcode
                 %f72
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f67
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3f800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f75
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f74
              ,
              opr
               opr_aux
                id_or_opcode
                 %f69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f71
              ,
              opr_register_or_constant
               id_or_opcode
                %f75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f77
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f73
              ,
              opr_register_or_constant
               id_or_opcode
                %f76
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f78
              ,
              opr
               opr_aux
                id_or_opcode
                 %f77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f71
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f80
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f75
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f81
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f73
              ,
              opr_register_or_constant
               id_or_opcode
                %f78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f83
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f84
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f79
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f85
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f82
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f86
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f87
              ,
              opr
               opr_aux
                id_or_opcode
                 %f80
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f88
              ,
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f85
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f89
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f90
              ,
              opr
               opr_aux
                id_or_opcode
                 %f81
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f89
              ,
              opr_register_or_constant
               id_or_opcode
                %f90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f92
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f91
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f93
              ,
              opr
               opr_aux
                id_or_opcode
                 %f92
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f88
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f89
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f90
              ,
              opr_register_or_constant
               id_or_opcode
                %f93
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f98
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
              ,
              opr
               opr_aux
                id_or_opcode
                 %f97
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f99
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f98
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f100
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f101
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f100
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f102
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f101
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f96
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f104
              ,
              opr
               opr_aux
                id_or_opcode
                 %f95
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f103
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f105
              ,
              opr
               opr_aux
                id_or_opcode
                 %f94
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f104
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f106
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f99
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f107
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f106
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f108
              ,
              opr
               opr_aux
                id_or_opcode
                 %f107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f109
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f99
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f102
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f111
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f108
              ,
              opr_register_or_constant
               id_or_opcode
                %f105
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f113
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f109
              ,
              opr
               opr_aux
                id_or_opcode
                 %f112
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f114
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f110
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f117
              ,
              opr
               opr_aux
                id_or_opcode
                 %f109
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f115
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f118
              ,
              opr
               opr_aux
                id_or_opcode
                 %f109
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f116
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f119
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f117
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f120
              ,
              opr
               opr_aux
                id_or_opcode
                 %f111
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f119
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f120
              ,
              opr_register_or_constant
               id_or_opcode
                %f121
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f123
              ,
              opr
               opr_aux
                id_or_opcode
                 %f122
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f124
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f119
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f125
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f120
              ,
              opr_register_or_constant
               id_or_opcode
                %f123
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f126
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f123
              ,
              opr_register_or_constant
               id_or_opcode
                %f114
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f127
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f128
              ,
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f129
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f128
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f130
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f131
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f124
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f132
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f130
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f133
              ,
              opr
               opr_aux
                id_or_opcode
                 %f126
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f131
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f134
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
              ,
              opr
               opr_aux
                id_or_opcode
                 %f132
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f135
              ,
              opr
               opr_aux
                id_or_opcode
                 %f125
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f136
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f134
              ,
              opr_register_or_constant
               id_or_opcode
                %f135
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f137
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f136
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f138
              ,
              opr
               opr_aux
                id_or_opcode
                 %f137
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f139
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f134
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f140
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f135
              ,
              opr_register_or_constant
               id_or_opcode
                %f138
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f141
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f138
              ,
              opr_register_or_constant
               id_or_opcode
                %f129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f142
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f140
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f143
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f142
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f144
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f143
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              31
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f145
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f140
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f146
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f147
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f146
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f148
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f140
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f149
              ,
              opr
               opr_aux
                id_or_opcode
                 %f139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f148
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f150
              ,
              opr
               opr_aux
                id_or_opcode
                 %f141
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f149
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f151
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f144
              ,
              opr_register_or_constant
               id_or_opcode
                %f147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f152
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f151
              ,
              opr_register_or_constant
               id_or_opcode
                %f150
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f153
              ,
              opr
               opr_aux
                id_or_opcode
                 %f152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f156
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f153
              ,
              opr_register_or_constant
               id_or_opcode
                %f150
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              30
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f157
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f158
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f159
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f156
              ,
              opr
               opr_aux
                id_or_opcode
                 %f158
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f155
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f162
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f163
              ,
              opr
               opr_aux
                id_or_opcode
                 %f154
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f161
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f164
              ,
              opr
               opr_aux
                id_or_opcode
                 %f156
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f165
              ,
              opr
               opr_aux
                id_or_opcode
                 %f156
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f163
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f164
              ,
              opr_register_or_constant
               id_or_opcode
                %f159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f165
              ,
              opr_register_or_constant
               id_or_opcode
                %f166
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f168
              ,
              opr
               opr_aux
                id_or_opcode
                 %f167
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f169
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f164
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f170
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f165
              ,
              opr_register_or_constant
               id_or_opcode
                %f168
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f171
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f168
              ,
              opr_register_or_constant
               id_or_opcode
                %f159
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              32
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f172
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f169
              ,
              opr_register_or_constant
               id_or_opcode
                %f64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f173
              ,
              opr
               opr_aux
                id_or_opcode
                 %f171
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f172
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f174
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
              ,
              opr
               opr_aux
                id_or_opcode
                 %f65
              ,
              opr
               opr_aux
                id_or_opcode
                 %f173
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              34
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f175
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f169
              ,
              opr_register_or_constant
               id_or_opcode
                %f59
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f176
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f169
              ,
              opr_register_or_constant
               id_or_opcode
                %f61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f177
              ,
              opr
               opr_aux
                id_or_opcode
                 %f58
              ,
              opr
               opr_aux
                id_or_opcode
                 %f171
              ,
              opr
               opr_aux
                id_or_opcode
                 %f175
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f178
              ,
              opr
               opr_aux
                id_or_opcode
                 %f171
              ,
              opr
               opr_aux
                id_or_opcode
                 %f59
              ,
              opr
               opr_aux
                id_or_opcode
                 %f176
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f179
              ,
              opr
               opr_aux
                id_or_opcode
                 %f60
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
              ,
              opr
               opr_aux
                id_or_opcode
                 %f177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f180
              ,
              opr
               opr_aux
                id_or_opcode
                 %f170
              ,
              opr
               opr_aux
                id_or_opcode
                 %f64
              ,
              opr
               opr_aux
                id_or_opcode
                 %f178
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f181
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f179
              ,
              opr_register_or_constant
               id_or_opcode
                %f180
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_max
            max
            i_max_type
             .f32
            i_max_opr
             opr_register
              id_or_opcode
               %f182
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f181
              ,
              opr_register_or_constant
               id_or_opcode
                %f174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f183
              ,
              opr
               opr_aux
                id_or_opcode
                 %f182
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              17
            integer
             base_10_integer
              38
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f184
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f179
              ,
              opr_register_or_constant
               id_or_opcode
                %f183
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f185
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f180
              ,
              opr_register_or_constant
               id_or_opcode
                %f183
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              135
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f186
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f183
              ,
              opr_register_or_constant
               id_or_opcode
                %f174
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f187
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f6
              ,
              opr_register_or_constant
               id_or_opcode
                %f185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f188
              ,
              opr
               opr_aux
                id_or_opcode
                 %f3
              ,
              opr
               opr_aux
                id_or_opcode
                 %f184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f189
              ,
              opr
               opr_aux
                id_or_opcode
                 %f9
              ,
              opr
               opr_aux
                id_or_opcode
                 %f186
              ,
              opr
               opr_aux
                id_or_opcode
                 %f188
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r46
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda_local_var_502865_34_dps__3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r47
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r46
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r47
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f190
               ,
               id_or_opcode
                %f191
               ,
               id_or_opcode
                %f192
               ,
               id_or_opcode
                %f193
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              91
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r48
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f190
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r49
             ,
             opr_register_or_constant
              id_or_opcode
               %r48
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r50
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f191
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r51
             ,
             opr_register_or_constant
              id_or_opcode
               %r50
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r52
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r49
              ,
              opr_register_or_constant
               id_or_opcode
                %r51
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f194
               ,
               id_or_opcode
                %f195
               ,
               id_or_opcode
                %f196
               ,
               id_or_opcode
                %f197
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r53
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f194
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r54
             ,
             opr_register_or_constant
              id_or_opcode
               %r53
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r55
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f195
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r56
             ,
             opr_register_or_constant
              id_or_opcode
               %r55
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r57
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r54
              ,
              opr_register_or_constant
               id_or_opcode
                %r56
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r58
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f196
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r59
             ,
             opr_register_or_constant
              id_or_opcode
               %r58
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r60
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f197
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r61
             ,
             opr_register_or_constant
              id_or_opcode
               %r60
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r62
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r59
              ,
              opr_register_or_constant
               id_or_opcode
                %r61
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r63
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r57
              ,
              opr_register_or_constant
               id_or_opcode
                %r62
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r64
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r52
              ,
              opr_register_or_constant
               id_or_opcode
                %r63
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r65
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f192
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r66
             ,
             opr_register_or_constant
              id_or_opcode
               %r65
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r67
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r64
              ,
              opr_register_or_constant
               id_or_opcode
                %r66
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r68
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f193
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r69
             ,
             opr_register_or_constant
              id_or_opcode
               %r68
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r70
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r67
              ,
              opr_register_or_constant
               id_or_opcode
                %r69
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f198
               ,
               id_or_opcode
                %f199
               ,
               id_or_opcode
                %f200
               ,
               id_or_opcode
                %f201
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r71
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f198
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r72
             ,
             opr_register_or_constant
              id_or_opcode
               %r71
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r73
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r70
              ,
              opr_register_or_constant
               id_or_opcode
                %r72
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r74
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f199
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r75
             ,
             opr_register_or_constant
              id_or_opcode
               %r74
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r76
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r73
              ,
              opr_register_or_constant
               id_or_opcode
                %r75
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r77
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f200
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r78
             ,
             opr_register_or_constant
              id_or_opcode
               %r77
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r79
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r76
              ,
              opr_register_or_constant
               id_or_opcode
                %r78
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r80
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f201
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r81
             ,
             opr_register_or_constant
              id_or_opcode
               %r80
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r82
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r79
              ,
              opr_register_or_constant
               id_or_opcode
                %r81
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f202
               ,
               id_or_opcode
                %f203
               ,
               id_or_opcode
                %f204
               ,
               id_or_opcode
                %f205
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_502865_34_dps__3
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 48
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r83
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f202
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r84
             ,
             opr_register_or_constant
              id_or_opcode
               %r83
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r85
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r82
              ,
              opr_register_or_constant
               id_or_opcode
                %r84
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r86
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f203
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r87
             ,
             opr_register_or_constant
              id_or_opcode
               %r86
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r88
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r85
              ,
              opr_register_or_constant
               id_or_opcode
                %r87
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r89
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f204
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r90
             ,
             opr_register_or_constant
              id_or_opcode
               %r89
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r91
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r88
              ,
              opr_register_or_constant
               id_or_opcode
                %r90
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_set
            i_set1
             set
             i_set1_type
              .lt
              .u32
              .f32
             i_set1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %r92
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f205
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_neg
            neg
            i_neg_type
             .s32
            i_neg_opr
             opr_register
              id_or_opcode
               %r93
             ,
             opr_register_or_constant
              id_or_opcode
               %r92
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r94
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r91
              ,
              opr_register_or_constant
               id_or_opcode
                %r93
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              94
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r95
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r45
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r96
              ,
              opr
               opr_aux
                id_or_opcode
                 %r94
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r95
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r94
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              24
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r97
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        label_decl
         $Lt_8_29954
         :
       statement
        semicolon_terminated_statement
         pragma
          .pragma
          list_of_strings
           "nounroll"
          ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              100
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ge
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p4
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p4
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_43266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r98
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r97
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r99
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r45
              ,
              opr_register_or_constant
               id_or_opcode
                %r98
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r100
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r99
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p5
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r100
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r96
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p5
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_43266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r96
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r96
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r95
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r96
         ;
       statement
        label_decl
         $Lt_8_43266
         :
       statement
        label_decl
         $L_8_26882
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r97
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r97
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r101
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  15
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p6
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r97
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r101
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p6
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_29954
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              149
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r102
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r96
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r103
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r102
              ,
              opr_register_or_constant
               id_or_opcode
                %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r103
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r103
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r103
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f9
         ;
       statement
        label_decl
         $Lt_8_27394
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              481
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r4
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_503229_35_colors1360
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              483
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              490
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r104
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f206
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f7f7fffff
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r105
              ,
              opr
               opr_aux
                id_or_opcode
                 prods4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r106
              ,
              opr
               opr_aux
                id_or_opcode
                 alphaTable4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r107
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda_local_var_503059_33_s_permutations__2
         ;
       statement
        label_decl
         $Lt_8_30978
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              312
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r108
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r104
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r109
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  991
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p7
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r109
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p7
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_258
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              315
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r110
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r108
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r111
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8compressPKjS0_P5uint2i_permutations
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r112
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r111
              ,
              opr_register_or_constant
               id_or_opcode
                %r110
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .global
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r113
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r112
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r114
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p8
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r108
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r114
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p8
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_31234
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              316
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r115
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r110
              ,
              opr_register_or_constant
               id_or_opcode
                %r107
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r115
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r113
         ;
       statement
        label_decl
         $Lt_8_31234
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r116
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r117
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r118
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f207
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f208
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f209
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_8_32258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              193
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                id_or_opcode
                 %r113
              ,
              opr
               opr_aux
                id_or_opcode
                 %r116
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r120
              ,
              opr
               opr_aux
                id_or_opcode
                 %r119
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r121
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r120
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r122
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r121
              ,
              opr_register_or_constant
               id_or_opcode
                %r106
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f210
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r122
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f211
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f209
              ,
              opr
               opr_aux
                id_or_opcode
                 %f210
              ,
              opr
               opr_aux
                id_or_opcode
                 %f211
              ,
              opr
               opr_aux
                id_or_opcode
                 %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f212
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f208
              ,
              opr
               opr_aux
                id_or_opcode
                 %f210
              ,
              opr
               opr_aux
                id_or_opcode
                 %f212
              ,
              opr
               opr_aux
                id_or_opcode
                 %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f213
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r117
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f207
              ,
              opr
               opr_aux
                id_or_opcode
                 %f210
              ,
              opr
               opr_aux
                id_or_opcode
                 %f213
              ,
              opr
               opr_aux
                id_or_opcode
                 %f207
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              194
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r123
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r121
              ,
              opr_register_or_constant
               id_or_opcode
                %r105
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r124
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r123
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r118
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r124
              ,
              opr_register_or_constant
               id_or_opcode
                %r118
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r117
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r117
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r116
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r116
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r125
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p9
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r116
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r125
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p9
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_32258
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              232
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r126
              ,
              opr
               opr_aux
                id_or_opcode
                 %r118
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r127
              ,
              opr
               opr_aux
                id_or_opcode
                 %r118
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r128
              ,
              opr
               opr_aux
                id_or_opcode
                 %r118
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f214
               ,
               id_or_opcode
                %f215
               ,
               id_or_opcode
                %f216
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503230_35_sums1552
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f218
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f214
              ,
              opr_register_or_constant
               id_or_opcode
                %f217
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f219
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f220
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f215
              ,
              opr_register_or_constant
               id_or_opcode
                %f219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f221
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41100000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f222
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f216
              ,
              opr_register_or_constant
               id_or_opcode
                %f221
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f223
              ,
              opr
               opr_aux
                id_or_opcode
                 %r126
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f224
              ,
              opr
               opr_aux
                id_or_opcode
                 %r127
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r129
              ,
              opr
               opr_aux
                id_or_opcode
                 %r128
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f225
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f218
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f226
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f220
              ,
              opr_register_or_constant
               id_or_opcode
                %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f227
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f222
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f228
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f223
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f229
              ,
              opr
               opr_aux
                id_or_opcode
                 %r129
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f230
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f225
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f231
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f226
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f232
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f233
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f229
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f234
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f233
              ,
              opr_register_or_constant
               id_or_opcode
                %f228
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f235
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f236
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f237
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f238
              ,
              opr
               opr_aux
                id_or_opcode
                 %f234
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f239
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f235
              ,
              opr_register_or_constant
               id_or_opcode
                %f230
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f240
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f236
              ,
              opr_register_or_constant
               id_or_opcode
                %f231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f241
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f237
              ,
              opr_register_or_constant
               id_or_opcode
                %f232
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f242
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f238
              ,
              opr_register_or_constant
               id_or_opcode
                %f239
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f243
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f238
              ,
              opr_register_or_constant
               id_or_opcode
                %f240
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f244
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f238
              ,
              opr_register_or_constant
               id_or_opcode
                %f241
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f245
              ,
              opr
               opr_aux
                id_or_opcode
                 %f242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f246
              ,
              opr
               opr_aux
                id_or_opcode
                 %f243
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f247
              ,
              opr
               opr_aux
                id_or_opcode
                 %f244
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f248
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f249
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f245
              ,
              opr_register_or_constant
               id_or_opcode
                %f248
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f250
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f251
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f246
              ,
              opr_register_or_constant
               id_or_opcode
                %f250
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f252
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f253
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f247
              ,
              opr_register_or_constant
               id_or_opcode
                %f252
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f254
              ,
              opr
               opr_aux
                id_or_opcode
                 %f249
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f255
              ,
              opr
               opr_aux
                id_or_opcode
                 %f251
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f256
              ,
              opr
               opr_aux
                id_or_opcode
                 %f253
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                id_or_opcode
                 %f254
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r131
              ,
              opr
               opr_aux
                id_or_opcode
                 %r130
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r132
              ,
              opr
               opr_aux
                id_or_opcode
                 %f255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r133
              ,
              opr
               opr_aux
                id_or_opcode
                 %r132
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r134
              ,
              opr
               opr_aux
                id_or_opcode
                 %r131
              ,
              opr
               opr_aux
                id_or_opcode
                 %r133
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r135
              ,
              opr
               opr_aux
                id_or_opcode
                 %f256
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r136
              ,
              opr
               opr_aux
                id_or_opcode
                 %r134
              ,
              opr
               opr_aux
                id_or_opcode
                 %r135
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              233
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f257
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f258
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f259
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f260
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f225
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f261
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f226
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f262
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f227
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f263
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f260
              ,
              opr_register_or_constant
               id_or_opcode
                %f257
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f264
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f261
              ,
              opr_register_or_constant
               id_or_opcode
                %f258
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f265
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f262
              ,
              opr_register_or_constant
               id_or_opcode
                %f259
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f266
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f263
              ,
              opr_register_or_constant
               id_or_opcode
                %f238
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f267
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f264
              ,
              opr_register_or_constant
               id_or_opcode
                %f238
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f268
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f265
              ,
              opr_register_or_constant
               id_or_opcode
                %f238
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f269
              ,
              opr
               opr_aux
                id_or_opcode
                 %f266
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f270
              ,
              opr
               opr_aux
                id_or_opcode
                 %f267
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f271
              ,
              opr
               opr_aux
                id_or_opcode
                 %f268
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f272
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f273
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f269
              ,
              opr_register_or_constant
               id_or_opcode
                %f272
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f274
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f275
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f270
              ,
              opr_register_or_constant
               id_or_opcode
                %f274
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f276
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f277
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f271
              ,
              opr_register_or_constant
               id_or_opcode
                %f276
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f278
              ,
              opr
               opr_aux
                id_or_opcode
                 %f273
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f279
              ,
              opr
               opr_aux
                id_or_opcode
                 %f275
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f280
              ,
              opr
               opr_aux
                id_or_opcode
                 %f277
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                id_or_opcode
                 %f278
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                id_or_opcode
                 %r137
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                id_or_opcode
                 %f279
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r140
              ,
              opr
               opr_aux
                id_or_opcode
                 %r139
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r138
              ,
              opr
               opr_aux
                id_or_opcode
                 %r140
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r142
              ,
              opr
               opr_aux
                id_or_opcode
                 %f280
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r143
              ,
              opr
               opr_aux
                id_or_opcode
                 %r141
              ,
              opr
               opr_aux
                id_or_opcode
                 %r142
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              236
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f281
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f282
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f254
              ,
              opr_register_or_constant
               id_or_opcode
                %f281
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f283
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f282
              ,
              opr_register_or_constant
               id_or_opcode
                %f282
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f284
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f285
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f255
              ,
              opr_register_or_constant
               id_or_opcode
                %f284
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f286
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f285
              ,
              opr_register_or_constant
               id_or_opcode
                %f285
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f287
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f288
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f256
              ,
              opr_register_or_constant
               id_or_opcode
                %f287
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f289
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f288
              ,
              opr_register_or_constant
               id_or_opcode
                %f288
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f290
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f291
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f278
              ,
              opr_register_or_constant
               id_or_opcode
                %f290
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f292
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f291
              ,
              opr_register_or_constant
               id_or_opcode
                %f291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f293
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f294
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f279
              ,
              opr_register_or_constant
               id_or_opcode
                %f293
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f295
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f294
              ,
              opr_register_or_constant
               id_or_opcode
                %f294
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f296
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f297
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f280
              ,
              opr_register_or_constant
               id_or_opcode
                %f296
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f298
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f297
              ,
              opr_register_or_constant
               id_or_opcode
                %f297
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f299
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f291
              ,
              opr_register_or_constant
               id_or_opcode
                %f282
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f300
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f294
              ,
              opr_register_or_constant
               id_or_opcode
                %f285
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f301
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f297
              ,
              opr_register_or_constant
               id_or_opcode
                %f288
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f302
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f282
              ,
              opr_register_or_constant
               id_or_opcode
                %f209
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f303
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f285
              ,
              opr_register_or_constant
               id_or_opcode
                %f208
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f304
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f288
              ,
              opr_register_or_constant
               id_or_opcode
                %f207
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f305
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f225
              ,
              opr_register_or_constant
               id_or_opcode
                %f291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f306
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f226
              ,
              opr_register_or_constant
               id_or_opcode
                %f294
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f307
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f227
              ,
              opr_register_or_constant
               id_or_opcode
                %f297
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              318
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f308
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f300
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f309
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f299
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f310
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f223
              ,
              opr_register_or_constant
               id_or_opcode
                %f301
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f311
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f286
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f312
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f283
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f313
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f224
              ,
              opr_register_or_constant
               id_or_opcode
                %f289
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f314
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f308
              ,
              opr_register_or_constant
               id_or_opcode
                %f303
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f315
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f309
              ,
              opr_register_or_constant
               id_or_opcode
                %f302
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f316
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f310
              ,
              opr_register_or_constant
               id_or_opcode
                %f304
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f317
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f295
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f318
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f292
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f319
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f229
              ,
              opr_register_or_constant
               id_or_opcode
                %f298
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f320
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f314
              ,
              opr_register_or_constant
               id_or_opcode
                %f306
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f321
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f315
              ,
              opr_register_or_constant
               id_or_opcode
                %f305
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f322
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f316
              ,
              opr_register_or_constant
               id_or_opcode
                %f307
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f323
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f311
              ,
              opr_register_or_constant
               id_or_opcode
                %f317
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f324
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f312
              ,
              opr_register_or_constant
               id_or_opcode
                %f318
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f325
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f313
              ,
              opr_register_or_constant
               id_or_opcode
                %f319
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f326
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f320
              ,
              opr_register_or_constant
               id_or_opcode
                %f320
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f327
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f321
              ,
              opr_register_or_constant
               id_or_opcode
                %f321
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f328
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f322
              ,
              opr_register_or_constant
               id_or_opcode
                %f322
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f329
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f323
              ,
              opr_register_or_constant
               id_or_opcode
                %f326
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f330
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f324
              ,
              opr_register_or_constant
               id_or_opcode
                %f327
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f331
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f325
              ,
              opr_register_or_constant
               id_or_opcode
                %f328
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f332
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f333
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f332
              ,
              opr_register_or_constant
               id_or_opcode
                %f329
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f334
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f335
              ,
              opr
               opr_aux
                id_or_opcode
                 %f330
              ,
              opr
               opr_aux
                id_or_opcode
                 %f334
              ,
              opr
               opr_aux
                id_or_opcode
                 %f333
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f336
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f337
              ,
              opr
               opr_aux
                id_or_opcode
                 %f331
              ,
              opr
               opr_aux
                id_or_opcode
                 %f336
              ,
              opr
               opr_aux
                id_or_opcode
                 %f335
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f338
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3de38e39
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f339
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f337
              ,
              opr_register_or_constant
               id_or_opcode
                %f338
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p10
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f339
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p10
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_32770
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              322
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f206
              ,
              opr
               opr_aux
                id_or_opcode
                 %f339
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              323
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                id_or_opcode
                 %r113
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              324
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rh1
              ,
              opr
               opr_aux
                id_or_opcode
                 %r136
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              325
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %rh2
              ,
              opr
               opr_aux
                id_or_opcode
                 %r143
         ;
       statement
        label_decl
         $Lt_8_32770
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              309
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r104
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r104
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r145
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1024
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p11
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r104
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r145
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p11
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_30978
         ;
       statement
        label_decl
         $Lt_8_258
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              327
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                id_or_opcode
                 %rh2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u32
             .u16
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r147
              ,
              opr
               opr_aux
                id_or_opcode
                 %rh1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p12
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r146
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p12
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_33538
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r148
              ,
              opr
               opr_aux
                id_or_opcode
                 %r146
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              48
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              49
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r147
              ,
              opr
               opr_aux
                id_or_opcode
                 %r148
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              332
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r149
              ,
              opr
               opr_aux
                id_or_opcode
                 %r144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r150
              ,
              opr
               opr_aux
                id_or_opcode
                 %r149
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1431655765
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                id_or_opcode
                 %r150
         ;
       statement
        label_decl
         $Lt_8_33538
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r151
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r152
              ,
              opr
               opr_aux
                id_or_opcode
                 prods3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r153
              ,
              opr
               opr_aux
                id_or_opcode
                 alphaTable3
         ;
       statement
        label_decl
         $Lt_8_34562
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              338
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r154
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r155
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r154
              ,
              opr_register_or_constant
               id_or_opcode
                %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r156
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p13
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r155
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r156
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p13
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $LDWendi__Z16firstEigenVectorPf_187_2
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              341
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r157
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r155
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r158
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r107
              ,
              opr_register_or_constant
               id_or_opcode
                %r157
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r159
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r158
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              342
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r160
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r161
              ,
              opr
               opr_aux
                id_or_opcode
                 %r4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r162
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f340
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f341
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f342
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f00000000
         ;
       statement
        label_decl
         $Lt_8_35330
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              254
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r163
              ,
              opr
               opr_aux
                id_or_opcode
                 %r159
              ,
              opr
               opr_aux
                id_or_opcode
                 %r160
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r164
              ,
              opr
               opr_aux
                id_or_opcode
                 %r163
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r165
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r164
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r166
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r165
              ,
              opr_register_or_constant
               id_or_opcode
                %r153
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f343
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r166
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f344
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r161
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f342
              ,
              opr
               opr_aux
                id_or_opcode
                 %f343
              ,
              opr
               opr_aux
                id_or_opcode
                 %f344
              ,
              opr
               opr_aux
                id_or_opcode
                 %f342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f345
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r161
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f341
              ,
              opr
               opr_aux
                id_or_opcode
                 %f343
              ,
              opr
               opr_aux
                id_or_opcode
                 %f345
              ,
              opr
               opr_aux
                id_or_opcode
                 %f341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f346
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r161
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f340
              ,
              opr
               opr_aux
                id_or_opcode
                 %f343
              ,
              opr
               opr_aux
                id_or_opcode
                 %f346
              ,
              opr
               opr_aux
                id_or_opcode
                 %f340
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              255
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r167
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r165
              ,
              opr_register_or_constant
               id_or_opcode
                %r152
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r168
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r167
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r162
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r168
              ,
              opr_register_or_constant
               id_or_opcode
                %r162
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r161
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r161
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r160
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r160
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r169
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  32
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p14
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r160
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r169
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p14
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_35330
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              292
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r170
              ,
              opr
               opr_aux
                id_or_opcode
                 %r162
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r171
              ,
              opr
               opr_aux
                id_or_opcode
                 %r162
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .s32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r172
              ,
              opr
               opr_aux
                id_or_opcode
                 %r162
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .f32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %f347
               ,
               id_or_opcode
                %f348
               ,
               id_or_opcode
                %f349
               ,
               _
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503230_35_sums1552
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f350
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f351
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f347
              ,
              opr_register_or_constant
               id_or_opcode
                %f350
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f352
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f353
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f348
              ,
              opr_register_or_constant
               id_or_opcode
                %f352
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f354
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f40800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f355
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f349
              ,
              opr_register_or_constant
               id_or_opcode
                %f354
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f356
              ,
              opr
               opr_aux
                id_or_opcode
                 %r170
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f357
              ,
              opr
               opr_aux
                id_or_opcode
                 %r171
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r173
              ,
              opr
               opr_aux
                id_or_opcode
                 %r172
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f358
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f351
              ,
              opr_register_or_constant
               id_or_opcode
                %f342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f359
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f353
              ,
              opr_register_or_constant
               id_or_opcode
                %f341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f360
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f355
              ,
              opr_register_or_constant
               id_or_opcode
                %f340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f361
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f356
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_frnd
              i_cvt_frnd_aux
               .rn
             .f32
             .s32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f362
              ,
              opr
               opr_aux
                id_or_opcode
                 %r173
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f363
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f358
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f364
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f365
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f360
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f366
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f362
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f367
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f366
              ,
              opr_register_or_constant
               id_or_opcode
                %f361
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f368
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f369
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f370
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_rcp
            rcp
            i_rcp_type
             .rn
             .f32
            i_rcp_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f371
              ,
              opr
               opr_aux
                id_or_opcode
                 %f367
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f372
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f368
              ,
              opr_register_or_constant
               id_or_opcode
                %f363
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f373
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f369
              ,
              opr_register_or_constant
               id_or_opcode
                %f364
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f374
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f370
              ,
              opr_register_or_constant
               id_or_opcode
                %f365
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f375
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f371
              ,
              opr_register_or_constant
               id_or_opcode
                %f372
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f376
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f371
              ,
              opr_register_or_constant
               id_or_opcode
                %f373
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f377
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f371
              ,
              opr_register_or_constant
               id_or_opcode
                %f374
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f378
              ,
              opr
               opr_aux
                id_or_opcode
                 %f375
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f379
              ,
              opr
               opr_aux
                id_or_opcode
                 %f376
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f380
              ,
              opr
               opr_aux
                id_or_opcode
                 %f377
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f381
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f382
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f378
              ,
              opr_register_or_constant
               id_or_opcode
                %f381
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f383
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f384
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f379
              ,
              opr_register_or_constant
               id_or_opcode
                %f383
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f385
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f386
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f380
              ,
              opr_register_or_constant
               id_or_opcode
                %f385
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f387
              ,
              opr
               opr_aux
                id_or_opcode
                 %f382
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f388
              ,
              opr
               opr_aux
                id_or_opcode
                 %f384
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f389
              ,
              opr
               opr_aux
                id_or_opcode
                 %f386
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r174
              ,
              opr
               opr_aux
                id_or_opcode
                 %f387
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r175
              ,
              opr
               opr_aux
                id_or_opcode
                 %r174
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r176
              ,
              opr
               opr_aux
                id_or_opcode
                 %f388
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r177
              ,
              opr
               opr_aux
                id_or_opcode
                 %r176
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r178
              ,
              opr
               opr_aux
                id_or_opcode
                 %r175
              ,
              opr
               opr_aux
                id_or_opcode
                 %r177
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r179
              ,
              opr
               opr_aux
                id_or_opcode
                 %f389
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r180
              ,
              opr
               opr_aux
                id_or_opcode
                 %r178
              ,
              opr
               opr_aux
                id_or_opcode
                 %r179
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r181
              ,
              opr
               opr_aux
                id_or_opcode
                 %r180
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              293
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f390
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f391
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f392
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f393
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f358
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f394
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f359
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f395
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f360
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f396
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f393
              ,
              opr_register_or_constant
               id_or_opcode
                %f390
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f397
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f394
              ,
              opr_register_or_constant
               id_or_opcode
                %f391
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f398
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f395
              ,
              opr_register_or_constant
               id_or_opcode
                %f392
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f399
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f396
              ,
              opr_register_or_constant
               id_or_opcode
                %f371
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f400
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f397
              ,
              opr_register_or_constant
               id_or_opcode
                %f371
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f401
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f398
              ,
              opr_register_or_constant
               id_or_opcode
                %f371
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f402
              ,
              opr
               opr_aux
                id_or_opcode
                 %f399
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f403
              ,
              opr
               opr_aux
                id_or_opcode
                 %f400
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .sat
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f404
              ,
              opr
               opr_aux
                id_or_opcode
                 %f401
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f405
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f406
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f402
              ,
              opr_register_or_constant
               id_or_opcode
                %f405
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f407
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f427c0000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f408
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f403
              ,
              opr_register_or_constant
               id_or_opcode
                %f407
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f409
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f41f80000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f410
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f404
              ,
              opr_register_or_constant
               id_or_opcode
                %f409
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f411
              ,
              opr
               opr_aux
                id_or_opcode
                 %f406
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f412
              ,
              opr
               opr_aux
                id_or_opcode
                 %f408
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rni
             .f32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f413
              ,
              opr
               opr_aux
                id_or_opcode
                 %f410
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r182
              ,
              opr
               opr_aux
                id_or_opcode
                 %f411
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r183
              ,
              opr
               opr_aux
                id_or_opcode
                 %r182
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  11
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r184
              ,
              opr
               opr_aux
                id_or_opcode
                 %f412
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r185
              ,
              opr
               opr_aux
                id_or_opcode
                 %r184
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  5
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r186
              ,
              opr
               opr_aux
                id_or_opcode
                 %r183
              ,
              opr
               opr_aux
                id_or_opcode
                 %r185
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
              i_cvt_irnd_aux
               .rzi
             .u32
             .f32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r187
              ,
              opr
               opr_aux
                id_or_opcode
                 %f413
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r188
              ,
              opr
               opr_aux
                id_or_opcode
                 %r186
              ,
              opr
               opr_aux
                id_or_opcode
                 %r187
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_cvt
            cvt
            i_cvt_type
             i_cvt_irnd
             .u16
             .u32
             i_cvt_irnd
            i_cvt_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r189
              ,
              opr
               opr_aux
                id_or_opcode
                 %r188
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              296
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f414
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f415
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f387
              ,
              opr_register_or_constant
               id_or_opcode
                %f414
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f416
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f415
              ,
              opr_register_or_constant
               id_or_opcode
                %f415
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f417
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f418
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f388
              ,
              opr_register_or_constant
               id_or_opcode
                %f417
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f419
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f418
              ,
              opr_register_or_constant
               id_or_opcode
                %f418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f420
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f421
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f389
              ,
              opr_register_or_constant
               id_or_opcode
                %f420
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f422
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f421
              ,
              opr_register_or_constant
               id_or_opcode
                %f421
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f423
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f424
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f411
              ,
              opr_register_or_constant
               id_or_opcode
                %f423
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f425
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f424
              ,
              opr_register_or_constant
               id_or_opcode
                %f424
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f426
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3c81b119
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f427
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f412
              ,
              opr_register_or_constant
               id_or_opcode
                %f426
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f428
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f427
              ,
              opr_register_or_constant
               id_or_opcode
                %f427
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f429
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3d043571
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f430
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f413
              ,
              opr_register_or_constant
               id_or_opcode
                %f429
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f431
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f430
              ,
              opr_register_or_constant
               id_or_opcode
                %f430
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f432
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f424
              ,
              opr_register_or_constant
               id_or_opcode
                %f415
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f433
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f427
              ,
              opr_register_or_constant
               id_or_opcode
                %f418
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f434
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f430
              ,
              opr_register_or_constant
               id_or_opcode
                %f421
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f435
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f415
              ,
              opr_register_or_constant
               id_or_opcode
                %f342
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f436
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f418
              ,
              opr_register_or_constant
               id_or_opcode
                %f341
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f437
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f421
              ,
              opr_register_or_constant
               id_or_opcode
                %f340
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f438
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f358
              ,
              opr_register_or_constant
               id_or_opcode
                %f424
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f439
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f359
              ,
              opr_register_or_constant
               id_or_opcode
                %f427
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f440
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f360
              ,
              opr_register_or_constant
               id_or_opcode
                %f430
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              342
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f441
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f433
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f442
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f432
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f443
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f356
              ,
              opr_register_or_constant
               id_or_opcode
                %f434
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f444
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f419
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f445
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f416
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f446
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f357
              ,
              opr_register_or_constant
               id_or_opcode
                %f422
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f447
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f441
              ,
              opr_register_or_constant
               id_or_opcode
                %f436
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f448
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f442
              ,
              opr_register_or_constant
               id_or_opcode
                %f435
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f449
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f443
              ,
              opr_register_or_constant
               id_or_opcode
                %f437
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f450
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f428
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f451
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f425
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f452
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f362
              ,
              opr_register_or_constant
               id_or_opcode
                %f431
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f453
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f447
              ,
              opr_register_or_constant
               id_or_opcode
                %f439
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f454
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f448
              ,
              opr_register_or_constant
               id_or_opcode
                %f438
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_sub
            sub
            i_sub_type
             .f32
            i_sub_opr
             opr_register
              id_or_opcode
               %f455
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f449
              ,
              opr_register_or_constant
               id_or_opcode
                %f440
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f456
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f444
              ,
              opr_register_or_constant
               id_or_opcode
                %f450
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f457
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f445
              ,
              opr_register_or_constant
               id_or_opcode
                %f451
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f458
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f446
              ,
              opr_register_or_constant
               id_or_opcode
                %f452
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f459
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f453
              ,
              opr_register_or_constant
               id_or_opcode
                %f453
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f460
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f454
              ,
              opr_register_or_constant
               id_or_opcode
                %f454
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f461
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f455
              ,
              opr_register_or_constant
               id_or_opcode
                %f455
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f462
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f456
              ,
              opr_register_or_constant
               id_or_opcode
                %f459
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f463
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f457
              ,
              opr_register_or_constant
               id_or_opcode
                %f460
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .f32
            i_add_opr
             opr_register
              id_or_opcode
               %f464
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f458
              ,
              opr_register_or_constant
               id_or_opcode
                %f461
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f465
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f466
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f465
              ,
              opr_register_or_constant
               id_or_opcode
                %f462
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f467
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f468
              ,
              opr
               opr_aux
                id_or_opcode
                 %f463
              ,
              opr
               opr_aux
                id_or_opcode
                 %f467
              ,
              opr
               opr_aux
                id_or_opcode
                 %f466
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .const
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f469
             ,
             [
             opr
              opr_aux
               id_or_opcode
                kColorMetric
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_fma
            fma
            i_fma_type
             .rn
             .f32
            i_fma_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %f470
              ,
              opr
               opr_aux
                id_or_opcode
                 %f464
              ,
              opr
               opr_aux
                id_or_opcode
                 %f469
              ,
              opr
               opr_aux
                id_or_opcode
                 %f468
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f471
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                float_
                                 0f3e800000
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .f32
            i_mul_opr
             opr_register
              id_or_opcode
               %f472
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %f470
              ,
              opr_register_or_constant
               id_or_opcode
                %f471
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .lt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p15
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f472
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f206
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p15
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_36354
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              346
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f206
              ,
              opr
               opr_aux
                id_or_opcode
                 %f472
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              347
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r190
              ,
              opr
               opr_aux
                id_or_opcode
                 %r159
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              348
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r147
              ,
              opr
               opr_aux
                id_or_opcode
                 %r181
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              349
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                id_or_opcode
                 %r189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .le
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p16
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r181
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r189
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p16
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_36610
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              47
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r191
              ,
              opr
               opr_aux
                id_or_opcode
                 %r146
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              48
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              49
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r147
              ,
              opr
               opr_aux
                id_or_opcode
                 %r191
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              354
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_not
            not
            i_not_type
             .b32
            i_not_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r192
              ,
              opr
               opr_aux
                id_or_opcode
                 %r159
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r193
              ,
              opr
               opr_aux
                id_or_opcode
                 %r192
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r194
              ,
              opr
               opr_aux
                id_or_opcode
                 %r193
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  1431655765
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_xor
            xor
            i_xor_type
             .b32
            i_xor_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r195
              ,
              opr
               opr_aux
                id_or_opcode
                 %r159
              ,
              opr
               opr_aux
                id_or_opcode
                 %r194
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                id_or_opcode
                 %r195
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bra
            bra
            i_bra_type
             .uni
            i_bra_opr
             opr_label
              $Lt_8_36354
         ;
       statement
        label_decl
         $Lt_8_36610
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r144
              ,
              opr
               opr_aux
                id_or_opcode
                 %r190
         ;
       statement
        label_decl
         $Lt_8_36354
         :
       statement
        label_decl
         $Lt_8_35842
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              335
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .s32
            i_add_opr
             opr_register
              id_or_opcode
               %r151
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r151
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r196
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p17
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r151
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r196
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p17
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_34562
         ;
       statement
        label_decl
         $LDWendi__Z16firstEigenVectorPf_187_2
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              359
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r197
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda___cuda_local_var_503240_34_errors1808
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r198
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r197
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f206
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              370
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r199
              ,
              opr
               opr_aux
                id_or_opcode
                 __cuda_local_var_503121_32_indices__1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r200
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r2
              ,
              opr_register_or_constant
               id_or_opcode
                %r199
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r1
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              406
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r201
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  31
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p18
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r201
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p18
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_42242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f473
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f474
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 128
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p19
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f474
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p19
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_39682
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              412
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f473
              ,
              opr
               opr_aux
                id_or_opcode
                 %f474
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f474
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              413
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r202
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 128
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r202
         ;
       statement
        label_decl
         $Lt_8_39682
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f475
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p20
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f475
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p20
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_40194
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              416
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f473
              ,
              opr
               opr_aux
                id_or_opcode
                 %f475
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f475
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              417
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r203
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 64
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r203
         ;
       statement
        label_decl
         $Lt_8_40194
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f476
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p21
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f476
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p21
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_40706
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              420
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f473
              ,
              opr
               opr_aux
                id_or_opcode
                 %f476
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f476
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              421
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r204
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r204
         ;
       statement
        label_decl
         $Lt_8_40706
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f477
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p22
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f477
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p22
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_41218
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              424
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f473
              ,
              opr
               opr_aux
                id_or_opcode
                 %f477
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f477
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              425
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r205
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r205
         ;
       statement
        label_decl
         $Lt_8_41218
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f478
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p23
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f478
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p23
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_41730
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              428
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .f32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %f473
              ,
              opr
               opr_aux
                id_or_opcode
                 %f478
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f478
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              429
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r206
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r206
         ;
       statement
        label_decl
         $Lt_8_41730
         :
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .f32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %f479
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .gt
              .f32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p24
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f473
               ,
               opr
                opr_aux
                 id_or_opcode
                  %f479
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            !
            %p24
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_42242
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              432
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .f32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r198
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %f479
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              433
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r207
             ,
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 4
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .shared
             .s32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r200
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               id_or_opcode
                %r207
         ;
       statement
        label_decl
         $Lt_8_42242
         :
       statement
        label_decl
         $Lt_8_39170
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              438
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r208
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda_local_var_503121_32_indices__1
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              495
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_bar
            i_bar1
             bar
             i_bar1_type
              .sync
             i_bar1_opr
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .ne
              .s32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p25
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r208
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r1
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           predicate
            @
            %p25
           i_bra
            bra
            i_bra_type
            i_bra_opr
             opr_label
              $Lt_8_42754
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              460
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_setp
            i_setp1
             setp
             i_setp1_type
              .eq
              .u32
             i_setp1_opr
              opr3
               opr
                opr_aux
                 id_or_opcode
                  %p26
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r146
               ,
               opr
                opr_aux
                 id_or_opcode
                  %r147
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r209
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  0
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .s32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r210
              ,
              opr
               opr_aux
                id_or_opcode
                 %r144
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_selp
            selp
            i_selp_type
             .u32
            i_selp_opr
             opr4
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r209
              ,
              opr
               opr_aux
                id_or_opcode
                 %r210
              ,
              opr
               opr_aux
                id_or_opcode
                 %p26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .s32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r212
               ,
               id_or_opcode
                %r213
               ,
               id_or_opcode
                %r214
               ,
               id_or_opcode
                %r215
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503231_32_xrefs1744
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r216
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r212
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r217
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r216
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r218
              ,
              opr
               opr_aux
                id_or_opcode
                 %r217
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r219
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r213
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r220
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r219
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r221
              ,
              opr
               opr_aux
                id_or_opcode
                 %r220
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r222
              ,
              opr
               opr_aux
                id_or_opcode
                 %r221
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r223
              ,
              opr
               opr_aux
                id_or_opcode
                 %r218
              ,
              opr
               opr_aux
                id_or_opcode
                 %r222
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r224
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r214
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r225
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r224
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r226
              ,
              opr
               opr_aux
                id_or_opcode
                 %r225
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r227
              ,
              opr
               opr_aux
                id_or_opcode
                 %r226
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  4
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r228
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r215
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r229
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r228
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r230
              ,
              opr
               opr_aux
                id_or_opcode
                 %r229
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r231
              ,
              opr
               opr_aux
                id_or_opcode
                 %r230
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  6
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r232
              ,
              opr
               opr_aux
                id_or_opcode
                 %r227
              ,
              opr
               opr_aux
                id_or_opcode
                 %r231
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r233
              ,
              opr
               opr_aux
                id_or_opcode
                 %r223
              ,
              opr
               opr_aux
                id_or_opcode
                 %r232
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .s32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r234
               ,
               id_or_opcode
                %r235
               ,
               id_or_opcode
                %r236
               ,
               id_or_opcode
                %r237
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503231_32_xrefs1744
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 16
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r238
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r234
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r239
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r238
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r240
              ,
              opr
               opr_aux
                id_or_opcode
                 %r239
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r241
              ,
              opr
               opr_aux
                id_or_opcode
                 %r240
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r242
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r235
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r243
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r242
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r244
              ,
              opr
               opr_aux
                id_or_opcode
                 %r243
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r245
              ,
              opr
               opr_aux
                id_or_opcode
                 %r244
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  10
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r246
              ,
              opr
               opr_aux
                id_or_opcode
                 %r241
              ,
              opr
               opr_aux
                id_or_opcode
                 %r245
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r247
              ,
              opr
               opr_aux
                id_or_opcode
                 %r233
              ,
              opr
               opr_aux
                id_or_opcode
                 %r246
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r248
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r236
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r249
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r248
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r250
              ,
              opr
               opr_aux
                id_or_opcode
                 %r249
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r251
              ,
              opr
               opr_aux
                id_or_opcode
                 %r250
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  12
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r252
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r237
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r253
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r252
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r254
              ,
              opr
               opr_aux
                id_or_opcode
                 %r253
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r255
              ,
              opr
               opr_aux
                id_or_opcode
                 %r254
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  14
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r256
              ,
              opr
               opr_aux
                id_or_opcode
                 %r251
              ,
              opr
               opr_aux
                id_or_opcode
                 %r255
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r257
              ,
              opr
               opr_aux
                id_or_opcode
                 %r247
              ,
              opr
               opr_aux
                id_or_opcode
                 %r256
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .s32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r258
               ,
               id_or_opcode
                %r259
               ,
               id_or_opcode
                %r260
               ,
               id_or_opcode
                %r261
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503231_32_xrefs1744
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 32
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r262
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r258
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r263
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r262
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r264
              ,
              opr
               opr_aux
                id_or_opcode
                 %r263
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r265
              ,
              opr
               opr_aux
                id_or_opcode
                 %r264
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r266
              ,
              opr
               opr_aux
                id_or_opcode
                 %r257
              ,
              opr
               opr_aux
                id_or_opcode
                 %r265
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r267
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r259
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r268
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r267
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r269
              ,
              opr
               opr_aux
                id_or_opcode
                 %r268
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r270
              ,
              opr
               opr_aux
                id_or_opcode
                 %r269
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  18
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r271
              ,
              opr
               opr_aux
                id_or_opcode
                 %r266
              ,
              opr
               opr_aux
                id_or_opcode
                 %r270
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r272
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r260
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r273
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r272
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r274
              ,
              opr
               opr_aux
                id_or_opcode
                 %r273
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r275
              ,
              opr
               opr_aux
                id_or_opcode
                 %r274
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  20
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r276
              ,
              opr
               opr_aux
                id_or_opcode
                 %r271
              ,
              opr
               opr_aux
                id_or_opcode
                 %r275
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r277
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r261
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r278
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r277
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r279
              ,
              opr
               opr_aux
                id_or_opcode
                 %r278
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r280
              ,
              opr
               opr_aux
                id_or_opcode
                 %r279
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  22
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r281
              ,
              opr
               opr_aux
                id_or_opcode
                 %r276
              ,
              opr
               opr_aux
                id_or_opcode
                 %r280
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .shared
             .v4
             .s32
            i_ld_opr
             opr
              opr_aux
               {
               id_or_opcode
                %r282
               ,
               id_or_opcode
                %r283
               ,
               id_or_opcode
                %r284
               ,
               id_or_opcode
                %r285
               }
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cuda___cuda_local_var_503231_32_xrefs1744
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 48
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r286
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r282
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r287
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r286
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r288
              ,
              opr
               opr_aux
                id_or_opcode
                 %r287
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r289
              ,
              opr
               opr_aux
                id_or_opcode
                 %r288
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  24
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r290
              ,
              opr
               opr_aux
                id_or_opcode
                 %r281
              ,
              opr
               opr_aux
                id_or_opcode
                 %r289
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r291
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r283
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r292
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r291
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r293
              ,
              opr
               opr_aux
                id_or_opcode
                 %r292
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r294
              ,
              opr
               opr_aux
                id_or_opcode
                 %r293
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  26
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r295
              ,
              opr
               opr_aux
                id_or_opcode
                 %r290
              ,
              opr
               opr_aux
                id_or_opcode
                 %r294
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r296
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r284
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r297
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r296
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_and
            and
            i_and_type
             .b32
            i_and_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r298
              ,
              opr
               opr_aux
                id_or_opcode
                 %r297
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  3
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r299
              ,
              opr
               opr_aux
                id_or_opcode
                 %r298
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  28
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r300
              ,
              opr
               opr_aux
                id_or_opcode
                 %r295
              ,
              opr
               opr_aux
                id_or_opcode
                 %r299
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .s32
            i_mul_opr
             opr_register
              id_or_opcode
               %r301
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r285
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 2
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shr
            shr
            i_shr_type
             .u32
            i_shr_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r302
              ,
              opr
               opr_aux
                id_or_opcode
                 %r211
              ,
              opr
               opr_aux
                id_or_opcode
                 %r301
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r303
              ,
              opr
               opr_aux
                id_or_opcode
                 %r302
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  30
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r304
              ,
              opr
               opr_aux
                id_or_opcode
                 %r300
              ,
              opr
               opr_aux
                id_or_opcode
                 %r303
         ;
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              464
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .s32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r305
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8compressPKjS0_P5uint2i_blockOffset
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mov
            mov
            i_mov_type
             .u32
            i_mov_opr
             opr2
              opr
               opr_aux
                id_or_opcode
                 %r306
              ,
              opr
               opr_aux
                id_or_opcode
                 %ctaid
                .x
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r307
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r305
              ,
              opr_register_or_constant
               id_or_opcode
                %r306
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_mul
            mul
            i_mul_type
             .lo
             .u32
            i_mul_opr
             opr_register
              id_or_opcode
               %r308
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r307
              ,
              opr_register_or_constant
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 8
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_ld
            ld
            i_ld_type
             .param
             .u32
            i_ld_opr
             opr
              opr_aux
               id_or_opcode
                %r309
             ,
             [
             opr
              opr_aux
               id_or_opcode
                __cudaparm__Z8compressPKjS0_P5uint2i_result
             ]
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_add
            add
            i_add_type
             .u32
            i_add_opr
             opr_register
              id_or_opcode
               %r310
             ,
             opr_register_or_constant2
              opr_register_or_constant
               id_or_opcode
                %r309
              ,
              opr_register_or_constant
               id_or_opcode
                %r308
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_shl
            shl
            i_shl_type
             .b32
            i_shl_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r311
              ,
              opr
               opr_aux
                id_or_opcode
                 %r146
              ,
              opr
               opr_aux
                constant_expression
                 constant_expression_aux
                  conditional_expression
                   conditional_or_expression
                    conditional_and_expression
                     inclusive_or_expression
                      exclusive_or_expression
                       and_expression
                        equality_expression
                         relational_expression
                          shift_expression
                           additive_expression
                            multiplicative_expression
                             unary_expression
                              unary_expression_not_plus_minus
                               primary
                                integer
                                 base_10_integer
                                  16
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_or
            or
            i_or_type
             .b32
            i_or_opr
             opr3
              opr
               opr_aux
                id_or_opcode
                 %r312
              ,
              opr
               opr_aux
                id_or_opcode
                 %r147
              ,
              opr
               opr_aux
                id_or_opcode
                 %r311
         ;
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_st
            st
            i_st_type
             .global
             .v2
             .u32
            i_st_opr
             [
             opr
              opr_aux
               id_or_opcode
                %r310
               +
               constant_expression
                constant_expression_aux
                 conditional_expression
                  conditional_or_expression
                   conditional_and_expression
                    inclusive_or_expression
                     exclusive_or_expression
                      and_expression
                       equality_expression
                        relational_expression
                         shift_expression
                          additive_expression
                           multiplicative_expression
                            unary_expression
                             unary_expression_not_plus_minus
                              primary
                               integer
                                base_10_integer
                                 0
             ]
             ,
             opr
              opr_aux
               {
               id_or_opcode
                %r312
               ,
               id_or_opcode
                %r304
               }
         ;
       statement
        label_decl
         $Lt_8_42754
         :
       statement
        unterminated_statement
         unterminated_directive
          debugging_directive
           loc
            .loc
            integer
             base_10_integer
              18
            integer
             base_10_integer
              502
            integer
             base_10_integer
              0
       statement
        semicolon_terminated_statement
         instruction
          instruction_aux
           i_exit
            exit
         ;
       statement
        label_decl
         $LDWend__Z8compressPKjS0_P5uint2i
         :
       }
 <EOF>
