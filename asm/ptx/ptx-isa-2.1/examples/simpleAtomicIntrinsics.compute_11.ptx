	.version 1.4
	.target sm_11, map_f64_to_f32
	// compiled with C:\CUDA\bin/../open64/lib//be.exe
	// nvopencc 3.1 built on 2010-06-08

	//-----------------------------------------------------------
	// Compiling simpleAtomicIntrinsics.compute_11.cpp3.i (C:/Users/Ken/AppData/Local/Temp/ccBI#.a07604)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_11, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"simpleAtomicIntrinsics.compute_11.cudafe2.gpu"
	.file	2	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	3	"C:\CUDA\include\crt/device_runtime.h"
	.file	4	"C:\CUDA\include\host_defines.h"
	.file	5	"C:\CUDA\include\builtin_types.h"
	.file	6	"c:\cuda\include\device_types.h"
	.file	7	"c:\cuda\include\driver_types.h"
	.file	8	"c:\cuda\include\surface_types.h"
	.file	9	"c:\cuda\include\texture_types.h"
	.file	10	"c:\cuda\include\vector_types.h"
	.file	11	"c:\cuda\include\builtin_types.h"
	.file	12	"c:\cuda\include\host_defines.h"
	.file	13	"C:\CUDA\include\device_launch_parameters.h"
	.file	14	"c:\cuda\include\crt\storage_class.h"
	.file	15	"C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
	.file	16	"c:\cuda\include\sm_11_atomic_functions.h"
	.file	17	"C:\CUDA\include\common_functions.h"
	.file	18	"c:\cuda\include\math_functions.h"
	.file	19	"c:\cuda\include\math_constants.h"
	.file	20	"c:\cuda\include\device_functions.h"
	.file	21	"c:\cuda\include\sm_12_atomic_functions.h"
	.file	22	"c:\cuda\include\sm_13_double_functions.h"
	.file	23	"c:\cuda\include\sm_20_atomic_functions.h"
	.file	24	"c:\cuda\include\sm_20_intrinsics.h"
	.file	25	"c:\cuda\include\surface_functions.h"
	.file	26	"c:\cuda\include\texture_fetch_functions.h"
	.file	27	"c:\cuda\include\math_functions_dbl_ptx1.h"
	.file	28	"c:\programdata\nvidia corporation\nvidia gpu computing sdk\c\src\simpleatomicintrinsics\simpleAtomicIntrinsics_kernel.cu"


	.entry _Z10testKernelPi (
		.param .u32 __cudaparm__Z10testKernelPi_g_odata)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<35>;
	.loc	28	27	0
$LDWbegin__Z10testKernelPi:
	.loc	16	104	0
	ld.param.u32 	%r1, [__cudaparm__Z10testKernelPi_g_odata];
	mov.s32 	%r2, 10;
	atom.global.add.s32 	%r3, [%r1], %r2;
	.loc	16	114	0
	add.u32 	%r4, %r1, 4;
	mov.s32 	%r5, -10;
	atom.global.add.s32 	%r6, [%r4], %r5;
	.loc	16	124	0
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r7, %rh1, %rh2;
	cvt.u32.u16 	%r8, %tid.x;
	add.u32 	%r9, %r8, %r7;
	add.u32 	%r10, %r1, 8;
	atom.global.exch.b32 	%r11, [%r10], %r9;
	.loc	16	149	0
	add.u32 	%r12, %r1, 12;
	atom.global.max.s32 	%r13, [%r12], %r9;
	.loc	16	139	0
	add.u32 	%r14, %r1, 16;
	atom.global.min.s32 	%r15, [%r14], %r9;
	.loc	16	159	0
	add.u32 	%r16, %r1, 20;
	mov.u32 	%r17, 17;
	atom.global.inc.u32 	%r18, [%r16], %r17;
	.loc	16	164	0
	add.u32 	%r19, %r1, 24;
	mov.u32 	%r20, 137;
	atom.global.dec.u32 	%r21, [%r19], %r20;
	.loc	16	199	0
	add.u32 	%r22, %r1, 28;
	sub.s32 	%r23, %r9, 1;
	atom.global.cas.b32 	%r24, [%r22], %r23, %r9;
	.loc	16	169	0
	add.u32 	%r25, %r1, 32;
	mul.lo.u32 	%r26, %r9, 2;
	add.s32 	%r27, %r26, 7;
	atom.global.and.b32 	%r28, [%r25], %r27;
	.loc	16	179	0
	add.u32 	%r29, %r1, 36;
	shl.b32 	%r30, 1, %r9;
	atom.global.or.b32 	%r31, [%r29], %r30;
	.loc	16	189	0
	add.u32 	%r32, %r1, 40;
	atom.global.xor.b32 	%r33, [%r32], %r9;
	.loc	28	70	0
	exit;
$LDWend__Z10testKernelPi:
	} // _Z10testKernelPi

